[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"yyyaohhh"},"content":"# duke.duke project template","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"yyyaohhh"},"content":"3. After that, locate the `src/main/java/duke.duke.java` file, right-click it, and choose `Run duke.duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yyyaohhh":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"yyyaohhh"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"yyyaohhh"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"yyyaohhh"},"content":"}","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"yyyaohhh"},"content":"javafx {","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"yyyaohhh"},"content":"    version \u003d \u002717.0.2\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"yyyaohhh"},"content":"    modules \u003d [\u0027javafx.controls\u0027, \u0027javafx.fxml\u0027]","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"yyyaohhh"},"content":"java {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"yyyaohhh"},"content":"    compileJava.options.encoding \u003d \u0027UTF-8\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"yyyaohhh"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"yyyaohhh"},"content":"checkstyle {","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"yyyaohhh"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"yyyaohhh"},"content":"test {","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"yyyaohhh"},"content":"    useJUnitPlatform()","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"yyyaohhh"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":33,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"yyyaohhh"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"yyyaohhh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"yyyaohhh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"yyyaohhh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"yyyaohhh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"yyyaohhh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"yyyaohhh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"yyyaohhh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"yyyaohhh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"yyyaohhh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"yyyaohhh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"yyyaohhh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"yyyaohhh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"yyyaohhh"},"content":"    mainClass.set(\"Duke.main.Launcher\")","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":72,"author":{"gitId":"yyyaohhh"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":75,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yyyaohhh":35,"-":43}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yyyaohhh"},"content":"D | 1 | return book | 2020-12-10","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"yyyaohhh"},"content":"T | 1 | read","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"yyyaohhh":2}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyyaohhh"},"content":"import duke.Main;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"yyyaohhh"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"yyyaohhh"},"content":"public class Launcher {","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"yyyaohhh"},"content":"     * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"yyyaohhh"},"content":"        public static void main(String[] args) {","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"yyyaohhh"},"content":"            Application.launch(Main.class, args);","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"yyyaohhh"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"yyyaohhh"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"yyyaohhh":12}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyyaohhh"},"content":"package duke;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"yyyaohhh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"yyyaohhh"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"yyyaohhh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"yyyaohhh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"yyyaohhh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"yyyaohhh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"yyyaohhh"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"yyyaohhh"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"yyyaohhh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"yyyaohhh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"yyyaohhh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"yyyaohhh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"yyyaohhh"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"yyyaohhh"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"yyyaohhh"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"yyyaohhh"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"yyyaohhh"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"yyyaohhh"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"yyyaohhh"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"yyyaohhh"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"yyyaohhh"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"yyyaohhh"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"yyyaohhh"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"yyyaohhh"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"yyyaohhh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"yyyaohhh"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"yyyaohhh"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"yyyaohhh"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"yyyaohhh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"yyyaohhh"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"yyyaohhh"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"yyyaohhh"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"yyyaohhh"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"yyyaohhh"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"yyyaohhh"},"content":"    private void flip() {","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"yyyaohhh"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"yyyaohhh"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"yyyaohhh"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"yyyaohhh"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":52,"author":{"gitId":"yyyaohhh"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"yyyaohhh"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"yyyaohhh"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"yyyaohhh"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"yyyaohhh"},"content":"        db.flip();","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"yyyaohhh"},"content":"        return db;","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"yyyaohhh"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"yyyaohhh":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyyaohhh"},"content":"package duke;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"yyyaohhh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"yyyaohhh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"yyyaohhh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"yyyaohhh"},"content":"public class Duke {","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"yyyaohhh"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"yyyaohhh"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"yyyaohhh"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"yyyaohhh"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"yyyaohhh"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"yyyaohhh"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"yyyaohhh"},"content":"    //this duke is no longer used.","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"yyyaohhh"},"content":"    public Duke() {","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"yyyaohhh"},"content":"        this(\"./data/duke.txt\");","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"yyyaohhh"},"content":"    public void run(String input) {","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"yyyaohhh"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"yyyaohhh"},"content":"            this.tasks \u003d new TaskList(this.storage.load());","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"yyyaohhh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"yyyaohhh"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"yyyaohhh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"yyyaohhh"},"content":"        Parser executor \u003d new Parser();","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"yyyaohhh"},"content":"        executor.parse(this.tasks, input);","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"yyyaohhh"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"yyyaohhh"},"content":"            new FileWriter(\"./data/duke.txt\", false).close();","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"yyyaohhh"},"content":"            this.storage.writeToFile(this.tasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"yyyaohhh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"yyyaohhh"},"content":"            System.out.println(\"error: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"yyyaohhh"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"yyyaohhh"},"content":"//    public static void main(String[] args) {","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"yyyaohhh"},"content":"//        new Duke(\"./data/duke.txt\").run();","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"yyyaohhh"},"content":"//    }","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"yyyaohhh":40,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyyaohhh"},"content":"package duke;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"yyyaohhh"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"yyyaohhh"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"yyyaohhh"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"yyyaohhh"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"yyyaohhh":7}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyyaohhh"},"content":"package duke;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"yyyaohhh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"yyyaohhh"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"yyyaohhh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"yyyaohhh"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"yyyaohhh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"yyyaohhh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"yyyaohhh"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"yyyaohhh"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"yyyaohhh"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"yyyaohhh"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"yyyaohhh"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"yyyaohhh"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"yyyaohhh"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"yyyaohhh"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"yyyaohhh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"yyyaohhh"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"yyyaohhh"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"yyyaohhh"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"yyyaohhh"},"content":"//            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"yyyaohhh"},"content":"            stage.show();","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"yyyaohhh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"yyyaohhh"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"yyyaohhh"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"yyyaohhh"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"yyyaohhh":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyyaohhh"},"content":"package duke;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"yyyaohhh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"yyyaohhh"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"yyyaohhh"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"yyyaohhh"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"yyyaohhh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"yyyaohhh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"yyyaohhh"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"yyyaohhh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"yyyaohhh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"yyyaohhh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"yyyaohhh"},"content":"/**","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"yyyaohhh"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"yyyaohhh"},"content":" */","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"yyyaohhh"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"yyyaohhh"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"yyyaohhh"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"yyyaohhh"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"yyyaohhh"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"yyyaohhh"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"yyyaohhh"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"yyyaohhh"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"yyyaohhh"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"yyyaohhh"},"content":"    //private Duke duke;","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"yyyaohhh"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"yyyaohhh"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"yyyaohhh"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"yyyaohhh"},"content":"    private Parser executor;","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"yyyaohhh"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/gitar.png\"));","lastModifiedDate":"2023-09-11"},{"lineNumber":35,"author":{"gitId":"yyyaohhh"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bocchi.png\"));","lastModifiedDate":"2023-09-11"},{"lineNumber":36,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"yyyaohhh"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"yyyaohhh"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"yyyaohhh"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"yyyaohhh"},"content":"        this.executor \u003d new Parser();","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"yyyaohhh"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"yyyaohhh"},"content":"        this.storage \u003d new Storage(\"./data/duke.txt\");","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"yyyaohhh"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"yyyaohhh"},"content":"            this.tasks \u003d new TaskList(this.storage.load());","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"yyyaohhh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"yyyaohhh"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"yyyaohhh"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"yyyaohhh"},"content":"//  old duke is no longer used","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"yyyaohhh"},"content":"//    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"yyyaohhh"},"content":"//        duke \u003d d;","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"yyyaohhh"},"content":"//        this.duke \u003d new Duke();","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"yyyaohhh"},"content":"//    }","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"yyyaohhh"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"yyyaohhh"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"yyyaohhh"},"content":"    @FXML","lastModifiedDate":"2023-09-10"},{"lineNumber":62,"author":{"gitId":"yyyaohhh"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"yyyaohhh"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"yyyaohhh"},"content":"        String response \u003d getResponse(input);","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"yyyaohhh"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-10"},{"lineNumber":66,"author":{"gitId":"yyyaohhh"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"yyyaohhh"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"yyyaohhh"},"content":"        );","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"yyyaohhh"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"yyyaohhh"},"content":"            new FileWriter(\"./data/duke.txt\", false).close();","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"yyyaohhh"},"content":"            this.storage.writeToFile(this.tasks);","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"yyyaohhh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"yyyaohhh"},"content":"            System.out.println(\"error: \" + e.getMessage());","lastModifiedDate":"2023-09-13"},{"lineNumber":74,"author":{"gitId":"yyyaohhh"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":75,"author":{"gitId":"yyyaohhh"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-10"},{"lineNumber":76,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":77,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":78,"author":{"gitId":"yyyaohhh"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2023-09-13"},{"lineNumber":79,"author":{"gitId":"yyyaohhh"},"content":"        return executor.parse(this.tasks, input);","lastModifiedDate":"2023-09-13"},{"lineNumber":80,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":81,"author":{"gitId":"yyyaohhh"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"yyyaohhh":81}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyyaohhh"},"content":"package duke;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"yyyaohhh"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"yyyaohhh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"yyyaohhh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"yyyaohhh"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"yyyaohhh"},"content":"import java.util.List;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"yyyaohhh"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"yyyaohhh"},"content":"import tasks.Event;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"yyyaohhh"},"content":"import tasks.ToDo;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"yyyaohhh"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"yyyaohhh"},"content":"/**","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"yyyaohhh"},"content":" * The Parser class handles user input parsing and the execution of corresponding commands.","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"yyyaohhh"},"content":" * It interprets user commands and interacts with the TaskList to perform task-related operations.","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"yyyaohhh"},"content":" */","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"yyyaohhh"},"content":"public class Parser {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"yyyaohhh"},"content":"     * Parses the user input and executes the corresponding command.","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"yyyaohhh"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":23,"author":{"gitId":"yyyaohhh"},"content":"     * @param tasks The TaskList instance to perform operations on.","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"yyyaohhh"},"content":"     * @param echo  The user\u0027s input command.","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"yyyaohhh"},"content":"     * @return A response message based on the executed command.","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"yyyaohhh"},"content":"    public String parse(TaskList tasks, String echo) {","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"yyyaohhh"},"content":"        if (echo.equals(\"bye\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"yyyaohhh"},"content":"            assert Ui.sayBye() !\u003d null;","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"yyyaohhh"},"content":"            return Ui.line() + Ui.sayBye() + Ui.line();","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"yyyaohhh"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":32,"author":{"gitId":"yyyaohhh"},"content":"        if (echo.equals(\"list\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":33,"author":{"gitId":"yyyaohhh"},"content":"            assert tasks.printList() !\u003d null;","lastModifiedDate":"2023-09-19"},{"lineNumber":34,"author":{"gitId":"yyyaohhh"},"content":"            return Ui.line() + \"H...here are the tasks in your list:\\n\" + tasks.printList() + Ui.line();","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"yyyaohhh"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"yyyaohhh"},"content":"        if (echo.equals(\"help\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"yyyaohhh"},"content":"            return printHelp();","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"yyyaohhh"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"yyyaohhh"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"yyyaohhh"},"content":"            String[] parts \u003d echo.split(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"yyyaohhh"},"content":"            if (parts[0].equals(\"mark\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"yyyaohhh"},"content":"                return markCase(tasks, parts);","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"yyyaohhh"},"content":"            } else if (parts[0].equals(\"unmark\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"yyyaohhh"},"content":"                return unmarkCase(tasks, parts);","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"yyyaohhh"},"content":"            } else if (parts[0].equals(\"deadline\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"yyyaohhh"},"content":"                return deadline(tasks, echo);","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"yyyaohhh"},"content":"            } else if (parts[0].equals(\"event\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":49,"author":{"gitId":"yyyaohhh"},"content":"                return event(tasks, echo);","lastModifiedDate":"2023-09-19"},{"lineNumber":50,"author":{"gitId":"yyyaohhh"},"content":"            } else if (parts[0].equals(\"todo\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":51,"author":{"gitId":"yyyaohhh"},"content":"                return todo(tasks, echo);","lastModifiedDate":"2023-09-19"},{"lineNumber":52,"author":{"gitId":"yyyaohhh"},"content":"            } else if (parts[0].equals(\"delete\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":53,"author":{"gitId":"yyyaohhh"},"content":"                return delete(tasks, parts);","lastModifiedDate":"2023-09-19"},{"lineNumber":54,"author":{"gitId":"yyyaohhh"},"content":"            } else if (parts[0].equals(\"find\")) {","lastModifiedDate":"2023-09-19"},{"lineNumber":55,"author":{"gitId":"yyyaohhh"},"content":"                return find(tasks, parts);","lastModifiedDate":"2023-09-19"},{"lineNumber":56,"author":{"gitId":"yyyaohhh"},"content":"            } else {","lastModifiedDate":"2023-09-19"},{"lineNumber":57,"author":{"gitId":"yyyaohhh"},"content":"                throw new DukeException(\"AAA...AGHHH!!! Go...Gomenasaiii!!! I don\u0027t understand!!!°(°ˊДˋ°) °\");","lastModifiedDate":"2023-09-19"},{"lineNumber":58,"author":{"gitId":"yyyaohhh"},"content":"            }","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"yyyaohhh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"yyyaohhh"},"content":"            assert e.getMessage() !\u003d null;","lastModifiedDate":"2023-09-19"},{"lineNumber":61,"author":{"gitId":"yyyaohhh"},"content":"            return Ui.line() + e.getMessage() + \"\\n\" + Ui.line();","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"yyyaohhh"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":64,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":65,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":66,"author":{"gitId":"yyyaohhh"},"content":"     * Handles the \"mark\" command to mark a task as done.","lastModifiedDate":"2023-09-19"},{"lineNumber":67,"author":{"gitId":"yyyaohhh"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":68,"author":{"gitId":"yyyaohhh"},"content":"     * @param tasks The TaskList instance to mark the task in.","lastModifiedDate":"2023-09-19"},{"lineNumber":69,"author":{"gitId":"yyyaohhh"},"content":"     * @param parts An array of command parts, including the task number to be marked.","lastModifiedDate":"2023-09-19"},{"lineNumber":70,"author":{"gitId":"yyyaohhh"},"content":"     * @return A response message indicating the task has been marked as done.","lastModifiedDate":"2023-09-19"},{"lineNumber":71,"author":{"gitId":"yyyaohhh"},"content":"     * @throws DukeException If there\u0027s an issue with the command or task number.","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":73,"author":{"gitId":"yyyaohhh"},"content":"    public String markCase(TaskList tasks, String[] parts) throws DukeException {","lastModifiedDate":"2023-09-19"},{"lineNumber":74,"author":{"gitId":"yyyaohhh"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"yyyaohhh"},"content":"            throw new DukeException(\"AAA...AGHHH!!! The number to be marked done... \" +","lastModifiedDate":"2023-09-10"},{"lineNumber":76,"author":{"gitId":"yyyaohhh"},"content":"                    \"c...cannot be empty!!!°(°ˊДˋ°) °\");","lastModifiedDate":"2023-09-10"},{"lineNumber":77,"author":{"gitId":"yyyaohhh"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"yyyaohhh"},"content":"        int taskNum \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"yyyaohhh"},"content":"        if (taskNum \u003e tasks.totalTaskNum()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":80,"author":{"gitId":"yyyaohhh"},"content":"            throw new DukeException(\"AAA...AGHHH!!! You...you don\u0027t have sooo many tasks\\n\" +","lastModifiedDate":"2023-09-19"},{"lineNumber":81,"author":{"gitId":"yyyaohhh"},"content":"                    \"y...yyet!!!°(°ˊДˋ°) °\");","lastModifiedDate":"2023-09-19"},{"lineNumber":82,"author":{"gitId":"yyyaohhh"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":83,"author":{"gitId":"yyyaohhh"},"content":"        tasks.markDone(taskNum - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"yyyaohhh"},"content":"        return Ui.line() + \"O...Omedeto! I have... have marked this as done!!ヾ(*´▽‘*)ﾉ\\n\"","lastModifiedDate":"2023-09-19"},{"lineNumber":85,"author":{"gitId":"yyyaohhh"},"content":"                + tasks.printTask(taskNum - 1) + \"\\n\" + Ui.line();","lastModifiedDate":"2023-09-13"},{"lineNumber":86,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":87,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":88,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":89,"author":{"gitId":"yyyaohhh"},"content":"     * Handles the \"unmark\" command to unmark a task as done.","lastModifiedDate":"2023-09-19"},{"lineNumber":90,"author":{"gitId":"yyyaohhh"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":91,"author":{"gitId":"yyyaohhh"},"content":"     * @param tasks The TaskList instance to unmark the task in.","lastModifiedDate":"2023-09-19"},{"lineNumber":92,"author":{"gitId":"yyyaohhh"},"content":"     * @param parts An array of command parts, including the task number to be unmarked.","lastModifiedDate":"2023-09-19"},{"lineNumber":93,"author":{"gitId":"yyyaohhh"},"content":"     * @return A response message indicating the task has been marked as undone.","lastModifiedDate":"2023-09-19"},{"lineNumber":94,"author":{"gitId":"yyyaohhh"},"content":"     * @throws DukeException If there\u0027s an issue with the command or task number.","lastModifiedDate":"2023-09-19"},{"lineNumber":95,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":96,"author":{"gitId":"yyyaohhh"},"content":"    public String unmarkCase(TaskList tasks, String[] parts) throws DukeException {","lastModifiedDate":"2023-09-19"},{"lineNumber":97,"author":{"gitId":"yyyaohhh"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"yyyaohhh"},"content":"            throw new DukeException(\"AAA...AGHHH!!! The number to be unmarked done... \" +","lastModifiedDate":"2023-09-10"},{"lineNumber":99,"author":{"gitId":"yyyaohhh"},"content":"                    \"c...cannot be empty!!!°(°ˊДˋ°) °\");","lastModifiedDate":"2023-09-10"},{"lineNumber":100,"author":{"gitId":"yyyaohhh"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"yyyaohhh"},"content":"        int taskNum \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"yyyaohhh"},"content":"        if (taskNum \u003e tasks.totalTaskNum()) {","lastModifiedDate":"2023-09-19"},{"lineNumber":103,"author":{"gitId":"yyyaohhh"},"content":"            throw new DukeException(\"AAA...AGHHH!!! You...you don\u0027t have sooo many tasks\\n\" +","lastModifiedDate":"2023-09-19"},{"lineNumber":104,"author":{"gitId":"yyyaohhh"},"content":"                    \"y...yyet!!!°(°ˊДˋ°) °\");","lastModifiedDate":"2023-09-19"},{"lineNumber":105,"author":{"gitId":"yyyaohhh"},"content":"        }","lastModifiedDate":"2023-09-19"},{"lineNumber":106,"author":{"gitId":"yyyaohhh"},"content":"        tasks.markUndone(taskNum - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"yyyaohhh"},"content":"        assert tasks.printTask(taskNum - 1) !\u003d null;","lastModifiedDate":"2023-09-18"},{"lineNumber":108,"author":{"gitId":"yyyaohhh"},"content":"        return Ui.line() + \"Okk... this is not done yet ﾍ(;´Д｀ﾍ)\\n\" + tasks.printTask(taskNum - 1)","lastModifiedDate":"2023-09-19"},{"lineNumber":109,"author":{"gitId":"yyyaohhh"},"content":"                + \"\\n\" + Ui.line();","lastModifiedDate":"2023-09-19"},{"lineNumber":110,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":111,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":112,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":113,"author":{"gitId":"yyyaohhh"},"content":"     * Handles the \"deadline\" command to add a deadline task.","lastModifiedDate":"2023-09-19"},{"lineNumber":114,"author":{"gitId":"yyyaohhh"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":115,"author":{"gitId":"yyyaohhh"},"content":"     * @param tasks The TaskList instance to add the deadline task to.","lastModifiedDate":"2023-09-19"},{"lineNumber":116,"author":{"gitId":"yyyaohhh"},"content":"     * @param echo  The user\u0027s input command.","lastModifiedDate":"2023-09-19"},{"lineNumber":117,"author":{"gitId":"yyyaohhh"},"content":"     * @return A response message indicating the deadline task has been added.","lastModifiedDate":"2023-09-19"},{"lineNumber":118,"author":{"gitId":"yyyaohhh"},"content":"     * @throws DukeException If there\u0027s an issue with the command or date format.","lastModifiedDate":"2023-09-19"},{"lineNumber":119,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":120,"author":{"gitId":"yyyaohhh"},"content":"    public String deadline(TaskList tasks, String echo) throws DukeException{","lastModifiedDate":"2023-09-19"},{"lineNumber":121,"author":{"gitId":"yyyaohhh"},"content":"        String removeDdl \u003d echo.replace(\"deadline\", \"\");","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"yyyaohhh"},"content":"        if (removeDdl.equals(\"\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"yyyaohhh"},"content":"            throw new DukeException(\"AAA...AGHHH!!! The description of a deadline... \" +","lastModifiedDate":"2023-09-10"},{"lineNumber":124,"author":{"gitId":"yyyaohhh"},"content":"                    \"c...cannot be empty!!!°(°ˊДˋ°) °\");","lastModifiedDate":"2023-09-10"},{"lineNumber":125,"author":{"gitId":"yyyaohhh"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"yyyaohhh"},"content":"        String removeBy \u003d removeDdl.replace(\"by\", \"\");","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"yyyaohhh"},"content":"        String[] ddl \u003d removeBy.split(\"/\");","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"yyyaohhh"},"content":"        String[] split \u003d ddl[1].split(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":130,"author":{"gitId":"yyyaohhh"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"yyyaohhh"},"content":"            LocalDate by \u003d LocalDate.parse(split[1]);","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"yyyaohhh"},"content":"            Deadline x \u003d new Deadline(ddl[0], by);","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"yyyaohhh"},"content":"            tasks.addToList(x);","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"yyyaohhh"},"content":"            assert tasks.numOfTask() !\u003d null;","lastModifiedDate":"2023-09-18"},{"lineNumber":135,"author":{"gitId":"yyyaohhh"},"content":"            return Ui.line() + \"Okk... I\u0027ve... I\u0027ve added this task:\\n\" + x.toString() + \"\\n\"","lastModifiedDate":"2023-09-19"},{"lineNumber":136,"author":{"gitId":"yyyaohhh"},"content":"                    + tasks.numOfTask() + Ui.line();","lastModifiedDate":"2023-09-19"},{"lineNumber":137,"author":{"gitId":"yyyaohhh"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"yyyaohhh"},"content":"            throw new DukeException(\"Th...th...the ddate you have inputed is invalid!!\");","lastModifiedDate":"2023-09-02"},{"lineNumber":139,"author":{"gitId":"yyyaohhh"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":141,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":142,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":143,"author":{"gitId":"yyyaohhh"},"content":"     * Handles the \"event\" command to add an event task.","lastModifiedDate":"2023-09-19"},{"lineNumber":144,"author":{"gitId":"yyyaohhh"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":145,"author":{"gitId":"yyyaohhh"},"content":"     * @param tasks The TaskList instance to add the event task to.","lastModifiedDate":"2023-09-19"},{"lineNumber":146,"author":{"gitId":"yyyaohhh"},"content":"     * @param echo  The user\u0027s input command.","lastModifiedDate":"2023-09-19"},{"lineNumber":147,"author":{"gitId":"yyyaohhh"},"content":"     * @return A response message indicating the event task has been added.","lastModifiedDate":"2023-09-19"},{"lineNumber":148,"author":{"gitId":"yyyaohhh"},"content":"     * @throws DukeException If there\u0027s an issue with the command.","lastModifiedDate":"2023-09-19"},{"lineNumber":149,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":150,"author":{"gitId":"yyyaohhh"},"content":"    public String event(TaskList tasks, String echo) throws DukeException {","lastModifiedDate":"2023-09-19"},{"lineNumber":151,"author":{"gitId":"yyyaohhh"},"content":"        String removeEvent \u003d echo.replace(\"event\", \"\");","lastModifiedDate":"2023-09-02"},{"lineNumber":152,"author":{"gitId":"yyyaohhh"},"content":"        if (removeEvent.equals(\"\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"yyyaohhh"},"content":"            throw new DukeException(\"AAA...AGHHH!!! The description of an event... \" +","lastModifiedDate":"2023-09-10"},{"lineNumber":154,"author":{"gitId":"yyyaohhh"},"content":"                    \"c...cannot be empty!!!°(°ˊДˋ°) °\");","lastModifiedDate":"2023-09-10"},{"lineNumber":155,"author":{"gitId":"yyyaohhh"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":156,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":157,"author":{"gitId":"yyyaohhh"},"content":"        String removeFrom \u003d removeEvent.replace(\"from\", \"\");","lastModifiedDate":"2023-09-02"},{"lineNumber":158,"author":{"gitId":"yyyaohhh"},"content":"        String removeTo \u003d removeFrom.replace(\"to\", \"\");","lastModifiedDate":"2023-09-02"},{"lineNumber":159,"author":{"gitId":"yyyaohhh"},"content":"        String[] event \u003d removeTo.split(\"/\");","lastModifiedDate":"2023-09-02"},{"lineNumber":160,"author":{"gitId":"yyyaohhh"},"content":"        Event x \u003d new Event(event[0], event[1], event[2]);","lastModifiedDate":"2023-09-02"},{"lineNumber":161,"author":{"gitId":"yyyaohhh"},"content":"        tasks.addToList(x);","lastModifiedDate":"2023-09-02"},{"lineNumber":162,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":163,"author":{"gitId":"yyyaohhh"},"content":"        assert Ui.line() !\u003d null;","lastModifiedDate":"2023-09-18"},{"lineNumber":164,"author":{"gitId":"yyyaohhh"},"content":"        return Ui.line() + \"Okk... I\u0027ve... I\u0027ve added this task:\\n\" + x.toString() + \"\\n\"","lastModifiedDate":"2023-09-19"},{"lineNumber":165,"author":{"gitId":"yyyaohhh"},"content":"                + tasks.numOfTask() + Ui.line();","lastModifiedDate":"2023-09-19"},{"lineNumber":166,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":167,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":168,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":169,"author":{"gitId":"yyyaohhh"},"content":"     * Handles the \"todo\" command to add a todo task.","lastModifiedDate":"2023-09-19"},{"lineNumber":170,"author":{"gitId":"yyyaohhh"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":171,"author":{"gitId":"yyyaohhh"},"content":"     * @param tasks The TaskList instance to add the todo task to.","lastModifiedDate":"2023-09-19"},{"lineNumber":172,"author":{"gitId":"yyyaohhh"},"content":"     * @param echo  The user\u0027s input command.","lastModifiedDate":"2023-09-19"},{"lineNumber":173,"author":{"gitId":"yyyaohhh"},"content":"     * @return A response message indicating the todo task has been added.","lastModifiedDate":"2023-09-19"},{"lineNumber":174,"author":{"gitId":"yyyaohhh"},"content":"     * @throws DukeException If there\u0027s an issue with the command.","lastModifiedDate":"2023-09-19"},{"lineNumber":175,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":176,"author":{"gitId":"yyyaohhh"},"content":"    public String todo(TaskList tasks, String echo) throws DukeException {","lastModifiedDate":"2023-09-19"},{"lineNumber":177,"author":{"gitId":"yyyaohhh"},"content":"        String removeTodo \u003d echo.replace(\"todo\", \"\");","lastModifiedDate":"2023-09-02"},{"lineNumber":178,"author":{"gitId":"yyyaohhh"},"content":"        if (removeTodo.equals(\"\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":179,"author":{"gitId":"yyyaohhh"},"content":"            throw new DukeException(\"AAA...AGHHH!!! The description of the todo... \" +","lastModifiedDate":"2023-09-10"},{"lineNumber":180,"author":{"gitId":"yyyaohhh"},"content":"                    \"c...cannot be empty!!!°(°ˊДˋ°) °\");","lastModifiedDate":"2023-09-10"},{"lineNumber":181,"author":{"gitId":"yyyaohhh"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":182,"author":{"gitId":"yyyaohhh"},"content":"        ToDo x \u003d new ToDo(removeTodo);","lastModifiedDate":"2023-09-02"},{"lineNumber":183,"author":{"gitId":"yyyaohhh"},"content":"        tasks.addToList(x);","lastModifiedDate":"2023-09-02"},{"lineNumber":184,"author":{"gitId":"yyyaohhh"},"content":"        return Ui.line() + \"Okk... I\u0027ve... I\u0027ve added this task:\\n\" + x.toString()","lastModifiedDate":"2023-09-19"},{"lineNumber":185,"author":{"gitId":"yyyaohhh"},"content":"                + \"\\n\" + tasks.numOfTask() + Ui.line();","lastModifiedDate":"2023-09-13"},{"lineNumber":186,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":187,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":188,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":189,"author":{"gitId":"yyyaohhh"},"content":"     * Handles the \"delete\" command to delete a task from the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":190,"author":{"gitId":"yyyaohhh"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":191,"author":{"gitId":"yyyaohhh"},"content":"     * @param tasks The TaskList instance to remove the task from.","lastModifiedDate":"2023-09-19"},{"lineNumber":192,"author":{"gitId":"yyyaohhh"},"content":"     * @param parts An array of command parts, including the task number to be deleted.","lastModifiedDate":"2023-09-19"},{"lineNumber":193,"author":{"gitId":"yyyaohhh"},"content":"     * @return A response message indicating the task has been deleted.","lastModifiedDate":"2023-09-19"},{"lineNumber":194,"author":{"gitId":"yyyaohhh"},"content":"     * @throws DukeException If there\u0027s an issue with the command or task number.","lastModifiedDate":"2023-09-19"},{"lineNumber":195,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":196,"author":{"gitId":"yyyaohhh"},"content":"    public String delete(TaskList tasks, String[] parts) throws DukeException {","lastModifiedDate":"2023-09-19"},{"lineNumber":197,"author":{"gitId":"yyyaohhh"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":198,"author":{"gitId":"yyyaohhh"},"content":"            throw new DukeException(\"AAA...AGHHH!!! The number to be deleted... \" +","lastModifiedDate":"2023-09-10"},{"lineNumber":199,"author":{"gitId":"yyyaohhh"},"content":"                    \"c...cannot be empty!!!°(°ˊДˋ°) °\");","lastModifiedDate":"2023-09-10"},{"lineNumber":200,"author":{"gitId":"yyyaohhh"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":201,"author":{"gitId":"yyyaohhh"},"content":"        if (tasks.totalTaskNum() \u003d\u003d 0) {","lastModifiedDate":"2023-09-13"},{"lineNumber":202,"author":{"gitId":"yyyaohhh"},"content":"            throw new DukeException(\"AAA...AGHHH!!! The list... \" +","lastModifiedDate":"2023-09-13"},{"lineNumber":203,"author":{"gitId":"yyyaohhh"},"content":"                    \"is already empty!!!°(°ˊДˋ°) °\");","lastModifiedDate":"2023-09-13"},{"lineNumber":204,"author":{"gitId":"yyyaohhh"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":205,"author":{"gitId":"yyyaohhh"},"content":"        if (Integer.parseInt(parts[1]) \u003e tasks.totalTaskNum()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":206,"author":{"gitId":"yyyaohhh"},"content":"            throw new DukeException(\"AAA...AGHHH!!! You do not have so many tasks... \" +","lastModifiedDate":"2023-09-13"},{"lineNumber":207,"author":{"gitId":"yyyaohhh"},"content":"                    \"in the list!!!°(°ˊДˋ°) °\");","lastModifiedDate":"2023-09-13"},{"lineNumber":208,"author":{"gitId":"yyyaohhh"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":209,"author":{"gitId":"yyyaohhh"},"content":"        int taskNum \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-09-02"},{"lineNumber":210,"author":{"gitId":"yyyaohhh"},"content":"        tasks.deleteTask(taskNum - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":211,"author":{"gitId":"yyyaohhh"},"content":"        assert tasks.numOfTask() !\u003d null;","lastModifiedDate":"2023-09-18"},{"lineNumber":212,"author":{"gitId":"yyyaohhh"},"content":"        return Ui.line() + \"O...Okk... I\u0027ve re...removed this task:\\n\" + tasks.numOfTask()","lastModifiedDate":"2023-09-19"},{"lineNumber":213,"author":{"gitId":"yyyaohhh"},"content":"                + Ui.line();","lastModifiedDate":"2023-09-19"},{"lineNumber":214,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":215,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":216,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":217,"author":{"gitId":"yyyaohhh"},"content":"     * Handles the \"find\" command to search for tasks containing a keyword.","lastModifiedDate":"2023-09-19"},{"lineNumber":218,"author":{"gitId":"yyyaohhh"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":219,"author":{"gitId":"yyyaohhh"},"content":"     * @param tasks The TaskList instance to search within.","lastModifiedDate":"2023-09-19"},{"lineNumber":220,"author":{"gitId":"yyyaohhh"},"content":"     * @param parts An array of command parts, including the keyword to search for.","lastModifiedDate":"2023-09-19"},{"lineNumber":221,"author":{"gitId":"yyyaohhh"},"content":"     * @return A response message listing matching tasks found in the task list.","lastModifiedDate":"2023-09-19"},{"lineNumber":222,"author":{"gitId":"yyyaohhh"},"content":"     * @throws DukeException If there\u0027s an issue with the command or keyword.","lastModifiedDate":"2023-09-19"},{"lineNumber":223,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":224,"author":{"gitId":"yyyaohhh"},"content":"    public String find(TaskList tasks, String[] parts) throws DukeException {","lastModifiedDate":"2023-09-19"},{"lineNumber":225,"author":{"gitId":"yyyaohhh"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-03"},{"lineNumber":226,"author":{"gitId":"yyyaohhh"},"content":"            throw new DukeException(\"AAA...AGHHH!!! The task to find... \" +","lastModifiedDate":"2023-09-10"},{"lineNumber":227,"author":{"gitId":"yyyaohhh"},"content":"                    \"c...cannot be empty!!!°(°ˊДˋ°) °\");","lastModifiedDate":"2023-09-10"},{"lineNumber":228,"author":{"gitId":"yyyaohhh"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":229,"author":{"gitId":"yyyaohhh"},"content":"        String keyword \u003d parts[1];","lastModifiedDate":"2023-09-03"},{"lineNumber":230,"author":{"gitId":"yyyaohhh"},"content":"        TaskList store \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2023-09-03"},{"lineNumber":231,"author":{"gitId":"yyyaohhh"},"content":"        for (int i \u003d 0; i \u003c tasks.totalTaskNum(); i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":232,"author":{"gitId":"yyyaohhh"},"content":"            String temp \u003d tasks.printTask(i);","lastModifiedDate":"2023-09-03"},{"lineNumber":233,"author":{"gitId":"yyyaohhh"},"content":"            List\u003cString\u003e words \u003d Arrays.asList(temp.split(\" \"));","lastModifiedDate":"2023-09-03"},{"lineNumber":234,"author":{"gitId":"yyyaohhh"},"content":"            if (words.contains(keyword)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":235,"author":{"gitId":"yyyaohhh"},"content":"                store.addToList(tasks.tasks.get(i));","lastModifiedDate":"2023-09-03"},{"lineNumber":236,"author":{"gitId":"yyyaohhh"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":237,"author":{"gitId":"yyyaohhh"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":238,"author":{"gitId":"yyyaohhh"},"content":"        return Ui.line() + \"Here are the matching tasks in your list:\\n\" + store.printList() + Ui.line();","lastModifiedDate":"2023-09-19"},{"lineNumber":239,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":240,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":241,"author":{"gitId":"yyyaohhh"},"content":"    public String printHelp() {","lastModifiedDate":"2023-09-19"},{"lineNumber":242,"author":{"gitId":"yyyaohhh"},"content":"        return Ui.line() + \"Here are the commands for Bocchi-chan:\\n\"","lastModifiedDate":"2023-09-19"},{"lineNumber":243,"author":{"gitId":"yyyaohhh"},"content":"                + \"help: Prints out the help page for various commands.\\n\"","lastModifiedDate":"2023-09-19"},{"lineNumber":244,"author":{"gitId":"yyyaohhh"},"content":"                + \"list: Prints out your list of tasks.\\n\"","lastModifiedDate":"2023-09-19"},{"lineNumber":245,"author":{"gitId":"yyyaohhh"},"content":"                + \"todo \u003ctask\u003e: Adds the \u003ctask\u003e into the list of tasks as a task to do.\\n\"","lastModifiedDate":"2023-09-19"},{"lineNumber":246,"author":{"gitId":"yyyaohhh"},"content":"                + \"event \u003ctask\u003e /from \u003ctime\u003e /to \u003ctime\u003e: Adds the \u003ctask\u003e into the list \\n\"","lastModifiedDate":"2023-09-19"},{"lineNumber":247,"author":{"gitId":"yyyaohhh"},"content":"                + \"of tasks as an event with a duration.\\n\"","lastModifiedDate":"2023-09-19"},{"lineNumber":248,"author":{"gitId":"yyyaohhh"},"content":"                + \"deadline /by \u003cyyyy-mm-dd\u003e: Adds the \u003ctask\u003e into the list of tasks\\n\"","lastModifiedDate":"2023-09-19"},{"lineNumber":249,"author":{"gitId":"yyyaohhh"},"content":"                + \"with a specific deadline.\\n\"","lastModifiedDate":"2023-09-19"},{"lineNumber":250,"author":{"gitId":"yyyaohhh"},"content":"                + \"mark \u003cnumber\u003e: Marks task \u003cnumber\u003e in the list of tasks as done.\\n\"","lastModifiedDate":"2023-09-19"},{"lineNumber":251,"author":{"gitId":"yyyaohhh"},"content":"                + \"unmark \u003cnumber\u003e: Unmarks task \u003cnumber\u003e in the list of tasks and it becomes undone.\\n\"","lastModifiedDate":"2023-09-19"},{"lineNumber":252,"author":{"gitId":"yyyaohhh"},"content":"                + \"find \u003ckeyword\u003e: Finds the task with the exact \u003ckeyword\u003e inputted.\\n\"","lastModifiedDate":"2023-09-19"},{"lineNumber":253,"author":{"gitId":"yyyaohhh"},"content":"                + \"bye: Bocchi chan says bye to you♥\\n\";","lastModifiedDate":"2023-09-19"},{"lineNumber":254,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":255,"author":{"gitId":"yyyaohhh"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"yyyaohhh":255}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyyaohhh"},"content":"package duke;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"yyyaohhh"},"content":"import java.io.File;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"yyyaohhh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"yyyaohhh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"yyyaohhh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"yyyaohhh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"yyyaohhh"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"yyyaohhh"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"yyyaohhh"},"content":"import tasks.Event;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"yyyaohhh"},"content":"import tasks.ToDo;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"yyyaohhh"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"yyyaohhh"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"yyyaohhh"},"content":" * The Duke.Storage class is responsible for reading and writing tasks to/from a file.","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"yyyaohhh"},"content":" * It provides methods to write a list of tasks to a file and load tasks from a file.","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"yyyaohhh"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"yyyaohhh"},"content":"public class Storage {","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"yyyaohhh"},"content":"    protected String filePath;","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"yyyaohhh"},"content":"     * Constructs a new Duke.Storage instance with the specified file path.","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"yyyaohhh"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"yyyaohhh"},"content":"     * @param filePath The path to the file where tasks will be stored.","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"yyyaohhh"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"yyyaohhh"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"yyyaohhh"},"content":"     * Writes a list of tasks to the file specified in the constructor.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"yyyaohhh"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"yyyaohhh"},"content":"     * @param listOfTasks The list of tasks to be written to the file.","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"yyyaohhh"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"yyyaohhh"},"content":"    public void writeToFile(TaskList listOfTasks) throws IOException {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"yyyaohhh"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"yyyaohhh"},"content":"        for (int i \u003d 0; i \u003c listOfTasks.tasks.size(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"yyyaohhh"},"content":"            // Check the type of each task and write it to the file with appropriate formatting","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"yyyaohhh"},"content":"            if (listOfTasks.tasks.get(i) instanceof Event) {","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"yyyaohhh"},"content":"                Event x \u003d (Event) listOfTasks.tasks.get(i);","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"yyyaohhh"},"content":"                if (listOfTasks.tasks.get(i).getStatus()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"yyyaohhh"},"content":"                    fw.write(\"E | 0 |\" + listOfTasks.printName(i) + \"|\" + x.getStart() + \"-\" + x.getEnd() + \"\\n\");","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"yyyaohhh"},"content":"                } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"yyyaohhh"},"content":"                    fw.write(\"E | 1 |\" + listOfTasks.printName(i) + \"|\" + x.getStart() + \"-\" + x.getEnd() + \"\\n\");","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"yyyaohhh"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"yyyaohhh"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"yyyaohhh"},"content":"            if (listOfTasks.tasks.get(i) instanceof ToDo) {","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"yyyaohhh"},"content":"                if (listOfTasks.tasks.get(i).getStatus()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"yyyaohhh"},"content":"                    fw.write(\"T | 0 |\" + listOfTasks.printName(i) + \"\\n\");","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"yyyaohhh"},"content":"                } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"yyyaohhh"},"content":"                    fw.write(\"T | 1 |\" + listOfTasks.printName(i) + \"\\n\");","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"yyyaohhh"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"yyyaohhh"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"yyyaohhh"},"content":"            if (listOfTasks.tasks.get(i) instanceof Deadline) {","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"yyyaohhh"},"content":"                Deadline x \u003d (Deadline) listOfTasks.tasks.get(i);","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"yyyaohhh"},"content":"                if (listOfTasks.tasks.get(i).getStatus()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"yyyaohhh"},"content":"                    fw.write(\"D | 0 |\" + listOfTasks.printName(i) + \"| \" + x.getBy() + \"\\n\");","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"yyyaohhh"},"content":"                } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"yyyaohhh"},"content":"                    fw.write(\"D | 1 |\" + listOfTasks.printName(i) + \"| \" + x.getBy() + \"\\n\");","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"yyyaohhh"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"yyyaohhh"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"yyyaohhh"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"yyyaohhh"},"content":"        fw.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"yyyaohhh"},"content":"     * Loads tasks from the file specified in the constructor and returns them as an ArrayList.","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"yyyaohhh"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"yyyaohhh"},"content":"     * @return An ArrayList of tasks loaded from the file.","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"yyyaohhh"},"content":"     * @throws FileNotFoundException If the specified file is not found.","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"yyyaohhh"},"content":"    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"yyyaohhh"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"yyyaohhh"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"yyyaohhh"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"yyyaohhh"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"yyyaohhh"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"yyyaohhh"},"content":"            String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"yyyaohhh"},"content":"            if (parts[0].equals(\"T \")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"yyyaohhh"},"content":"                ToDo temp \u003d new ToDo(parts[2]);","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"yyyaohhh"},"content":"                tasks.add(temp);","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"yyyaohhh"},"content":"                if (parts[1].equals(\" 0 \")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"yyyaohhh"},"content":"                    temp.markDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"yyyaohhh"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"yyyaohhh"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"yyyaohhh"},"content":"            if (parts[0].equals(\"D \")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"yyyaohhh"},"content":"                String[] x \u003d parts[3].split(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"yyyaohhh"},"content":"                Deadline temp \u003d new Deadline(parts[2], x[1]);","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"yyyaohhh"},"content":"                tasks.add(temp);","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"yyyaohhh"},"content":"                if (parts[1].equals(\" 0 \")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"yyyaohhh"},"content":"                    temp.markDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"yyyaohhh"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"yyyaohhh"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"yyyaohhh"},"content":"            if (parts[0].equals(\"E \")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"yyyaohhh"},"content":"                String[] duration \u003d parts[3].split(\"-\");","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"yyyaohhh"},"content":"                Event temp \u003d new Event(parts[2], duration[0], duration[1]);","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"yyyaohhh"},"content":"                tasks.add(temp);","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"yyyaohhh"},"content":"                if (parts[1].equals(\" 0 \")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"yyyaohhh"},"content":"                    temp.markDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"yyyaohhh"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"yyyaohhh"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"yyyaohhh"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"yyyaohhh"},"content":"        return tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"yyyaohhh"},"content":"}","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"yyyaohhh":109}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyyaohhh"},"content":"package duke;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"yyyaohhh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"yyyaohhh"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"yyyaohhh"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"yyyaohhh"},"content":" * The Duke.TaskList class represents a list of tasks and provides various methods for managing and interacting with those tasks.","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"yyyaohhh"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"yyyaohhh"},"content":"public class TaskList {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"yyyaohhh"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"yyyaohhh"},"content":"     * Constructs a new Duke.TaskList with the provided list of tasks.","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"yyyaohhh"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"yyyaohhh"},"content":"     * @param tasks The list of tasks to initialize the Duke.TaskList with.","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"yyyaohhh"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"yyyaohhh"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"yyyaohhh"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"yyyaohhh"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"yyyaohhh"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"yyyaohhh"},"content":"    public void addToList(Task task) {","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"yyyaohhh"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"yyyaohhh"},"content":"     * Marks a task as done by its index in the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"yyyaohhh"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"yyyaohhh"},"content":"     * @param taskNum The index of the task to mark as done.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"yyyaohhh"},"content":"    public void markDone(int taskNum) {","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"yyyaohhh"},"content":"        this.tasks.get(taskNum).markDone();","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"yyyaohhh"},"content":"     * Marks a task as undone by its index in the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"yyyaohhh"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"yyyaohhh"},"content":"     * @param taskNum The index of the task to mark as undone.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"yyyaohhh"},"content":"    public void markUndone(int taskNum) {","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"yyyaohhh"},"content":"        this.tasks.get(taskNum).markUndone();","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"yyyaohhh"},"content":"     * Returns the string representation of a task by its index.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"yyyaohhh"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"yyyaohhh"},"content":"     * @param taskNum The index of the task to print.","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"yyyaohhh"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"yyyaohhh"},"content":"    public String printTask(int taskNum) {","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"yyyaohhh"},"content":"        return this.tasks.get(taskNum).toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"yyyaohhh"},"content":"     * Returns the name of a task by its index.","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"yyyaohhh"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"yyyaohhh"},"content":"     * @param taskNum The index of the task to print the name of.","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"yyyaohhh"},"content":"     * @return The name of the task.","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"yyyaohhh"},"content":"    public String printName(int taskNum) {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"yyyaohhh"},"content":"        return this.tasks.get(taskNum).getName();","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"yyyaohhh"},"content":"     * Prints the number of tasks in the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"yyyaohhh"},"content":"    public String numOfTask() {","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"yyyaohhh"},"content":"        return \"N... Now you have... \" + this.tasks.size() + \" tasks in the list. o(\u003eω\u003c)o\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"yyyaohhh"},"content":"     * Deletes a task by its index and prints its details before removal.","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"yyyaohhh"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"yyyaohhh"},"content":"     * @param taskNum The index of the task to delete.","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"yyyaohhh"},"content":"    public void deleteTask(int taskNum) {","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"yyyaohhh"},"content":"        System.out.println(this.printTask(taskNum));","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"yyyaohhh"},"content":"        this.tasks.remove(taskNum);","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"yyyaohhh"},"content":"    public int totalTaskNum() {","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"yyyaohhh"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"yyyaohhh"},"content":"     * Prints the entire list of tasks with numbering for reference.","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"yyyaohhh"},"content":"    public String printList() {","lastModifiedDate":"2023-09-13"},{"lineNumber":92,"author":{"gitId":"yyyaohhh"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":93,"author":{"gitId":"yyyaohhh"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-23"},{"lineNumber":94,"author":{"gitId":"yyyaohhh"},"content":"            int x \u003d i + 1;","lastModifiedDate":"2023-08-23"},{"lineNumber":95,"author":{"gitId":"yyyaohhh"},"content":"            result +\u003d x + \". \" + this.printTask(i) + \"\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":96,"author":{"gitId":"yyyaohhh"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":97,"author":{"gitId":"yyyaohhh"},"content":"        return result;","lastModifiedDate":"2023-09-13"},{"lineNumber":98,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":99,"author":{"gitId":"yyyaohhh"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"yyyaohhh":99}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyyaohhh"},"content":"package duke;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"yyyaohhh"},"content":"/**","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"yyyaohhh"},"content":" * The Ui class handles user interface-related functionality, such as displaying","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"yyyaohhh"},"content":" * messages, the application logo, and providing an introduction message.","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"yyyaohhh"},"content":" */","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"yyyaohhh"},"content":"public class Ui {","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"yyyaohhh"},"content":"    private static final String DIVIDER \u003d \"________________________________________________________\\n\";","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"yyyaohhh"},"content":"    private static final String BYE_MESSAGE \u003d \"B... b...bye bye!... And ... see you! （//▽//）\\n\";","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"yyyaohhh"},"content":"    private static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"yyyaohhh"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"yyyaohhh"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"yyyaohhh"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"yyyaohhh"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"yyyaohhh"},"content":"     * Constructs a new Ui instance and displays an introduction message.","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"yyyaohhh"},"content":"    public Ui() {","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"yyyaohhh"},"content":"        introduction();","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"yyyaohhh"},"content":"     * Displays an introduction message when the application starts.","lastModifiedDate":"2023-09-19"},{"lineNumber":25,"author":{"gitId":"yyyaohhh"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"yyyaohhh"},"content":"     * @return The introduction message.","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"yyyaohhh"},"content":"    public String introduction() {","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"yyyaohhh"},"content":"        return DIVIDER + \"Hello from\\n\" + LOGO + \"Ko...ko...ko..nichi...wa!!! I... I am Gotoh... Hitori desu!\\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"yyyaohhh"},"content":"                + \"You... can call me... Bocchi. They usually... call me Bocchi chan...\\n\"","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"yyyaohhh"},"content":"                + \"What can... can I do for you?\\n\" + DIVIDER;","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"yyyaohhh"},"content":"     * Returns a divider line used for separating messages.","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"yyyaohhh"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":37,"author":{"gitId":"yyyaohhh"},"content":"     * @return A string containing the divider line.","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"yyyaohhh"},"content":"    public static String line() {","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"yyyaohhh"},"content":"        return DIVIDER;","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-19"},{"lineNumber":44,"author":{"gitId":"yyyaohhh"},"content":"     * Displays a goodbye message when the user exits the application.","lastModifiedDate":"2023-09-19"},{"lineNumber":45,"author":{"gitId":"yyyaohhh"},"content":"     *","lastModifiedDate":"2023-09-19"},{"lineNumber":46,"author":{"gitId":"yyyaohhh"},"content":"     * @return The goodbye message.","lastModifiedDate":"2023-09-19"},{"lineNumber":47,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-19"},{"lineNumber":48,"author":{"gitId":"yyyaohhh"},"content":"    public static String sayBye(){","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"yyyaohhh"},"content":"        return BYE_MESSAGE;","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"yyyaohhh"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"yyyaohhh":51}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyyaohhh"},"content":"package tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"yyyaohhh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"yyyaohhh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"yyyaohhh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"yyyaohhh"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"yyyaohhh"},"content":"    public Deadline(String name, LocalDate by) {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"yyyaohhh"},"content":"        super(name);","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"yyyaohhh"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"yyyaohhh"},"content":"    public Deadline(String name, String by) {","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"yyyaohhh"},"content":"        super(name);","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"yyyaohhh"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"yyyaohhh"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"yyyaohhh"},"content":"        return this.by;","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"yyyaohhh"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"yyyaohhh"},"content":"    public String toString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"yyyaohhh"},"content":"        return \"[D]\" + super.toString() + \" (by: \" +","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"yyyaohhh"},"content":"                this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"yyyaohhh"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"yyyaohhh":25}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyyaohhh"},"content":"package tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"yyyaohhh"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"yyyaohhh"},"content":" * The Event class represents an event, which is a type of task with a name, start date, and end date.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"yyyaohhh"},"content":" * It extends the Task class and provides methods to access the event\u0027s start and end dates,","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"yyyaohhh"},"content":" * as well as a custom implementation of the toString method to represent the event in a specific format.","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"yyyaohhh"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"yyyaohhh"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"yyyaohhh"},"content":"    protected String start;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"yyyaohhh"},"content":"    protected String end;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"yyyaohhh"},"content":"     * Constructs a new Event with the specified name, start date, and end date.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"yyyaohhh"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"yyyaohhh"},"content":"     * @param name  The name of the event.","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"yyyaohhh"},"content":"     * @param start The start date of the event.","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"yyyaohhh"},"content":"     * @param end   The end date of the event.","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"yyyaohhh"},"content":"    public Event(String name, String start, String end) {","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"yyyaohhh"},"content":"        super(name);","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"yyyaohhh"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"yyyaohhh"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"yyyaohhh"},"content":"     * Gets the start date of the event.","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"yyyaohhh"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"yyyaohhh"},"content":"     * @return The start date of the event.","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"yyyaohhh"},"content":"    public String getStart() {","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"yyyaohhh"},"content":"        return this.start;","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"yyyaohhh"},"content":"     * Gets the end date of the event.","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"yyyaohhh"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"yyyaohhh"},"content":"     * @return The end date of the event.","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"yyyaohhh"},"content":"    public String getEnd() {","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"yyyaohhh"},"content":"        return this.end;","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"yyyaohhh"},"content":"     * Returns a string representation of the event in the format:","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"yyyaohhh"},"content":"     * [E][ ] name (from: start date to: end date)","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"yyyaohhh"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"yyyaohhh"},"content":"     * @return A string representation of the event.","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"yyyaohhh"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"yyyaohhh"},"content":"    public String toString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"yyyaohhh"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"yyyaohhh"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"yyyaohhh":54}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyyaohhh"},"content":"package tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"yyyaohhh"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"yyyaohhh"},"content":" * The Task class represents a basic task with a name and completion status.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"yyyaohhh"},"content":" * It provides methods for retrieving the task\u0027s name, status, and a custom","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"yyyaohhh"},"content":" * string representation of the task, as well as for marking the task as done","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"yyyaohhh"},"content":" * or undone.","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"yyyaohhh"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"yyyaohhh"},"content":"public class Task {","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"yyyaohhh"},"content":"    protected String taskName;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"yyyaohhh"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"yyyaohhh"},"content":"     * Constructs a new Task with the specified name and sets its initial","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"yyyaohhh"},"content":"     * completion status to \"not done.\"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"yyyaohhh"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"yyyaohhh"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"yyyaohhh"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"yyyaohhh"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"yyyaohhh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"yyyaohhh"},"content":"     * Returns an icon representing the completion status of the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"yyyaohhh"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"yyyaohhh"},"content":"     * @return An \"X\" if the task is done, or a space if it is not done.","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"yyyaohhh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"yyyaohhh"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"yyyaohhh"},"content":"     * Marks the task as done by setting its completion status to true.","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"yyyaohhh"},"content":"    public void markDone() {","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"yyyaohhh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"yyyaohhh"},"content":"     * Gets the completion status of the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"yyyaohhh"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"yyyaohhh"},"content":"     * @return True if the task is done, false otherwise.","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"yyyaohhh"},"content":"    public boolean getStatus() {","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"yyyaohhh"},"content":"        return this.isDone;","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"yyyaohhh"},"content":"     * Gets the name of the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"yyyaohhh"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"yyyaohhh"},"content":"     * @return The name of the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"yyyaohhh"},"content":"    public String getName() {","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"yyyaohhh"},"content":"        return this.taskName;","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"yyyaohhh"},"content":"     * Marks the task as undone by setting its completion status to false.","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"yyyaohhh"},"content":"    public void markUndone() {","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"yyyaohhh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"yyyaohhh"},"content":"     * Returns a string representation of the task in the format:","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"yyyaohhh"},"content":"     * [status] taskName","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"yyyaohhh"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"yyyaohhh"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"yyyaohhh"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"yyyaohhh"},"content":"    public String toString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"yyyaohhh"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.taskName;","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"yyyaohhh"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"yyyaohhh":75}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyyaohhh"},"content":"package tasks;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"yyyaohhh"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"yyyaohhh"},"content":" * The ToDo class represents a task of type \"To-Do\" with a name and completion status.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"yyyaohhh"},"content":" * It extends the Task class and provides a custom string representation of the task","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"yyyaohhh"},"content":" * specific to the \"To-Do\" type.","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"yyyaohhh"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"yyyaohhh"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"yyyaohhh"},"content":"     * Constructs a new ToDo task with the specified name and sets its initial","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"yyyaohhh"},"content":"     * completion status to \"not done.\"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"yyyaohhh"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"yyyaohhh"},"content":"     * @param name The name of the \"To-Do\" task.","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"yyyaohhh"},"content":"    public ToDo(String name) {","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"yyyaohhh"},"content":"        super(name);","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"yyyaohhh"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"yyyaohhh"},"content":"     * Returns a string representation of the \"To-Do\" task in the format:","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"yyyaohhh"},"content":"     * [T] taskName","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"yyyaohhh"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"yyyaohhh"},"content":"     * @return A string representation of the \"To-Do\" task.","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"yyyaohhh"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"yyyaohhh"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"yyyaohhh"},"content":"    public String toString() {","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"yyyaohhh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"yyyaohhh"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"yyyaohhh":30}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yyyaohhh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"yyyaohhh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"yyyaohhh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"yyyaohhh"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"yyyaohhh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"yyyaohhh"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"yyyaohhh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"yyyaohhh"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"yyyaohhh"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"yyyaohhh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"yyyaohhh"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"yyyaohhh"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"yyyaohhh"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"yyyaohhh"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"yyyaohhh":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yyyaohhh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"yyyaohhh"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"yyyaohhh"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"yyyaohhh"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"yyyaohhh"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"yyyaohhh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"yyyaohhh"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"yyyaohhh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"yyyaohhh"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"yyyaohhh"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"yyyaohhh"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"yyyaohhh"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"yyyaohhh"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"yyyaohhh"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"yyyaohhh"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"yyyaohhh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"yyyaohhh"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"yyyaohhh":19}},{"path":"src/test/java/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyyaohhh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"yyyaohhh"},"content":"import tasks.Event;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"yyyaohhh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"yyyaohhh"},"content":"public class EventTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"yyyaohhh"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"yyyaohhh"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"yyyaohhh"},"content":"        Event test \u003d new Event(\"test123\", \"May 2020\", \"July 2021\");","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"yyyaohhh"},"content":"        assertEquals(\"[E][ ] test123 (from: May 2020 to: July 2021)\", test.toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"yyyaohhh"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"yyyaohhh":13}},{"path":"src/test/java/tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yyyaohhh"},"content":"import tasks.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"yyyaohhh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"yyyaohhh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"yyyaohhh"},"content":"public class TaskTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"yyyaohhh"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"yyyaohhh"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"yyyaohhh"},"content":"        Task test \u003d new Task(\"test123\");","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"yyyaohhh"},"content":"        assertEquals(\"[ ] test123\", test.toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"yyyaohhh"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"yyyaohhh"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"yyyaohhh"},"content":"    public void markDoneTest() {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"yyyaohhh"},"content":"        Task test \u003d new Task(\"test123\");","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"yyyaohhh"},"content":"        test.markDone();","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"yyyaohhh"},"content":"        assertEquals(\"[X] test123\", test.toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"yyyaohhh"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"yyyaohhh"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"yyyaohhh":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yyyaohhh"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"yyyaohhh"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"yyyaohhh"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"yyyaohhh"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"yyyaohhh"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"yyyaohhh"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"yyyaohhh"},"content":"unmark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"yyyaohhh"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"yyyaohhh"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"yyyaohhh":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"yyyaohhh"},"content":"java -classpath ..\\bin duke.duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yyyaohhh":1,"-":20}}]
