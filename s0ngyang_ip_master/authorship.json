[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"s0ngyang"},"content":"    mainClass.set(\"nexus.Nexus\")","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"s0ngyang"},"content":"    archiveBaseName \u003d \"nexus\"","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"s0ngyang":2,"-":40}},{"path":"src/main/data/nexus.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"s0ngyang"},"content":"D|0|2103 w3|4/9/2023 2359","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"s0ngyang"},"content":"E|1|vote for PE|1/9/2023 0800|1/9/2023 2000","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"s0ngyang"},"content":"T|0|2100tut","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"s0ngyang"},"content":"D|0|2105 lect|9/9/2023 2359","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"s0ngyang":4}},{"path":"src/main/java/nexus/Nexus.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s0ngyang"},"content":"package nexus;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"s0ngyang"},"content":"import nexus.components.Parser;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"s0ngyang"},"content":"import nexus.components.Storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"s0ngyang"},"content":"import nexus.components.Ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"s0ngyang"},"content":"import nexus.exceptions.InvalidInputException;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"s0ngyang"},"content":"import nexus.task.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"s0ngyang"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"s0ngyang"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"s0ngyang"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"s0ngyang"},"content":" * The main class for Nexus ChatBot.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"s0ngyang"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"s0ngyang"},"content":"public class Nexus {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"s0ngyang"},"content":"    private TaskList list;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"s0ngyang"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"s0ngyang"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"s0ngyang"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"s0ngyang"},"content":"     * Create ChatBot from data path.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"s0ngyang"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"s0ngyang"},"content":"     * @param path String.","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"s0ngyang"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"s0ngyang"},"content":"    public Nexus(String path) {","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"s0ngyang"},"content":"        this.storage \u003d new Storage(path);","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"s0ngyang"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"s0ngyang"},"content":"        this.list \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"s0ngyang"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"s0ngyang"},"content":"     * Start the bot.","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"s0ngyang"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"s0ngyang"},"content":"    public void run() {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"s0ngyang"},"content":"        ui.printWelcome();","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"s0ngyang"},"content":"        // Show current tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"s0ngyang"},"content":"        ui.printList(this.list);","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"s0ngyang"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"s0ngyang"},"content":"        boolean exit \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"s0ngyang"},"content":"        while (!exit) {","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"s0ngyang"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"s0ngyang"},"content":"                String input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"s0ngyang"},"content":"                exit \u003d Parser.parseInput(ui, storage, this.list, input);","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"s0ngyang"},"content":"            } catch (InvalidInputException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"s0ngyang"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"s0ngyang"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"s0ngyang"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"s0ngyang"},"content":"        scanner.close();","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"s0ngyang"},"content":"        ui.printBye();","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"s0ngyang"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"s0ngyang"},"content":"        // OS-Independent path","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"s0ngyang"},"content":"        String path \u003d String.join(File.separator, \"src\", \"main\", \"data\", \"nexus.txt\");","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"s0ngyang"},"content":"        new Nexus(path).run();","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"s0ngyang"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"s0ngyang":59}},{"path":"src/main/java/nexus/components/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s0ngyang"},"content":"package nexus.components;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"s0ngyang"},"content":"import nexus.exceptions.InvalidInputException;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"s0ngyang"},"content":"import nexus.task.Deadline;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"s0ngyang"},"content":"import nexus.task.Event;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"s0ngyang"},"content":"import nexus.task.Task;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"s0ngyang"},"content":"import nexus.task.TaskList;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"s0ngyang"},"content":"import nexus.task.Todo;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"s0ngyang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"s0ngyang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"s0ngyang"},"content":"public class Parser {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"s0ngyang"},"content":"    private static void parseMark(TaskList list, String[] data, Storage storage, Ui ui)","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"s0ngyang"},"content":"            throws InvalidInputException {","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"s0ngyang"},"content":"        if (data.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"s0ngyang"},"content":"            throw new InvalidInputException(\"Task index must be specified\");","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"s0ngyang"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"s0ngyang"},"content":"        int index \u003d Integer.parseInt(data[1]) - 1;","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"s0ngyang"},"content":"        list.get(index).setDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"s0ngyang"},"content":"        ui.printMark(list.get(index));","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"s0ngyang"},"content":"        storage.editTask(\"mark\", index);","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"s0ngyang"},"content":"    private static void parseUnmark(TaskList list, String[] data, Storage storage, Ui ui)","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"s0ngyang"},"content":"            throws InvalidInputException {","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"s0ngyang"},"content":"        if (data.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"s0ngyang"},"content":"            throw new InvalidInputException(\"Task index must be specified\");","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"s0ngyang"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"s0ngyang"},"content":"        int index \u003d Integer.parseInt(data[1]) - 1;","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"s0ngyang"},"content":"        list.get(index).setUndone();","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"s0ngyang"},"content":"        System.out.println(list.get(index));","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"s0ngyang"},"content":"        ui.printUnmark(list.get(index));","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"s0ngyang"},"content":"        storage.editTask(\"unmark\", index);","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"s0ngyang"},"content":"    private static void parseDelete(TaskList list, String[] data, Storage storage, Ui ui)","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"s0ngyang"},"content":"            throws InvalidInputException {","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"s0ngyang"},"content":"        if (data.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"s0ngyang"},"content":"            throw new InvalidInputException(\"Task index must be specified\");","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"s0ngyang"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"s0ngyang"},"content":"        int index \u003d Integer.parseInt(data[1]) - 1;","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"s0ngyang"},"content":"        Task deleted \u003d list.get(index);","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"s0ngyang"},"content":"        list.remove(index);","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"s0ngyang"},"content":"        ui.printDelete(deleted, list);","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"s0ngyang"},"content":"        storage.editTask(\"delete\", index);","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"s0ngyang"},"content":"    private static void parseTodo(TaskList list, String[] data, Storage storage, Ui ui)","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"s0ngyang"},"content":"            throws InvalidInputException {","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"s0ngyang"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"s0ngyang"},"content":"        if (data.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"s0ngyang"},"content":"            throw new InvalidInputException(\"Todo description cannot be empty\");","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"s0ngyang"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"s0ngyang"},"content":"        for (int i \u003d 1; i \u003c data.length; i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"s0ngyang"},"content":"            builder.append(data[i]).append(\" \");","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"s0ngyang"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"s0ngyang"},"content":"        String desc \u003d builder.toString().trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"s0ngyang"},"content":"        Todo todo \u003d new Todo(desc);","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"s0ngyang"},"content":"        list.add(todo);","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"s0ngyang"},"content":"        ui.printAdd(todo, list);","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"s0ngyang"},"content":"        storage.saveTask(todo);","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"s0ngyang"},"content":"    private static void parseDeadline(TaskList list, String[] data, Storage storage, Ui ui)","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"s0ngyang"},"content":"            throws InvalidInputException {","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"s0ngyang"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"s0ngyang"},"content":"        if (data.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"s0ngyang"},"content":"            throw new InvalidInputException(\"Deadline description cannot be empty\");","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"s0ngyang"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"s0ngyang"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"s0ngyang"},"content":"        while (!data[index].equals(\"/by\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"s0ngyang"},"content":"            builder.append(data[index]).append(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"s0ngyang"},"content":"            index++;","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"s0ngyang"},"content":"            if (index \u003d\u003d data.length) {","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"s0ngyang"},"content":"                throw new InvalidInputException(\"Deadline must include /by [D/M/YYYY HHMM]\");","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"s0ngyang"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"s0ngyang"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"s0ngyang"},"content":"        String desc \u003d builder.toString().trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"s0ngyang"},"content":"        builder.setLength(0);","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"s0ngyang"},"content":"        index++;","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"s0ngyang"},"content":"        if (index \u003d\u003d data.length) {","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"s0ngyang"},"content":"            throw new InvalidInputException(\"Deadline must include /by [D/M/YYYY HHMM]\");","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"s0ngyang"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"s0ngyang"},"content":"        while (index \u003c data.length) {","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"s0ngyang"},"content":"            builder.append(data[index]).append(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"s0ngyang"},"content":"            index++;","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"s0ngyang"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"s0ngyang"},"content":"        String endDateTimeString \u003d builder.toString().trim();","lastModifiedDate":"2023-09-06"},{"lineNumber":87,"author":{"gitId":"s0ngyang"},"content":"        LocalDateTime dateTime \u003d Parser.parseDatetime(endDateTimeString);","lastModifiedDate":"2023-09-06"},{"lineNumber":88,"author":{"gitId":"s0ngyang"},"content":"        Deadline deadline \u003d new Deadline(desc, dateTime);","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"s0ngyang"},"content":"        list.add(deadline);","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"s0ngyang"},"content":"        ui.printAdd(deadline, list);","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"s0ngyang"},"content":"        storage.saveTask(deadline);","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"s0ngyang"},"content":"    public static LocalDateTime parseDatetime(String endDateTimeString) {","lastModifiedDate":"2023-09-06"},{"lineNumber":95,"author":{"gitId":"s0ngyang"},"content":"        return LocalDateTime.parse(endDateTimeString, DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"s0ngyang"},"content":"    private static void parseEvent(TaskList list, String[] data, Storage storage, Ui ui)","lastModifiedDate":"2023-09-06"},{"lineNumber":99,"author":{"gitId":"s0ngyang"},"content":"            throws InvalidInputException {","lastModifiedDate":"2023-09-06"},{"lineNumber":100,"author":{"gitId":"s0ngyang"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"s0ngyang"},"content":"        if (data.length \u003d\u003d 1) {","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"s0ngyang"},"content":"            throw new InvalidInputException(\"Event description cannot be empty\");","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"s0ngyang"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"s0ngyang"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"s0ngyang"},"content":"        while (!data[index].equals(\"/from\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"s0ngyang"},"content":"            builder.append(data[index]).append(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"s0ngyang"},"content":"            index++;","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"s0ngyang"},"content":"            if (index \u003d\u003d data.length) {","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"s0ngyang"},"content":"                throw new InvalidInputException(\"Event must include /from [datetime]\");","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"s0ngyang"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"s0ngyang"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"s0ngyang"},"content":"        String desc \u003d builder.toString().trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":113,"author":{"gitId":"s0ngyang"},"content":"        builder.setLength(0);","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"s0ngyang"},"content":"        index++;","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"s0ngyang"},"content":"        while (!data[index].equals(\"/to\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"s0ngyang"},"content":"            builder.append(data[index]).append(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"s0ngyang"},"content":"            index++;","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"s0ngyang"},"content":"            if (index \u003d\u003d data.length) {","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"s0ngyang"},"content":"                throw new InvalidInputException(\"Event must include /to [datetime]\");","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"s0ngyang"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":121,"author":{"gitId":"s0ngyang"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"s0ngyang"},"content":"        String start \u003d builder.toString().trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"s0ngyang"},"content":"        builder.setLength(0);","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"s0ngyang"},"content":"        index++;","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"s0ngyang"},"content":"        if (index \u003d\u003d data.length) {","lastModifiedDate":"2023-09-03"},{"lineNumber":126,"author":{"gitId":"s0ngyang"},"content":"            throw new InvalidInputException(\"Event must include /to [datetime]\");","lastModifiedDate":"2023-09-03"},{"lineNumber":127,"author":{"gitId":"s0ngyang"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":128,"author":{"gitId":"s0ngyang"},"content":"        while (index \u003c data.length) {","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"s0ngyang"},"content":"            builder.append(data[index]).append(\" \");","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"s0ngyang"},"content":"            index++;","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"s0ngyang"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"s0ngyang"},"content":"        String end \u003d builder.toString().trim();","lastModifiedDate":"2023-09-02"},{"lineNumber":133,"author":{"gitId":"s0ngyang"},"content":"        Event event \u003d new Event(desc, Parser.parseDatetime(start), Parser.parseDatetime(end));","lastModifiedDate":"2023-09-03"},{"lineNumber":134,"author":{"gitId":"s0ngyang"},"content":"        list.add(event);","lastModifiedDate":"2023-09-02"},{"lineNumber":135,"author":{"gitId":"s0ngyang"},"content":"        ui.printAdd(event, list);","lastModifiedDate":"2023-09-03"},{"lineNumber":136,"author":{"gitId":"s0ngyang"},"content":"        storage.saveTask(event);","lastModifiedDate":"2023-09-02"},{"lineNumber":137,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":138,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":139,"author":{"gitId":"s0ngyang"},"content":"    public static void parseFind(TaskList list, String[] data, Ui ui) throws InvalidInputException {","lastModifiedDate":"2023-09-04"},{"lineNumber":140,"author":{"gitId":"s0ngyang"},"content":"        data[0] \u003d \"\";","lastModifiedDate":"2023-09-04"},{"lineNumber":141,"author":{"gitId":"s0ngyang"},"content":"        String keyword \u003d String.join(\" \", data).trim();","lastModifiedDate":"2023-09-04"},{"lineNumber":142,"author":{"gitId":"s0ngyang"},"content":"        System.out.println(keyword);","lastModifiedDate":"2023-09-04"},{"lineNumber":143,"author":{"gitId":"s0ngyang"},"content":"        ui.printFind(keyword, list);","lastModifiedDate":"2023-09-04"},{"lineNumber":144,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":145,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":146,"author":{"gitId":"s0ngyang"},"content":"    public static boolean parseInput(Ui ui, Storage storage, TaskList list, String input)","lastModifiedDate":"2023-09-06"},{"lineNumber":147,"author":{"gitId":"s0ngyang"},"content":"            throws InvalidInputException {","lastModifiedDate":"2023-09-06"},{"lineNumber":148,"author":{"gitId":"s0ngyang"},"content":"        String[] data \u003d input.split(\" \");","lastModifiedDate":"2023-09-03"},{"lineNumber":149,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":150,"author":{"gitId":"s0ngyang"},"content":"        switch (data[0]) {","lastModifiedDate":"2023-09-03"},{"lineNumber":151,"author":{"gitId":"s0ngyang"},"content":"        case \"bye\":","lastModifiedDate":"2023-09-03"},{"lineNumber":152,"author":{"gitId":"s0ngyang"},"content":"            return true;","lastModifiedDate":"2023-09-03"},{"lineNumber":153,"author":{"gitId":"s0ngyang"},"content":"        case \"list\":","lastModifiedDate":"2023-09-03"},{"lineNumber":154,"author":{"gitId":"s0ngyang"},"content":"            ui.printList(list);","lastModifiedDate":"2023-09-03"},{"lineNumber":155,"author":{"gitId":"s0ngyang"},"content":"            break;","lastModifiedDate":"2023-09-03"},{"lineNumber":156,"author":{"gitId":"s0ngyang"},"content":"        case \"find\":","lastModifiedDate":"2023-09-03"},{"lineNumber":157,"author":{"gitId":"s0ngyang"},"content":"            Parser.parseFind(list, data, ui);","lastModifiedDate":"2023-09-04"},{"lineNumber":158,"author":{"gitId":"s0ngyang"},"content":"            break;","lastModifiedDate":"2023-09-04"},{"lineNumber":159,"author":{"gitId":"s0ngyang"},"content":"        case \"mark\":","lastModifiedDate":"2023-09-03"},{"lineNumber":160,"author":{"gitId":"s0ngyang"},"content":"            Parser.parseMark(list, data, storage, ui);","lastModifiedDate":"2023-09-03"},{"lineNumber":161,"author":{"gitId":"s0ngyang"},"content":"            break;","lastModifiedDate":"2023-09-03"},{"lineNumber":162,"author":{"gitId":"s0ngyang"},"content":"        case \"unmark\":","lastModifiedDate":"2023-09-03"},{"lineNumber":163,"author":{"gitId":"s0ngyang"},"content":"            Parser.parseUnmark(list, data, storage, ui);","lastModifiedDate":"2023-09-03"},{"lineNumber":164,"author":{"gitId":"s0ngyang"},"content":"            break;","lastModifiedDate":"2023-09-03"},{"lineNumber":165,"author":{"gitId":"s0ngyang"},"content":"        case \"todo\":","lastModifiedDate":"2023-09-03"},{"lineNumber":166,"author":{"gitId":"s0ngyang"},"content":"            Parser.parseTodo(list, data, storage, ui);","lastModifiedDate":"2023-09-03"},{"lineNumber":167,"author":{"gitId":"s0ngyang"},"content":"            break;","lastModifiedDate":"2023-09-03"},{"lineNumber":168,"author":{"gitId":"s0ngyang"},"content":"        case \"deadline\":","lastModifiedDate":"2023-09-03"},{"lineNumber":169,"author":{"gitId":"s0ngyang"},"content":"            Parser.parseDeadline(list, data, storage, ui);","lastModifiedDate":"2023-09-03"},{"lineNumber":170,"author":{"gitId":"s0ngyang"},"content":"            break;","lastModifiedDate":"2023-09-03"},{"lineNumber":171,"author":{"gitId":"s0ngyang"},"content":"        case \"event\":","lastModifiedDate":"2023-09-03"},{"lineNumber":172,"author":{"gitId":"s0ngyang"},"content":"            Parser.parseEvent(list, data, storage, ui);","lastModifiedDate":"2023-09-03"},{"lineNumber":173,"author":{"gitId":"s0ngyang"},"content":"            break;","lastModifiedDate":"2023-09-02"},{"lineNumber":174,"author":{"gitId":"s0ngyang"},"content":"        case \"delete\":","lastModifiedDate":"2023-09-02"},{"lineNumber":175,"author":{"gitId":"s0ngyang"},"content":"            Parser.parseDelete(list, data, storage, ui);","lastModifiedDate":"2023-09-03"},{"lineNumber":176,"author":{"gitId":"s0ngyang"},"content":"            break;","lastModifiedDate":"2023-09-02"},{"lineNumber":177,"author":{"gitId":"s0ngyang"},"content":"        default:","lastModifiedDate":"2023-09-02"},{"lineNumber":178,"author":{"gitId":"s0ngyang"},"content":"            throw new InvalidInputException(\"I don\u0027t understand. Please check your input again.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":179,"author":{"gitId":"s0ngyang"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":180,"author":{"gitId":"s0ngyang"},"content":"        return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":181,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":182,"author":{"gitId":"s0ngyang"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"s0ngyang":182}},{"path":"src/main/java/nexus/components/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s0ngyang"},"content":"package nexus.components;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"s0ngyang"},"content":"import nexus.task.Deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"s0ngyang"},"content":"import nexus.task.Event;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"s0ngyang"},"content":"import nexus.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"s0ngyang"},"content":"import nexus.task.Todo;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"s0ngyang"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"s0ngyang"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"s0ngyang"},"content":"import java.io.File;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"s0ngyang"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"s0ngyang"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"s0ngyang"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"s0ngyang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"s0ngyang"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"s0ngyang"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"s0ngyang"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"s0ngyang"},"content":" * Manages saving and loading of data.","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"s0ngyang"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"s0ngyang"},"content":"public class Storage {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"s0ngyang"},"content":"    private String path;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"s0ngyang"},"content":"    public Storage(String path) {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"s0ngyang"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"s0ngyang"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"s0ngyang"},"content":"     * Load tasks stored on hard disk.","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"s0ngyang"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"s0ngyang"},"content":"     * @return ArrayList of tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"s0ngyang"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"s0ngyang"},"content":"    public ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"s0ngyang"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"s0ngyang"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"s0ngyang"},"content":"            File file \u003d new File(path);","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"s0ngyang"},"content":"            if (file.exists()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"s0ngyang"},"content":"                Scanner s \u003d new Scanner(file);","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"s0ngyang"},"content":"                while (s.hasNext()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"s0ngyang"},"content":"                    list.add(this.loadTask(s.nextLine()));","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"s0ngyang"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"s0ngyang"},"content":"            } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"s0ngyang"},"content":"                file.createNewFile();","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"s0ngyang"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"s0ngyang"},"content":"            return list;","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"s0ngyang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"s0ngyang"},"content":"            System.out.println(\"IOException occurred: \" + e.getMessage());","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"s0ngyang"},"content":"            return list;","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"s0ngyang"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"s0ngyang"},"content":"    private Task loadTask(String input) {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"s0ngyang"},"content":"        String[] data \u003d input.split(\"\\\\|\");","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"s0ngyang"},"content":"        switch (data[0]) {","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"s0ngyang"},"content":"        case \"T\":","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"s0ngyang"},"content":"            Todo todo \u003d new Todo(data[2]);","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"s0ngyang"},"content":"            if (Objects.equals(data[1], \"1\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"s0ngyang"},"content":"                todo.setDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"s0ngyang"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"s0ngyang"},"content":"            return todo;","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"s0ngyang"},"content":"        case \"D\":","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"s0ngyang"},"content":"            Task deadline \u003d new Deadline(data[2], Parser.parseDatetime(data[3]));","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"s0ngyang"},"content":"            if (Objects.equals(data[1], \"1\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"s0ngyang"},"content":"                deadline.setDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"s0ngyang"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"s0ngyang"},"content":"            return deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"s0ngyang"},"content":"        case \"E\":","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"s0ngyang"},"content":"            Event event \u003d new Event(data[2], Parser.parseDatetime(data[3]), Parser.parseDatetime(data[4]));","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"s0ngyang"},"content":"            if (Objects.equals(data[1], \"1\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"s0ngyang"},"content":"                event.setDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"s0ngyang"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"s0ngyang"},"content":"            return event;","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"s0ngyang"},"content":"        default:","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"s0ngyang"},"content":"            return null;","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"s0ngyang"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"s0ngyang"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"s0ngyang"},"content":"     * Save a task to hard disk.","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"s0ngyang"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"s0ngyang"},"content":"     * @param task Task to be saved.","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"s0ngyang"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"s0ngyang"},"content":"    public void saveTask(Task task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"s0ngyang"},"content":"        FileWriter fileWriter;","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"s0ngyang"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"s0ngyang"},"content":"            fileWriter \u003d new FileWriter(path, true);","lastModifiedDate":"2023-09-02"},{"lineNumber":87,"author":{"gitId":"s0ngyang"},"content":"            fileWriter.write(task.toStorageString() + \"\\n\");","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"s0ngyang"},"content":"            fileWriter.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":89,"author":{"gitId":"s0ngyang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"s0ngyang"},"content":"            System.out.println(\"IOException:\" + e.getMessage());","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"s0ngyang"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"s0ngyang"},"content":"    public void editTask(String action, int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"s0ngyang"},"content":"        File fileToEdit \u003d new File(this.path);","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"s0ngyang"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"s0ngyang"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(fileToEdit));","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"s0ngyang"},"content":"            String line;","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"s0ngyang"},"content":"            StringBuilder updatedContent \u003d new StringBuilder();","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"s0ngyang"},"content":"            int currentLineNumber \u003d 0;","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"s0ngyang"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"s0ngyang"},"content":"                if (currentLineNumber \u003d\u003d index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"s0ngyang"},"content":"                    String[] data \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"s0ngyang"},"content":"                    switch (action) {","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"s0ngyang"},"content":"                    case \"mark\":","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"s0ngyang"},"content":"                        data[1] \u003d \"1\";","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"s0ngyang"},"content":"                        updatedContent.append(String.join(\"|\", data)).append(\"\\n\");","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"s0ngyang"},"content":"                        break;","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"s0ngyang"},"content":"                    case \"unmark\":","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"s0ngyang"},"content":"                        data[1] \u003d \"0\";","lastModifiedDate":"2023-09-02"},{"lineNumber":113,"author":{"gitId":"s0ngyang"},"content":"                        updatedContent.append(String.join(\"|\", data)).append(\"\\n\");","lastModifiedDate":"2023-09-02"},{"lineNumber":114,"author":{"gitId":"s0ngyang"},"content":"                        break;","lastModifiedDate":"2023-09-02"},{"lineNumber":115,"author":{"gitId":"s0ngyang"},"content":"                    case \"delete\":","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"s0ngyang"},"content":"                        break;","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"s0ngyang"},"content":"                    }","lastModifiedDate":"2023-09-02"},{"lineNumber":118,"author":{"gitId":"s0ngyang"},"content":"                } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"s0ngyang"},"content":"                    updatedContent.append(line).append(\"\\n\");","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"s0ngyang"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"s0ngyang"},"content":"                currentLineNumber++;","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"s0ngyang"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"s0ngyang"},"content":"            reader.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":125,"author":{"gitId":"s0ngyang"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(fileToEdit));","lastModifiedDate":"2023-09-02"},{"lineNumber":126,"author":{"gitId":"s0ngyang"},"content":"            writer.write(updatedContent.toString());","lastModifiedDate":"2023-09-02"},{"lineNumber":127,"author":{"gitId":"s0ngyang"},"content":"            writer.close();","lastModifiedDate":"2023-09-02"},{"lineNumber":128,"author":{"gitId":"s0ngyang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"s0ngyang"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-02"},{"lineNumber":130,"author":{"gitId":"s0ngyang"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"s0ngyang"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"s0ngyang":132}},{"path":"src/main/java/nexus/components/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s0ngyang"},"content":"package nexus.components;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"s0ngyang"},"content":"import nexus.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"s0ngyang"},"content":"import nexus.task.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"s0ngyang"},"content":"public class Ui {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"s0ngyang"},"content":"    private void printTask(Task task) {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"s0ngyang"},"content":"        System.out.println(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"s0ngyang"},"content":"    public void printList(TaskList list) {","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"s0ngyang"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"s0ngyang"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"s0ngyang"},"content":"            System.out.print(i + 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"s0ngyang"},"content":"            System.out.println(\".\" + list.get(i));","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"s0ngyang"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"s0ngyang"},"content":"    public void printMark(Task task) {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"s0ngyang"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"s0ngyang"},"content":"        this.printTask(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"s0ngyang"},"content":"    public void printUnmark(Task task) {","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"s0ngyang"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"s0ngyang"},"content":"        this.printTask(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"s0ngyang"},"content":"    public void printDelete(Task task, TaskList list) {","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"s0ngyang"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"s0ngyang"},"content":"        this.printTask(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"s0ngyang"},"content":"        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"s0ngyang"},"content":"    public void printAdd(Task task, TaskList list) {","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"s0ngyang"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"s0ngyang"},"content":"        this.printTask(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"s0ngyang"},"content":"        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"s0ngyang"},"content":"    public void printFind(String keyword, TaskList list) {","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"s0ngyang"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"s0ngyang"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"s0ngyang"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"s0ngyang"},"content":"            Task task \u003d list.get(i);","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"s0ngyang"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"s0ngyang"},"content":"                System.out.print(count);","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"s0ngyang"},"content":"                System.out.println(\".\" + list.get(i));","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"s0ngyang"},"content":"                count++;","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"s0ngyang"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"s0ngyang"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"s0ngyang"},"content":"    public void printWelcome() {","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"s0ngyang"},"content":"        System.out.println(\"Hello! I\u0027m NEXUS\");","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"s0ngyang"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"s0ngyang"},"content":"    public void printBye() {","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"s0ngyang"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"s0ngyang"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"s0ngyang":62}},{"path":"src/main/java/nexus/exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s0ngyang"},"content":"package nexus.exceptions;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"s0ngyang"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"s0ngyang"},"content":"    public InvalidInputException(String msg) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"s0ngyang"},"content":"        super(msg);","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"s0ngyang"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"s0ngyang":7}},{"path":"src/main/java/nexus/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s0ngyang"},"content":"package nexus.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"s0ngyang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"s0ngyang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"s0ngyang"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"s0ngyang"},"content":" * The Deadline class that inherits from Task.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"s0ngyang"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"s0ngyang"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"s0ngyang"},"content":"    protected LocalDateTime endDateTime;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"s0ngyang"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"s0ngyang"},"content":"     * Create deadline using description and datetime.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"s0ngyang"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"s0ngyang"},"content":"     * @param description String.","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"s0ngyang"},"content":"     * @param endDateTime End date \u0026 time.","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"s0ngyang"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"s0ngyang"},"content":"    public Deadline(String description, LocalDateTime endDateTime) {","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"s0ngyang"},"content":"        super(description);","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"s0ngyang"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"s0ngyang"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"s0ngyang"},"content":"    public String toString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"s0ngyang"},"content":"        String formattedBy \u003d this.endDateTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy HHmm\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"s0ngyang"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedBy + \")\";","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"s0ngyang"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"s0ngyang"},"content":"    public String toStorageString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"s0ngyang"},"content":"        String done \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"s0ngyang"},"content":"        String endDateTimeString \u003d this.endDateTime.format(DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"s0ngyang"},"content":"        return String.join(\"|\",\"D\", done, this.description, endDateTimeString);","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"s0ngyang"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"s0ngyang":38}},{"path":"src/main/java/nexus/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s0ngyang"},"content":"package nexus.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"s0ngyang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"s0ngyang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"s0ngyang"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"s0ngyang"},"content":" * The Event class that inherits from Task.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"s0ngyang"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"s0ngyang"},"content":"public class Event extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"s0ngyang"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"s0ngyang"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"s0ngyang"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"s0ngyang"},"content":"     * Create an event using description, start date \u0026 time and end date \u0026 time.","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"s0ngyang"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"s0ngyang"},"content":"     * @param description String.","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"s0ngyang"},"content":"     * @param from Start date \u0026 time.","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"s0ngyang"},"content":"     * @param to End Date \u0026 time.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"s0ngyang"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"s0ngyang"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"s0ngyang"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"s0ngyang"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"s0ngyang"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"s0ngyang"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"s0ngyang"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"s0ngyang"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy HHmm\");","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"s0ngyang"},"content":"        String formattedFrom \u003d this.from.format(dateTimeFormatter);","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"s0ngyang"},"content":"        String formattedTo \u003d this.to.format(dateTimeFormatter);","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"s0ngyang"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formattedFrom + \" to: \" + formattedTo + \")\";","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"s0ngyang"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"s0ngyang"},"content":"    public String toStorageString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"s0ngyang"},"content":"        String done \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"s0ngyang"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"s0ngyang"},"content":"        String formattedFrom \u003d this.from.format(dateTimeFormatter);","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"s0ngyang"},"content":"        String formattedTo \u003d this.to.format(dateTimeFormatter);","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"s0ngyang"},"content":"        return String.join(\"|\", \"E\", done, this.description, formattedFrom, formattedTo);","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"s0ngyang"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"s0ngyang":42}},{"path":"src/main/java/nexus/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s0ngyang"},"content":"package nexus.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"s0ngyang"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"s0ngyang"},"content":" * Parent class Task for the different tasks to be stored.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"s0ngyang"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"s0ngyang"},"content":"public abstract class Task {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"s0ngyang"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"s0ngyang"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"s0ngyang"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"s0ngyang"},"content":"     * Create task from description.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"s0ngyang"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"s0ngyang"},"content":"     * @param description String.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"s0ngyang"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"s0ngyang"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"s0ngyang"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"s0ngyang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"s0ngyang"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"s0ngyang"},"content":"     * Getter to check if task is done.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"s0ngyang"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"s0ngyang"},"content":"     * @return String to represent if task is done.","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"s0ngyang"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"s0ngyang"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"s0ngyang"},"content":"        return (isDone ? \"X\" : \" \"); // mark done Nexus.task with X","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"s0ngyang"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"s0ngyang"},"content":"     * Getter for task description.","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"s0ngyang"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"s0ngyang"},"content":"     * @return String","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"s0ngyang"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"s0ngyang"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"s0ngyang"},"content":"        return this.description;","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"s0ngyang"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"s0ngyang"},"content":"     * Marks task as done.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"s0ngyang"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"s0ngyang"},"content":"    public void setDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"s0ngyang"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"s0ngyang"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"s0ngyang"},"content":"     * Marks task as not done.","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"s0ngyang"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"s0ngyang"},"content":"    public void setUndone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"s0ngyang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":51,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":52,"author":{"gitId":"s0ngyang"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"s0ngyang"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"s0ngyang"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"s0ngyang"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"s0ngyang"},"content":"     * Abstract method to convert Task to store on local storage.","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"s0ngyang"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"s0ngyang"},"content":"     * @return String to be stored on hard disk.","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"s0ngyang"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"s0ngyang"},"content":"    public abstract String toStorageString();","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"s0ngyang"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"s0ngyang":63}},{"path":"src/main/java/nexus/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s0ngyang"},"content":"package nexus.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"s0ngyang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"s0ngyang"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"s0ngyang"},"content":" * Class that contains all the tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"s0ngyang"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"s0ngyang"},"content":"public class TaskList {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"s0ngyang"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"s0ngyang"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"s0ngyang"},"content":"     * Create TaskList given a list.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"s0ngyang"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"s0ngyang"},"content":"     * @param list ArrayList.","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"s0ngyang"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"s0ngyang"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"s0ngyang"},"content":"        this.list \u003d list;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"s0ngyang"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"s0ngyang"},"content":"     * Getter for tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"s0ngyang"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"s0ngyang"},"content":"     * @param index Index of the task.","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"s0ngyang"},"content":"     * @return The task retrieved.","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"s0ngyang"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"s0ngyang"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"s0ngyang"},"content":"        return this.list.get(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"s0ngyang"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"s0ngyang"},"content":"     * Get the size of the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"s0ngyang"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"s0ngyang"},"content":"     * @return An int that is the size of list.","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"s0ngyang"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"s0ngyang"},"content":"    public int size() {","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"s0ngyang"},"content":"        return this.list.size();","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"s0ngyang"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"s0ngyang"},"content":"     * Add task.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"s0ngyang"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"s0ngyang"},"content":"     * @param task Task to be added.","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"s0ngyang"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"s0ngyang"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"s0ngyang"},"content":"        this.list.add(task);","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"s0ngyang"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"s0ngyang"},"content":"     * Remove task.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"s0ngyang"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"s0ngyang"},"content":"     * @param index Index of task to be removed.","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"s0ngyang"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"s0ngyang"},"content":"    public void remove(int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"s0ngyang"},"content":"        this.list.remove(index);","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"s0ngyang"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"s0ngyang":56}},{"path":"src/main/java/nexus/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s0ngyang"},"content":"package nexus.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"s0ngyang"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"s0ngyang"},"content":" * Todo class that has description.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"s0ngyang"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"s0ngyang"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"s0ngyang"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"s0ngyang"},"content":"     * Creates task.","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"s0ngyang"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"s0ngyang"},"content":"     * @param description String.","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"s0ngyang"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"s0ngyang"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"s0ngyang"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"s0ngyang"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"s0ngyang"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"s0ngyang"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"s0ngyang"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"s0ngyang"},"content":"    public String toStorageString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"s0ngyang"},"content":"        String done \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"s0ngyang"},"content":"        return String.join(\"|\", \"T\", done, this.description);","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"s0ngyang"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"s0ngyang":26}},{"path":"src/test/data/nexus.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"s0ngyang"},"content":"todo|0|kms","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"s0ngyang"},"content":"deadline|0|2103 w3|4/9/2023 2359","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"s0ngyang"},"content":"event|1|vote for PE|1/9/2023 0800|1/9/2023 2000","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"s0ngyang":3}},{"path":"src/test/java/nexus/NexusTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s0ngyang"},"content":"package nexus;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"s0ngyang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"s0ngyang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"s0ngyang"},"content":"public class NexusTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"s0ngyang"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"s0ngyang"},"content":"    public void dummyTest(){","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"s0ngyang"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"s0ngyang"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"s0ngyang"},"content":"    public void anotherDummyTest(){","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"s0ngyang"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"s0ngyang"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"s0ngyang":16}},{"path":"src/test/java/nexus/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s0ngyang"},"content":"package nexus.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"s0ngyang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"s0ngyang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"s0ngyang"},"content":"import java.time.Month;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"s0ngyang"},"content":"import java.time.chrono.ChronoLocalDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"s0ngyang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"s0ngyang"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"s0ngyang"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"s0ngyang"},"content":"    public void testDeadline() {","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"s0ngyang"},"content":"        Deadline deadline \u003d new Deadline(\"2103 tut\", LocalDateTime.of(2023, Month.JANUARY, 15, 20, 30));","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"s0ngyang"},"content":"        deadline.setDone();","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"s0ngyang"},"content":"        assertEquals(\"[D][X] 2103 tut (by: 15 Jan 2023 2030)\", deadline.toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"s0ngyang"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"s0ngyang"},"content":"    public void testTodoStorage() {","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"s0ngyang"},"content":"        Deadline deadline \u003d new Deadline(\"2103 tut\", LocalDateTime.of(2023, Month.JANUARY, 15, 20, 30));","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"s0ngyang"},"content":"        deadline.setDone();","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"s0ngyang"},"content":"        assertEquals(\"D|1|2103 tut|15/1/2023 2030\", deadline.toStorageString());","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"s0ngyang"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"s0ngyang":25}},{"path":"src/test/java/nexus/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"s0ngyang"},"content":"package nexus.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"s0ngyang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"s0ngyang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"s0ngyang"},"content":"public class TodoTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"s0ngyang"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"s0ngyang"},"content":"    public void testTodo() {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"s0ngyang"},"content":"        Todo todo \u003d new Todo(\"2103 tut\");","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"s0ngyang"},"content":"        todo.setDone();","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"s0ngyang"},"content":"        assertEquals(\"[T][X] 2103 tut\", todo.toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"s0ngyang"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"s0ngyang"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"s0ngyang"},"content":"    public void testTodoStorage() {","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"s0ngyang"},"content":"        Todo todo \u003d new Todo(\"2103 tut\");","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"s0ngyang"},"content":"        todo.setDone();","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"s0ngyang"},"content":"        assertEquals(\"T|1|2103 tut\", todo.toStorageString());","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"s0ngyang"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"s0ngyang"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"s0ngyang":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"s0ngyang"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"s0ngyang"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"s0ngyang"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"s0ngyang":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"s0ngyang"},"content":"java -classpath ..\\bin nexus.nexus \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"s0ngyang":1,"-":20}}]
