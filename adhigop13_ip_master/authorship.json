[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":32,"adhigop13":1}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"E|0|add|2100-12-12 12:12|2100-12-13 12:15","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"D|0|hello|1212-12-12 12:12","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"D|0|add|1313-12-12 13:13","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"T|0|do this","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"D|0|add|1212-12-12 12:12","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"E|1|add|1212-12-12 12:12|1313-12-13 13:13","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"adhigop13":6}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"import dukeUiElements.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"    public TaskList taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"    public static Path pathOfDirectory \u003d Paths.get(\"./data/duke.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"    ;       //enum that stores all important constants","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"        ui \u003d new Ui ();","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"            Storage.readFromDisk(pathOfDirectory, TaskList.storeTask);","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"            System.out.println(\"An error occurred...\");","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"    public void run() {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"        ui.showGreeting();","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"        Scanner userInputObject \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"        while (true) {","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"            ui.userInputUsher();","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"            String userInput \u003d userInputObject.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"adhigop13"},"content":"                boolean isBreak \u003d Parser.parse(userInput);","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"adhigop13"},"content":"                if (!isBreak) {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"adhigop13"},"content":"                    break;","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"adhigop13"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"adhigop13"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"adhigop13"},"content":"                System.out.println(Ui.indent + \"Invalid character input\");","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"adhigop13"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"adhigop13"},"content":"                System.out.println(Ui.indent + \"Error: \" + e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"adhigop13"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"adhigop13"},"content":"                System.out.println(Ui.indent + \"Invalid entry / Task not in list... Please try again...\");","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"adhigop13"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"adhigop13"},"content":"                System.out.println(\"☹ OOPS!!! Sorry, but i do not know what that means :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"adhigop13"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"adhigop13"},"content":"        new Duke(\"/data/duke.txt\").run();","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"-":2,"adhigop13":58}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"adhigop13":6}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"import dukeUiElements.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"import java.util.ListIterator;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"    public enum TaskKeyVal {ToDo, Deadline, Event, Delete, mark, unmark, bye, list};","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"    public static boolean parse(String userInput) throws DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"        String[] userInputList \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"        String userTaskChoiceKey \u003d userInputList[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"        TaskKeyVal taskKeyVal \u003d TaskKeyVal.valueOf(userTaskChoiceKey);              //Stores enum value. might throw exception if invalid input entered.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"        if (taskKeyVal \u003d\u003d TaskKeyVal.bye) {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"            userExit();","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"            return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"        } else if (taskKeyVal \u003d\u003d TaskKeyVal.list) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"            TaskList.userListChoice();","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"            return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"        } else if (taskKeyVal \u003d\u003d TaskKeyVal.mark || taskKeyVal \u003d\u003d TaskKeyVal.unmark) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"            String userMarkerChoice \u003d userInputList[1];","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"            TaskList.userMarkUnmark(userMarkerChoice, userTaskChoiceKey);","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"            return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"        } else if (userInputList.length \u003d\u003d 1 \u0026\u0026 enumCheck(userTaskChoiceKey)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"            throw new DukeException(\" ☹ OOPS!!! The description of a task cannot be empty.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"        } else if (taskKeyVal \u003d\u003d TaskKeyVal.ToDo) {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"            TaskList.addToDo(userInputList[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"            return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"        } else if (taskKeyVal \u003d\u003d TaskKeyVal.Deadline) {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"            String[] deadlineList \u003d userInputList[1].split(\"/\", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"            TaskList.addDeadline(deadlineList[0], deadlineList[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"            return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"        } else if (taskKeyVal \u003d\u003d TaskKeyVal.Event) {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"            String[] eventList \u003d userInputList[1].split(\"/\", 3);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"adhigop13"},"content":"            TaskList.addEvent(eventList[0], eventList[1], eventList[2]);","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"adhigop13"},"content":"            return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"adhigop13"},"content":"        } else if (taskKeyVal \u003d\u003d TaskKeyVal.Delete) {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"adhigop13"},"content":"            Integer delUserChoice \u003d Integer.parseInt(userInputList[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"adhigop13"},"content":"            TaskList.deleteTask(delUserChoice);","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"adhigop13"},"content":"            return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"adhigop13"},"content":"        } else {                                                                    //in case wrong input like Delete abc entered","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"adhigop13"},"content":"            throw new DukeException(\"☹ OOPS!!! Sorry, but i do not know what that means :-(\");","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"adhigop13"},"content":"    public static boolean enumCheck (String input){","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"adhigop13"},"content":"        for (TaskKeyVal taskKey : TaskKeyVal.values()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"adhigop13"},"content":"            if (taskKey.name().equalsIgnoreCase(input)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"adhigop13"},"content":"                return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"adhigop13"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"adhigop13"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"adhigop13"},"content":"    public static void userExit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"adhigop13"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"adhigop13"},"content":"            Files.write(Duke.pathOfDirectory, new byte[0], StandardOpenOption.TRUNCATE_EXISTING);    //closes file and truncates it","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"adhigop13"},"content":"            for (int i \u003d 0; i \u003c TaskList.storeTask.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"adhigop13"},"content":"                String taskToString \u003d TaskList.storeTask.get(i).storeToDiskFormat() + \"\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"adhigop13"},"content":"                Files.write(Duke.pathOfDirectory, taskToString.getBytes(), StandardOpenOption.APPEND);","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"adhigop13"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"adhigop13"},"content":"            Ui.endDukeMsg();","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"adhigop13"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"adhigop13"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"adhigop13"},"content":"            System.out.println(\"An error occurred...\");","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"adhigop13":72}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"import task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"import task.ToDo;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"import task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"import task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"import java.util.List;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"    public static void readFromDisk(Path pathOfDirectory, ArrayList\u003cTask\u003e storeTask) throws IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"        Files.createDirectories(pathOfDirectory.getParent());","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"        if (Files.exists(pathOfDirectory)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"            System.out.println(\"Please wait while your file opens...\");","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"            List\u003cString\u003e fileLines \u003d Files.readAllLines(pathOfDirectory);","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"            for (String task : fileLines) {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"                String[] taskVariablesTemp \u003d task.split(\"\\\\|\");     //since \"|\" is a special character, use \"//\"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"                if (taskVariablesTemp[0].equals(\"T\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"                    storeTask.add(new ToDo(Integer.parseInt(taskVariablesTemp[1]), taskVariablesTemp[2]));","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"                } else if (taskVariablesTemp[0].equals(\"D\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"                    storeTask.add(new Deadline(Integer.parseInt(taskVariablesTemp[1]), taskVariablesTemp[2], taskVariablesTemp[3]));","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"                } else if (taskVariablesTemp[0].equals(\"E\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"                    storeTask.add(new Event(Integer.parseInt(taskVariablesTemp[1]), taskVariablesTemp[2], taskVariablesTemp[3], taskVariablesTemp[4]));","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"                else {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"                    System.out.println(\"Error...\");","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"            System.out.println(\"Your file does not exist. Creating...\");","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"            Files.createFile(pathOfDirectory);","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"            System.out.println(\"File created.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"adhigop13":38}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"import dukeUiElements.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"import task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"import task.ToDo;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"import task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"import task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"import java.util.ListIterator;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"public class TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"    public static ArrayList\u003cTask\u003e storeTask \u003d new ArrayList\u003c\u003e(1);   //stores all the tasks. refer to child classes of task","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"    public static void userListChoice() {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"        ListIterator\u003cTask\u003e ls \u003d storeTask.listIterator();","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"        Ui.printList(ls);","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"    public static void userMarkUnmark(String taskNumber, String userMarkerChoice) {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"        Task taskItem \u003d storeTask.get(Integer.parseInt(taskNumber) - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"        System.out.println(Ui.indent + taskItem.changeStatus(userMarkerChoice));","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"    public static void addToDo(String userDescription) {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"        storeTask.add(new ToDo(userDescription));","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"        Ui.printNumberOfEntries();","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"    public static void addDeadline(String userDescription, String deadlineBy) {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"            storeTask.add(new Deadline(userDescription, deadlineBy));","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"            Ui.printNumberOfEntries();","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"            Ui.invalidDateTimeEntry();","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"    public static void addEvent(String userDescription, String from, String to) {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"            storeTask.add(new Event(userDescription, from, to));","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"            Ui.printNumberOfEntries();","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"adhigop13"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"adhigop13"},"content":"            Ui.invalidDateTimeEntry();","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"adhigop13"},"content":"    public static void deleteTask(int delUserChoice) throws DukeException{","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"adhigop13"},"content":"        if ((delUserChoice - 1) \u003c 0) {                                          //if number entered smaller than 1, array will go negative index.","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"adhigop13"},"content":"            throw new DukeException(\"Invalid Task entered. Please try again...\");","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"adhigop13"},"content":"        } else if (storeTask.isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"adhigop13"},"content":"            throw new DukeException(\"Task Scheduler is empty... Please try again!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"adhigop13"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"adhigop13"},"content":"            Task itemRemoved \u003d storeTask.remove(delUserChoice - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"adhigop13"},"content":"            System.out.println(Ui.indent + \"This task was removed...\" + \"\\n\" + itemRemoved);","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"adhigop13"},"content":"            System.out.println(Ui.indent + \"Now you have \" + storeTask.size() + \" tasks in your task scheduler...\");","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"adhigop13":53}},{"path":"src/main/java/dukeUiElements/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package dukeUiElements;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"import task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"import task.ToDo;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"import task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"import task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"import java.util.ListIterator;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"import java.util.Map;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"    public static String indent \u003d \"     \";","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"    public static String horizontalLine \u003d \"-\".repeat(22);","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"    static Map\u003cString, String\u003e hashMap \u003d Map.of(","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"            \"endMessage\", \"Bye. Hope to see you again soon!\",","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"            \"endVal\", \"bye\",","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"            \"listVal\", \"list\");","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"    public void showGreeting() {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"        System.out.println(indent + horizontalLine);                                        //Helps with readability","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"        System.out.println(indent + \"Hello! I\u0027m Tom!\" + \"\\n\" + indent + \"What can I do for you?\" + \"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"        System.out.println(indent + horizontalLine);","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"    public void userInputUsher() {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"        System.out.println(indent + \"What would you like to do next? Enter date in yyyy-mm-dd hh:mm format: \");","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"    public static void endDukeMsg() {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"        System.out.println(\"\\n\" + indent + hashMap.get(\"endMessage\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"    public static void printList(ListIterator\u003cTask\u003e ls) {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"        System.out.println(\"\\n\" + indent + \"Entries on memory...\");","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"        while (ls.hasNext()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"            count++;","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"            System.out.println(indent + count + \".\" + ls.next().toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"adhigop13"},"content":"    public static void printNumberOfEntries() {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"adhigop13"},"content":"        System.out.println(Ui.indent + \"Now you have \" + TaskList.storeTask.size() + \" tasks in your task scheduler...\");","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"adhigop13"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"adhigop13"},"content":"    public static void printHorizontalLine() {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"adhigop13"},"content":"        System.out.println(indent + horizontalLine);","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"adhigop13"},"content":"    public static void invalidDateTimeEntry() {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"adhigop13"},"content":"        System.out.println(\"Invalid date/time entry. Please give in yyyy-mm-dd hh:mm format...\");","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"adhigop13":53}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"    private String deadlineBy;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"    private LocalDateTime deadlineInDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"    public Deadline(String description, String deadlineBy) {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"        this.deadlineBy \u003d deadlineBy;","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"        this.deadlineInDateTime \u003d formatDateAndTime(deadlineBy);","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"    public Deadline(int status, String description, String deadlineBy) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"        super(description, status !\u003d 0);     //if 0, return false, else return true","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"        this.deadlineBy \u003d deadlineBy;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"        this.deadlineInDateTime \u003d formatDateAndTime(deadlineBy);","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"    public String storeToDiskFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"        return \"D\" + \"|\" + this.getStatus() + \"|\" + this.getDescription() + \"|\" + this.deadlineBy;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + printDateTimeFormat(deadlineInDateTime) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"adhigop13":30}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"    private String from;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"    private String to;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"    private LocalDateTime fromDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"    private LocalDateTime toDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"        this.fromDateTime \u003d formatDateAndTime(from);","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"        this.toDateTime \u003d formatDateAndTime(to);","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"    public Event(int status, String desciption, String from, String to) {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"        super(desciption, status !\u003d 0);     //if 0, return false, else return true","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"        this.fromDateTime \u003d formatDateAndTime(from);","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"        this.toDateTime \u003d formatDateAndTime(to);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"    public String storeToDiskFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"        return \"E\" + \"|\" + this.getStatus() + \"|\" + this.getDescription() + \"|\" + this.from + \"|\" + this.to;","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + printDateTimeFormat(this.fromDateTime) + \" to: \" + printDateTimeFormat(this.toDateTime) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"adhigop13":36}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"import java.util.zip.DataFormatException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"    private String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"    private boolean status;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"    private String indent \u003d \"    \";","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"        this.status \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"    public Task(String description, boolean status) {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"    public String changeStatus(String userInput) {","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"        if (!this.status \u0026\u0026 userInput.equals(\"mark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"            this.status \u003d !this.status;","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"            return \"Nice! Task completed successfully!\" + \"\\n\" + indent + this.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"        } else if (!this.status \u0026\u0026 userInput.equals(\"unmark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"            return \"Task already unmarked! Please try again...\" + \"\\n\" + indent + this.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"        } else if (this.status \u0026\u0026 userInput.equals(\"unmark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"            this.status \u003d !this.status;","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"            return \"Sure! Task status unchecked!\" + \"\\n\" + indent + this.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"            return \"Task already unchecked. Please try again...\" + \"\\n\" + indent + this.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"adhigop13"},"content":"    public LocalDateTime formatDateAndTime(String userDateAndTime) throws DateTimeParseException {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"adhigop13"},"content":"        DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"adhigop13"},"content":"        return LocalDateTime.parse(userDateAndTime, inputFormat);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"adhigop13"},"content":"    public String printDateTimeFormat(LocalDateTime systemDateAndTime) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"adhigop13"},"content":"        DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd, yyyy HH:mm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"adhigop13"},"content":"        return systemDateAndTime.format(outputFormat);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"adhigop13"},"content":"    public int getStatus() {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"adhigop13"},"content":"        return this.status ? 1 : 0;","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"adhigop13"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"adhigop13"},"content":"        return this.description;","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"adhigop13"},"content":"    public void storeDescription(String description) {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"adhigop13"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"adhigop13"},"content":"    public String storeToDiskFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"adhigop13"},"content":"        return this.getStatus() + \"|\" + this.description;","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"adhigop13"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"adhigop13"},"content":"        if (this.getStatus() \u003d\u003d 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"adhigop13"},"content":"            return \"[\" + \"X\" + \"] \" + this.description;","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"adhigop13"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"adhigop13"},"content":"            return \"[\" + \" \" + \"]\" + this.description;","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"adhigop13":69}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"    public ToDo(int status, String description) {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"        super(description, status !\u003d 0);     //if 0, return false, else return true","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"    public String storeToDiskFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"        return \"T\" + \"|\" + this.getStatus() + \"|\" + this.getDescription();","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"adhigop13":22}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"    public void invalidInputKeywordTester() throws Exception {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"            assertEquals(true, Parser.parse(\"Dont do this\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"            assertEquals(\"No enum constant duke.Parser.TaskKeyVal.Dont\", e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"    public void noUserDirectedInput() throws Exception {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"            assertEquals(true, Parser.parse(\"Delete\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"            assertEquals(\" ☹ OOPS!!! The description of a task cannot be empty.\", e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"adhigop13":24}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"    public void invalidDeleteCharacterInput() throws Exception {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"            TaskList.deleteTask(-1231);","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"            assertEquals(\"Invalid Task entered. Please try again...\", e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"adhigop13":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"task","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"ToDo play football","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"task","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"Deadline finish hw/10pm","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"task","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"Event attend lecture/2pm/4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"adhigop13":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"pause","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"-":21,"adhigop13":1}}]
