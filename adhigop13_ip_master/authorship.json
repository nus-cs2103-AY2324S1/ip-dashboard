[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"    private String deadlineBy;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"    public Deadline(String description, String deadlineBy) {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"        this.deadlineBy \u003d deadlineBy;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadlineBy + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"adhigop13":16}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"import java.util.*;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"import java.util.Map;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"import java.util.ListIterator;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"import java.util.Scanner;  // Import the Scanner class","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"    public static String indent \u003d \"     \";","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"    public static String horizontalLine \u003d \"-\".repeat(22);","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"        Map\u003cString, String\u003e hashMap \u003d Map.of(","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"                \"endMessage\", \"Bye. Hope to see you again soon!\",","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"                \"endVal\", \"bye\",","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"                \"listVal\", \"list\",","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"                \"markAsDone\", \"mark\",","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"                \"unmarkAsDone\", \"unmark\",","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"                \"addTask\", \"task\" );","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"        List\u003cString\u003e taskKeyVal \u003d new ArrayList\u003c\u003e(Arrays.asList(\"ToDo\", \"Deadline\", \"Event\"));","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"        ArrayList\u003cTask\u003e storeTask \u003d new ArrayList(1);","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"        System.out.println(indent + horizontalLine);","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"        System.out.println(indent + \"Hello! I\u0027m Tom!\" + \"\\n\" + indent + \"What can I do for you?\" + \"\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"        System.out.println(indent + horizontalLine);","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"        Scanner userInputObject \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"        while (true) {","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"            System.out.println(indent + \"What would you like to do next? : \");","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"            String userInput \u003d userInputObject.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"            String[] userInputList \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"                if (userInput.equals(hashMap.get(\"endVal\"))) {","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"                    System.out.println(\"\\n\" + indent + hashMap.get(\"endMessage\"));","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"                    break;","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"                } else if (userInput.equals(hashMap.get(\"listVal\"))) {","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"                    int count \u003d 0;","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"                    ListIterator\u003cTask\u003e ls \u003d storeTask.listIterator();","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"                    System.out.println(\"\\n\" + indent + \"Entries on memory...\");","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"                    while (ls.hasNext()) {","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"                        count++;","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"adhigop13"},"content":"                        System.out.println(indent + count + \".\" + ls.next().toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"adhigop13"},"content":"                    }","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"adhigop13"},"content":"                } else if (userInputList[0].equals(hashMap.get(\"markAsDone\")) || userInputList[0].equals(hashMap.get(\"unmarkAsDone\"))) {","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"adhigop13"},"content":"                    String taskNumber \u003d userInputList[1];","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"adhigop13"},"content":"                    Task taskItem \u003d storeTask.get(Integer.parseInt(taskNumber) - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"adhigop13"},"content":"                    System.out.println(indent + taskItem.changeStatus(userInputList[0]));","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"adhigop13"},"content":"                } else if (userInput.equals(hashMap.get(\"addTask\"))) {","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"adhigop13"},"content":"                    System.out.println(indent + \"What task would you like to add? : \");","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"adhigop13"},"content":"                    String userTaskChoice \u003d userInputObject.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"adhigop13"},"content":"                    String[] userTaskChoiceList \u003d userTaskChoice.split(\" \", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"adhigop13"},"content":"                    String userTaskChoiceKey \u003d userTaskChoiceList[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"adhigop13"},"content":"                    if (userTaskChoiceList.length \u003d\u003d 1 \u0026\u0026 taskKeyVal.contains(userTaskChoiceKey)) {","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"adhigop13"},"content":"                        throw new DukeException(\" â˜¹ OOPS!!! The description of a task cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"adhigop13"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"adhigop13"},"content":"                    else if (userTaskChoiceList[0].equals(\"ToDo\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"adhigop13"},"content":"                        storeTask.add(new ToDo(userTaskChoiceList[1]));","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"adhigop13"},"content":"                        System.out.println(indent + \"Now you have \" + storeTask.size() + \" tasks in your task scheduler...\");","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"adhigop13"},"content":"                        System.out.println(indent + horizontalLine);","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"adhigop13"},"content":"                    } else if (userTaskChoiceList[0].equals(\"Deadline\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":57,"author":{"gitId":"adhigop13"},"content":"                        String[] deadlineList \u003d userTaskChoiceList[1].split(\"/\", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"adhigop13"},"content":"                        storeTask.add(new Deadline(deadlineList[0], deadlineList[1]));","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"adhigop13"},"content":"                        System.out.println(indent + \"Now you have \" + storeTask.size() + \" tasks in your task scheduler...\");","lastModifiedDate":"2023-08-23"},{"lineNumber":60,"author":{"gitId":"adhigop13"},"content":"                        System.out.println(indent + horizontalLine);","lastModifiedDate":"2023-08-23"},{"lineNumber":61,"author":{"gitId":"adhigop13"},"content":"                    } else if (userTaskChoiceList[0].equals(\"Event\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":62,"author":{"gitId":"adhigop13"},"content":"                        String[] eventList \u003d userTaskChoiceList[1].split(\"/\", 3);","lastModifiedDate":"2023-08-23"},{"lineNumber":63,"author":{"gitId":"adhigop13"},"content":"                        storeTask.add(new Event(eventList[0], eventList[1], eventList[2]));","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"adhigop13"},"content":"                        System.out.println(indent + \"Now you have \" + storeTask.size() + \" tasks in your task scheduler...\");","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"adhigop13"},"content":"                        System.out.println(indent + horizontalLine);","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"adhigop13"},"content":"                    } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"adhigop13"},"content":"                        throw new DukeException(\"â˜¹ OOPS!!! Sorry, but i do not know what that means :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"adhigop13"},"content":"                    }","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"adhigop13"},"content":"                } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"adhigop13"},"content":"                    throw new DukeException(\"â˜¹ OOPS!!! Sorry, but i do not know what that means :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"adhigop13"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":72,"author":{"gitId":"adhigop13"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"adhigop13"},"content":"            catch (DukeException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"adhigop13"},"content":"                System.out.println(\"Error\" + e.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"-":6,"adhigop13":73}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"adhigop13":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"    private String from;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"    private String to;","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"adhigop13":18}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"    private String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"    private boolean status;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"    private String indent \u003d \"    \";","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"        this.status \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"    public String getStatus() {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"        return this.status ? \"X\" : \" \";","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"    public String changeStatus(String userInput) {","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"        if (!this.status \u0026\u0026 userInput.equals(\"mark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"            this.status \u003d !this.status;","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"            return \"Nice! Task completed successfully!\" + \"\\n\" + indent + this.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"        } else if (!this.status \u0026\u0026 userInput.equals(\"unmark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"            return \"Task already unmarked! Please try again...\" + \"\\n\" + indent + this.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"        } else if (this.status \u0026\u0026 userInput.equals(\"unmark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"            this.status \u003d !this.status;","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"            return \"Sure! Task status unchecked!\" + \"\\n\" + indent + this.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"            return \"Task already unchecked. Please try again...\" + \"\\n\" + indent + this.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"        return \"[\" + this.getStatus() + \"] \" + this.description;","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"adhigop13":34}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"adhigop13":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"task","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"ToDo play football","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"task","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"Deadline finish hw/10pm","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"task","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"Event attend lecture/2pm/4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"adhigop13":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"pause","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"-":21,"adhigop13":1}}]
