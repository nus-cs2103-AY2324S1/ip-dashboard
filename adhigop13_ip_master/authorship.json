[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"checkstyle {","lastModifiedDate":"2023-09-14"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.8.1\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine:5.8.1\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"jar {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"    manifest {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"        attributes(","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"                \u0027Main-Class\u0027: \u0027duke.Duke\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"adhigop13"},"content":"        )","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"adhigop13"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"adhigop13"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"adhigop13":27}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"E|1|add|2100-12-12 12:12|2100-12-13 12:15","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"D|0|hello|1212-12-12 12:12","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"D|0|add|1313-12-12 13:13","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"D|0|add|1212-12-12 12:12","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"E|1|add|1212-12-12 12:12|1313-12-13 13:13","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"T|0|adsfa","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"D|0|asdf|1212-12-12 12:12","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"T|0|add","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"D|0|add|1231-12-12 12:12","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"adhigop13":9}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"/**","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":" */","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"        try {","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-16"},{"lineNumber":38,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"adhigop13"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"adhigop13"},"content":"    private void flip() {","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"adhigop13"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"adhigop13"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-16"},{"lineNumber":46,"author":{"gitId":"adhigop13"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-16"},{"lineNumber":47,"author":{"gitId":"adhigop13"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-16"},{"lineNumber":48,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"adhigop13"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-16"},{"lineNumber":51,"author":{"gitId":"adhigop13"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-16"},{"lineNumber":52,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"adhigop13"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-16"},{"lineNumber":55,"author":{"gitId":"adhigop13"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-16"},{"lineNumber":56,"author":{"gitId":"adhigop13"},"content":"        db.flip();","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"adhigop13"},"content":"        return db;","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"adhigop13"},"content":"    public static DialogBox greetingDialogBox(Image iv) {","lastModifiedDate":"2023-09-16"},{"lineNumber":61,"author":{"gitId":"adhigop13"},"content":"        String greeting \u003d \"Welcome! I am Tom!\";","lastModifiedDate":"2023-09-16"},{"lineNumber":62,"author":{"gitId":"adhigop13"},"content":"        var duke \u003d new DialogBox(greeting, iv);","lastModifiedDate":"2023-09-16"},{"lineNumber":63,"author":{"gitId":"adhigop13"},"content":"        duke.flip();","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"adhigop13"},"content":"        return duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"adhigop13":67}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"import dukeuielements.Ui;","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"public class Duke {","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"    public static Path pathOfDirectory \u003d Paths.get(\"./data/duke.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"    public Duke() {","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"        assert ui !\u003d null;","lastModifiedDate":"2023-09-15"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"            Storage.readFromDisk(pathOfDirectory, TaskList.getStoreTask());","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"            String dukeResponse \u003d Parser.parse(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"            assert dukeResponse !\u003d null;","lastModifiedDate":"2023-09-15"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"            if (dukeResponse.equals(\"bye\")) {","lastModifiedDate":"2023-09-14"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"                return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"            } else {","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"                return dukeResponse;","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"            return \"Invalid character input\";","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"            return \"Invalid entry / Task not in list... Please try again...\";","lastModifiedDate":"2023-09-16"},{"lineNumber":38,"author":{"gitId":"adhigop13"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"adhigop13"},"content":"            return \"OOPS!!! Sorry, but i do not know what that means :-(\";","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"adhigop13":44}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"adhigop13":6}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"public class Launcher {","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"adhigop13":9}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package duke;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"/**","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":" */","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"        try {","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"            stage.show();","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"adhigop13":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package duke;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"/**","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":" */","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"        dialogContainer.getChildren().add(DialogBox.greetingDialogBox(dukeImage));","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":38,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":39,"author":{"gitId":"adhigop13"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-16"},{"lineNumber":40,"author":{"gitId":"adhigop13"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-16"},{"lineNumber":41,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":42,"author":{"gitId":"adhigop13"},"content":"    @FXML","lastModifiedDate":"2023-09-16"},{"lineNumber":43,"author":{"gitId":"adhigop13"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-16"},{"lineNumber":44,"author":{"gitId":"adhigop13"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-16"},{"lineNumber":45,"author":{"gitId":"adhigop13"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-16"},{"lineNumber":46,"author":{"gitId":"adhigop13"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-16"},{"lineNumber":47,"author":{"gitId":"adhigop13"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-16"},{"lineNumber":48,"author":{"gitId":"adhigop13"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-16"},{"lineNumber":49,"author":{"gitId":"adhigop13"},"content":"        );","lastModifiedDate":"2023-09-16"},{"lineNumber":50,"author":{"gitId":"adhigop13"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-16"},{"lineNumber":51,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":52,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"adhigop13":52}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"import dukeuielements.Ui;","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":" * This class deals with making sense of the user input and carrying out tasks accordingly.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"    public enum TaskKeyVal {ToDo, Deadline, Event, Delete, mark, unmark, bye, list, find};","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"     * Returns a boolean based on the user input choice.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"     * bye -\u003e initiates user exit.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"     * list -\u003e lists all the tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"     * mark -\u003e marks the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"     * unmark -\u003e unmarks the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"     * ToDo -\u003e creates a new ToDo and adds to task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"     * Deadline -\u003e creates a new Deadline and adds to task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"     * Event -\u003e creates a new Event and adds to task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"     * Delete -\u003e Deletes task at given number.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"     * @param userInput String value provided to be made sense of and carry task.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"     * @return boolean value false to break out of program, true otherwise.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"     * @throws DukeException when incorrect / invalid input is entered.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"    public static String parse(String userInput) throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"        String[] userInputList \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"        assert userInputList !\u003d null;","lastModifiedDate":"2023-09-15"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"        String userTaskChoiceKey \u003d userInputList[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"        //Stores enum value. might throw exception if invalid input entered.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"        TaskKeyVal taskKeyVal \u003d TaskKeyVal.valueOf(userTaskChoiceKey);","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"        switch (taskKeyVal) {","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"        case bye:","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"            return userExit();","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"adhigop13"},"content":"        case list:","lastModifiedDate":"2023-09-16"},{"lineNumber":39,"author":{"gitId":"adhigop13"},"content":"            return TaskList.userListChoice();","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"adhigop13"},"content":"        case mark:","lastModifiedDate":"2023-09-16"},{"lineNumber":41,"author":{"gitId":"adhigop13"},"content":"        case unmark:","lastModifiedDate":"2023-09-16"},{"lineNumber":42,"author":{"gitId":"adhigop13"},"content":"            String userMarkerChoice \u003d userInputList[1];","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"adhigop13"},"content":"            return TaskList.userMarkUnmark(userMarkerChoice, userTaskChoiceKey);","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"adhigop13"},"content":"        case ToDo:","lastModifiedDate":"2023-09-16"},{"lineNumber":45,"author":{"gitId":"adhigop13"},"content":"            return TaskList.addToDo(userInputList[1]);","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"adhigop13"},"content":"        case Deadline:","lastModifiedDate":"2023-09-16"},{"lineNumber":47,"author":{"gitId":"adhigop13"},"content":"            String[] deadlineList \u003d userInputList[1].split(\"/\", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"adhigop13"},"content":"            return TaskList.addDeadline(deadlineList[0], deadlineList[1]);","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"adhigop13"},"content":"        case Event:","lastModifiedDate":"2023-09-16"},{"lineNumber":50,"author":{"gitId":"adhigop13"},"content":"            String[] eventList \u003d userInputList[1].split(\"/\", 3);","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"adhigop13"},"content":"            return TaskList.addEvent(eventList[0], eventList[1], eventList[2]);","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"adhigop13"},"content":"        case Delete:","lastModifiedDate":"2023-09-16"},{"lineNumber":53,"author":{"gitId":"adhigop13"},"content":"            Integer delUserChoice \u003d Integer.parseInt(userInputList[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"adhigop13"},"content":"            return TaskList.deleteTask(delUserChoice);","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"adhigop13"},"content":"        case find:","lastModifiedDate":"2023-09-16"},{"lineNumber":56,"author":{"gitId":"adhigop13"},"content":"            String findThis \u003d userInputList[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"adhigop13"},"content":"            return TaskList.taskToBeFound(findThis);","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":59,"author":{"gitId":"adhigop13"},"content":"        default:","lastModifiedDate":"2023-09-16"},{"lineNumber":60,"author":{"gitId":"adhigop13"},"content":"            if (userInputList.length \u003d\u003d 1 \u0026\u0026 enumCheck(userTaskChoiceKey)) {","lastModifiedDate":"2023-09-16"},{"lineNumber":61,"author":{"gitId":"adhigop13"},"content":"                throw new DukeException(\" ☹ OOPS!!! The description of a task cannot be empty.\");","lastModifiedDate":"2023-09-16"},{"lineNumber":62,"author":{"gitId":"adhigop13"},"content":"            } else { //in case wrong input like Delete abc entered","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"adhigop13"},"content":"                throw new DukeException(\"OOPS!!! Sorry, but i do not know what that means :-(\");","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"adhigop13"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":67,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"adhigop13"},"content":"    private static boolean enumCheck(String input) {","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"adhigop13"},"content":"        for (TaskKeyVal taskKey : TaskKeyVal.values()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"adhigop13"},"content":"            if (taskKey.name().equalsIgnoreCase(input)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"adhigop13"},"content":"                return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"adhigop13"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"adhigop13"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"adhigop13"},"content":"    private static String userExit() {","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"adhigop13"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"adhigop13"},"content":"            Files.write(Duke.pathOfDirectory, new byte[0], StandardOpenOption.TRUNCATE_EXISTING); //closes file and truncates it","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"adhigop13"},"content":"            for (int i \u003d 0; i \u003c TaskList.getTaskSize(); i++) {","lastModifiedDate":"2023-09-08"},{"lineNumber":80,"author":{"gitId":"adhigop13"},"content":"                String taskToString \u003d TaskList.getStoreTask().get(i).storeToDiskFormat() + \"\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":81,"author":{"gitId":"adhigop13"},"content":"                Files.write(Duke.pathOfDirectory, taskToString.getBytes(), StandardOpenOption.APPEND);","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"adhigop13"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"adhigop13"},"content":"            return Ui.endDukeMsg();","lastModifiedDate":"2023-09-08"},{"lineNumber":84,"author":{"gitId":"adhigop13"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"adhigop13"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"adhigop13"},"content":"            return \"An error occurred...\";","lastModifiedDate":"2023-09-08"},{"lineNumber":87,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"adhigop13":89}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"import task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"import task.ToDo;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"import task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"import task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"import java.util.List;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":" * This class handles the data reads from Duke.txt file to load tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"     * Reads data from file and loads into ArrayList if available. Else creates the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"     * @param pathOfDirectory Path variable provided","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"     * @param storeTask ArrayList\u003cTask\u003e which stores tasks when program is running","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"     * @throws IOException if an I/O error occurs","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"    public static void readFromDisk(Path pathOfDirectory, ArrayList\u003cTask\u003e storeTask) throws IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"        Files.createDirectories(pathOfDirectory.getParent());","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"        handleFileAccess(pathOfDirectory, storeTask);","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"    private static void handleFileAccess(Path pathOfDirectory, ArrayList\u003cTask\u003e storeTask) throws IOException {","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"        if (Files.exists(pathOfDirectory)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"            readFromFile(pathOfDirectory, storeTask);","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"        } else {","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"            createNewFile(pathOfDirectory);","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"    private static void readFromFile(Path pathOfDirectory, ArrayList\u003cTask\u003e storeTask) throws IOException {","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"        List\u003cString\u003e fileLines \u003d Files.readAllLines(pathOfDirectory);","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"        for (String task : fileLines) {","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"adhigop13"},"content":"            //since \"|\" is a special character, use \"//\"","lastModifiedDate":"2023-09-16"},{"lineNumber":39,"author":{"gitId":"adhigop13"},"content":"            String[] taskVariablesTemp \u003d task.split(\"\\\\|\");","lastModifiedDate":"2023-09-16"},{"lineNumber":40,"author":{"gitId":"adhigop13"},"content":"            if (taskVariablesTemp[0].equals(\"T\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"adhigop13"},"content":"                storeTask.add(new ToDo(Integer.parseInt(taskVariablesTemp[1]), taskVariablesTemp[2]));","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"adhigop13"},"content":"            } else if (taskVariablesTemp[0].equals(\"D\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"adhigop13"},"content":"                storeTask.add(new Deadline(Integer.parseInt(taskVariablesTemp[1]), taskVariablesTemp[2], taskVariablesTemp[3]));","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"adhigop13"},"content":"            } else if (taskVariablesTemp[0].equals(\"E\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"adhigop13"},"content":"                storeTask.add(new Event(Integer.parseInt(taskVariablesTemp[1]), taskVariablesTemp[2], taskVariablesTemp[3], taskVariablesTemp[4]));","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"adhigop13"},"content":"            } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"adhigop13"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":51,"author":{"gitId":"adhigop13"},"content":"    private static void createNewFile(Path pathOfDirectory) throws IOException {","lastModifiedDate":"2023-09-16"},{"lineNumber":52,"author":{"gitId":"adhigop13"},"content":"        Files.createFile(pathOfDirectory);","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":55,"author":{"gitId":"adhigop13"},"content":"    private static void handleTaskTypes(String[] taskVariablesTemp, ArrayList\u003cTask\u003e storeTask) {","lastModifiedDate":"2023-09-16"},{"lineNumber":56,"author":{"gitId":"adhigop13"},"content":"        String taskType \u003d taskVariablesTemp[0];","lastModifiedDate":"2023-09-16"},{"lineNumber":57,"author":{"gitId":"adhigop13"},"content":"        switch(taskType) {","lastModifiedDate":"2023-09-16"},{"lineNumber":58,"author":{"gitId":"adhigop13"},"content":"        case \"T\":","lastModifiedDate":"2023-09-16"},{"lineNumber":59,"author":{"gitId":"adhigop13"},"content":"            storeTask.add(new ToDo(Integer.parseInt(taskVariablesTemp[1]), taskVariablesTemp[2]));","lastModifiedDate":"2023-09-16"},{"lineNumber":60,"author":{"gitId":"adhigop13"},"content":"            break;","lastModifiedDate":"2023-09-16"},{"lineNumber":61,"author":{"gitId":"adhigop13"},"content":"        case \"D\":","lastModifiedDate":"2023-09-16"},{"lineNumber":62,"author":{"gitId":"adhigop13"},"content":"            storeTask.add(new Deadline(Integer.parseInt(taskVariablesTemp[1]), taskVariablesTemp[2], taskVariablesTemp[3]));","lastModifiedDate":"2023-09-16"},{"lineNumber":63,"author":{"gitId":"adhigop13"},"content":"            break;","lastModifiedDate":"2023-09-16"},{"lineNumber":64,"author":{"gitId":"adhigop13"},"content":"        case \"E\":","lastModifiedDate":"2023-09-16"},{"lineNumber":65,"author":{"gitId":"adhigop13"},"content":"            storeTask.add(new Event(Integer.parseInt(taskVariablesTemp[1]), taskVariablesTemp[2], taskVariablesTemp[3], taskVariablesTemp[4]));","lastModifiedDate":"2023-09-16"},{"lineNumber":66,"author":{"gitId":"adhigop13"},"content":"            break;","lastModifiedDate":"2023-09-16"},{"lineNumber":67,"author":{"gitId":"adhigop13"},"content":"        default:","lastModifiedDate":"2023-09-16"},{"lineNumber":68,"author":{"gitId":"adhigop13"},"content":"            throw new IllegalStateException(\"Unexpected value: \" + taskType);","lastModifiedDate":"2023-09-16"},{"lineNumber":69,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":70,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"adhigop13":71}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"import dukeuielements.Ui;","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"import task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"import task.ToDo;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"import task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"import task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"import java.util.ListIterator;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":" * This class holds the ArrayList to load all the tasks. Contains important Task manipulation methods.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"public class TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"    //stores all the tasks","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"    private static ArrayList\u003cTask\u003e storeTask \u003d new ArrayList\u003c\u003e(1);","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"     * Displays the entire list of tasks to user.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"    public static String userListChoice() {","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"        ListIterator\u003cTask\u003e ls \u003d storeTask.listIterator();","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"        return Ui.printList(ls);","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"     * Marks or unmarks the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"     * @param taskNumber The task number to be marked/unmarked.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"     * @param userMarkerChoice User choice mark/unmark.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"    public static String userMarkUnmark(String taskNumber, String userMarkerChoice) {","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"        Task taskItem \u003d storeTask.get(Integer.parseInt(taskNumber) - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"        return taskItem.changeStatus(userMarkerChoice);","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"adhigop13"},"content":"     * Adds task with given description to ArrayList.","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"adhigop13"},"content":"     * @param userDescription Description attached to task.","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"adhigop13"},"content":"    public static String addToDo(String userDescription) {","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"adhigop13"},"content":"        storeTask.add(new ToDo(userDescription));","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"adhigop13"},"content":"        return Ui.printNumberOfEntries();","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"adhigop13"},"content":"     * Adds a new Deadline task to ArrayList.","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"adhigop13"},"content":"     * @param userDescription Description attached to Deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"adhigop13"},"content":"     * @param deadlineBy Deadline given in yyyy-mm-dd HH:mm format.","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"adhigop13"},"content":"    public static String addDeadline(String userDescription, String deadlineBy) {","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"adhigop13"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"adhigop13"},"content":"            storeTask.add(new Deadline(userDescription, deadlineBy));","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"adhigop13"},"content":"            return Ui.printNumberOfEntries();","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"adhigop13"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"adhigop13"},"content":"            return Ui.invalidDateTimeEntry();","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"adhigop13"},"content":"     * Adds a new Deadline task to ArrayList.","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"adhigop13"},"content":"     * @param userDescription Description attached to Event.","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"adhigop13"},"content":"     * @param from From Date \u0026 Time given in yyyy-mm-dd HH:mm format.","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"adhigop13"},"content":"     * @param to To Date \u0026 Time given in yyyy-mm-dd HH:mm format.","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"adhigop13"},"content":"    public static String addEvent(String userDescription, String from, String to) {","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"adhigop13"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"adhigop13"},"content":"            storeTask.add(new Event(userDescription, from, to));","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"adhigop13"},"content":"            return Ui.printNumberOfEntries();","lastModifiedDate":"2023-09-08"},{"lineNumber":73,"author":{"gitId":"adhigop13"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"adhigop13"},"content":"            return Ui.invalidDateTimeEntry();","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"adhigop13"},"content":"     * Deletes task from ArrayList.","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"adhigop13"},"content":"     * @param delUserChoice The task number to be deleted (based on number on list).","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"adhigop13"},"content":"     * @throws DukeException  If TaskList is empty or invalid selection by user.","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"adhigop13"},"content":"    public static String deleteTask(int delUserChoice) throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":85,"author":{"gitId":"adhigop13"},"content":"        if ((delUserChoice - 1) \u003c 0) { //if number entered smaller than 1, array will go negative index.","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"adhigop13"},"content":"            throw new DukeException(\"Invalid Task entered. Please try again...\");","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"adhigop13"},"content":"        } else if (storeTask.isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"adhigop13"},"content":"            throw new DukeException(\"Task Scheduler is empty... Please try again!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"adhigop13"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"adhigop13"},"content":"            Task itemRemoved \u003d storeTask.remove(delUserChoice - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"adhigop13"},"content":"            return Ui.deleteTaskPrint(itemRemoved);","lastModifiedDate":"2023-09-08"},{"lineNumber":92,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"adhigop13"},"content":"    public static String taskToBeFound(String findThis) {","lastModifiedDate":"2023-09-08"},{"lineNumber":95,"author":{"gitId":"adhigop13"},"content":"        ListIterator\u003cTask\u003e ls \u003d storeTask.listIterator();","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"adhigop13"},"content":"        ArrayList\u003cTask\u003e filteredList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"adhigop13"},"content":"        while (ls.hasNext()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"adhigop13"},"content":"            Task current \u003d ls.next();","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"adhigop13"},"content":"            String currentDescription \u003d current.getDescription();","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"adhigop13"},"content":"            if (currentDescription.contains(findThis)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"adhigop13"},"content":"                filteredList.add(current);","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"adhigop13"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"adhigop13"},"content":"        ListIterator\u003cTask\u003e iterFilteredList \u003d filteredList.listIterator();","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"adhigop13"},"content":"        if (filteredList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-02"},{"lineNumber":106,"author":{"gitId":"adhigop13"},"content":"            return Ui.emptyList();","lastModifiedDate":"2023-09-08"},{"lineNumber":107,"author":{"gitId":"adhigop13"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"adhigop13"},"content":"            return Ui.findTaskPrint(iterFilteredList);","lastModifiedDate":"2023-09-08"},{"lineNumber":109,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":111,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":112,"author":{"gitId":"adhigop13"},"content":"    public static ArrayList\u003cTask\u003e getStoreTask() {","lastModifiedDate":"2023-09-08"},{"lineNumber":113,"author":{"gitId":"adhigop13"},"content":"        return storeTask;","lastModifiedDate":"2023-09-08"},{"lineNumber":114,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":115,"author":{"gitId":"adhigop13"},"content":"    public static int getTaskSize() {","lastModifiedDate":"2023-09-08"},{"lineNumber":116,"author":{"gitId":"adhigop13"},"content":"        return storeTask.size();","lastModifiedDate":"2023-09-08"},{"lineNumber":117,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":118,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"adhigop13":118}},{"path":"src/main/java/dukeuielements/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package dukeuielements;","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"import task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"import java.util.ListIterator;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"    private static String indent \u003d \"     \";","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"    public static String printList(ListIterator\u003cTask\u003e ls) {","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"        String listString \u003d \"Entries on memory...\" + \"\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"        while (ls.hasNext()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"            count++;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"            listString \u003d listString + count + \".\" + ls.next().toString() + \"\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"        return listString;","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"    public static String printNumberOfEntries() {","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"        return Ui.indent + \"Now you have \" + TaskList.getTaskSize() + \" tasks in your task scheduler...\";","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"    public static String invalidDateTimeEntry() {","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"        return \"Invalid date/time entry. Please give in yyyy-mm-dd hh:mm format...\";","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"    public static String emptyList() {","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"        return \"Duke could not find your query! Please try again...\";","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"    public static String deleteTaskPrint(Task itemRemoved) {","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"        String removedTask \u003d indent + \"This task was removed...\" + \"\\n\" + itemRemoved + \"\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"        removedTask \u003d indent + \"Now you have \" + TaskList.getTaskSize() + \" tasks in your task scheduler...\";","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"        return removedTask;","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"    public static String findTaskPrint(ListIterator\u003cTask\u003e ls) {","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"        String findString \u003d indent + \"Tasks that may match your search result...\" + \"\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"        findString +\u003d printList(ls);","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"        return findString;","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"adhigop13"},"content":"    public static String miscMsgPrint(String msg) {","lastModifiedDate":"2023-09-16"},{"lineNumber":39,"author":{"gitId":"adhigop13"},"content":"        return msg;","lastModifiedDate":"2023-09-16"},{"lineNumber":40,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"adhigop13"},"content":"    public static String endDukeMsg() {","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"adhigop13"},"content":"        return \"bye\";","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"adhigop13":44}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":" * This class encapsulates a Deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"    private String deadlineBy;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"    private LocalDateTime deadlineInDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"    public Deadline(String description, String deadlineBy) {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"        this.deadlineBy \u003d deadlineBy;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"        this.deadlineInDateTime \u003d formatDateAndTime(deadlineBy);","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"    public Deadline(int status, String description, String deadlineBy) {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"        super(description, status !\u003d 0);     //if 0, return false, else return true","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"        this.deadlineBy \u003d deadlineBy;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"        this.deadlineInDateTime \u003d formatDateAndTime(deadlineBy);","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"    public String storeToDiskFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"        return \"D\" + \"|\" + this.getStatus() + \"|\" + this.getDescription() + \"|\" + this.deadlineBy;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + printDateTimeFormat(deadlineInDateTime) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"adhigop13":37}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":" * This class encapsulates an Event","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"    private String from;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"    private String to;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"    private LocalDateTime fromDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"    private LocalDateTime toDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"        this.fromDateTime \u003d formatDateAndTime(from);","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"        this.toDateTime \u003d formatDateAndTime(to);","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"    public Event(int status, String desciption, String from, String to) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"        super(desciption, status !\u003d 0);     //if 0, return false, else return true","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"        this.fromDateTime \u003d formatDateAndTime(from);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"        this.toDateTime \u003d formatDateAndTime(to);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"    public String storeToDiskFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"        return \"E\" + \"|\" + this.getStatus() + \"|\" + this.getDescription() + \"|\" + this.from + \"|\" + this.to;","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"adhigop13"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"adhigop13"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"adhigop13"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + printDateTimeFormat(this.fromDateTime) + \" to: \" + printDateTimeFormat(this.toDateTime) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"adhigop13":45}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"import dukeuielements.Ui;","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":" * This class encapsulates a Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"    private String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"    private boolean isFalseStatus;","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"    private String indent \u003d \"    \";","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"        this.isFalseStatus \u003d false;","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"    public Task(String description, boolean status) {","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"        this.isFalseStatus \u003d status;","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"     * Returns task complete/incomplete message based on user input.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"     * @param userInput mark/unmark which specifies the command.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"    public String changeStatus(String userInput) {","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"        switch (userInput) {","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"        case \"mark\":","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"            if (!this.isFalseStatus) {","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"                this.isFalseStatus \u003d !this.isFalseStatus;","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"                return \"Nice! Task completed successfully!\" + \"\\n\" + indent + this.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"            } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"                return \"Task already checked. Please try again...\" + \"\\n\" + indent + this.toString();","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"adhigop13"},"content":"        case \"unmark\":","lastModifiedDate":"2023-09-16"},{"lineNumber":39,"author":{"gitId":"adhigop13"},"content":"            if (!this.isFalseStatus) {","lastModifiedDate":"2023-09-16"},{"lineNumber":40,"author":{"gitId":"adhigop13"},"content":"                return \"Task already unmarked! Please try again...\" + \"\\n\" + indent + this.toString();","lastModifiedDate":"2023-09-16"},{"lineNumber":41,"author":{"gitId":"adhigop13"},"content":"            } else {","lastModifiedDate":"2023-09-16"},{"lineNumber":42,"author":{"gitId":"adhigop13"},"content":"                this.isFalseStatus \u003d !this.isFalseStatus;","lastModifiedDate":"2023-09-16"},{"lineNumber":43,"author":{"gitId":"adhigop13"},"content":"                return \"Sure! Task status unchecked!\" + \"\\n\" + indent + this.toString();","lastModifiedDate":"2023-09-16"},{"lineNumber":44,"author":{"gitId":"adhigop13"},"content":"            }","lastModifiedDate":"2023-09-16"},{"lineNumber":45,"author":{"gitId":"adhigop13"},"content":"        default:","lastModifiedDate":"2023-09-16"},{"lineNumber":46,"author":{"gitId":"adhigop13"},"content":"            return Ui.miscMsgPrint(\"Unknown error occurred!\");","lastModifiedDate":"2023-09-16"},{"lineNumber":47,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":48,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"adhigop13"},"content":"     * Returns date and time as a LocalDateTime parsed from user input yyyy-MM-dd HH:mm.","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"adhigop13"},"content":"     * @param userDateAndTime User provided date and time.","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"adhigop13"},"content":"     * @return Parsed date and time in yyyy-MM-dd HH:mm.","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"adhigop13"},"content":"     * @throws DateTimeParseException If user input does not follow required format.","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"adhigop13"},"content":"    public LocalDateTime formatDateAndTime(String userDateAndTime) throws DateTimeParseException {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"adhigop13"},"content":"        DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"adhigop13"},"content":"        return LocalDateTime.parse(userDateAndTime, inputFormat);","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"adhigop13"},"content":"     * Returns date and time as a String parsed from LocalDateTime variable yyyy-MM-dd HH:mm.","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"adhigop13"},"content":"     * @param systemDateAndTime LocalDateTime value stored on disk.","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"adhigop13"},"content":"     * @return String type Date and time in MMM dd, yyyy HH:mm format.","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"adhigop13"},"content":"    public String printDateTimeFormat(LocalDateTime systemDateAndTime) {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"adhigop13"},"content":"        DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd, yyyy HH:mm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"adhigop13"},"content":"        return systemDateAndTime.format(outputFormat);","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"adhigop13"},"content":"    public int getStatus() {","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"adhigop13"},"content":"        return this.isFalseStatus ? 1 : 0;","lastModifiedDate":"2023-09-16"},{"lineNumber":74,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"adhigop13"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"adhigop13"},"content":"        return this.description;","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"adhigop13"},"content":"     * Returns a String to store Task on Duke.txt file.","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"adhigop13"},"content":"     * @return String to store Task on Duke.txt file.","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"adhigop13"},"content":"    public String storeToDiskFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"adhigop13"},"content":"        return this.getStatus() + \"|\" + this.description;","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":89,"author":{"gitId":"adhigop13"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"adhigop13"},"content":"        if (this.getStatus() \u003d\u003d 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"adhigop13"},"content":"            return \"[\" + \"X\" + \"] \" + this.description;","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"adhigop13"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"adhigop13"},"content":"            return \"[\" + \" \" + \"]\" + this.description;","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":96,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"adhigop13":96}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":" * This class encapsulates a ToDo.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"    public ToDo(int status, String description) {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"        super(description, status !\u003d 0);     //if 0, return false, else return true","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"    public String storeToDiskFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"        return \"T\" + \"|\" + this.getStatus() + \"|\" + this.getDescription();","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"adhigop13":30}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"adhigop13":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"adhigop13":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"    public void invalidInputKeywordTester() throws Exception {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"            assertEquals(true, Parser.parse(\"Dont do this\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"            assertEquals(\"No enum constant duke.Parser.TaskKeyVal.Dont\", e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"    public void noUserDirectedInput() throws Exception {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"            assertEquals(true, Parser.parse(\"Delete\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"            assertEquals(\" ☹ OOPS!!! The description of a task cannot be empty.\", e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"adhigop13":24}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"    public void invalidDeleteCharacterInput() throws Exception {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"            TaskList.deleteTask(-1231);","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"            assertEquals(\"Invalid Task entered. Please try again...\", e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"adhigop13":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"task","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"ToDo play football","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"task","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"Deadline finish hw/10pm","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"task","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"Event attend lecture/2pm/4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"adhigop13":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"pause","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"-":21,"adhigop13":1}}]
