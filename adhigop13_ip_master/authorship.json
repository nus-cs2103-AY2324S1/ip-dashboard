[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.8.1\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine:5.8.1\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"jar {","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"    manifest {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"        attributes(","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"                \u0027Main-Class\u0027: \u0027duke.Duke\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"        )","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"adhigop13"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"adhigop13":22}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"E|1|add|2100-12-12 12:12|2100-12-13 12:15","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"D|0|hello|1212-12-12 12:12","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"D|0|add|1313-12-12 13:13","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"D|0|add|1212-12-12 12:12","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"E|1|add|1212-12-12 12:12|1313-12-13 13:13","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"T|0|adsfa","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"D|0|asdf|1212-12-12 12:12","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"T|0|add","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"D|0|add|1231-12-12 12:12","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"adhigop13":9}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"    private Label text;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"        text \u003d l;","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"        text.setWrapText(true);","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"    private void flip() {","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"adhigop13"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"adhigop13"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"adhigop13"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"adhigop13"},"content":"        db.flip();","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"adhigop13"},"content":"        return db;","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"adhigop13"},"content":"    public static DialogBox greetingDialogBox(ImageView iv) {","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"adhigop13"},"content":"        Label l \u003d new Label(\"Welcome! I am Tom!\");","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"adhigop13"},"content":"        var duke \u003d new DialogBox(l, iv);","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"adhigop13"},"content":"        duke.flip();","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"adhigop13"},"content":"        return duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"adhigop13":53}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"import dukeUiElements.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-08"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"public class Duke extends Application{","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"    private Stage mainStage;","lastModifiedDate":"2023-09-08"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"    private Scene scene;","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-08"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"    private VBox vBox;","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"    public static Path pathOfDirectory \u003d Paths.get(\"./data/duke.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"    public Duke() {","lastModifiedDate":"2023-09-08"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"        ui \u003d new Ui ();","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"            Storage.readFromDisk(pathOfDirectory, TaskList.getStoreTask());","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"adhigop13"},"content":"     * Runs the program with a while loop.","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"adhigop13"},"content":"//    public void run() {","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"adhigop13"},"content":"//        ui.showGreeting();","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"adhigop13"},"content":"//        Scanner userInputObject \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"adhigop13"},"content":"//        while (true) {","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"adhigop13"},"content":"//            ui.userInputUsher();","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"adhigop13"},"content":"//            String userInput \u003d userInputObject.nextLine();","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"adhigop13"},"content":"//","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"adhigop13"},"content":"//            try {","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"adhigop13"},"content":"//                boolean isBreak \u003d Parser.parse(userInput);","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"adhigop13"},"content":"//                if (!isBreak) {","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"adhigop13"},"content":"//                    break;","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"adhigop13"},"content":"//                }","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"adhigop13"},"content":"//            } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"adhigop13"},"content":"//                Ui.errorPrint(Ui.indent + \"Invalid character input\");","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"adhigop13"},"content":"//            } catch (DukeException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"adhigop13"},"content":"//                Ui.errorPrint(Ui.indent + \"Error: \" + e.getMessage());","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"adhigop13"},"content":"//            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"adhigop13"},"content":"//                Ui.errorPrint(Ui.indent + \"Invalid entry / Task not in list... Please try again...\");","lastModifiedDate":"2023-09-08"},{"lineNumber":62,"author":{"gitId":"adhigop13"},"content":"//            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":63,"author":{"gitId":"adhigop13"},"content":"//                Ui.errorPrint(\"☹ OOPS!!! Sorry, but i do not know what that means :-(\");","lastModifiedDate":"2023-09-08"},{"lineNumber":64,"author":{"gitId":"adhigop13"},"content":"//            }","lastModifiedDate":"2023-09-08"},{"lineNumber":65,"author":{"gitId":"adhigop13"},"content":"//        }","lastModifiedDate":"2023-09-08"},{"lineNumber":66,"author":{"gitId":"adhigop13"},"content":"//    }","lastModifiedDate":"2023-09-08"},{"lineNumber":67,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"adhigop13"},"content":"    public void start(Stage mainStage) {","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"adhigop13"},"content":"        mainStage.setTitle(\"Tom!\");","lastModifiedDate":"2023-09-08"},{"lineNumber":70,"author":{"gitId":"adhigop13"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"adhigop13"},"content":"        vBox \u003d new VBox();","lastModifiedDate":"2023-09-08"},{"lineNumber":72,"author":{"gitId":"adhigop13"},"content":"        scrollPane.setContent(vBox);","lastModifiedDate":"2023-09-08"},{"lineNumber":73,"author":{"gitId":"adhigop13"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-09-08"},{"lineNumber":74,"author":{"gitId":"adhigop13"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"adhigop13"},"content":"        AnchorPane anchorPane \u003d new AnchorPane();","lastModifiedDate":"2023-09-08"},{"lineNumber":76,"author":{"gitId":"adhigop13"},"content":"        anchorPane.getChildren().addAll(scrollPane, userInput, sendButton); //Basic interface with scrollbar and sendbutton.","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"adhigop13"},"content":"        scene \u003d new Scene(anchorPane);  //add anchorpane to the scene","lastModifiedDate":"2023-09-08"},{"lineNumber":79,"author":{"gitId":"adhigop13"},"content":"        mainStage.setScene(scene);","lastModifiedDate":"2023-09-08"},{"lineNumber":80,"author":{"gitId":"adhigop13"},"content":"        mainStage.show();","lastModifiedDate":"2023-09-08"},{"lineNumber":81,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":82,"author":{"gitId":"adhigop13"},"content":"        mainStage.setTitle(\"Tom!\");","lastModifiedDate":"2023-09-08"},{"lineNumber":83,"author":{"gitId":"adhigop13"},"content":"        mainStage.setResizable(false);","lastModifiedDate":"2023-09-08"},{"lineNumber":84,"author":{"gitId":"adhigop13"},"content":"        mainStage.setMinHeight(600.0);","lastModifiedDate":"2023-09-08"},{"lineNumber":85,"author":{"gitId":"adhigop13"},"content":"        mainStage.setMinWidth(400.0);","lastModifiedDate":"2023-09-08"},{"lineNumber":86,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":87,"author":{"gitId":"adhigop13"},"content":"        anchorPane.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-09-08"},{"lineNumber":88,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":89,"author":{"gitId":"adhigop13"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-09-08"},{"lineNumber":90,"author":{"gitId":"adhigop13"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-09-08"},{"lineNumber":91,"author":{"gitId":"adhigop13"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-09-08"},{"lineNumber":92,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":93,"author":{"gitId":"adhigop13"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-09-08"},{"lineNumber":94,"author":{"gitId":"adhigop13"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-09-08"},{"lineNumber":95,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":96,"author":{"gitId":"adhigop13"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2023-09-08"},{"lineNumber":97,"author":{"gitId":"adhigop13"},"content":"        vBox.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-09-08"},{"lineNumber":98,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":99,"author":{"gitId":"adhigop13"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-09-08"},{"lineNumber":100,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":101,"author":{"gitId":"adhigop13"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-09-08"},{"lineNumber":102,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":103,"author":{"gitId":"adhigop13"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-09-08"},{"lineNumber":104,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":105,"author":{"gitId":"adhigop13"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-08"},{"lineNumber":106,"author":{"gitId":"adhigop13"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-08"},{"lineNumber":107,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":108,"author":{"gitId":"adhigop13"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-09-08"},{"lineNumber":109,"author":{"gitId":"adhigop13"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-08"},{"lineNumber":110,"author":{"gitId":"adhigop13"},"content":"        vBox.getChildren().add(DialogBox.greetingDialogBox(new ImageView(duke)));","lastModifiedDate":"2023-09-08"},{"lineNumber":111,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":112,"author":{"gitId":"adhigop13"},"content":"        //Step 3. Add functionality to handle user input.","lastModifiedDate":"2023-09-08"},{"lineNumber":113,"author":{"gitId":"adhigop13"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-08"},{"lineNumber":114,"author":{"gitId":"adhigop13"},"content":"            vBox.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2023-09-08"},{"lineNumber":115,"author":{"gitId":"adhigop13"},"content":"            userInput.clear();","lastModifiedDate":"2023-09-08"},{"lineNumber":116,"author":{"gitId":"adhigop13"},"content":"        });","lastModifiedDate":"2023-09-08"},{"lineNumber":117,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":118,"author":{"gitId":"adhigop13"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-09-08"},{"lineNumber":119,"author":{"gitId":"adhigop13"},"content":"            vBox.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2023-09-08"},{"lineNumber":120,"author":{"gitId":"adhigop13"},"content":"            userInput.clear();","lastModifiedDate":"2023-09-08"},{"lineNumber":121,"author":{"gitId":"adhigop13"},"content":"        });","lastModifiedDate":"2023-09-08"},{"lineNumber":122,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":123,"author":{"gitId":"adhigop13"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2023-09-08"},{"lineNumber":124,"author":{"gitId":"adhigop13"},"content":"        vBox.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-09-08"},{"lineNumber":125,"author":{"gitId":"adhigop13"},"content":"        //Part 3. Add functionality to handle user input.","lastModifiedDate":"2023-09-08"},{"lineNumber":126,"author":{"gitId":"adhigop13"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-08"},{"lineNumber":127,"author":{"gitId":"adhigop13"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-08"},{"lineNumber":128,"author":{"gitId":"adhigop13"},"content":"        });","lastModifiedDate":"2023-09-08"},{"lineNumber":129,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":130,"author":{"gitId":"adhigop13"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-09-08"},{"lineNumber":131,"author":{"gitId":"adhigop13"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-08"},{"lineNumber":132,"author":{"gitId":"adhigop13"},"content":"        });","lastModifiedDate":"2023-09-08"},{"lineNumber":133,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":134,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":135,"author":{"gitId":"adhigop13"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2023-09-08"},{"lineNumber":136,"author":{"gitId":"adhigop13"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2023-09-08"},{"lineNumber":137,"author":{"gitId":"adhigop13"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2023-09-08"},{"lineNumber":138,"author":{"gitId":"adhigop13"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2023-09-08"},{"lineNumber":139,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":140,"author":{"gitId":"adhigop13"},"content":"        return textToAdd;","lastModifiedDate":"2023-09-08"},{"lineNumber":141,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":142,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":143,"author":{"gitId":"adhigop13"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-08"},{"lineNumber":144,"author":{"gitId":"adhigop13"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2023-09-08"},{"lineNumber":145,"author":{"gitId":"adhigop13"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2023-09-08"},{"lineNumber":146,"author":{"gitId":"adhigop13"},"content":"        vBox.getChildren().addAll(","lastModifiedDate":"2023-09-08"},{"lineNumber":147,"author":{"gitId":"adhigop13"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2023-09-08"},{"lineNumber":148,"author":{"gitId":"adhigop13"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke))","lastModifiedDate":"2023-09-08"},{"lineNumber":149,"author":{"gitId":"adhigop13"},"content":"        );","lastModifiedDate":"2023-09-08"},{"lineNumber":150,"author":{"gitId":"adhigop13"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-08"},{"lineNumber":151,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":152,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":153,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":154,"author":{"gitId":"adhigop13"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-09-08"},{"lineNumber":155,"author":{"gitId":"adhigop13"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-09-08"},{"lineNumber":156,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":157,"author":{"gitId":"adhigop13"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2023-09-08"},{"lineNumber":158,"author":{"gitId":"adhigop13"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":159,"author":{"gitId":"adhigop13"},"content":"            String dukeResponse \u003d Parser.parse(input);","lastModifiedDate":"2023-09-08"},{"lineNumber":160,"author":{"gitId":"adhigop13"},"content":"            if (dukeResponse \u003d\u003d \"bye\") {","lastModifiedDate":"2023-09-08"},{"lineNumber":161,"author":{"gitId":"adhigop13"},"content":"                return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-08"},{"lineNumber":162,"author":{"gitId":"adhigop13"},"content":"            } else {","lastModifiedDate":"2023-09-08"},{"lineNumber":163,"author":{"gitId":"adhigop13"},"content":"                return dukeResponse;","lastModifiedDate":"2023-09-08"},{"lineNumber":164,"author":{"gitId":"adhigop13"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":165,"author":{"gitId":"adhigop13"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"adhigop13"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-08"},{"lineNumber":167,"author":{"gitId":"adhigop13"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-08"},{"lineNumber":168,"author":{"gitId":"adhigop13"},"content":"            return Ui.indent + \"Invalid character input\";","lastModifiedDate":"2023-09-08"},{"lineNumber":169,"author":{"gitId":"adhigop13"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"adhigop13"},"content":"            return Ui.indent + \"Invalid entry / Task not in list... Please try again...\";","lastModifiedDate":"2023-09-08"},{"lineNumber":171,"author":{"gitId":"adhigop13"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"adhigop13"},"content":"            return \"OOPS!!! Sorry, but i do not know what that means :-(\";","lastModifiedDate":"2023-09-08"},{"lineNumber":173,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":174,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":175,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":177,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"adhigop13":177}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"adhigop13":6}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package duke;","lastModifiedDate":"2023-09-08"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"public class Launcher {","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"adhigop13":9}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"import dukeUiElements.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":" * This class deals with making sense of the user input and carrying out tasks accordingly.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"    public enum TaskKeyVal {ToDo, Deadline, Event, Delete, mark, unmark, bye, list, find};","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"     * Returns a boolean based on the user input choice.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"     * bye -\u003e initiates user exit.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"     * list -\u003e lists all the tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"     * mark -\u003e marks the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"     * unmark -\u003e unmarks the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"     * ToDo -\u003e creates a new ToDo and adds to task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"     * Deadline -\u003e creates a new Deadline and adds to task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"     * Event -\u003e creates a new Event and adds to task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"     * Delete -\u003e Deletes task at given number.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"     * @param userInput String value provided to be made sense of and carry task.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"     * @return boolean value false to break out of program, true otherwise.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"     * @throws DukeException when incorrect / invalid input is entered.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"    public static String parse(String userInput) throws DukeException {","lastModifiedDate":"2023-09-08"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"        String[] userInputList \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"        String userTaskChoiceKey \u003d userInputList[0];","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"        //Stores enum value. might throw exception if invalid input entered.","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"        TaskKeyVal taskKeyVal \u003d TaskKeyVal.valueOf(userTaskChoiceKey);","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"        if (taskKeyVal \u003d\u003d TaskKeyVal.bye) {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"            return userExit();","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"        } else if (taskKeyVal \u003d\u003d TaskKeyVal.list) {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"            return TaskList.userListChoice();","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"adhigop13"},"content":"        } else if (taskKeyVal \u003d\u003d TaskKeyVal.mark || taskKeyVal \u003d\u003d TaskKeyVal.unmark) {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"adhigop13"},"content":"            String userMarkerChoice \u003d userInputList[1];","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"adhigop13"},"content":"            return TaskList.userMarkUnmark(userMarkerChoice, userTaskChoiceKey);","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"adhigop13"},"content":"        } else if (userInputList.length \u003d\u003d 1 \u0026\u0026 enumCheck(userTaskChoiceKey)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"adhigop13"},"content":"            throw new DukeException(\" ☹ OOPS!!! The description of a task cannot be empty.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"adhigop13"},"content":"        } else if (taskKeyVal \u003d\u003d TaskKeyVal.ToDo) {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"adhigop13"},"content":"            return TaskList.addToDo(userInputList[1]);","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"adhigop13"},"content":"        } else if (taskKeyVal \u003d\u003d TaskKeyVal.Deadline) {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"adhigop13"},"content":"            String[] deadlineList \u003d userInputList[1].split(\"/\", 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"adhigop13"},"content":"            return TaskList.addDeadline(deadlineList[0], deadlineList[1]);","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"adhigop13"},"content":"        } else if (taskKeyVal \u003d\u003d TaskKeyVal.Event) {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"adhigop13"},"content":"            String[] eventList \u003d userInputList[1].split(\"/\", 3);","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"adhigop13"},"content":"            return TaskList.addEvent(eventList[0], eventList[1], eventList[2]);","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"adhigop13"},"content":"        } else if (taskKeyVal \u003d\u003d TaskKeyVal.Delete) {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"adhigop13"},"content":"            Integer delUserChoice \u003d Integer.parseInt(userInputList[1]);","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"adhigop13"},"content":"            return TaskList.deleteTask(delUserChoice);","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"adhigop13"},"content":"        } else if (taskKeyVal \u003d\u003d TaskKeyVal.find) {","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"adhigop13"},"content":"            String findThis \u003d userInputList[1];","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"adhigop13"},"content":"            return TaskList.taskToBeFound(findThis);","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"adhigop13"},"content":"        } else {                                                                    //in case wrong input like Delete abc entered","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"adhigop13"},"content":"            throw new DukeException(\"OOPS!!! Sorry, but i do not know what that means :-(\");","lastModifiedDate":"2023-09-08"},{"lineNumber":59,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"adhigop13"},"content":"    private static boolean enumCheck (String input){","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"adhigop13"},"content":"        for (TaskKeyVal taskKey : TaskKeyVal.values()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"adhigop13"},"content":"            if (taskKey.name().equalsIgnoreCase(input)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"adhigop13"},"content":"                return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"adhigop13"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"adhigop13"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"adhigop13"},"content":"    private static String userExit() {","lastModifiedDate":"2023-09-08"},{"lineNumber":71,"author":{"gitId":"adhigop13"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"adhigop13"},"content":"            Files.write(Duke.pathOfDirectory, new byte[0], StandardOpenOption.TRUNCATE_EXISTING);    //closes file and truncates it","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"adhigop13"},"content":"            for (int i \u003d 0; i \u003c TaskList.getTaskSize(); i++) {","lastModifiedDate":"2023-09-08"},{"lineNumber":74,"author":{"gitId":"adhigop13"},"content":"                String taskToString \u003d TaskList.getStoreTask().get(i).storeToDiskFormat() + \"\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":75,"author":{"gitId":"adhigop13"},"content":"                Files.write(Duke.pathOfDirectory, taskToString.getBytes(), StandardOpenOption.APPEND);","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"adhigop13"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"adhigop13"},"content":"            return Ui.endDukeMsg();","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"adhigop13"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"adhigop13"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"adhigop13"},"content":"            return \"An error occurred...\";","lastModifiedDate":"2023-09-08"},{"lineNumber":81,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"adhigop13":83}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"import dukeUiElements.Ui;","lastModifiedDate":"2023-09-08"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"import task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"import task.ToDo;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"import task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"import task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"import java.util.List;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":" * This class handles the data reads from Duke.txt file to load tasks","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"     * Reads data from file and loads into ArrayList if available. Else creates the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"     * @param pathOfDirectory Path variable provided","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"     * @param storeTask ArrayList\u003cTask\u003e which stores tasks when program is running","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"     * @throws IOException if an I/O error occurs","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"    public static void readFromDisk(Path pathOfDirectory, ArrayList\u003cTask\u003e storeTask) throws IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"        Files.createDirectories(pathOfDirectory.getParent());","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"        if (Files.exists(pathOfDirectory)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"            List\u003cString\u003e fileLines \u003d Files.readAllLines(pathOfDirectory);","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"            for (String task : fileLines) {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"                String[] taskVariablesTemp \u003d task.split(\"\\\\|\");     //since \"|\" is a special character, use \"//\"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"                if (taskVariablesTemp[0].equals(\"T\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"                    storeTask.add(new ToDo(Integer.parseInt(taskVariablesTemp[1]), taskVariablesTemp[2]));","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"                } else if (taskVariablesTemp[0].equals(\"D\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"                    storeTask.add(new Deadline(Integer.parseInt(taskVariablesTemp[1]), taskVariablesTemp[2], taskVariablesTemp[3]));","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"                } else if (taskVariablesTemp[0].equals(\"E\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"                    storeTask.add(new Event(Integer.parseInt(taskVariablesTemp[1]), taskVariablesTemp[2], taskVariablesTemp[3], taskVariablesTemp[4]));","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"                } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"adhigop13"},"content":"                }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"adhigop13"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"adhigop13"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"adhigop13"},"content":"            //Ui.errorPrint(\"Your file does not exist. Creating...\");","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"adhigop13"},"content":"            Files.createFile(pathOfDirectory);","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"adhigop13":46}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"import dukeUiElements.Ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"import task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"import task.ToDo;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"import task.Deadline;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"import task.Event;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"import java.util.ListIterator;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":" * This class holds the ArrayList to load all the tasks. Contains important Task manipulation methods.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"public class TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"    private static ArrayList\u003cTask\u003e storeTask \u003d new ArrayList\u003c\u003e(1);   //stores all the tasks","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"     * Displays the entire list of tasks to user.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"    public static String userListChoice() {","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"        ListIterator\u003cTask\u003e ls \u003d storeTask.listIterator();","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"        return Ui.printList(ls);","lastModifiedDate":"2023-09-08"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"     * Marks or unmarks the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"     * @param taskNumber The task number to be marked/unmarked.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"     * @param userMarkerChoice User choice mark/unmark.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"    public static String userMarkUnmark(String taskNumber, String userMarkerChoice) {","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"        Task taskItem \u003d storeTask.get(Integer.parseInt(taskNumber) - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"        return Ui.indent + taskItem.changeStatus(userMarkerChoice);","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"     * Adds task with given description to ArrayList.","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"adhigop13"},"content":"     * @param userDescription Description attached to task.","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"adhigop13"},"content":"    public static String addToDo(String userDescription) {","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"adhigop13"},"content":"        storeTask.add(new ToDo(userDescription));","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"adhigop13"},"content":"        return Ui.printNumberOfEntries();","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"adhigop13"},"content":"     * Adds a new Deadline task to ArrayList.","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"adhigop13"},"content":"     * @param userDescription Description attached to Deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"adhigop13"},"content":"     * @param deadlineBy Deadline given in yyyy-mm-dd HH:mm format.","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"adhigop13"},"content":"    public static String addDeadline(String userDescription, String deadlineBy) {","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"adhigop13"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"adhigop13"},"content":"            storeTask.add(new Deadline(userDescription, deadlineBy));","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"adhigop13"},"content":"            return Ui.printNumberOfEntries();","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"adhigop13"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"adhigop13"},"content":"            return Ui.invalidDateTimeEntry();","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"adhigop13"},"content":"     * Adds a new Deadline task to ArrayList.","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"adhigop13"},"content":"     * @param userDescription Description attached to Event.","lastModifiedDate":"2023-09-02"},{"lineNumber":65,"author":{"gitId":"adhigop13"},"content":"     * @param from From Date \u0026 Time given in yyyy-mm-dd HH:mm format.","lastModifiedDate":"2023-09-02"},{"lineNumber":66,"author":{"gitId":"adhigop13"},"content":"     * @param to To Date \u0026 Time given in yyyy-mm-dd HH:mm format.","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"adhigop13"},"content":"    public static String addEvent(String userDescription, String from, String to) {","lastModifiedDate":"2023-09-08"},{"lineNumber":69,"author":{"gitId":"adhigop13"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"adhigop13"},"content":"            storeTask.add(new Event(userDescription, from, to));","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"adhigop13"},"content":"            return Ui.printNumberOfEntries();","lastModifiedDate":"2023-09-08"},{"lineNumber":72,"author":{"gitId":"adhigop13"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"adhigop13"},"content":"            return Ui.invalidDateTimeEntry();","lastModifiedDate":"2023-09-08"},{"lineNumber":74,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"adhigop13"},"content":"     * Deletes task from ArrayList.","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"adhigop13"},"content":"     * @param delUserChoice The task number to be deleted (based on number on list).","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"adhigop13"},"content":"     * @throws DukeException  If TaskList is empty or invalid selection by user.","lastModifiedDate":"2023-09-02"},{"lineNumber":82,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"adhigop13"},"content":"    public static String deleteTask(int delUserChoice) throws DukeException{","lastModifiedDate":"2023-09-08"},{"lineNumber":84,"author":{"gitId":"adhigop13"},"content":"        if ((delUserChoice - 1) \u003c 0) {                                          //if number entered smaller than 1, array will go negative index.","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"adhigop13"},"content":"            throw new DukeException(\"Invalid Task entered. Please try again...\");","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"adhigop13"},"content":"        } else if (storeTask.isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"adhigop13"},"content":"            throw new DukeException(\"Task Scheduler is empty... Please try again!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"adhigop13"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"adhigop13"},"content":"            Task itemRemoved \u003d storeTask.remove(delUserChoice - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"adhigop13"},"content":"            return Ui.deleteTaskPrint(itemRemoved);","lastModifiedDate":"2023-09-08"},{"lineNumber":91,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"adhigop13"},"content":"    public static String taskToBeFound(String findThis) {","lastModifiedDate":"2023-09-08"},{"lineNumber":94,"author":{"gitId":"adhigop13"},"content":"        ListIterator\u003cTask\u003e ls \u003d storeTask.listIterator();","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"adhigop13"},"content":"        ArrayList\u003cTask\u003e filteredList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"adhigop13"},"content":"        while (ls.hasNext()) {","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"adhigop13"},"content":"            Task current \u003d ls.next();","lastModifiedDate":"2023-09-02"},{"lineNumber":98,"author":{"gitId":"adhigop13"},"content":"            String currentDescription \u003d current.getDescription();","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"adhigop13"},"content":"            if (currentDescription.contains(findThis)) {","lastModifiedDate":"2023-09-02"},{"lineNumber":100,"author":{"gitId":"adhigop13"},"content":"                filteredList.add(current);","lastModifiedDate":"2023-09-02"},{"lineNumber":101,"author":{"gitId":"adhigop13"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":102,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"adhigop13"},"content":"        ListIterator\u003cTask\u003e iterFilteredList \u003d filteredList.listIterator();","lastModifiedDate":"2023-09-02"},{"lineNumber":104,"author":{"gitId":"adhigop13"},"content":"        if (filteredList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"adhigop13"},"content":"            return Ui.emptyList();","lastModifiedDate":"2023-09-08"},{"lineNumber":106,"author":{"gitId":"adhigop13"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"adhigop13"},"content":"            return Ui.findTaskPrint(iterFilteredList);","lastModifiedDate":"2023-09-08"},{"lineNumber":108,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":109,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":111,"author":{"gitId":"adhigop13"},"content":"    public static ArrayList\u003cTask\u003e getStoreTask() {","lastModifiedDate":"2023-09-08"},{"lineNumber":112,"author":{"gitId":"adhigop13"},"content":"        return storeTask;","lastModifiedDate":"2023-09-08"},{"lineNumber":113,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":114,"author":{"gitId":"adhigop13"},"content":"    public static int getTaskSize() {","lastModifiedDate":"2023-09-08"},{"lineNumber":115,"author":{"gitId":"adhigop13"},"content":"        return storeTask.size();","lastModifiedDate":"2023-09-08"},{"lineNumber":116,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":117,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"adhigop13":117}},{"path":"src/main/java/dukeUiElements/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package dukeUiElements;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"import task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"import java.util.ListIterator;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"import java.util.Map;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"    public static String indent \u003d \"     \";","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"    public static String horizontalLine \u003d \"-\".repeat(22);","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"    static Map\u003cString, String\u003e hashMap \u003d Map.of(","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"            \"endMessage\", \"Bye. Hope to see you again soon!\",","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"            \"endVal\", \"bye\",","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"            \"listVal\", \"list\");","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"    public void showGreeting() {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"        System.out.println(indent + horizontalLine);","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"        System.out.println(indent + \"Hello! I\u0027m Tom!\" + \"\\n\" + indent + \"What can I do for you?\" + \"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"        System.out.println(indent + horizontalLine);","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"    public void userInputUsher() {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"        System.out.println(indent + \"What would you like to do next? Enter date in yyyy-mm-dd hh:mm format: \");","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"    public static String printList(ListIterator\u003cTask\u003e ls) {","lastModifiedDate":"2023-09-08"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"        String listString \u003d \"Entries on memory...\" + \"\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"        while (ls.hasNext()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"            count++;","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"            listString \u003d listString + count + \".\" + ls.next().toString() + \"\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"        return listString;","lastModifiedDate":"2023-09-08"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"    public static String printNumberOfEntries() {","lastModifiedDate":"2023-09-08"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"        return Ui.indent + \"Now you have \" + TaskList.getTaskSize() + \" tasks in your task scheduler...\";","lastModifiedDate":"2023-09-08"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"    public static void printHorizontalLine() {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"        System.out.println(indent + horizontalLine);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"adhigop13"},"content":"    public static String invalidDateTimeEntry() {","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"adhigop13"},"content":"        return \"Invalid date/time entry. Please give in yyyy-mm-dd hh:mm format...\";","lastModifiedDate":"2023-09-08"},{"lineNumber":41,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"adhigop13"},"content":"    public static String emptyList() {","lastModifiedDate":"2023-09-08"},{"lineNumber":43,"author":{"gitId":"adhigop13"},"content":"        return \"Duke could not find your query! Please try again...\";","lastModifiedDate":"2023-09-08"},{"lineNumber":44,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"adhigop13"},"content":"    public static String deleteTaskPrint(Task itemRemoved) {","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"adhigop13"},"content":"        String removedTask \u003d indent + \"This task was removed...\" + \"\\n\" + itemRemoved + \"\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"adhigop13"},"content":"        removedTask \u003d indent + \"Now you have \" + TaskList.getTaskSize() + \" tasks in your task scheduler...\";","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"adhigop13"},"content":"        return removedTask;","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":50,"author":{"gitId":"adhigop13"},"content":"    public static String findTaskPrint(ListIterator\u003cTask\u003e ls) {","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"adhigop13"},"content":"        String findString \u003d indent + \"Tasks that may match your search result...\" + \"\\n\";","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"adhigop13"},"content":"        findString +\u003d printList(ls);","lastModifiedDate":"2023-09-08"},{"lineNumber":53,"author":{"gitId":"adhigop13"},"content":"        return findString;","lastModifiedDate":"2023-09-08"},{"lineNumber":54,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":55,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":56,"author":{"gitId":"adhigop13"},"content":"    public static void miscMsgPrint(String msg) {","lastModifiedDate":"2023-09-08"},{"lineNumber":57,"author":{"gitId":"adhigop13"},"content":"        System.out.println(msg);","lastModifiedDate":"2023-09-08"},{"lineNumber":58,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"adhigop13"},"content":"    public static String endDukeMsg() {","lastModifiedDate":"2023-09-08"},{"lineNumber":60,"author":{"gitId":"adhigop13"},"content":"        return \"bye\";","lastModifiedDate":"2023-09-08"},{"lineNumber":61,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"adhigop13":62}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":" * This class encapsulates a Deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"    private String deadlineBy;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"    private LocalDateTime deadlineInDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"    public Deadline(String description, String deadlineBy) {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"        this.deadlineBy \u003d deadlineBy;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"        this.deadlineInDateTime \u003d formatDateAndTime(deadlineBy);","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"    public Deadline(int status, String description, String deadlineBy) {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"        super(description, status !\u003d 0);     //if 0, return false, else return true","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"        this.deadlineBy \u003d deadlineBy;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"        this.deadlineInDateTime \u003d formatDateAndTime(deadlineBy);","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"    public String storeToDiskFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"        return \"D\" + \"|\" + this.getStatus() + \"|\" + this.getDescription() + \"|\" + this.deadlineBy;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + printDateTimeFormat(deadlineInDateTime) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"adhigop13":37}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":" * This class encapsulates an Event","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"    private String from;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"    private String to;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"    private LocalDateTime fromDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"    private LocalDateTime toDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"        this.fromDateTime \u003d formatDateAndTime(from);","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"        this.toDateTime \u003d formatDateAndTime(to);","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"    public Event(int status, String desciption, String from, String to) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"        super(desciption, status !\u003d 0);     //if 0, return false, else return true","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"        this.fromDateTime \u003d formatDateAndTime(from);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"        this.toDateTime \u003d formatDateAndTime(to);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"    public String storeToDiskFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"        return \"E\" + \"|\" + this.getStatus() + \"|\" + this.getDescription() + \"|\" + this.from + \"|\" + this.to;","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"adhigop13"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"adhigop13"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"adhigop13"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + printDateTimeFormat(this.fromDateTime) + \" to: \" + printDateTimeFormat(this.toDateTime) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"adhigop13":45}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":" * This class encapsulates a Task.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"    private String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"    private boolean status;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"    private String indent \u003d \"    \";","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"        this.status \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"    public Task(String description, boolean status) {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"     * Returns task complete/incomplete message based on user input.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"     * @param userInput mark/unmark which specifies the command.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"    public String changeStatus(String userInput) {","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"        if (!this.status \u0026\u0026 userInput.equals(\"mark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"            this.status \u003d !this.status;","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"            return \"Nice! Task completed successfully!\" + \"\\n\" + indent + this.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"adhigop13"},"content":"        } else if (!this.status \u0026\u0026 userInput.equals(\"unmark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"adhigop13"},"content":"            return \"Task already unmarked! Please try again...\" + \"\\n\" + indent + this.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"adhigop13"},"content":"        } else if (this.status \u0026\u0026 userInput.equals(\"unmark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"adhigop13"},"content":"            this.status \u003d !this.status;","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"adhigop13"},"content":"            return \"Sure! Task status unchecked!\" + \"\\n\" + indent + this.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"adhigop13"},"content":"        } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"adhigop13"},"content":"            return \"Task already checked. Please try again...\" + \"\\n\" + indent + this.toString();","lastModifiedDate":"2023-09-08"},{"lineNumber":38,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"adhigop13"},"content":"     * Returns date and time as a LocalDateTime parsed from user input yyyy-MM-dd HH:mm.","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"adhigop13"},"content":"     * @param userDateAndTime User provided date and time.","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"adhigop13"},"content":"     * @return Parsed date and time in yyyy-MM-dd HH:mm.","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"adhigop13"},"content":"     * @throws DateTimeParseException If user input does not follow required format.","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"adhigop13"},"content":"    public LocalDateTime formatDateAndTime(String userDateAndTime) throws DateTimeParseException {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"adhigop13"},"content":"        DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"adhigop13"},"content":"        return LocalDateTime.parse(userDateAndTime, inputFormat);","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"adhigop13"},"content":"     * Returns date and time as a String parsed from LocalDateTime variable yyyy-MM-dd HH:mm.","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"adhigop13"},"content":"     * @param systemDateAndTime LocalDateTime value stored on disk.","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"adhigop13"},"content":"     * @return String type Date and time in MMM dd, yyyy HH:mm format.","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"adhigop13"},"content":"    public String printDateTimeFormat(LocalDateTime systemDateAndTime) {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"adhigop13"},"content":"        DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd, yyyy HH:mm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"adhigop13"},"content":"        return systemDateAndTime.format(outputFormat);","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"adhigop13"},"content":"    public int getStatus() {","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"adhigop13"},"content":"        return this.status ? 1 : 0;","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"adhigop13"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"adhigop13"},"content":"        return this.description;","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"adhigop13"},"content":"     * Returns a String to store Task on Duke.txt file.","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"adhigop13"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"adhigop13"},"content":"     * @return String to store Task on Duke.txt file.","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"adhigop13"},"content":"    public String storeToDiskFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"adhigop13"},"content":"        return this.getStatus() + \"|\" + this.description;","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":80,"author":{"gitId":"adhigop13"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"adhigop13"},"content":"        if (this.getStatus() \u003d\u003d 1) {","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"adhigop13"},"content":"            return \"[\" + \"X\" + \"] \" + this.description;","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"adhigop13"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"adhigop13"},"content":"            return \"[\" + \" \" + \"]\" + this.description;","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"adhigop13":87}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":" * This class encapsulates a ToDo.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"    public ToDo(int status, String description) {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"        super(description, status !\u003d 0);     //if 0, return false, else return true","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"    public String storeToDiskFormat() {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"        return \"T\" + \"|\" + this.getStatus() + \"|\" + this.getDescription();","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"adhigop13"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"adhigop13"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"adhigop13"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"adhigop13"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"adhigop13":30}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"    public void invalidInputKeywordTester() throws Exception {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"            assertEquals(true, Parser.parse(\"Dont do this\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"            assertEquals(\"No enum constant duke.Parser.TaskKeyVal.Dont\", e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"    public void noUserDirectedInput() throws Exception {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"            assertEquals(true, Parser.parse(\"Delete\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"adhigop13"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"adhigop13"},"content":"            assertEquals(\" ☹ OOPS!!! The description of a task cannot be empty.\", e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"adhigop13":24}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"package duke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"    public void invalidDeleteCharacterInput() throws Exception {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"adhigop13"},"content":"            TaskList.deleteTask(-1231);","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"adhigop13"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"adhigop13"},"content":"            assertEquals(\"Invalid Task entered. Please try again...\", e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"adhigop13"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"adhigop13"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"adhigop13"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"adhigop13"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"adhigop13":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"adhigop13"},"content":"task","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"adhigop13"},"content":"ToDo play football","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"adhigop13"},"content":"task","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"adhigop13"},"content":"Deadline finish hw/10pm","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"adhigop13"},"content":"task","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"adhigop13"},"content":"Event attend lecture/2pm/4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"adhigop13"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"adhigop13"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"adhigop13"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"adhigop13"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"adhigop13"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"adhigop13":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"adhigop13"},"content":"pause","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"-":21,"adhigop13":1}}]
