[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"LordSaumya"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":"    protected LocalDateTime deadlineDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"LordSaumya"},"content":"    public Deadline(String description, LocalDateTime deadlineDate) {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"LordSaumya"},"content":"        super(description, \"D\");","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"LordSaumya"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"LordSaumya"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"LordSaumya"},"content":"        return super.toString() + \" (by: \" + deadlineDate.format(formatter) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"LordSaumya"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"LordSaumya"},"content":"        return super.toFileString() + \" | \" + deadlineDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"LordSaumya"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"LordSaumya":22}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"LordSaumya"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"LordSaumya"},"content":"        String logo \u003d \" ___  __    ________  ________  ________   ________  ________      \\r\\n\" + //","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"LordSaumya"},"content":"                \"|\\\\  \\\\|\\\\  \\\\ |\\\\   __  \\\\|\\\\   __  \\\\|\\\\   ___  \\\\|\\\\   __  \\\\|\\\\   ____\\\\     \\r\\n\" + //","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"LordSaumya"},"content":"                \"\\\\ \\\\  \\\\/  /|\\\\ \\\\  \\\\|\\\\  \\\\ \\\\  \\\\|\\\\  \\\\ \\\\  \\\\\\\\ \\\\  \\\\ \\\\  \\\\|\\\\  \\\\ \\\\  \\\\___|_    \\r\\n\" + //","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"LordSaumya"},"content":"                \" \\\\ \\\\   ___  \\\\ \\\\   _  _\\\\ \\\\  \\\\\\\\\\\\  \\\\ \\\\  \\\\\\\\ \\\\  \\\\ \\\\  \\\\\\\\\\\\  \\\\ \\\\_____  \\\\   \\r\\n\" + //","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"LordSaumya"},"content":"                \"  \\\\ \\\\  \\\\\\\\ \\\\  \\\\ \\\\  \\\\\\\\  \\\\\\\\ \\\\  \\\\\\\\\\\\  \\\\ \\\\  \\\\\\\\ \\\\  \\\\ \\\\  \\\\\\\\\\\\  \\\\|____|\\\\  \\\\  \\r\\n\" + //","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"LordSaumya"},"content":"                \"   \\\\ \\\\__\\\\\\\\ \\\\__\\\\ \\\\__\\\\\\\\ _\\\\\\\\ \\\\_______\\\\ \\\\__\\\\\\\\ \\\\__\\\\ \\\\_______\\\\____\\\\_\\\\  \\\\ \\r\\n\" + //","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"LordSaumya"},"content":"                \"    \\\\|__| \\\\|__|\\\\|__|\\\\|__|\\\\|_______|\\\\|__| \\\\|__|\\\\|_______|\\\\_________\\\\\\r\\n\" + //","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"LordSaumya"},"content":"                \"                                                       \\\\|_________|\";","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"LordSaumya"},"content":"        String divider \u003d \"\\n____________________________________________________________\\n\";","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"LordSaumya"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"LordSaumya"},"content":"        // Date input format: dd/MM/yyyy HHmm","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"LordSaumya"},"content":"        DateTimeFormatter displayFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"LordSaumya"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"LordSaumya"},"content":"        // Read from file","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"LordSaumya"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"LordSaumya"},"content":"            File taskFile \u003d new File(\"tasks.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"LordSaumya"},"content":"            Scanner taskScanner \u003d new Scanner(taskFile);","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"LordSaumya"},"content":"            DateTimeFormatter fileFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"LordSaumya"},"content":"            while (taskScanner.hasNextLine()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"LordSaumya"},"content":"                String task \u003d taskScanner.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"LordSaumya"},"content":"                String[] taskComponents \u003d task.split(\" \\\\| \");","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"LordSaumya"},"content":"                String taskType \u003d taskComponents[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"LordSaumya"},"content":"                boolean taskStatus \u003d taskComponents[1].equals(\"1\");","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"LordSaumya"},"content":"                String taskDescription \u003d taskComponents[2];","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"LordSaumya"},"content":"                switch (taskType) {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"LordSaumya"},"content":"                    case \"T\":","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"LordSaumya"},"content":"                        ToDo todoTask \u003d new ToDo(taskDescription);","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"LordSaumya"},"content":"                        todoTask.changeStatus(taskStatus);","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"LordSaumya"},"content":"                        list.add(todoTask);","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"LordSaumya"},"content":"                        break;","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"LordSaumya"},"content":"                    case \"D\":","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"LordSaumya"},"content":"                        LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(taskComponents[3], fileFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"LordSaumya"},"content":"                        Deadline deadlineTask \u003d new Deadline(taskDescription, deadlineDateTime);","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"LordSaumya"},"content":"                        deadlineTask.changeStatus(taskStatus);","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"LordSaumya"},"content":"                        list.add(deadlineTask);","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"LordSaumya"},"content":"                        break;","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"LordSaumya"},"content":"                    case \"E\":","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"LordSaumya"},"content":"                        String[] taskDates \u003d taskComponents[3].split(\" - \");","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"LordSaumya"},"content":"                        LocalDateTime eventStartDateTime \u003d LocalDateTime.parse(taskDates[0], fileFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"LordSaumya"},"content":"                        LocalDateTime eventEndDateTime \u003d LocalDateTime.parse(taskDates[1], fileFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"LordSaumya"},"content":"                        Event event \u003d new Event(taskDescription, eventStartDateTime, eventEndDateTime);","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"LordSaumya"},"content":"                        event.changeStatus(taskStatus);","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"LordSaumya"},"content":"                        list.add(event);","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"LordSaumya"},"content":"                        break;","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"LordSaumya"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"LordSaumya"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"LordSaumya"},"content":"            taskScanner.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"LordSaumya"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"LordSaumya"},"content":"            // File does not exist","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"LordSaumya"},"content":"            try {","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"LordSaumya"},"content":"                // Create new file","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"LordSaumya"},"content":"                File taskFile \u003d new File(\"tasks.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"LordSaumya"},"content":"                taskFile.createNewFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"LordSaumya"},"content":"            } catch (Exception f) {","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"LordSaumya"},"content":"                System.out.println(\"Error creating new file.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"LordSaumya"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"LordSaumya"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"LordSaumya"},"content":"            System.out.println(\"Error parsing date.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"LordSaumya"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"LordSaumya"},"content":"            System.out.println(\"Error reading from file.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"LordSaumya"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"LordSaumya"},"content":"        String command \u003d \"\";","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":87,"author":{"gitId":"LordSaumya"},"content":"        System.out.println(\"Greetings, puny mortal. This is \\n\" + logo","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"LordSaumya"},"content":"                + \"\\nThe Lord of Time. \\nWhat foolish errand do you seek to accomplish with my immense powers?\");","lastModifiedDate":"2023-08-23"},{"lineNumber":89,"author":{"gitId":"LordSaumya"},"content":"        System.out.println(divider);","lastModifiedDate":"2023-08-23"},{"lineNumber":90,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":91,"author":{"gitId":"LordSaumya"},"content":"        while (true) {","lastModifiedDate":"2023-08-23"},{"lineNumber":92,"author":{"gitId":"LordSaumya"},"content":"            command \u003d sc.nextLine();","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"LordSaumya"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":94,"author":{"gitId":"LordSaumya"},"content":"                // End conversation","lastModifiedDate":"2023-08-23"},{"lineNumber":95,"author":{"gitId":"LordSaumya"},"content":"                break;","lastModifiedDate":"2023-08-23"},{"lineNumber":96,"author":{"gitId":"LordSaumya"},"content":"            } else if (command.equals(\"list\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":97,"author":{"gitId":"LordSaumya"},"content":"                // List all tasks","lastModifiedDate":"2023-08-23"},{"lineNumber":98,"author":{"gitId":"LordSaumya"},"content":"                System.out.println(divider);","lastModifiedDate":"2023-08-23"},{"lineNumber":99,"author":{"gitId":"LordSaumya"},"content":"                System.out.println(","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"LordSaumya"},"content":"                        \"You have somehow found the audacity to conjure up this laughable list of inconsequential endeavours:\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":101,"author":{"gitId":"LordSaumya"},"content":"                for (int i \u003d 1; i \u003c\u003d list.size(); i++) {","lastModifiedDate":"2023-08-23"},{"lineNumber":102,"author":{"gitId":"LordSaumya"},"content":"                    System.out.println(i + \". \" + list.get(i - 1));","lastModifiedDate":"2023-08-23"},{"lineNumber":103,"author":{"gitId":"LordSaumya"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":104,"author":{"gitId":"LordSaumya"},"content":"                System.out.println(divider);","lastModifiedDate":"2023-08-23"},{"lineNumber":105,"author":{"gitId":"LordSaumya"},"content":"            } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":106,"author":{"gitId":"LordSaumya"},"content":"                // Mark a task as done","lastModifiedDate":"2023-08-23"},{"lineNumber":107,"author":{"gitId":"LordSaumya"},"content":"                System.out.println(divider);","lastModifiedDate":"2023-08-23"},{"lineNumber":108,"author":{"gitId":"LordSaumya"},"content":"                int taskNum \u003d Integer.parseInt(command.substring(5));","lastModifiedDate":"2023-08-23"},{"lineNumber":109,"author":{"gitId":"LordSaumya"},"content":"                try {","lastModifiedDate":"2023-08-23"},{"lineNumber":110,"author":{"gitId":"LordSaumya"},"content":"                    list.get(taskNum - 1).changeStatus(true);","lastModifiedDate":"2023-08-23"},{"lineNumber":111,"author":{"gitId":"LordSaumya"},"content":"                    System.out.println(","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"LordSaumya"},"content":"                            \"Astonishingly enough, you have managed to triumph over this mind-bogglingly simple task:\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":113,"author":{"gitId":"LordSaumya"},"content":"                    System.out.println(list.get(taskNum - 1).toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":114,"author":{"gitId":"LordSaumya"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":115,"author":{"gitId":"LordSaumya"},"content":"                    System.out.println(\"You have no such task, mortal.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":116,"author":{"gitId":"LordSaumya"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":117,"author":{"gitId":"LordSaumya"},"content":"                System.out.println(divider);","lastModifiedDate":"2023-08-23"},{"lineNumber":118,"author":{"gitId":"LordSaumya"},"content":"            } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":119,"author":{"gitId":"LordSaumya"},"content":"                // Mark a task as not done","lastModifiedDate":"2023-08-23"},{"lineNumber":120,"author":{"gitId":"LordSaumya"},"content":"                System.out.println(divider);","lastModifiedDate":"2023-08-23"},{"lineNumber":121,"author":{"gitId":"LordSaumya"},"content":"                int taskNum \u003d Integer.parseInt(command.substring(7));","lastModifiedDate":"2023-08-23"},{"lineNumber":122,"author":{"gitId":"LordSaumya"},"content":"                try {","lastModifiedDate":"2023-08-23"},{"lineNumber":123,"author":{"gitId":"LordSaumya"},"content":"                    list.get(taskNum - 1).changeStatus(false);","lastModifiedDate":"2023-08-23"},{"lineNumber":124,"author":{"gitId":"LordSaumya"},"content":"                    System.out.println(","lastModifiedDate":"2023-08-23"},{"lineNumber":125,"author":{"gitId":"LordSaumya"},"content":"                            \"In a stunning twist, this task remains untouched by the hands of progress:\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":126,"author":{"gitId":"LordSaumya"},"content":"                    System.out.println(list.get(taskNum - 1).toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":127,"author":{"gitId":"LordSaumya"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":128,"author":{"gitId":"LordSaumya"},"content":"                    System.out.println(\"You have no such task, mortal.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":129,"author":{"gitId":"LordSaumya"},"content":"                } finally {","lastModifiedDate":"2023-08-23"},{"lineNumber":130,"author":{"gitId":"LordSaumya"},"content":"                    System.out.println(divider);","lastModifiedDate":"2023-08-23"},{"lineNumber":131,"author":{"gitId":"LordSaumya"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":132,"author":{"gitId":"LordSaumya"},"content":"            } else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":133,"author":{"gitId":"LordSaumya"},"content":"                // Add a todo task","lastModifiedDate":"2023-08-23"},{"lineNumber":134,"author":{"gitId":"LordSaumya"},"content":"                System.out.println(divider);","lastModifiedDate":"2023-08-23"},{"lineNumber":135,"author":{"gitId":"LordSaumya"},"content":"                try {","lastModifiedDate":"2023-08-23"},{"lineNumber":136,"author":{"gitId":"LordSaumya"},"content":"                    System.out.println(\"This task has been reluctantly bestowed upon your ever-growing list:\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":137,"author":{"gitId":"LordSaumya"},"content":"                    if (command.substring(5).equals(\"\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":138,"author":{"gitId":"LordSaumya"},"content":"                        throw new Exception(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":139,"author":{"gitId":"LordSaumya"},"content":"                    }","lastModifiedDate":"2023-08-23"},{"lineNumber":140,"author":{"gitId":"LordSaumya"},"content":"                    list.add(new ToDo(command.substring(5)));","lastModifiedDate":"2023-08-23"},{"lineNumber":141,"author":{"gitId":"LordSaumya"},"content":"                    System.out.println(list.get(list.size() - 1).toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":142,"author":{"gitId":"LordSaumya"},"content":"                    System.out","lastModifiedDate":"2023-08-23"},{"lineNumber":143,"author":{"gitId":"LordSaumya"},"content":"                            .println(\"Congratulations, your pile of tasks has swelled to a whopping \" + list.size()","lastModifiedDate":"2023-08-23"},{"lineNumber":144,"author":{"gitId":"LordSaumya"},"content":"                                    + \".\");","lastModifiedDate":"2023-08-23"},{"lineNumber":145,"author":{"gitId":"LordSaumya"},"content":"                    ;","lastModifiedDate":"2023-08-23"},{"lineNumber":146,"author":{"gitId":"LordSaumya"},"content":"                } catch (Exception e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":147,"author":{"gitId":"LordSaumya"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-08-23"},{"lineNumber":148,"author":{"gitId":"LordSaumya"},"content":"                } finally {","lastModifiedDate":"2023-08-23"},{"lineNumber":149,"author":{"gitId":"LordSaumya"},"content":"                    System.out.println(divider);","lastModifiedDate":"2023-08-23"},{"lineNumber":150,"author":{"gitId":"LordSaumya"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":151,"author":{"gitId":"LordSaumya"},"content":"            } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":152,"author":{"gitId":"LordSaumya"},"content":"                // Add a deadline task","lastModifiedDate":"2023-08-23"},{"lineNumber":153,"author":{"gitId":"LordSaumya"},"content":"                System.out.println(divider);","lastModifiedDate":"2023-08-23"},{"lineNumber":154,"author":{"gitId":"LordSaumya"},"content":"                try {","lastModifiedDate":"2023-08-23"},{"lineNumber":155,"author":{"gitId":"LordSaumya"},"content":"                    String[] deadlineTaskComponents \u003d command.substring(9).split(\" /by \");","lastModifiedDate":"2023-08-23"},{"lineNumber":156,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":157,"author":{"gitId":"LordSaumya"},"content":"                    if (deadlineTaskComponents[0].equals(\"\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":158,"author":{"gitId":"LordSaumya"},"content":"                        throw new Exception(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":159,"author":{"gitId":"LordSaumya"},"content":"                    } else if (deadlineTaskComponents.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-23"},{"lineNumber":160,"author":{"gitId":"LordSaumya"},"content":"                        throw new Exception(\"The deadline of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":161,"author":{"gitId":"LordSaumya"},"content":"                    } else if (deadlineTaskComponents.length \u003e 2) {","lastModifiedDate":"2023-08-23"},{"lineNumber":162,"author":{"gitId":"LordSaumya"},"content":"                        throw new Exception(\"The deadline of a deadline cannot contain more than one date.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":163,"author":{"gitId":"LordSaumya"},"content":"                    } else if (deadlineTaskComponents[1].equals(\"\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":164,"author":{"gitId":"LordSaumya"},"content":"                        throw new Exception(\"The deadline of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":165,"author":{"gitId":"LordSaumya"},"content":"                    }","lastModifiedDate":"2023-08-23"},{"lineNumber":166,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":167,"author":{"gitId":"LordSaumya"},"content":"                    System.out.println(","lastModifiedDate":"2023-08-23"},{"lineNumber":168,"author":{"gitId":"LordSaumya"},"content":"                            \"With your constant mediocrity, it is entirely unlikely that you will be able to meet this deadline I have just added: \\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":169,"author":{"gitId":"LordSaumya"},"content":"                    list.add(new Deadline(deadlineTaskComponents[0],","lastModifiedDate":"2023-08-29"},{"lineNumber":170,"author":{"gitId":"LordSaumya"},"content":"                            LocalDateTime.parse(deadlineTaskComponents[1], displayFormatter)));","lastModifiedDate":"2023-08-29"},{"lineNumber":171,"author":{"gitId":"LordSaumya"},"content":"                    System.out.println(list.get(list.size() - 1).toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":172,"author":{"gitId":"LordSaumya"},"content":"                    System.out","lastModifiedDate":"2023-08-23"},{"lineNumber":173,"author":{"gitId":"LordSaumya"},"content":"                            .println(\"Congratulations, your pile of tasks has swelled to a whopping \" + list.size()","lastModifiedDate":"2023-08-23"},{"lineNumber":174,"author":{"gitId":"LordSaumya"},"content":"                                    + \".\");","lastModifiedDate":"2023-08-23"},{"lineNumber":175,"author":{"gitId":"LordSaumya"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":176,"author":{"gitId":"LordSaumya"},"content":"                    System.out.println(\"Error parsing date.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":177,"author":{"gitId":"LordSaumya"},"content":"                } catch (Exception e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":178,"author":{"gitId":"LordSaumya"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-08-23"},{"lineNumber":179,"author":{"gitId":"LordSaumya"},"content":"                } finally {","lastModifiedDate":"2023-08-23"},{"lineNumber":180,"author":{"gitId":"LordSaumya"},"content":"                    System.out.println(divider);","lastModifiedDate":"2023-08-23"},{"lineNumber":181,"author":{"gitId":"LordSaumya"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":182,"author":{"gitId":"LordSaumya"},"content":"            } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":183,"author":{"gitId":"LordSaumya"},"content":"                // Add an event task","lastModifiedDate":"2023-08-23"},{"lineNumber":184,"author":{"gitId":"LordSaumya"},"content":"                System.out.println(divider);","lastModifiedDate":"2023-08-23"},{"lineNumber":185,"author":{"gitId":"LordSaumya"},"content":"                try {","lastModifiedDate":"2023-08-23"},{"lineNumber":186,"author":{"gitId":"LordSaumya"},"content":"                    String[] eventTaskComponents \u003d command.substring(6).split(\" /from \");","lastModifiedDate":"2023-08-23"},{"lineNumber":187,"author":{"gitId":"LordSaumya"},"content":"                    String eventDescription \u003d eventTaskComponents[0];","lastModifiedDate":"2023-08-23"},{"lineNumber":188,"author":{"gitId":"LordSaumya"},"content":"                    if (eventDescription.equals(\"\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":189,"author":{"gitId":"LordSaumya"},"content":"                        throw new Exception(\"The description of an event cannot be empty.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":190,"author":{"gitId":"LordSaumya"},"content":"                    } else if (eventTaskComponents.length \u003d\u003d 1) {","lastModifiedDate":"2023-08-23"},{"lineNumber":191,"author":{"gitId":"LordSaumya"},"content":"                        throw new Exception(\"The start time of an event cannot be empty.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":192,"author":{"gitId":"LordSaumya"},"content":"                    } else if (eventTaskComponents.length \u003e 2) {","lastModifiedDate":"2023-08-23"},{"lineNumber":193,"author":{"gitId":"LordSaumya"},"content":"                        throw new Exception(\"The start time of an event cannot contain more than one date.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":194,"author":{"gitId":"LordSaumya"},"content":"                    }","lastModifiedDate":"2023-08-23"},{"lineNumber":195,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":196,"author":{"gitId":"LordSaumya"},"content":"                    String[] eventTaskDates \u003d eventTaskComponents[1].split(\" /to \");","lastModifiedDate":"2023-08-23"},{"lineNumber":197,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":198,"author":{"gitId":"LordSaumya"},"content":"                    if (eventTaskDates[1].equals(\"\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":199,"author":{"gitId":"LordSaumya"},"content":"                        throw new Exception(\"The end time of an event cannot be empty.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":200,"author":{"gitId":"LordSaumya"},"content":"                    } else if (eventTaskDates.length \u003e 2) {","lastModifiedDate":"2023-08-23"},{"lineNumber":201,"author":{"gitId":"LordSaumya"},"content":"                        throw new Exception(\"The end time of an event cannot contain more than one date.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":202,"author":{"gitId":"LordSaumya"},"content":"                    }","lastModifiedDate":"2023-08-23"},{"lineNumber":203,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":204,"author":{"gitId":"LordSaumya"},"content":"                    System.out.println(","lastModifiedDate":"2023-08-23"},{"lineNumber":205,"author":{"gitId":"LordSaumya"},"content":"                            \"Looks like I will have to slow time down myself if you wish to make it to this event I just added:\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":206,"author":{"gitId":"LordSaumya"},"content":"                    list.add(new Event(eventDescription, LocalDateTime.parse(eventTaskDates[0], displayFormatter),","lastModifiedDate":"2023-08-29"},{"lineNumber":207,"author":{"gitId":"LordSaumya"},"content":"                            LocalDateTime.parse(eventTaskDates[1], displayFormatter)));","lastModifiedDate":"2023-08-29"},{"lineNumber":208,"author":{"gitId":"LordSaumya"},"content":"                    System.out.println(list.get(list.size() - 1).toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":209,"author":{"gitId":"LordSaumya"},"content":"                    System.out","lastModifiedDate":"2023-08-23"},{"lineNumber":210,"author":{"gitId":"LordSaumya"},"content":"                            .println(\"Congratulations, your pile of tasks has swelled to a whopping \" + list.size()","lastModifiedDate":"2023-08-23"},{"lineNumber":211,"author":{"gitId":"LordSaumya"},"content":"                                    + \".\");","lastModifiedDate":"2023-08-23"},{"lineNumber":212,"author":{"gitId":"LordSaumya"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":213,"author":{"gitId":"LordSaumya"},"content":"                    System.out.println(\"Error parsing date.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":214,"author":{"gitId":"LordSaumya"},"content":"                } catch (Exception e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":215,"author":{"gitId":"LordSaumya"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-08-23"},{"lineNumber":216,"author":{"gitId":"LordSaumya"},"content":"                } finally {","lastModifiedDate":"2023-08-23"},{"lineNumber":217,"author":{"gitId":"LordSaumya"},"content":"                    System.out.println(divider);","lastModifiedDate":"2023-08-23"},{"lineNumber":218,"author":{"gitId":"LordSaumya"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":219,"author":{"gitId":"LordSaumya"},"content":"            } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":220,"author":{"gitId":"LordSaumya"},"content":"                // Delete a task","lastModifiedDate":"2023-08-23"},{"lineNumber":221,"author":{"gitId":"LordSaumya"},"content":"                System.out.println(divider);","lastModifiedDate":"2023-08-23"},{"lineNumber":222,"author":{"gitId":"LordSaumya"},"content":"                int taskNum \u003d Integer.parseInt(command.substring(7));","lastModifiedDate":"2023-08-23"},{"lineNumber":223,"author":{"gitId":"LordSaumya"},"content":"                try {","lastModifiedDate":"2023-08-23"},{"lineNumber":224,"author":{"gitId":"LordSaumya"},"content":"                    System.out.println(","lastModifiedDate":"2023-08-23"},{"lineNumber":225,"author":{"gitId":"LordSaumya"},"content":"                            \"One less annoyance to plague your feeble list. This task has been banished:\\n\");","lastModifiedDate":"2023-08-23"},{"lineNumber":226,"author":{"gitId":"LordSaumya"},"content":"                    System.out.println(list.get(taskNum - 1).toString());","lastModifiedDate":"2023-08-23"},{"lineNumber":227,"author":{"gitId":"LordSaumya"},"content":"                    list.remove(taskNum - 1);","lastModifiedDate":"2023-08-23"},{"lineNumber":228,"author":{"gitId":"LordSaumya"},"content":"                    System.out.println(","lastModifiedDate":"2023-08-23"},{"lineNumber":229,"author":{"gitId":"LordSaumya"},"content":"                            \"Congratulations, your pile of tasks has shrunk to a measly \" + list.size() + \".\");","lastModifiedDate":"2023-08-23"},{"lineNumber":230,"author":{"gitId":"LordSaumya"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":231,"author":{"gitId":"LordSaumya"},"content":"                    System.out.println(\"You have no such task, mortal.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":232,"author":{"gitId":"LordSaumya"},"content":"                } finally {","lastModifiedDate":"2023-08-23"},{"lineNumber":233,"author":{"gitId":"LordSaumya"},"content":"                    System.out.println(divider);","lastModifiedDate":"2023-08-23"},{"lineNumber":234,"author":{"gitId":"LordSaumya"},"content":"                }","lastModifiedDate":"2023-08-23"},{"lineNumber":235,"author":{"gitId":"LordSaumya"},"content":"            } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":236,"author":{"gitId":"LordSaumya"},"content":"                // Error message (unknown command)","lastModifiedDate":"2023-08-23"},{"lineNumber":237,"author":{"gitId":"LordSaumya"},"content":"                System.out.println(divider);","lastModifiedDate":"2023-08-23"},{"lineNumber":238,"author":{"gitId":"LordSaumya"},"content":"                System.out.println(\"Do not test my patience, mortal. Speak clearly.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":239,"author":{"gitId":"LordSaumya"},"content":"                System.out.println(divider);","lastModifiedDate":"2023-08-23"},{"lineNumber":240,"author":{"gitId":"LordSaumya"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":241,"author":{"gitId":"LordSaumya"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":242,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":243,"author":{"gitId":"LordSaumya"},"content":"        // Write to file","lastModifiedDate":"2023-08-29"},{"lineNumber":244,"author":{"gitId":"LordSaumya"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":245,"author":{"gitId":"LordSaumya"},"content":"            FileWriter taskWriter \u003d new FileWriter(\"tasks.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":246,"author":{"gitId":"LordSaumya"},"content":"            for (Task task : list) {","lastModifiedDate":"2023-08-29"},{"lineNumber":247,"author":{"gitId":"LordSaumya"},"content":"                taskWriter.write(task.toFileString() + \"\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":248,"author":{"gitId":"LordSaumya"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":249,"author":{"gitId":"LordSaumya"},"content":"            taskWriter.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":250,"author":{"gitId":"LordSaumya"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":251,"author":{"gitId":"LordSaumya"},"content":"            System.out.println(\"Error writing to file.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":252,"author":{"gitId":"LordSaumya"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":253,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":254,"author":{"gitId":"LordSaumya"},"content":"        System.out.println(divider);","lastModifiedDate":"2023-08-23"},{"lineNumber":255,"author":{"gitId":"LordSaumya"},"content":"        System.out.println(\"Is that all? I have better things to do than to listen to lesser beings. Farewell.\");","lastModifiedDate":"2023-08-23"},{"lineNumber":256,"author":{"gitId":"LordSaumya"},"content":"        System.out.println(divider);","lastModifiedDate":"2023-08-23"},{"lineNumber":257,"author":{"gitId":"LordSaumya"},"content":"        sc.close();","lastModifiedDate":"2023-08-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"LordSaumya":255,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"LordSaumya"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":"    protected LocalDateTime startTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":"    protected LocalDateTime endTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"LordSaumya"},"content":"    public Event(String description, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"LordSaumya"},"content":"        super(description, \"E\");","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"LordSaumya"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"LordSaumya"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"LordSaumya"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"LordSaumya"},"content":"        return super.toString() + \" (from: \" + startTime.format(formatter) + \" to \" + endTime.format(formatter) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"LordSaumya"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"LordSaumya"},"content":"        return super.toFileString() + \" | \" + startTime + \" - \" + endTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"LordSaumya"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"LordSaumya":24}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"LordSaumya"},"content":"    protected String type;","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"    public Task(String description, String type) {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"LordSaumya"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"LordSaumya"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"LordSaumya"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"LordSaumya"},"content":"        return \"[\" + this.type + \"]\" + \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"LordSaumya"},"content":"    public void changeStatus(boolean isDone) {","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"LordSaumya"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"LordSaumya"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"LordSaumya"},"content":"        return this.type + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"LordSaumya"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"LordSaumya":27}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"LordSaumya"},"content":"        super(description, \"T\");","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":"        return super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"LordSaumya"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"LordSaumya"},"content":"        return super.toFileString();","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"LordSaumya"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"LordSaumya":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"todo ToDo1","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"deadline Deadline1 /by deadlineDate","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"event Event1 /from startTime /to endTime","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"LordSaumya"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":"mark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"LordSaumya"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"LordSaumya"},"content":"unmark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"LordSaumya"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"LordSaumya"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"LordSaumya":13}}]
