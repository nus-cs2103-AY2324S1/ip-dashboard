[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"}","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":"checkstyle {","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"LordSaumya"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"LordSaumya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"LordSaumya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"LordSaumya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"LordSaumya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"LordSaumya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"LordSaumya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"LordSaumya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"LordSaumya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"LordSaumya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"LordSaumya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"LordSaumya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"LordSaumya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"LordSaumya"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"LordSaumya"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"LordSaumya"},"content":"dependencies {","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"LordSaumya"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"LordSaumya"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"LordSaumya"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"LordSaumya"},"content":"test {","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"LordSaumya"},"content":"    useJUnitPlatform()","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"LordSaumya":30,"-":42}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"package duke;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"LordSaumya"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"LordSaumya"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"LordSaumya"},"content":" * Initialises Duke and starts the interaction with the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"LordSaumya"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"LordSaumya"},"content":"public class Duke {","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"LordSaumya"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"LordSaumya"},"content":"    private TaskList list;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"LordSaumya"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"LordSaumya"},"content":"    private Parser parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"LordSaumya"},"content":"     * Initialises the application with the necessary components.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"LordSaumya"},"content":"    public Duke() {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"LordSaumya"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"LordSaumya"},"content":"        storage \u003d new Storage(ui);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"LordSaumya"},"content":"        parser \u003d new Parser(ui);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"LordSaumya"},"content":"        try {","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"LordSaumya"},"content":"            list \u003d new TaskList(storage.readFile());","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"LordSaumya"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"LordSaumya"},"content":"            ui.showError(\"Error reading from file.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"LordSaumya"},"content":"            list \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"LordSaumya"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"LordSaumya"},"content":"    /** ","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"LordSaumya"},"content":"     * Parses the user input and executes the command.","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"LordSaumya"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"LordSaumya"},"content":"     * @param input The user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"LordSaumya"},"content":"     * @return The response to the user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"LordSaumya"},"content":"    */","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"LordSaumya"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"LordSaumya"},"content":"        Command command \u003d parser.parseCommand(input.trim().split(\" \"));","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"LordSaumya"},"content":"        assert command !\u003d null : \"Command should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"LordSaumya"},"content":"        if (command instanceof ByeCommand){","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"LordSaumya"},"content":"            try {","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"LordSaumya"},"content":"                command.execute(list, ui);","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"LordSaumya"},"content":"                storage.writeFile(list);","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"LordSaumya"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"LordSaumya"},"content":"                return ui.showError(\"Error writing to file.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"LordSaumya"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"LordSaumya"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"LordSaumya"},"content":"        return command.execute(list, ui);","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"LordSaumya":59,"-":1}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"package duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"LordSaumya"},"content":"// Solution below adapted from https://se-education.org/guides/tutorials/javaFxPart2.html","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"LordSaumya"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"LordSaumya"},"content":"public class Launcher { ","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"LordSaumya"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"LordSaumya"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"LordSaumya"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"LordSaumya":16}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"LordSaumya"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"LordSaumya"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"LordSaumya"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"LordSaumya"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"LordSaumya"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"LordSaumya"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"LordSaumya"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"LordSaumya"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"LordSaumya"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"LordSaumya"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"LordSaumya"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"LordSaumya"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"LordSaumya"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"LordSaumya"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"LordSaumya"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"LordSaumya"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"LordSaumya"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"LordSaumya"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"LordSaumya"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"LordSaumya"},"content":"    private Image userImg \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"LordSaumya"},"content":"    private Image kronosImg \u003d new Image(this.getClass().getResourceAsStream(\"/images/kronos.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"LordSaumya"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"LordSaumya"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"LordSaumya"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"LordSaumya"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"LordSaumya"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"LordSaumya"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"LordSaumya"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"LordSaumya"},"content":"            stage.setTitle(\"Kronos the Task Manager\");","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"LordSaumya"},"content":"            stage.setResizable(false);","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"LordSaumya"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"LordSaumya"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"LordSaumya"},"content":"            stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"LordSaumya"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"LordSaumya"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"LordSaumya"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"LordSaumya"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"LordSaumya":52}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":" * Represents a command that exits the program.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"LordSaumya"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"LordSaumya"},"content":"     * Constructs a ByeCommand object using the superclass constructor.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"LordSaumya"},"content":"    public ByeCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"LordSaumya"},"content":"        super(CommandType.BYE);","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"LordSaumya"},"content":"     * Displays the exit message.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"LordSaumya"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"LordSaumya"},"content":"     * @param tasks The task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"LordSaumya"},"content":"     * @param ui    The user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"LordSaumya"},"content":"    public String execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"LordSaumya"},"content":"        assert tasks !\u003d null : \"Task list should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"LordSaumya"},"content":"        assert ui !\u003d null : \"User interface should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"LordSaumya"},"content":"        return ui.showEndMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"LordSaumya"},"content":"    ","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"LordSaumya"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"LordSaumya"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"LordSaumya"},"content":"        return obj instanceof ByeCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"LordSaumya"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"LordSaumya":34}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"LordSaumya"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":" * Represents a user command.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"LordSaumya"},"content":"     * Represents the type of command.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"LordSaumya"},"content":"    public enum CommandType {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"LordSaumya"},"content":"        LIST, MARK, UNMARK, DELETE, TODO, DEADLINE, EVENT, BYE, FIND, INVALID","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"LordSaumya"},"content":"    public CommandType type;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"LordSaumya"},"content":"     * Initialises a Command object with the given type.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"LordSaumya"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"LordSaumya"},"content":"     * @param type The type of command.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"LordSaumya"},"content":"    public Command(CommandType type) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"LordSaumya"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"LordSaumya"},"content":"     * Executes the command.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"LordSaumya"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"LordSaumya"},"content":"     * @param tasks The task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"LordSaumya"},"content":"     * @param ui    The user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"LordSaumya"},"content":"     * @return The response to the user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"LordSaumya"},"content":"    public abstract String execute(TaskList tasks, Ui ui);","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"LordSaumya"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"LordSaumya":37}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"LordSaumya"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"LordSaumya"},"content":" * Represents a command that adds a deadline task.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"LordSaumya"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"LordSaumya"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"LordSaumya"},"content":"    private String description;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"LordSaumya"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"LordSaumya"},"content":"     * Constructs a DeadlineCommand object using the superclass constructor and","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"LordSaumya"},"content":"     * initialises the description and deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"LordSaumya"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"LordSaumya"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"LordSaumya"},"content":"     * @param by          The deadline of the deadline task.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"LordSaumya"},"content":"    public DeadlineCommand(String description, LocalDateTime by) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"LordSaumya"},"content":"        super(CommandType.DEADLINE);","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"LordSaumya"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"LordSaumya"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"LordSaumya"},"content":"     * Adds a deadline task to the task list and displays the deadline task message.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"LordSaumya"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"LordSaumya"},"content":"     * @param tasks The task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"LordSaumya"},"content":"     * @param ui    The user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"LordSaumya"},"content":"     * @return The response to the user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"LordSaumya"},"content":"    public String execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"LordSaumya"},"content":"        assert tasks !\u003d null : \"Task list should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"LordSaumya"},"content":"        assert ui !\u003d null : \"User interface should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"LordSaumya"},"content":"        Task task \u003d new Deadline(description, by);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"LordSaumya"},"content":"        tasks.addTask(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"LordSaumya"},"content":"        return ui.showDeadlineMessage(task) + \"\\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"LordSaumya"},"content":"                ui.showTaskListSizeMessage(tasks.getSize(), true);","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"LordSaumya"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"LordSaumya"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"LordSaumya"},"content":"        if (obj instanceof DeadlineCommand) {","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"LordSaumya"},"content":"            DeadlineCommand deadlineCommand \u003d (DeadlineCommand) obj;","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"LordSaumya"},"content":"            return deadlineCommand.description.equals(this.description)","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"LordSaumya"},"content":"                    \u0026\u0026 deadlineCommand.by.equals(this.by);","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"LordSaumya"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"LordSaumya"},"content":"        return false;","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"LordSaumya"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"LordSaumya":54}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"LordSaumya"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":" * Represents a command that deletes a task.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"LordSaumya"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"LordSaumya"},"content":"    int taskNum;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"LordSaumya"},"content":"     * Constructs a DeleteCommand object using the superclass constructor and","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"LordSaumya"},"content":"     * initialises the index of the task to delete.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"LordSaumya"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"LordSaumya"},"content":"     * @param taskNum The task number.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"LordSaumya"},"content":"    public DeleteCommand(int taskNum) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"LordSaumya"},"content":"        super(CommandType.DELETE);","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"LordSaumya"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"LordSaumya"},"content":"     * Deletes a task from the task list and displays the delete message.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"LordSaumya"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"LordSaumya"},"content":"     * @param tasks The task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"LordSaumya"},"content":"     * @param ui    The user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"LordSaumya"},"content":"     * @return The response to the user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"LordSaumya"},"content":"    public String execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"LordSaumya"},"content":"        assert tasks !\u003d null : \"Task list should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"LordSaumya"},"content":"        assert ui !\u003d null : \"User interface should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"LordSaumya"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"LordSaumya"},"content":"            Task task \u003d tasks.getTask(taskNum - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"LordSaumya"},"content":"            tasks.deleteTask(taskNum - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"LordSaumya"},"content":"            return ui.showDeleteMessage(task) + ui.showTaskListSizeMessage(tasks.getSize(), false);","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"LordSaumya"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"LordSaumya"},"content":"            return ui.showError(\"You have no such task, mortal.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"LordSaumya"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"LordSaumya"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"LordSaumya"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"LordSaumya"},"content":"        if (obj instanceof DeleteCommand) {","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"LordSaumya"},"content":"            DeleteCommand deleteCommand \u003d (DeleteCommand) obj;","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"LordSaumya"},"content":"            return deleteCommand.taskNum \u003d\u003d this.taskNum;","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"LordSaumya"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"LordSaumya"},"content":"        return false;","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"LordSaumya"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"LordSaumya":51}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"LordSaumya"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"LordSaumya"},"content":" * Represents a command that adds an event task.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"LordSaumya"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"LordSaumya"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"LordSaumya"},"content":"    private String description;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"LordSaumya"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"LordSaumya"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"LordSaumya"},"content":"     * Constructs an EventCommand object using the superclass constructor and","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"LordSaumya"},"content":"     * initialises the description and event time.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"LordSaumya"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"LordSaumya"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"LordSaumya"},"content":"     * @param from        The start time of the event task.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"LordSaumya"},"content":"     * @param to          The end time of the event task.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"LordSaumya"},"content":"    public EventCommand(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"LordSaumya"},"content":"        super(CommandType.EVENT);","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"LordSaumya"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"LordSaumya"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"LordSaumya"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"LordSaumya"},"content":"     * Adds an event task to the task list and displays the event task message.","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"LordSaumya"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"LordSaumya"},"content":"     * @param tasks The task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"LordSaumya"},"content":"     * @param ui    The user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"LordSaumya"},"content":"     * @return The response to the user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"LordSaumya"},"content":"    public String execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"LordSaumya"},"content":"        assert tasks !\u003d null : \"Task list should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"LordSaumya"},"content":"        assert ui !\u003d null : \"User interface should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"LordSaumya"},"content":"        Task task \u003d new Event(description, from, to);","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"LordSaumya"},"content":"        tasks.addTask(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"LordSaumya"},"content":"        return ui.showEventMessage(task) + ui.showTaskListSizeMessage(tasks.getSize(), true);","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"LordSaumya"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"LordSaumya"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"LordSaumya"},"content":"        if (obj instanceof EventCommand) {","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"LordSaumya"},"content":"            EventCommand eventCommand \u003d (EventCommand) obj;","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"LordSaumya"},"content":"            return eventCommand.description.equals(this.description)","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"LordSaumya"},"content":"                    \u0026\u0026 eventCommand.from.equals(this.from)","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"LordSaumya"},"content":"                    \u0026\u0026 eventCommand.to.equals(this.to);","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"LordSaumya"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"LordSaumya"},"content":"        return false;","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"LordSaumya"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"LordSaumya":57}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"LordSaumya"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":" * Represents a command to find tasks that match a search term.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"LordSaumya"},"content":"    String searchTerm;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"LordSaumya"},"content":"     * Initialises the find command with a search term.","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"LordSaumya"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"LordSaumya"},"content":"     * @param searchTerm The search term to find tasks with.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"LordSaumya"},"content":"    public FindCommand(String searchTerm) {","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"LordSaumya"},"content":"        super(CommandType.FIND);","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"LordSaumya"},"content":"        this.searchTerm \u003d searchTerm;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"LordSaumya"},"content":"     * Executes the find command.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"LordSaumya"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"LordSaumya"},"content":"     * @param tasks The task list to find tasks from.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"LordSaumya"},"content":"     * @param ui The ui to display the matching tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"LordSaumya"},"content":"     * @return The response to the user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"LordSaumya"},"content":"    public String execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"LordSaumya"},"content":"        assert tasks !\u003d null : \"Task list should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"LordSaumya"},"content":"        assert ui !\u003d null : \"User interface should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"LordSaumya"},"content":"        TaskList matchingTasks \u003d tasks.findTasks(searchTerm);","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"LordSaumya"},"content":"        return ui.listTasks(matchingTasks, true);","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"LordSaumya"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"LordSaumya"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"LordSaumya"},"content":"        if (obj instanceof FindCommand) {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"LordSaumya"},"content":"            FindCommand findCommand \u003d (FindCommand) obj;","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"LordSaumya"},"content":"            return findCommand.searchTerm.equals(this.searchTerm);","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"LordSaumya"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"LordSaumya"},"content":"        return false;","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"LordSaumya"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"LordSaumya":44}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"LordSaumya"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":" * Represents an invalid command.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"LordSaumya"},"content":"     * Constructs an InvalidCommand object using the superclass constructor.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"LordSaumya"},"content":"    public InvalidCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"LordSaumya"},"content":"        super(CommandType.INVALID);","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"LordSaumya"},"content":"     * Displays the invalid command message.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"LordSaumya"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"LordSaumya"},"content":"     * @param tasks The task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"LordSaumya"},"content":"     * @param ui    The user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"LordSaumya"},"content":"     * @return The response to the user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"LordSaumya"},"content":"    public String execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"LordSaumya"},"content":"        assert tasks !\u003d null : \"Task list should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"LordSaumya"},"content":"        assert ui !\u003d null : \"User interface should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"LordSaumya"},"content":"        return ui.showInvalidCommandMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"LordSaumya"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"LordSaumya"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"LordSaumya"},"content":"        return obj instanceof InvalidCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"LordSaumya"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"LordSaumya":35}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"LordSaumya"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":" * Represents a command that lists all the tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"LordSaumya"},"content":"     * Constructs a ListCommand object using the superclass constructor.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"LordSaumya"},"content":"    public ListCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"LordSaumya"},"content":"        super(CommandType.LIST);","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"LordSaumya"},"content":"     * Displays the list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"LordSaumya"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"LordSaumya"},"content":"     * @param tasks The task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"LordSaumya"},"content":"     * @param ui    The user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"LordSaumya"},"content":"     * @return The response to the user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"LordSaumya"},"content":"    public String execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"LordSaumya"},"content":"        assert tasks !\u003d null : \"Task list should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"LordSaumya"},"content":"        assert ui !\u003d null : \"User interface should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"LordSaumya"},"content":"        return ui.listTasks(tasks, false);","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"LordSaumya"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"LordSaumya"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"LordSaumya"},"content":"        return obj instanceof ListCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"LordSaumya"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"LordSaumya":35}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"LordSaumya"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":" * Represents a command that marks a task as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"LordSaumya"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"LordSaumya"},"content":"    private int taskNum;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"LordSaumya"},"content":"     * Constructs a MarkCommand object using the superclass constructor and","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"LordSaumya"},"content":"     * initialises the index of the task to mark.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"LordSaumya"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"LordSaumya"},"content":"     * @param taskNum The task number.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"LordSaumya"},"content":"    public MarkCommand(int taskNum) {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"LordSaumya"},"content":"        super(CommandType.MARK);","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"LordSaumya"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"LordSaumya"},"content":"     * Marks a task as done and displays the mark task message.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"LordSaumya"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"LordSaumya"},"content":"     * @param tasks The task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"LordSaumya"},"content":"     * @param ui    The user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"LordSaumya"},"content":"     * @throws IndexOutOfBoundsException If the task number is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"LordSaumya"},"content":"     * @return The response to the user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"LordSaumya"},"content":"    public String execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"LordSaumya"},"content":"        assert tasks !\u003d null : \"Task list should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"LordSaumya"},"content":"        assert ui !\u003d null : \"User interface should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"LordSaumya"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"LordSaumya"},"content":"            Task task \u003d tasks.getTask(taskNum - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"LordSaumya"},"content":"            task.changeStatus(true);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"LordSaumya"},"content":"            return ui.showMarkTaskMessage(task);","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"LordSaumya"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"LordSaumya"},"content":"            return ui.showError(\"You have no such task, mortal.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"LordSaumya"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"LordSaumya"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"LordSaumya"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"LordSaumya"},"content":"        if (obj instanceof MarkCommand) {","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"LordSaumya"},"content":"            MarkCommand markCommand \u003d (MarkCommand) obj;","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"LordSaumya"},"content":"            return markCommand.taskNum \u003d\u003d this.taskNum;","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"LordSaumya"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"LordSaumya"},"content":"        return false;","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"LordSaumya"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"LordSaumya":53}},{"path":"src/main/java/duke/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"LordSaumya"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":" * Represents a command that adds a todo task.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"LordSaumya"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"LordSaumya"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"LordSaumya"},"content":"    private String description;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"LordSaumya"},"content":"     * Constructs a ToDoCommand object using the superclass constructor and","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"LordSaumya"},"content":"     * initialises the description.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"LordSaumya"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"LordSaumya"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"LordSaumya"},"content":"    public ToDoCommand(String description) {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"LordSaumya"},"content":"        super(CommandType.TODO);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"LordSaumya"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"LordSaumya"},"content":"     * Adds a todo task to the task list and displays the todo task message.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"LordSaumya"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"LordSaumya"},"content":"     * @param tasks The task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"LordSaumya"},"content":"     * @param ui    The user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"LordSaumya"},"content":"     * @return The response to the user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"LordSaumya"},"content":"    public String execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"LordSaumya"},"content":"        assert tasks !\u003d null : \"Task list should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"LordSaumya"},"content":"        assert ui !\u003d null : \"User interface should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"LordSaumya"},"content":"        Task task \u003d new ToDo(description);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"LordSaumya"},"content":"        tasks.addTask(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"LordSaumya"},"content":"        return ui.showTodoMessage(task) + \"\\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"LordSaumya"},"content":"                ui.showTaskListSizeMessage(tasks.getSize(), true);","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"LordSaumya"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"LordSaumya"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"LordSaumya"},"content":"        if (obj instanceof ToDoCommand) {","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"LordSaumya"},"content":"            ToDoCommand todoCommand \u003d (ToDoCommand) obj;","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"LordSaumya"},"content":"            return todoCommand.description.equals(this.description);","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"LordSaumya"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"LordSaumya"},"content":"        return false;","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"LordSaumya"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"LordSaumya":50}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"LordSaumya"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":" * Represents a command that unmarks a task.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"LordSaumya"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"LordSaumya"},"content":"    private int taskNum;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"LordSaumya"},"content":"     * Constructs a UnmarkCommand object using the superclass constructor and","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"LordSaumya"},"content":"     * initialises the task number.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"LordSaumya"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"LordSaumya"},"content":"     * @param taskNum The task number.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"LordSaumya"},"content":"    public UnmarkCommand(int taskNum) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"LordSaumya"},"content":"        super(CommandType.UNMARK);","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"LordSaumya"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"LordSaumya"},"content":"     * Unmarks a task in the task list and displays the unmark task message.","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"LordSaumya"},"content":"     *","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"LordSaumya"},"content":"     * @param tasks The task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"LordSaumya"},"content":"     * @param ui    The user interface.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"LordSaumya"},"content":"     * @throws IndexOutOfBoundsException If the task number is invalid.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"LordSaumya"},"content":"     * @return The response to the user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"LordSaumya"},"content":"    public String execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"LordSaumya"},"content":"        assert tasks !\u003d null : \"Task list should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"LordSaumya"},"content":"        assert ui !\u003d null : \"User interface should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"LordSaumya"},"content":"        ","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"LordSaumya"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"LordSaumya"},"content":"            Task task \u003d tasks.getTask(taskNum - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"LordSaumya"},"content":"            task.changeStatus(false);","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"LordSaumya"},"content":"            return ui.showUnmarkTaskMessage(task);","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"LordSaumya"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"LordSaumya"},"content":"            return ui.showError(\"You have no such task, mortal.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"LordSaumya"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"LordSaumya"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"LordSaumya"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"LordSaumya"},"content":"        if (obj instanceof UnmarkCommand) {","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"LordSaumya"},"content":"            UnmarkCommand unmarkCommand \u003d (UnmarkCommand) obj;","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"LordSaumya"},"content":"            return unmarkCommand.taskNum \u003d\u003d this.taskNum;","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"LordSaumya"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"LordSaumya"},"content":"        return false;","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"LordSaumya"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"LordSaumya":53}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"package duke.parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"LordSaumya"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"LordSaumya"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"LordSaumya"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"LordSaumya"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"LordSaumya"},"content":"import duke.command.ToDoCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"LordSaumya"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"LordSaumya"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"LordSaumya"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"LordSaumya"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"LordSaumya"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"LordSaumya"},"content":"import duke.command.InvalidCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"LordSaumya"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"LordSaumya"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"LordSaumya"},"content":" * Handles parsing of user input and file input.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"LordSaumya"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"LordSaumya"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"LordSaumya"},"content":"    Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"LordSaumya"},"content":"     * Initialises the parser object with a Ui object.","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"LordSaumya"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"LordSaumya"},"content":"     * @param ui The Ui object to handle user interaction.","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"LordSaumya"},"content":"    public Parser(Ui ui) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"LordSaumya"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"LordSaumya"},"content":"     * Parses the task from the file and returns a Task object.","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"LordSaumya"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"LordSaumya"},"content":"     * @param fileTask The task in the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"LordSaumya"},"content":"     * @return A Task object.","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"LordSaumya"},"content":"    public Task parseFileTask(String fileTask) {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"LordSaumya"},"content":"        String[] taskComponents \u003d fileTask.split(\" \\\\| \");","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"LordSaumya"},"content":"        String taskType \u003d taskComponents[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"LordSaumya"},"content":"        boolean taskStatus \u003d taskComponents[1].equals(\"1\");","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"LordSaumya"},"content":"        String taskDescription \u003d taskComponents[2];","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"LordSaumya"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"LordSaumya"},"content":"        DateTimeFormatter fileFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"LordSaumya"},"content":"        switch (taskType) {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"LordSaumya"},"content":"            case \"T\":","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"LordSaumya"},"content":"                ToDo todoTask \u003d new ToDo(taskDescription);","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"LordSaumya"},"content":"                todoTask.changeStatus(taskStatus);","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"LordSaumya"},"content":"                task \u003d todoTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"LordSaumya"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"LordSaumya"},"content":"            case \"D\":","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"LordSaumya"},"content":"                LocalDateTime deadlineDate \u003d LocalDateTime.parse(taskComponents[3], fileFormatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"LordSaumya"},"content":"                Deadline deadlineTask \u003d new Deadline(taskDescription, deadlineDate);","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"LordSaumya"},"content":"                deadlineTask.changeStatus(taskStatus);","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"LordSaumya"},"content":"                task \u003d deadlineTask;","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"LordSaumya"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"LordSaumya"},"content":"            case \"E\":","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"LordSaumya"},"content":"                String[] taskDates \u003d taskComponents[3].split(\" - \");","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"LordSaumya"},"content":"                Event event \u003d new Event(taskDescription, LocalDateTime.parse(taskDates[0], fileFormatter),","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"LordSaumya"},"content":"                        LocalDateTime.parse(taskDates[1], fileFormatter));","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"LordSaumya"},"content":"                event.changeStatus(taskStatus);","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"LordSaumya"},"content":"                task \u003d event;","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"LordSaumya"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"LordSaumya"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"LordSaumya"},"content":"        return task;","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"LordSaumya"},"content":"     * Parses the user input and returns a Command object.","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"LordSaumya"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"LordSaumya"},"content":"     * @param input The user input as an array of Strings.","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"LordSaumya"},"content":"     * @return A Command object.","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"LordSaumya"},"content":"    public Command parseCommand(String... input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":82,"author":{"gitId":"LordSaumya"},"content":"        assert input.length \u003e 0 : \"Input to parser should not be empty\";","lastModifiedDate":"2023-09-13"},{"lineNumber":83,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":84,"author":{"gitId":"LordSaumya"},"content":"        String[] inputComponents \u003d input;","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"LordSaumya"},"content":"        String fullInput \u003d String.join(\" \", inputComponents);","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"LordSaumya"},"content":"        String command \u003d inputComponents[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"LordSaumya"},"content":"        DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"LordSaumya"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"LordSaumya"},"content":"            switch (command) {","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"LordSaumya"},"content":"            case \"list\":","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"LordSaumya"},"content":"                return new ListCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"LordSaumya"},"content":"            case \"mark\":","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"LordSaumya"},"content":"                return new MarkCommand(Integer.parseInt(inputComponents[1]));","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"LordSaumya"},"content":"            case \"unmark\":","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"LordSaumya"},"content":"                return new UnmarkCommand(Integer.parseInt(inputComponents[1]));","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"LordSaumya"},"content":"            case \"todo\":","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"LordSaumya"},"content":"                return new ToDoCommand(fullInput.substring(5));","lastModifiedDate":"2023-09-07"},{"lineNumber":99,"author":{"gitId":"LordSaumya"},"content":"            case \"deadline\":","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"LordSaumya"},"content":"                String[] deadlineComponents \u003d fullInput.substring(9).split(\" /by \");","lastModifiedDate":"2023-09-07"},{"lineNumber":101,"author":{"gitId":"LordSaumya"},"content":"                return new DeadlineCommand(deadlineComponents[0],","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"LordSaumya"},"content":"                        LocalDateTime.parse(deadlineComponents[1], inputFormatter));","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"LordSaumya"},"content":"            case \"event\":","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"LordSaumya"},"content":"                String[] eventComponents \u003d fullInput.substring(6).split(\" /from \");","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"LordSaumya"},"content":"                String[] eventDates \u003d eventComponents[1].split(\" /to \");","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"LordSaumya"},"content":"                LocalDateTime eventStart \u003d LocalDateTime.parse(eventDates[0], inputFormatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"LordSaumya"},"content":"                LocalDateTime eventEnd \u003d LocalDateTime.parse(eventDates[1], inputFormatter);","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"LordSaumya"},"content":"                return new EventCommand(eventComponents[0], eventStart, eventEnd);","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"LordSaumya"},"content":"            case \"delete\":","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"LordSaumya"},"content":"                return new DeleteCommand(Integer.parseInt(inputComponents[1]));","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"LordSaumya"},"content":"            case \"find\":","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"LordSaumya"},"content":"                return new FindCommand(fullInput.substring(5));","lastModifiedDate":"2023-09-07"},{"lineNumber":113,"author":{"gitId":"LordSaumya"},"content":"            case \"bye\":","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"LordSaumya"},"content":"                return new ByeCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"LordSaumya"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"LordSaumya"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"LordSaumya"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"LordSaumya"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"LordSaumya"},"content":"        return new InvalidCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"LordSaumya"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"LordSaumya":122}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"package duke.storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"LordSaumya"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"import java.util.List;","lastModifiedDate":"2023-09-15"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-09-15"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-15"},{"lineNumber":10,"author":{"gitId":"LordSaumya"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"LordSaumya"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"LordSaumya"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"LordSaumya"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"LordSaumya"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"LordSaumya"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"LordSaumya"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"LordSaumya"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"LordSaumya"},"content":" * Handles reading and writing tasks to file.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"LordSaumya"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"LordSaumya"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"LordSaumya"},"content":"    Scanner sc;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"LordSaumya"},"content":"    Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"LordSaumya"},"content":"    DateTimeFormatter fileFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"LordSaumya"},"content":"     * Initialises the storage object with a scanner for file input and a Ui object.","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"LordSaumya"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"LordSaumya"},"content":"     * @param ui The Ui object to handle user interaction.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"LordSaumya"},"content":"    public Storage(Ui ui) {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"LordSaumya"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"LordSaumya"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"LordSaumya"},"content":"     * Reads the tasks from the file and returns an ArrayList of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"LordSaumya"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"LordSaumya"},"content":"     * @return An ArrayList of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"LordSaumya"},"content":"     * @throws FileNotFoundException If the file is not found.","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"LordSaumya"},"content":"     * @throws Exception             If there are any other errors reading the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"LordSaumya"},"content":"    public ArrayList\u003cTask\u003e readFile() throws Exception {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"LordSaumya"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"LordSaumya"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"LordSaumya"},"content":"            File taskFile \u003d new File(\"tasks.txt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"LordSaumya"},"content":"            Scanner taskScanner \u003d new Scanner(taskFile);","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"LordSaumya"},"content":"            Parser parser \u003d new Parser(ui);","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"LordSaumya"},"content":"            List\u003cString\u003e lines \u003d Files.lines(Paths.get(\"tasks.txt\"))","lastModifiedDate":"2023-09-15"},{"lineNumber":53,"author":{"gitId":"LordSaumya"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2023-09-15"},{"lineNumber":54,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":55,"author":{"gitId":"LordSaumya"},"content":"            list \u003d lines.stream()","lastModifiedDate":"2023-09-15"},{"lineNumber":56,"author":{"gitId":"LordSaumya"},"content":"                    .map(parser::parseFileTask)","lastModifiedDate":"2023-09-15"},{"lineNumber":57,"author":{"gitId":"LordSaumya"},"content":"                    .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2023-09-15"},{"lineNumber":58,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"LordSaumya"},"content":"            taskScanner.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"LordSaumya"},"content":"            assert list !\u003d null : \"Task list should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"LordSaumya"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"LordSaumya"},"content":"            // File does not exist","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"LordSaumya"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"LordSaumya"},"content":"                // Create new file","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"LordSaumya"},"content":"                File taskFile \u003d new File(\"tasks.txt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"LordSaumya"},"content":"                taskFile.createNewFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"LordSaumya"},"content":"            } catch (Exception f) {","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"LordSaumya"},"content":"                ui.showError(\"Error creating new file.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"LordSaumya"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"LordSaumya"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"LordSaumya"},"content":"        return list;","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"LordSaumya"},"content":"     * Writes the tasks to the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"LordSaumya"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"LordSaumya"},"content":"     * @param list The TaskList object containing the tasks to be written to file.","lastModifiedDate":"2023-09-02"},{"lineNumber":78,"author":{"gitId":"LordSaumya"},"content":"     * @throws Exception If there are any errors writing to the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"LordSaumya"},"content":"    public void writeFile(TaskList list) throws Exception {","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"LordSaumya"},"content":"        FileWriter fw \u003d new FileWriter(\"tasks.txt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"LordSaumya"},"content":"        FileWriter taskWriter \u003d new FileWriter(\"tasks.txt\");","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"LordSaumya"},"content":"        list.stream().forEach(task -\u003e {","lastModifiedDate":"2023-09-15"},{"lineNumber":85,"author":{"gitId":"LordSaumya"},"content":"            try {","lastModifiedDate":"2023-09-15"},{"lineNumber":86,"author":{"gitId":"LordSaumya"},"content":"                taskWriter.write(task.toFileString() + \"\\n\");","lastModifiedDate":"2023-09-15"},{"lineNumber":87,"author":{"gitId":"LordSaumya"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"LordSaumya"},"content":"                ui.showError(\"Error writing to file.\");","lastModifiedDate":"2023-09-15"},{"lineNumber":89,"author":{"gitId":"LordSaumya"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"LordSaumya"},"content":"        });","lastModifiedDate":"2023-09-15"},{"lineNumber":91,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":92,"author":{"gitId":"LordSaumya"},"content":"        taskWriter.close();","lastModifiedDate":"2023-09-15"},{"lineNumber":93,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"LordSaumya"},"content":"        assert fw !\u003d null : \"File writer should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":95,"author":{"gitId":"LordSaumya"},"content":"        fw.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"LordSaumya"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"LordSaumya":97}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"package duke.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"LordSaumya"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":" * Represents a deadline task with a deadline.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"LordSaumya"},"content":"    protected LocalDateTime deadlineDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"LordSaumya"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"LordSaumya"},"content":"     * Initialises the deadline task with the given description and deadline date.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"LordSaumya"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"LordSaumya"},"content":"     * @param description  The description of the deadline task.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"LordSaumya"},"content":"     * @param deadlineDate The deadline date of the deadline task.","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"LordSaumya"},"content":"    public Deadline(String description, LocalDateTime deadlineDate) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"LordSaumya"},"content":"        super(description, \"D\");","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"LordSaumya"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"LordSaumya"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"LordSaumya"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"LordSaumya"},"content":"        return super.toString() + \" (by: \" + deadlineDate.format(formatter) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"LordSaumya"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"LordSaumya"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"LordSaumya"},"content":"        return super.toFileString() + \" | \" + deadlineDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"LordSaumya"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"LordSaumya"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"LordSaumya"},"content":"        if (obj instanceof Deadline) {","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"LordSaumya"},"content":"            Deadline deadline \u003d (Deadline) obj;","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"LordSaumya"},"content":"            return this.description.equals(deadline.description) \u0026\u0026 this.deadlineDate.equals(deadline.deadlineDate);","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"LordSaumya"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"LordSaumya"},"content":"        return false;","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"LordSaumya"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"LordSaumya":42}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"package duke.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"LordSaumya"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":" * Represents an event task that starts and ends at a specific time.","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"LordSaumya"},"content":"    protected LocalDateTime startTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"LordSaumya"},"content":"    protected LocalDateTime endTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"LordSaumya"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"LordSaumya"},"content":"     * Initialises the event task with the given description, start time and end","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"LordSaumya"},"content":"     * time.","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"LordSaumya"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"LordSaumya"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"LordSaumya"},"content":"     * @param startTime   The start time of the event task.","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"LordSaumya"},"content":"     * @param endTime     The end time of the event task.","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"LordSaumya"},"content":"    public Event(String description, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"LordSaumya"},"content":"        super(description, \"E\");","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"LordSaumya"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"LordSaumya"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"LordSaumya"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"LordSaumya"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"LordSaumya"},"content":"        return super.toString() + \" (from: \" + startTime.format(formatter) + \" to \" + endTime.format(formatter) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"LordSaumya"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"LordSaumya"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"LordSaumya"},"content":"        return super.toFileString() + \" | \" + startTime + \" - \" + endTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"LordSaumya"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"LordSaumya"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"LordSaumya"},"content":"        if (obj instanceof Event) {","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"LordSaumya"},"content":"            Event event \u003d (Event) obj;","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"LordSaumya"},"content":"            return this.description.equals(event.description) \u0026\u0026 this.startTime.equals(event.startTime)","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"LordSaumya"},"content":"                    \u0026\u0026 this.endTime.equals(event.endTime);","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"LordSaumya"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"LordSaumya"},"content":"        return false;","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"LordSaumya"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"LordSaumya":47}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"package duke.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"LordSaumya"},"content":" * Represents a task with a description, a type, and a status.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":"    protected String type;","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"LordSaumya"},"content":"     * Initialises the task with the given description and type.","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"LordSaumya"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"LordSaumya"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"LordSaumya"},"content":"     * @param type        The type of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"LordSaumya"},"content":"    public Task(String description, String type) {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"LordSaumya"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"LordSaumya"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"LordSaumya"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"LordSaumya"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"LordSaumya"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"LordSaumya"},"content":"     * @return The status icon of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"LordSaumya"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"LordSaumya"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"LordSaumya"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"LordSaumya"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"LordSaumya"},"content":"        return \"[\" + this.type + \"]\" + \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"LordSaumya"},"content":"     * Changes the status of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"LordSaumya"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"LordSaumya"},"content":"     * @param isDone The new status of the task.","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"LordSaumya"},"content":"    public void changeStatus(boolean isDone) {","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"LordSaumya"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"LordSaumya"},"content":"     * Returns the string representation of the task to be written to the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"LordSaumya"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"LordSaumya"},"content":"     * @return The string representation of the task to be written to the file.","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"LordSaumya"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"LordSaumya"},"content":"        return this.type + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"LordSaumya"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"LordSaumya":54}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"package duke.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"LordSaumya"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":" * Represents a list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"LordSaumya"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"LordSaumya"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-09-15"},{"lineNumber":12,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"LordSaumya"},"content":"     * Initialises an empty task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"LordSaumya"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"LordSaumya"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"LordSaumya"},"content":"     * Initialises a task list with the given list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"LordSaumya"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"LordSaumya"},"content":"     * @param list The list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"LordSaumya"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"LordSaumya"},"content":"        this.list \u003d list;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"LordSaumya"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"LordSaumya"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"LordSaumya"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"LordSaumya"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"LordSaumya"},"content":"        this.list.add(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"LordSaumya"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"LordSaumya"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"LordSaumya"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"LordSaumya"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"LordSaumya"},"content":"        this.list.remove(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"LordSaumya"},"content":"     * Returns the task at the given index.","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"LordSaumya"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"LordSaumya"},"content":"     * @param index The index of the task to be returned.","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"LordSaumya"},"content":"     * @return The task at the given index.","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"LordSaumya"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"LordSaumya"},"content":"        return this.list.get(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"LordSaumya"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"LordSaumya"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"LordSaumya"},"content":"     * @return The number of tasks in the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"LordSaumya"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"LordSaumya"},"content":"        return this.list.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"LordSaumya"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"LordSaumya"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"LordSaumya"},"content":"     * @return The list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"LordSaumya"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"LordSaumya"},"content":"        return this.list;","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"LordSaumya"},"content":"    public TaskList findTasks(String searchTerm) {","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"LordSaumya"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":77,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":78,"author":{"gitId":"LordSaumya"},"content":"        matchingTasks \u003d list.stream()","lastModifiedDate":"2023-09-15"},{"lineNumber":79,"author":{"gitId":"LordSaumya"},"content":"                .filter(task -\u003e task.description.contains(searchTerm))","lastModifiedDate":"2023-09-15"},{"lineNumber":80,"author":{"gitId":"LordSaumya"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2023-09-15"},{"lineNumber":81,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":82,"author":{"gitId":"LordSaumya"},"content":"        return new TaskList(matchingTasks);","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"LordSaumya"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"LordSaumya"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"LordSaumya"},"content":"        if (obj instanceof TaskList) {","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"LordSaumya"},"content":"            TaskList taskList \u003d (TaskList) obj;","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"LordSaumya"},"content":"            return taskList.list.equals(this.list);","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"LordSaumya"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"LordSaumya"},"content":"        return false;","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":94,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-15"},{"lineNumber":95,"author":{"gitId":"LordSaumya"},"content":"     * Returns a stream of the tasks in the task list.","lastModifiedDate":"2023-09-15"},{"lineNumber":96,"author":{"gitId":"LordSaumya"},"content":"     * ","lastModifiedDate":"2023-09-15"},{"lineNumber":97,"author":{"gitId":"LordSaumya"},"content":"     * @return A stream of the tasks in the task list.","lastModifiedDate":"2023-09-15"},{"lineNumber":98,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-15"},{"lineNumber":99,"author":{"gitId":"LordSaumya"},"content":"    public Stream\u003cTask\u003e stream() {","lastModifiedDate":"2023-09-15"},{"lineNumber":100,"author":{"gitId":"LordSaumya"},"content":"        return this.list.stream();","lastModifiedDate":"2023-09-15"},{"lineNumber":101,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-15"},{"lineNumber":102,"author":{"gitId":"LordSaumya"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"LordSaumya":102}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"package duke.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"LordSaumya"},"content":" * Represents a todo task.","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":"     * Initialises the todo task with the given description.","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"LordSaumya"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"LordSaumya"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"LordSaumya"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"LordSaumya"},"content":"        super(description, \"T\");","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"LordSaumya"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"LordSaumya"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"LordSaumya"},"content":"        return super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"LordSaumya"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"LordSaumya"},"content":"    public String toFileString() {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"LordSaumya"},"content":"        return super.toFileString();","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"LordSaumya"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"LordSaumya"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"LordSaumya"},"content":"        if (obj instanceof ToDo) {","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"LordSaumya"},"content":"            ToDo todo \u003d (ToDo) obj;","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"LordSaumya"},"content":"            return this.description.equals(todo.description);","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"LordSaumya"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"LordSaumya"},"content":"        return false;","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"LordSaumya"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"LordSaumya":35}},{"path":"src/main/java/duke/ui/DialogueBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"package duke.ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"LordSaumya"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"LordSaumya"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"LordSaumya"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"LordSaumya"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"LordSaumya"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"LordSaumya"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"LordSaumya"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"LordSaumya"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"LordSaumya"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"LordSaumya"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"LordSaumya"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"LordSaumya"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"LordSaumya"},"content":"public class DialogueBox extends HBox {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"LordSaumya"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"LordSaumya"},"content":"    private Label dialogue;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"LordSaumya"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"LordSaumya"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"LordSaumya"},"content":"    private DialogueBox(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"LordSaumya"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"LordSaumya"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogueBox.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"LordSaumya"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"LordSaumya"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"LordSaumya"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"LordSaumya"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"LordSaumya"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"LordSaumya"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"LordSaumya"},"content":"        dialogue.setText(text);","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"LordSaumya"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"LordSaumya"},"content":"     * Flips the dialogue box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"LordSaumya"},"content":"    private void flip() {","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"LordSaumya"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"LordSaumya"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"LordSaumya"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"LordSaumya"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"LordSaumya"},"content":"    public static DialogueBox getUserDialogue(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"LordSaumya"},"content":"        return new DialogueBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"LordSaumya"},"content":"    public static DialogueBox getKronosDialogue(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"LordSaumya"},"content":"        var db \u003d new DialogueBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"LordSaumya"},"content":"        db.flip();","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"LordSaumya"},"content":"        return db;","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"LordSaumya"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"LordSaumya":61}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"package duke.ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"LordSaumya"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"LordSaumya"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"LordSaumya"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"LordSaumya"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"LordSaumya"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"LordSaumya"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"LordSaumya"},"content":"    Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"LordSaumya"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"LordSaumya"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"LordSaumya"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"LordSaumya"},"content":"    private VBox dialogueContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"LordSaumya"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"LordSaumya"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"LordSaumya"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"LordSaumya"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"LordSaumya"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"LordSaumya"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"LordSaumya"},"content":"    private Image kronosImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/kronos.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"LordSaumya"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"LordSaumya"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"LordSaumya"},"content":"        scrollPane.vvalueProperty().bind(dialogueContainer.heightProperty());","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"LordSaumya"},"content":"        showStartMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"LordSaumya"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"LordSaumya"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"LordSaumya"},"content":"     * Creates two dialogue boxes, one echoing user input and the other containing","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"LordSaumya"},"content":"     * Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"LordSaumya"},"content":"     * the dialogue container. Clears the user input after processing.","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"LordSaumya"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"LordSaumya"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"LordSaumya"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"LordSaumya"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"LordSaumya"},"content":"        dialogueContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"LordSaumya"},"content":"                DialogueBox.getUserDialogue(input, userImage),","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"LordSaumya"},"content":"                DialogueBox.getKronosDialogue(response, kronosImage));","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"LordSaumya"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"LordSaumya"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"LordSaumya"},"content":"    private void showStartMessage() {","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"LordSaumya"},"content":"        dialogueContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"LordSaumya"},"content":"                DialogueBox.getKronosDialogue(","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"LordSaumya"},"content":"                        ui.showStartMessage(),","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"LordSaumya"},"content":"                        kronosImage));","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"LordSaumya"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"LordSaumya":66}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"package duke.ui;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-09-15"},{"lineNumber":4,"author":{"gitId":"LordSaumya"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2023-09-15"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":"/**","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"LordSaumya"},"content":" * Handles the interaction with the user.","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"LordSaumya"},"content":" */","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"LordSaumya"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"LordSaumya"},"content":"     * Initialises the Ui.","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"LordSaumya"},"content":"    public Ui() {","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"LordSaumya"},"content":"     * Returns message for invalid command.","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"LordSaumya"},"content":"     * ","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"LordSaumya"},"content":"     * @return The message for invalid command.","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"LordSaumya"},"content":"    public String showInvalidCommandMessage() {","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"LordSaumya"},"content":"        return \"Do not test my patience, mortal. Speak clearly.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"LordSaumya"},"content":"     * Returns the welcome message.","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"LordSaumya"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"LordSaumya"},"content":"     * @return The welcome message.","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"LordSaumya"},"content":"    public String showStartMessage() {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"LordSaumya"},"content":"        return \"Greetings, puny mortal. This is Kronos, The Lord of Time. \\nWhat foolish errand do you seek to accomplish with my immense powers?\";","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"LordSaumya"},"content":"     * Shows the error message.","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"LordSaumya"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"LordSaumya"},"content":"     * @param errorMessage The error message to be printed.","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"LordSaumya"},"content":"     * @return The error message.","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"LordSaumya"},"content":"    public String showError(String errorMessage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"LordSaumya"},"content":"        assert errorMessage !\u003d null : \"Error message should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"LordSaumya"},"content":"        return errorMessage;","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"LordSaumya"},"content":"     * Prints the list of tasks.","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"LordSaumya"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"LordSaumya"},"content":"     * @param taskList  The list of tasks to be printed.","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"LordSaumya"},"content":"     * @param searching Whether the list is for a search (true for search).","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"LordSaumya"},"content":"    public String listTasks(TaskList taskList, boolean searching) {","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"LordSaumya"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"LordSaumya"},"content":"        if (searching) {","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"LordSaumya"},"content":"            output +\u003d \"The following tasks match what you seek:\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"LordSaumya"},"content":"        } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"LordSaumya"},"content":"            output +\u003d \"You have somehow found the audacity to conjure up this laughable list of inconsequential endeavours:\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"LordSaumya"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-15"},{"lineNumber":63,"author":{"gitId":"LordSaumya"},"content":"        output +\u003d IntStream.range(0, taskList.getSize())","lastModifiedDate":"2023-09-15"},{"lineNumber":64,"author":{"gitId":"LordSaumya"},"content":"                .mapToObj(i -\u003e (i + 1) + \". \" + taskList.getTask(i) + \"\\n\")","lastModifiedDate":"2023-09-15"},{"lineNumber":65,"author":{"gitId":"LordSaumya"},"content":"                .collect(Collectors.joining());","lastModifiedDate":"2023-09-15"},{"lineNumber":66,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"LordSaumya"},"content":"        assert output !\u003d null : \"Output should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"LordSaumya"},"content":"        return output;","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"LordSaumya"},"content":"     * Returns the message for when a task is marked as done.","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"LordSaumya"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"LordSaumya"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2023-09-02"},{"lineNumber":75,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"LordSaumya"},"content":"    public String showMarkTaskMessage(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"LordSaumya"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":78,"author":{"gitId":"LordSaumya"},"content":"        return \"Astonishingly enough, you have managed to triumph over this mind-bogglingly simple task:\\n\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"LordSaumya"},"content":"                + task.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"LordSaumya"},"content":"     * Returns the message for when a task is unmarked.","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"LordSaumya"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"LordSaumya"},"content":"     * @param task The task that was unmarked.","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"LordSaumya"},"content":"     * @return The message for when a task is unmarked.","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":88,"author":{"gitId":"LordSaumya"},"content":"    public String showUnmarkTaskMessage(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"LordSaumya"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":90,"author":{"gitId":"LordSaumya"},"content":"        return \"You have somehow managed to fail this mind-bogglingly simple task:\\n\\n\" + task.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"LordSaumya"},"content":"     * Returns the message for when a todo task is added.","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"LordSaumya"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":96,"author":{"gitId":"LordSaumya"},"content":"     * @param task The todo task that was added.","lastModifiedDate":"2023-09-02"},{"lineNumber":97,"author":{"gitId":"LordSaumya"},"content":"     * @return The message for when a todo task is added.","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":99,"author":{"gitId":"LordSaumya"},"content":"    public String showTodoMessage(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":100,"author":{"gitId":"LordSaumya"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":101,"author":{"gitId":"LordSaumya"},"content":"        return \"This task has been reluctantly bestowed upon your ever-growing list:\\n\\n\" + task.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":102,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":105,"author":{"gitId":"LordSaumya"},"content":"     * Returns the message for when a deadline task is added.","lastModifiedDate":"2023-09-07"},{"lineNumber":106,"author":{"gitId":"LordSaumya"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":107,"author":{"gitId":"LordSaumya"},"content":"     * @param task The deadline task that was added.","lastModifiedDate":"2023-09-02"},{"lineNumber":108,"author":{"gitId":"LordSaumya"},"content":"     * @return The message for when a deadline task is added.","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"LordSaumya"},"content":"    public String showDeadlineMessage(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"LordSaumya"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":112,"author":{"gitId":"LordSaumya"},"content":"        return \"With your constant mediocrity, it is entirely unlikely that you will be able to meet this deadline I have just added: \\n\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":113,"author":{"gitId":"LordSaumya"},"content":"                + task.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":114,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":117,"author":{"gitId":"LordSaumya"},"content":"     * Returns the message for when an event task is added.","lastModifiedDate":"2023-09-07"},{"lineNumber":118,"author":{"gitId":"LordSaumya"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":119,"author":{"gitId":"LordSaumya"},"content":"     * @param task The event task that was added.","lastModifiedDate":"2023-09-02"},{"lineNumber":120,"author":{"gitId":"LordSaumya"},"content":"     * @return The message for when an event task is added.","lastModifiedDate":"2023-09-07"},{"lineNumber":121,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":122,"author":{"gitId":"LordSaumya"},"content":"    public String showEventMessage(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":123,"author":{"gitId":"LordSaumya"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":124,"author":{"gitId":"LordSaumya"},"content":"        return \"Looks like I will have to slow time down myself if you wish to make it to this event I just added:\\n\\n + \"","lastModifiedDate":"2023-09-07"},{"lineNumber":125,"author":{"gitId":"LordSaumya"},"content":"                + task.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":126,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":129,"author":{"gitId":"LordSaumya"},"content":"     * Returns the message for when a task is deleted.","lastModifiedDate":"2023-09-07"},{"lineNumber":130,"author":{"gitId":"LordSaumya"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":131,"author":{"gitId":"LordSaumya"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2023-09-02"},{"lineNumber":132,"author":{"gitId":"LordSaumya"},"content":"     * @return The message for when a task is deleted.","lastModifiedDate":"2023-09-07"},{"lineNumber":133,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":134,"author":{"gitId":"LordSaumya"},"content":"    public String showDeleteMessage(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":135,"author":{"gitId":"LordSaumya"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":136,"author":{"gitId":"LordSaumya"},"content":"        return \"One less annoyance to plague your feeble list. This task has been banished:\\n\\n\" + task.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":137,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":140,"author":{"gitId":"LordSaumya"},"content":"     * Returns the end message.","lastModifiedDate":"2023-09-07"},{"lineNumber":141,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":142,"author":{"gitId":"LordSaumya"},"content":"    public String showEndMessage() {","lastModifiedDate":"2023-09-07"},{"lineNumber":143,"author":{"gitId":"LordSaumya"},"content":"        return \"Is that all? I have better things to do than to listen to lesser beings. Farewell.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":144,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"LordSaumya"},"content":"    /**","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"LordSaumya"},"content":"     * Returns the message for when the task list size changes.","lastModifiedDate":"2023-09-07"},{"lineNumber":148,"author":{"gitId":"LordSaumya"},"content":"     * ","lastModifiedDate":"2023-09-02"},{"lineNumber":149,"author":{"gitId":"LordSaumya"},"content":"     * @param size    The new size of the task list.","lastModifiedDate":"2023-09-02"},{"lineNumber":150,"author":{"gitId":"LordSaumya"},"content":"     * @param growing Whether a task was added or removed (true for added).","lastModifiedDate":"2023-09-02"},{"lineNumber":151,"author":{"gitId":"LordSaumya"},"content":"     * @return The message for when the task list size changes.","lastModifiedDate":"2023-09-07"},{"lineNumber":152,"author":{"gitId":"LordSaumya"},"content":"     */","lastModifiedDate":"2023-09-02"},{"lineNumber":153,"author":{"gitId":"LordSaumya"},"content":"    public String showTaskListSizeMessage(int size, boolean growing) {","lastModifiedDate":"2023-09-07"},{"lineNumber":154,"author":{"gitId":"LordSaumya"},"content":"        assert size \u003e\u003d 0 : \"Size should not be negative\";","lastModifiedDate":"2023-09-13"},{"lineNumber":155,"author":{"gitId":"LordSaumya"},"content":"        if (growing) {","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"LordSaumya"},"content":"            return \"Congratulations, your pile of tasks has swelled to a whopping \" + size + \".\";","lastModifiedDate":"2023-09-07"},{"lineNumber":157,"author":{"gitId":"LordSaumya"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"LordSaumya"},"content":"            return \"Your pile of tasks has shrunk to a measly \" + size + \".\";","lastModifiedDate":"2023-09-07"},{"lineNumber":159,"author":{"gitId":"LordSaumya"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"LordSaumya"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"LordSaumya":161}},{"path":"src/main/resources/view/DialogueBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"\u003c!-- Solution adapted from https://se-education.org/guides/tutorials/javaFxPart4.html --\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"LordSaumya"},"content":"\u003cfx:root alignment\u003d\"CENTER_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"LordSaumya"},"content":"         prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"LordSaumya"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"LordSaumya"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"LordSaumya"},"content":"        \u003cLabel fx:id\u003d\"dialogue\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"LordSaumya"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"75.0\" fitWidth\u003d\"75.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"LordSaumya"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"LordSaumya"},"content":"            \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"LordSaumya"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"LordSaumya"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"LordSaumya"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"LordSaumya"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"LordSaumya"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"LordSaumya"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"LordSaumya":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"\u003c!-- Solution adapted from https://se-education.org/guides/tutorials/javaFxPart4.html --\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"LordSaumya"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"LordSaumya"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"LordSaumya"},"content":"            fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"LordSaumya"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"LordSaumya"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"LordSaumya"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"LordSaumya"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"LordSaumya"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"LordSaumya"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"LordSaumya"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"LordSaumya"},"content":"                \u003cVBox fx:id\u003d\"dialogueContainer\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"LordSaumya"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"LordSaumya"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"LordSaumya"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"LordSaumya"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"LordSaumya":25}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"LordSaumya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"public class DukeTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":"    public void dummyTest() {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"LordSaumya"},"content":"    public void duke_initialisation_success() {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"LordSaumya"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"LordSaumya"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"LordSaumya":18}},{"path":"src/test/java/duke/command/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"package duke.command;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"LordSaumya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":"import org.junit.jupiter.api.Tag;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"LordSaumya"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"LordSaumya"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"LordSaumya"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"LordSaumya"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"LordSaumya"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"LordSaumya"},"content":"import duke.task.Event;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"LordSaumya"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"LordSaumya"},"content":"public class CommandTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"LordSaumya"},"content":"    DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"LordSaumya"},"content":"    TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"LordSaumya"},"content":"    ToDo todo \u003d new ToDo(\"read book\");","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"LordSaumya"},"content":"    Deadline deadline \u003d new Deadline(\"return book\", LocalDateTime.parse(\"12/01/2023 1800\", inputFormatter));","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"LordSaumya"},"content":"    Event event \u003d new Event(\"project meeting\", LocalDateTime.parse(\"12/01/2023 1800\", inputFormatter),","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"LordSaumya"},"content":"            LocalDateTime.parse(\"12/01/2023 1900\", inputFormatter));","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"LordSaumya"},"content":"    public CommandTest() {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"LordSaumya"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"LordSaumya"},"content":"        tasks.addTask(deadline);","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"LordSaumya"},"content":"        tasks.addTask(event);","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"LordSaumya"},"content":"    Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"Basic test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"LordSaumya"},"content":"    public void dummyTest() {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"Mark test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"LordSaumya"},"content":"    public void markTask_success() {","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"LordSaumya"},"content":"        Command mark \u003d new MarkCommand(0);","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"LordSaumya"},"content":"        mark.execute(tasks, ui);","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(2,2);","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"Mark test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"LordSaumya"},"content":"    public void markTask_invalidIndex() {","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"LordSaumya"},"content":"        Command mark \u003d new MarkCommand(-1);","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"LordSaumya"},"content":"        mark.execute(tasks, ui);","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(2,2);","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"Unmark test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"LordSaumya"},"content":"    public void unmarkTask_success() {","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"LordSaumya"},"content":"        Command unmark \u003d new UnmarkCommand(0);","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"LordSaumya"},"content":"        unmark.execute(tasks, ui);","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"LordSaumya"},"content":"        assertTrue(tasks.getTask(0).toString().split(\"\\\\[\")[2].startsWith(\" \"));","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"Unmark test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"LordSaumya"},"content":"    public void unmarkTask_invalidIndex() {","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"LordSaumya"},"content":"        Command unmark \u003d new UnmarkCommand(3);","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"LordSaumya"},"content":"        unmark.execute(tasks, ui);","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(2,2);","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"Delete test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"LordSaumya"},"content":"    public void deleteTask_success(){","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"LordSaumya"},"content":"        int size \u003d tasks.getSize();","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"LordSaumya"},"content":"        Command delete \u003d new DeleteCommand(0);","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"LordSaumya"},"content":"        delete.execute(tasks, ui);","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(size, tasks.getSize());","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"Add test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"LordSaumya"},"content":"    public void addTask_success() {","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"LordSaumya"},"content":"        int size \u003d tasks.getSize();","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"LordSaumya"},"content":"        Command add \u003d new ToDoCommand(\"read book\");","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"LordSaumya"},"content":"        add.execute(tasks, ui);","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(size + 1, tasks.getSize());","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"Invalid test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"LordSaumya"},"content":"    public void invalid_success() {","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"LordSaumya"},"content":"        Command invalid \u003d new InvalidCommand();","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"LordSaumya"},"content":"        invalid.execute(tasks, ui);","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(2,2);","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"LordSaumya"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"LordSaumya":100}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"package duke.parser;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"LordSaumya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":"import org.junit.jupiter.api.Tag;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"LordSaumya"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"LordSaumya"},"content":"import duke.command.ToDoCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"LordSaumya"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"LordSaumya"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"LordSaumya"},"content":"import duke.command.InvalidCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"LordSaumya"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"LordSaumya"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"LordSaumya"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"LordSaumya"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"LordSaumya"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"LordSaumya"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"LordSaumya"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"Basic test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"LordSaumya"},"content":"    public void dummyTest() {","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"Basic test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"LordSaumya"},"content":"    public void parser_initialisation_success() {","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"LordSaumya"},"content":"        Parser parser \u003d new Parser(new Ui());","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"Todo test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"LordSaumya"},"content":"    public void initialiseTodo_nonEmptyDescription_success() {","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"LordSaumya"},"content":"        Parser parser \u003d new Parser(new Ui());","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(new ToDoCommand(\"read book\"), parser.parseCommand((\"todo read book\").split(\" \")));","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"LordSaumya"},"content":"    private DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"ToDo test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"LordSaumya"},"content":"    public void initialiseTodo_emptyDescription_invalidCommand() {","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"LordSaumya"},"content":"        Parser parser \u003d new Parser(new Ui());","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(new InvalidCommand(), parser.parseCommand((\"todo\").split(\" \")));","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"Deadline test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"LordSaumya"},"content":"    public void initialiseDeadline_nonEmptyDescription_success() {","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"LordSaumya"},"content":"        Parser parser \u003d new Parser(new Ui());","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(new DeadlineCommand(\"return book\", LocalDateTime.parse(\"01/01/2020 2359\", inputFormatter)),","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"LordSaumya"},"content":"                parser.parseCommand((\"deadline return book /by 01/01/2020 2359\").split(\" \")));","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"Deadline test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"LordSaumya"},"content":"    public void initialiseDeadline_emptyDescription_invalidCommand() {","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"LordSaumya"},"content":"        Parser parser \u003d new Parser(new Ui());","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(new InvalidCommand(), parser.parseCommand((\"deadline\").split(\" \")));","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"Deadline test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"LordSaumya"},"content":"    public void initialiseDeadline_emptyDeadline_invalidCommand() {","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"LordSaumya"},"content":"        Parser parser \u003d new Parser(new Ui());","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(new InvalidCommand(), parser.parseCommand((\"deadline return book /by\").split(\" \")));","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"Event test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"LordSaumya"},"content":"    public void initialiseEvent_nonEmptyDescription_success() {","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"LordSaumya"},"content":"        Parser parser \u003d new Parser(new Ui());","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"LordSaumya"},"content":"                new EventCommand(\"project meeting\", LocalDateTime.parse(\"01/01/2020 2359\", inputFormatter),","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"LordSaumya"},"content":"                        LocalDateTime.parse(\"01/02/2020 2359\", inputFormatter)),","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"LordSaumya"},"content":"                parser.parseCommand(((\"event project meeting /from 01/01/2020 2359 /to 01/02/2020 2359\").split(\" \"))));","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"Event test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"LordSaumya"},"content":"    public void initialiseEvent_emptyDescription_invalidCommand() {","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"LordSaumya"},"content":"        Parser parser \u003d new Parser(new Ui());","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(new InvalidCommand(), parser.parseCommand((\"event\").split(\" \")));","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"Event test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"LordSaumya"},"content":"    public void initialiseEvent_emptyStartTime_invalidCommand() {","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"LordSaumya"},"content":"        Parser parser \u003d new Parser(new Ui());","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(new InvalidCommand(), parser.parseCommand((\"event project meeting /from\").split(\" \")));","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"Event test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"LordSaumya"},"content":"    public void initialiseEvent_emptyEndTime_invalidCommand() {","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"LordSaumya"},"content":"        Parser parser \u003d new Parser(new Ui());","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(new InvalidCommand(), parser.parseCommand((\"event project meeting /from 01/01/2020 2359 /to\")","lastModifiedDate":"2023-09-07"},{"lineNumber":104,"author":{"gitId":"LordSaumya"},"content":"                .split(\" \")));","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"List test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"LordSaumya"},"content":"    public void initialiseList_success() {","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"LordSaumya"},"content":"        Parser parser \u003d new Parser(new Ui());","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(new ListCommand(), parser.parseCommand((\"list\").split(\" \")));","lastModifiedDate":"2023-09-07"},{"lineNumber":112,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":113,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":114,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":115,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"Find test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":116,"author":{"gitId":"LordSaumya"},"content":"    public void initialiseFind_nonEmptyDescription_success() {","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"LordSaumya"},"content":"        Parser parser \u003d new Parser(new Ui());","lastModifiedDate":"2023-09-03"},{"lineNumber":118,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(new FindCommand(\"book\"), parser.parseCommand((\"find book\").split(\" \")));","lastModifiedDate":"2023-09-07"},{"lineNumber":119,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":120,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":121,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":122,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"Mark test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":123,"author":{"gitId":"LordSaumya"},"content":"    public void initialiseMark_nonEmptyTaskNum_success() {","lastModifiedDate":"2023-09-03"},{"lineNumber":124,"author":{"gitId":"LordSaumya"},"content":"        Parser parser \u003d new Parser(new Ui());","lastModifiedDate":"2023-09-03"},{"lineNumber":125,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(new MarkCommand(1), parser.parseCommand((\"mark 1\").split(\" \")));","lastModifiedDate":"2023-09-07"},{"lineNumber":126,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":127,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":128,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":129,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"Mark test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":130,"author":{"gitId":"LordSaumya"},"content":"    public void initialiseMark_emptyTaskNum_invalidCommand() {","lastModifiedDate":"2023-09-03"},{"lineNumber":131,"author":{"gitId":"LordSaumya"},"content":"        Parser parser \u003d new Parser(new Ui());","lastModifiedDate":"2023-09-03"},{"lineNumber":132,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(new InvalidCommand(), parser.parseCommand((\"mark\").split(\" \")));","lastModifiedDate":"2023-09-07"},{"lineNumber":133,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":134,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":135,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":136,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"Unmark test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":137,"author":{"gitId":"LordSaumya"},"content":"    public void initialiseUnmark_nonEmptyTaskNum_success() {","lastModifiedDate":"2023-09-03"},{"lineNumber":138,"author":{"gitId":"LordSaumya"},"content":"        Parser parser \u003d new Parser(new Ui());","lastModifiedDate":"2023-09-03"},{"lineNumber":139,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(new UnmarkCommand(1), parser.parseCommand((\"unmark 1\").split(\" \")));","lastModifiedDate":"2023-09-07"},{"lineNumber":140,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":141,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":142,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":143,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"Unmark test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"LordSaumya"},"content":"    public void initialiseUnmark_emptyTaskNum_invalidCommand() {","lastModifiedDate":"2023-09-03"},{"lineNumber":145,"author":{"gitId":"LordSaumya"},"content":"        Parser parser \u003d new Parser(new Ui());","lastModifiedDate":"2023-09-03"},{"lineNumber":146,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(new InvalidCommand(), parser.parseCommand((\"unmark\").split(\" \")));","lastModifiedDate":"2023-09-07"},{"lineNumber":147,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":148,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":149,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":150,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"Delete test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":151,"author":{"gitId":"LordSaumya"},"content":"    public void initialiseDelete_nonEmptyTaskNum_success() {","lastModifiedDate":"2023-09-03"},{"lineNumber":152,"author":{"gitId":"LordSaumya"},"content":"        Parser parser \u003d new Parser(new Ui());","lastModifiedDate":"2023-09-03"},{"lineNumber":153,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(new DeleteCommand(1), parser.parseCommand((\"delete 1\").split(\" \")));","lastModifiedDate":"2023-09-07"},{"lineNumber":154,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":155,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":156,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":157,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"Delete test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":158,"author":{"gitId":"LordSaumya"},"content":"    public void initialiseDelete_emptyTaskNum_invalidCommand() {","lastModifiedDate":"2023-09-03"},{"lineNumber":159,"author":{"gitId":"LordSaumya"},"content":"        Parser parser \u003d new Parser(new Ui());","lastModifiedDate":"2023-09-03"},{"lineNumber":160,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(new InvalidCommand(), parser.parseCommand((\"delete\").split(\" \")));","lastModifiedDate":"2023-09-07"},{"lineNumber":161,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":162,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":163,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":164,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"Bye test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":165,"author":{"gitId":"LordSaumya"},"content":"    public void initialiseBye_success() {","lastModifiedDate":"2023-09-03"},{"lineNumber":166,"author":{"gitId":"LordSaumya"},"content":"        Parser parser \u003d new Parser(new Ui());","lastModifiedDate":"2023-09-03"},{"lineNumber":167,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(new ByeCommand(), parser.parseCommand((\"bye\").split(\" \")));","lastModifiedDate":"2023-09-07"},{"lineNumber":168,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":169,"author":{"gitId":"LordSaumya"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"LordSaumya":169}},{"path":"src/test/java/duke/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"package duke.storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"LordSaumya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"import org.junit.jupiter.api.Tag;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"LordSaumya"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"LordSaumya"},"content":"public class StorageTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"Basic test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"LordSaumya"},"content":"    public void dummyTest() {","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"Basic test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"LordSaumya"},"content":"    public void storage_initialisation_success() {","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"LordSaumya"},"content":"        Storage storage \u003d new Storage(new Ui());","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"readFile test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"LordSaumya"},"content":"    public void readFile_nonEmptyFile_success() {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"LordSaumya"},"content":"        Storage storage \u003d new Storage(new Ui());","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"LordSaumya"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"LordSaumya"},"content":"            assertTrue(storage.readFile() instanceof ArrayList\u003c?\u003e);","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"LordSaumya"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"LordSaumya"},"content":"            assertTrue(false);","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"LordSaumya"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"LordSaumya"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"LordSaumya":36}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"package duke.task;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"LordSaumya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"import org.junit.jupiter.api.Tag;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"LordSaumya"},"content":"public class TaskTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"Basic test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"LordSaumya"},"content":"    public void dummyTest() {","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"ToDo test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"LordSaumya"},"content":"    public void toDo_toFileString_success() {","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(\"T | 0 | read book\", new ToDo(\"read book\").toFileString());","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"ToDo test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"LordSaumya"},"content":"    public void toDo_toString_success() {","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(\"[T][ ] read book\", new ToDo(\"read book\").toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"LordSaumya"},"content":"    private DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"Deadline test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"LordSaumya"},"content":"    public void deadline_toFileString_success() {","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(\"D | 0 | return book | 2023-01-12T18:00\",","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"LordSaumya"},"content":"                new Deadline(\"return book\", LocalDateTime.parse(\"12/01/2023 1800\", inputFormatter)).toFileString());","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"Deadline test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"LordSaumya"},"content":"    public void deadline_toString_success() {","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(\"[D][ ] return book (by: Jan 12 2023 18:00)\",","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"LordSaumya"},"content":"                new Deadline(\"return book\", LocalDateTime.parse(\"12/01/2023 1800\", inputFormatter)).toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"Event test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"LordSaumya"},"content":"    public void event_toFileString_success() {","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(\"E | 0 | project meeting | 2023-01-12T18:00 - 2023-01-12T19:00\",","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"LordSaumya"},"content":"                new Event(\"project meeting\", LocalDateTime.parse(\"12/01/2023 1800\", inputFormatter),","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"LordSaumya"},"content":"                        LocalDateTime.parse(\"12/01/2023 1900\", inputFormatter)).toFileString());","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"Event test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"LordSaumya"},"content":"    public void event_toString_success() {","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(\"[E][ ] project meeting (from: Jan 12 2023 18:00 to Jan 12 2023 19:00)\",","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"LordSaumya"},"content":"                new Event(\"project meeting\", LocalDateTime.parse(\"12/01/2023 1800\", inputFormatter),","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"LordSaumya"},"content":"                        LocalDateTime.parse(\"12/01/2023 1900\", inputFormatter)).toString());","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"TaskList test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"LordSaumya"},"content":"    public void taskList_emptyInitialisation_success() {","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"LordSaumya"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":68,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"TaskList test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":71,"author":{"gitId":"LordSaumya"},"content":"    public void taskList_nonEmptyInitialisation_success() {","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"LordSaumya"},"content":"        ArrayList\u003cTask\u003e testArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"LordSaumya"},"content":"        testArrayList.add(new ToDo(\"abc\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":74,"author":{"gitId":"LordSaumya"},"content":"        TaskList taskList \u003d new TaskList(testArrayList);","lastModifiedDate":"2023-09-03"},{"lineNumber":75,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(1, taskList.getSize());","lastModifiedDate":"2023-09-03"},{"lineNumber":76,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":77,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":78,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":79,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"TaskList test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":80,"author":{"gitId":"LordSaumya"},"content":"    public void taskList_addTask_success() {","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"LordSaumya"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"LordSaumya"},"content":"        taskList.addTask(new ToDo(\"read book\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(1, taskList.getSize());","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"TaskList test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"LordSaumya"},"content":"    public void taskList_deleteTask_success() {","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"LordSaumya"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"LordSaumya"},"content":"        taskList.addTask(new ToDo(\"read book\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":91,"author":{"gitId":"LordSaumya"},"content":"        taskList.deleteTask(0);","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(0, taskList.getSize());","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"TaskList test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"LordSaumya"},"content":"    public void taskList_getTask_success() {","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"LordSaumya"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"LordSaumya"},"content":"        taskList.addTask(new ToDo(\"read book\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(new ToDo(\"read book\"), taskList.getTask(0));","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"TaskList test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"LordSaumya"},"content":"    public void taskList_getSize_success() {","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"LordSaumya"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"LordSaumya"},"content":"        taskList.addTask(new ToDo(\"read book\"));","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(1, taskList.getSize());","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"LordSaumya"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"LordSaumya":110}},{"path":"src/test/java/duke/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"package duke.ui;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"LordSaumya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":"import org.junit.jupiter.api.Tag;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":"public class UiTest {","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"Basic test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"LordSaumya"},"content":"    public void dummyTest() {","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"LordSaumya"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"LordSaumya"},"content":"    @Test","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"LordSaumya"},"content":"    @Tag(\"Basic test\")","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"LordSaumya"},"content":"    public void ui_initialisation_success() {","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"LordSaumya"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"LordSaumya"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"LordSaumya"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"LordSaumya"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"LordSaumya":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"todo ToDo1","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"deadline Deadline1 /by 20/04/1970","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"event Event1 /from 12/12/2012 1234 /to 10/10/2015 2345","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"LordSaumya"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"LordSaumya"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"LordSaumya"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"LordSaumya"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"LordSaumya"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"LordSaumya"},"content":"mark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"LordSaumya"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"LordSaumya"},"content":"unmark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"LordSaumya"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"LordSaumya"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"LordSaumya":13}},{"path":"text-ui-test/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LordSaumya"},"content":"T | 1 | ToDo1","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"LordSaumya"},"content":"T | 1 | ToDo1","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"LordSaumya"},"content":"E | 1 | Event1 | 2012-12-12T12:34 - 2015-10-10T23:45","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"LordSaumya":3}}]
