[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"LamJiuFong":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"LamJiuFong"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"LamJiuFong":1,"-":41}},{"path":"dukeTest2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"[D] / 0 / play games / 2023-12-31 / 14:00","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"[T] / 1 / read","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"[E] / 0 / do homework / 2023-12-01 / 18:00 / 2023-12-31 / 07:00","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"LamJiuFong":3}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":" * A chatbot that interacts with users.","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"public class Duke {","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"    /** A list to keep track of the tasks. */","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"    /** The Storage that the Duke uses. */","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"    /** The Ui that the Duke uses. */","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"    /** The Parser that the Duke uses. */","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"    private Parser parser;","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"     * Constructs a new Duke that deals with the file at the corresponding path.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"LamJiuFong"},"content":"     * @param filepath Path to the file.","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"LamJiuFong"},"content":"    public Duke(String filepath) {","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"LamJiuFong"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"LamJiuFong"},"content":"            this.storage \u003d new Storage(filepath);","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"LamJiuFong"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"            this.ui.print(e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"LamJiuFong"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2023-08-27"},{"lineNumber":35,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"LamJiuFong"},"content":"        this.parser \u003d new Parser(this.tasks, this.ui);","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"LamJiuFong"},"content":"     * Runs the chatbot.","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"LamJiuFong"},"content":"    public void run() {","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"LamJiuFong"},"content":"        ui.welcome();","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"LamJiuFong"},"content":"        boolean isExit;","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"LamJiuFong"},"content":"        String command \u003d ui.readCommand();","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"LamJiuFong"},"content":"        while (!command.isEmpty()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"LamJiuFong"},"content":"            try {","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"LamJiuFong"},"content":"                parser.parse(command);","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"LamJiuFong"},"content":"                isExit \u003d parser.isExit();","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"LamJiuFong"},"content":"                storage.store(tasks.toStringInFile());","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"LamJiuFong"},"content":"                if (isExit) {","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"LamJiuFong"},"content":"                    break;","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"LamJiuFong"},"content":"                } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"LamJiuFong"},"content":"                    command \u003d ui.readCommand();","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"LamJiuFong"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"LamJiuFong"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"LamJiuFong"},"content":"                ui.print(e.getMessage());","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"LamJiuFong"},"content":"                command \u003d ui.readCommand();","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"LamJiuFong"},"content":"            } catch (DateTimeParseException f) {","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"LamJiuFong"},"content":"                ui.print(\"Please follow this format: YYYY-MM-DD or YYYY-MM-DD HH:mm\");","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"LamJiuFong"},"content":"                command \u003d ui.readCommand();","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"LamJiuFong"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"LamJiuFong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"LamJiuFong"},"content":"        new Duke(\"./duke.txt\").run();","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"LamJiuFong":70}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"import duke.exception.InvalidFindingException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":"import duke.exception.LackDescriptionException;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"import duke.exception.LackInformationException;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"import duke.exception.InvalidMarkingException;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"import duke.task.Event;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":" * An object that deals with making sense of user commands.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"LamJiuFong"},"content":"public class Parser {","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"    /** The TaskList that the parser will be adding tasks into. */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"LamJiuFong"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"LamJiuFong"},"content":"    /** The Ui that helps the parser to print messages. */","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"LamJiuFong"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"LamJiuFong"},"content":"    /** A boolean to indicate if the user wants to end the conversation. */","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"LamJiuFong"},"content":"    private boolean isExit;","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"LamJiuFong"},"content":"     * Constructs a new Parser that stores tasks into the given TaskArray and prints through the given Ui.","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"     * @param tasks The TaskList to store tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"LamJiuFong"},"content":"     * @param ui The Ui to interact with users.","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"LamJiuFong"},"content":"    public Parser(TaskList tasks, Ui ui) {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"LamJiuFong"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"LamJiuFong"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"LamJiuFong"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"LamJiuFong"},"content":"     * Constructs a new Parser that stores tasks into the given TaskArray.","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"LamJiuFong"},"content":"     * @param tasks The TaskList to store tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"LamJiuFong"},"content":"    public Parser(TaskList tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"LamJiuFong"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"LamJiuFong"},"content":"        this.ui \u003d null;","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"LamJiuFong"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"LamJiuFong"},"content":"     * Returns true is the user wants to end the conversation.","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"LamJiuFong"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"LamJiuFong"},"content":"        return this.isExit;","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"LamJiuFong"},"content":"     * Reads the command given and executes them.","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"LamJiuFong"},"content":"     * Throws exceptions when fail to comprehend the command.","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"LamJiuFong"},"content":"     * @param s The command line.","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"LamJiuFong"},"content":"     * @throws DateTimeParseException If the input format of the dates is invalid.","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"LamJiuFong"},"content":"    public void parse(String s) throws DateTimeParseException {","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"LamJiuFong"},"content":"        String[] stringList \u003d s.split(\" \", 2);","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"LamJiuFong"},"content":"        String first \u003d stringList[0];","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"LamJiuFong"},"content":"        String second \u003d null;","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"LamJiuFong"},"content":"            second \u003d stringList[1];","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"LamJiuFong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"LamJiuFong"},"content":"            // do nothing","lastModifiedDate":"2023-08-27"},{"lineNumber":75,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":76,"author":{"gitId":"LamJiuFong"},"content":"        switch (first) {","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"LamJiuFong"},"content":"        case \"bye\":","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"LamJiuFong"},"content":"            break;","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"LamJiuFong"},"content":"        case \"list\":","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"LamJiuFong"},"content":"            printList();","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"LamJiuFong"},"content":"            break;","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"LamJiuFong"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"LamJiuFong"},"content":"            markDone(second);","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"LamJiuFong"},"content":"            break;","lastModifiedDate":"2023-08-27"},{"lineNumber":85,"author":{"gitId":"LamJiuFong"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"LamJiuFong"},"content":"            markUndone(second);","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"LamJiuFong"},"content":"            break;","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"LamJiuFong"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"LamJiuFong"},"content":"            addTodo(second);","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"LamJiuFong"},"content":"            break;","lastModifiedDate":"2023-08-27"},{"lineNumber":91,"author":{"gitId":"LamJiuFong"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-27"},{"lineNumber":92,"author":{"gitId":"LamJiuFong"},"content":"            addDeadline(second);","lastModifiedDate":"2023-08-27"},{"lineNumber":93,"author":{"gitId":"LamJiuFong"},"content":"            break;","lastModifiedDate":"2023-08-27"},{"lineNumber":94,"author":{"gitId":"LamJiuFong"},"content":"        case \"event\":","lastModifiedDate":"2023-08-27"},{"lineNumber":95,"author":{"gitId":"LamJiuFong"},"content":"            addEvent(second);","lastModifiedDate":"2023-08-27"},{"lineNumber":96,"author":{"gitId":"LamJiuFong"},"content":"            break;","lastModifiedDate":"2023-08-27"},{"lineNumber":97,"author":{"gitId":"LamJiuFong"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"LamJiuFong"},"content":"            delete(second);","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"LamJiuFong"},"content":"            break;","lastModifiedDate":"2023-08-27"},{"lineNumber":100,"author":{"gitId":"LamJiuFong"},"content":"        case \"find\":","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"LamJiuFong"},"content":"            find(second);","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"LamJiuFong"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"LamJiuFong"},"content":"        default:","lastModifiedDate":"2023-08-27"},{"lineNumber":104,"author":{"gitId":"LamJiuFong"},"content":"            throw new InvalidInputException(\"OOPS! I do not know what \" + first","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"LamJiuFong"},"content":"                    + \" means. Please try again :)\");","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"LamJiuFong"},"content":"        if (first.equals(\"bye\")) {","lastModifiedDate":"2023-08-27"},{"lineNumber":108,"author":{"gitId":"LamJiuFong"},"content":"            ending();","lastModifiedDate":"2023-08-27"},{"lineNumber":109,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":110,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"LamJiuFong"},"content":"     * Reads the inputs passed from a file and adds the tasks into the TaskArray.","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"LamJiuFong"},"content":"     * @param s The input line.","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"LamJiuFong"},"content":"    public void parseFromFile(String s) {","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"LamJiuFong"},"content":"        String[] chars \u003d s.split(\" / \");","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"LamJiuFong"},"content":"        String type \u003d chars[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"LamJiuFong"},"content":"        boolean isDone \u003d chars[1].equals(\"1\");","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"LamJiuFong"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"LamJiuFong"},"content":"        Task t;","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"LamJiuFong"},"content":"        switch (type) {","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"LamJiuFong"},"content":"        case \"[T]\":","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"LamJiuFong"},"content":"            t \u003d new Todo(chars[2]);","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"LamJiuFong"},"content":"            if (isDone) {","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"LamJiuFong"},"content":"                t.markDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"LamJiuFong"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"LamJiuFong"},"content":"            tasks.add(t);","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"LamJiuFong"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"LamJiuFong"},"content":"        case \"[D]\":","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"LamJiuFong"},"content":"            if (chars.length \u003d\u003d 4) {","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"LamJiuFong"},"content":"                t \u003d new Deadline(chars[2], LocalDate.parse(chars[3]));","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"LamJiuFong"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"LamJiuFong"},"content":"                t \u003d new Deadline(chars[2], LocalDate.parse(chars[3]),","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"LamJiuFong"},"content":"                        LocalTime.parse(chars[4], dateFormat));","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"LamJiuFong"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"LamJiuFong"},"content":"            if (isDone) {","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"LamJiuFong"},"content":"                t.markDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"LamJiuFong"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"LamJiuFong"},"content":"            tasks.add(t);","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"LamJiuFong"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"LamJiuFong"},"content":"        case \"[E]\":","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"LamJiuFong"},"content":"            if (chars.length \u003d\u003d 7) {","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"LamJiuFong"},"content":"                t \u003d new Event(chars[2], LocalDate.parse(chars[3]), LocalTime.parse(chars[4], dateFormat),","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"LamJiuFong"},"content":"                        LocalDate.parse(chars[5]), LocalTime.parse(chars[6]));","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"LamJiuFong"},"content":"            } else if (chars.length \u003d\u003d 5) {","lastModifiedDate":"2023-08-29"},{"lineNumber":148,"author":{"gitId":"LamJiuFong"},"content":"                t \u003d new Event(chars[2], LocalDate.parse(chars[3]), LocalDate.parse(chars[4]));","lastModifiedDate":"2023-08-29"},{"lineNumber":149,"author":{"gitId":"LamJiuFong"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"LamJiuFong"},"content":"                if (chars[5].length() \u003e 5) {","lastModifiedDate":"2023-08-29"},{"lineNumber":151,"author":{"gitId":"LamJiuFong"},"content":"                    t \u003d new Event(chars[2], LocalDate.parse(chars[3]), LocalTime.parse(chars[4], dateFormat), //chars","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"LamJiuFong"},"content":"                            LocalDate.parse(chars[5]));","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"LamJiuFong"},"content":"                } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"LamJiuFong"},"content":"                    t \u003d new Event(chars[2], LocalDate.parse(chars[3]), LocalDate.parse(chars[4]),","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"LamJiuFong"},"content":"                            LocalTime.parse(chars[5], dateFormat));","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"LamJiuFong"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"LamJiuFong"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":158,"author":{"gitId":"LamJiuFong"},"content":"            if (isDone) {","lastModifiedDate":"2023-08-29"},{"lineNumber":159,"author":{"gitId":"LamJiuFong"},"content":"                t.markDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"LamJiuFong"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"LamJiuFong"},"content":"            tasks.add(t);","lastModifiedDate":"2023-08-29"},{"lineNumber":162,"author":{"gitId":"LamJiuFong"},"content":"            break;","lastModifiedDate":"2023-08-29"},{"lineNumber":163,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":164,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":165,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":166,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":167,"author":{"gitId":"LamJiuFong"},"content":"     * Prints out the tasks in the TaskArray.","lastModifiedDate":"2023-08-29"},{"lineNumber":168,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":169,"author":{"gitId":"LamJiuFong"},"content":"    private void printList() {","lastModifiedDate":"2023-08-27"},{"lineNumber":170,"author":{"gitId":"LamJiuFong"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":171,"author":{"gitId":"LamJiuFong"},"content":"            this.ui.print(\"list is empty :(\");","lastModifiedDate":"2023-08-27"},{"lineNumber":172,"author":{"gitId":"LamJiuFong"},"content":"        } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":173,"author":{"gitId":"LamJiuFong"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-27"},{"lineNumber":174,"author":{"gitId":"LamJiuFong"},"content":"                this.ui.print(i + 1 + \" \" + tasks.get(i).toString());","lastModifiedDate":"2023-08-27"},{"lineNumber":175,"author":{"gitId":"LamJiuFong"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":176,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":177,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":178,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":179,"author":{"gitId":"LamJiuFong"},"content":"    private void ending() {","lastModifiedDate":"2023-08-27"},{"lineNumber":180,"author":{"gitId":"LamJiuFong"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2023-08-27"},{"lineNumber":181,"author":{"gitId":"LamJiuFong"},"content":"        this.ui.farewell();","lastModifiedDate":"2023-08-27"},{"lineNumber":182,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":183,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":184,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":185,"author":{"gitId":"LamJiuFong"},"content":"     * Adds a todo task into the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":186,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":187,"author":{"gitId":"LamJiuFong"},"content":"     * @param x Details of the task.","lastModifiedDate":"2023-08-29"},{"lineNumber":188,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":189,"author":{"gitId":"LamJiuFong"},"content":"    private void addTodo(String x) {","lastModifiedDate":"2023-08-27"},{"lineNumber":190,"author":{"gitId":"LamJiuFong"},"content":"        if (x \u003d\u003d null || x.trim().isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":191,"author":{"gitId":"LamJiuFong"},"content":"            throw new LackDescriptionException(\"todo\");","lastModifiedDate":"2023-08-27"},{"lineNumber":192,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":193,"author":{"gitId":"LamJiuFong"},"content":"        Todo t \u003d new Todo(x);","lastModifiedDate":"2023-08-27"},{"lineNumber":194,"author":{"gitId":"LamJiuFong"},"content":"        tasks.add(t);","lastModifiedDate":"2023-08-27"},{"lineNumber":195,"author":{"gitId":"LamJiuFong"},"content":"        addedTask(x);","lastModifiedDate":"2023-08-27"},{"lineNumber":196,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":197,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":198,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":199,"author":{"gitId":"LamJiuFong"},"content":"     * Adds a deadline task into the list.","lastModifiedDate":"2023-08-27"},{"lineNumber":200,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":201,"author":{"gitId":"LamJiuFong"},"content":"     * @param x Details of the task.","lastModifiedDate":"2023-08-27"},{"lineNumber":202,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":203,"author":{"gitId":"LamJiuFong"},"content":"    private void addDeadline(String x) {","lastModifiedDate":"2023-08-27"},{"lineNumber":204,"author":{"gitId":"LamJiuFong"},"content":"        if (x \u003d\u003d null || x.trim().isEmpty() || x.trim().startsWith(\"/by\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":205,"author":{"gitId":"LamJiuFong"},"content":"            throw new LackDescriptionException(\"deadline\");","lastModifiedDate":"2023-08-27"},{"lineNumber":206,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":207,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":208,"author":{"gitId":"LamJiuFong"},"content":"        String[] s \u003d x.split(\" /by \");","lastModifiedDate":"2023-08-27"},{"lineNumber":209,"author":{"gitId":"LamJiuFong"},"content":"        String description \u003d s[0];","lastModifiedDate":"2023-08-27"},{"lineNumber":210,"author":{"gitId":"LamJiuFong"},"content":"        String deadline;","lastModifiedDate":"2023-08-27"},{"lineNumber":211,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":212,"author":{"gitId":"LamJiuFong"},"content":"            deadline \u003d s[1];","lastModifiedDate":"2023-08-27"},{"lineNumber":213,"author":{"gitId":"LamJiuFong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":214,"author":{"gitId":"LamJiuFong"},"content":"            throw new LackInformationException(\"\\\"/by\\\"\");","lastModifiedDate":"2023-08-27"},{"lineNumber":215,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":216,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":217,"author":{"gitId":"LamJiuFong"},"content":"        String[] dateTime \u003d deadline.split(\" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":218,"author":{"gitId":"LamJiuFong"},"content":"        LocalDate date \u003d LocalDate.parse(dateTime[0]);","lastModifiedDate":"2023-08-27"},{"lineNumber":219,"author":{"gitId":"LamJiuFong"},"content":"        LocalTime time;","lastModifiedDate":"2023-08-27"},{"lineNumber":220,"author":{"gitId":"LamJiuFong"},"content":"        Deadline d;","lastModifiedDate":"2023-08-27"},{"lineNumber":221,"author":{"gitId":"LamJiuFong"},"content":"        if (dateTime.length \u003e 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":222,"author":{"gitId":"LamJiuFong"},"content":"            DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2023-08-27"},{"lineNumber":223,"author":{"gitId":"LamJiuFong"},"content":"            time \u003d LocalTime.parse(dateTime[1], format);","lastModifiedDate":"2023-08-27"},{"lineNumber":224,"author":{"gitId":"LamJiuFong"},"content":"            d \u003d new Deadline(description, date, time);","lastModifiedDate":"2023-08-27"},{"lineNumber":225,"author":{"gitId":"LamJiuFong"},"content":"        } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":226,"author":{"gitId":"LamJiuFong"},"content":"            d \u003d new Deadline(description, date);","lastModifiedDate":"2023-08-27"},{"lineNumber":227,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":228,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":229,"author":{"gitId":"LamJiuFong"},"content":"        tasks.add(d);","lastModifiedDate":"2023-08-27"},{"lineNumber":230,"author":{"gitId":"LamJiuFong"},"content":"        addedTask(description);","lastModifiedDate":"2023-08-27"},{"lineNumber":231,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":232,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":233,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":234,"author":{"gitId":"LamJiuFong"},"content":"     * Adds an event task into the list.","lastModifiedDate":"2023-08-27"},{"lineNumber":235,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":236,"author":{"gitId":"LamJiuFong"},"content":"     * @param x Details of the task.","lastModifiedDate":"2023-08-27"},{"lineNumber":237,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":238,"author":{"gitId":"LamJiuFong"},"content":"    private void addEvent(String x) {","lastModifiedDate":"2023-08-27"},{"lineNumber":239,"author":{"gitId":"LamJiuFong"},"content":"        if (x \u003d\u003d null || x.trim().isEmpty() || x.trim().startsWith(\"/from\") || x.trim().startsWith(\"/to\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":240,"author":{"gitId":"LamJiuFong"},"content":"            throw new LackDescriptionException(\"event\");","lastModifiedDate":"2023-08-27"},{"lineNumber":241,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":242,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":243,"author":{"gitId":"LamJiuFong"},"content":"        String[] s \u003d x.split(\" /from \");","lastModifiedDate":"2023-08-27"},{"lineNumber":244,"author":{"gitId":"LamJiuFong"},"content":"        String description \u003d s[0];","lastModifiedDate":"2023-08-27"},{"lineNumber":245,"author":{"gitId":"LamJiuFong"},"content":"        String fromto \u003d null;","lastModifiedDate":"2023-09-01"},{"lineNumber":246,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":247,"author":{"gitId":"LamJiuFong"},"content":"            fromto \u003d s[1];","lastModifiedDate":"2023-08-27"},{"lineNumber":248,"author":{"gitId":"LamJiuFong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":249,"author":{"gitId":"LamJiuFong"},"content":"            throw new LackInformationException(\"\\\"/from\\\"\");","lastModifiedDate":"2023-08-27"},{"lineNumber":250,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":251,"author":{"gitId":"LamJiuFong"},"content":"        if (fromto.trim().startsWith(\"/to\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":252,"author":{"gitId":"LamJiuFong"},"content":"            throw new LackInformationException(\"\\\"/from\\\"\");","lastModifiedDate":"2023-08-27"},{"lineNumber":253,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":254,"author":{"gitId":"LamJiuFong"},"content":"        String[] ft \u003d fromto.split(\" /to \");","lastModifiedDate":"2023-08-27"},{"lineNumber":255,"author":{"gitId":"LamJiuFong"},"content":"        String from \u003d ft[0];","lastModifiedDate":"2023-08-27"},{"lineNumber":256,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":257,"author":{"gitId":"LamJiuFong"},"content":"        LocalDate startDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":258,"author":{"gitId":"LamJiuFong"},"content":"        LocalTime startTime \u003d null;","lastModifiedDate":"2023-08-27"},{"lineNumber":259,"author":{"gitId":"LamJiuFong"},"content":"        String[] starts \u003d from.split(\" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":260,"author":{"gitId":"LamJiuFong"},"content":"        startDate \u003d LocalDate.parse(starts[0]);","lastModifiedDate":"2023-08-27"},{"lineNumber":261,"author":{"gitId":"LamJiuFong"},"content":"        if (starts.length \u003e 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":262,"author":{"gitId":"LamJiuFong"},"content":"            DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2023-08-27"},{"lineNumber":263,"author":{"gitId":"LamJiuFong"},"content":"            startTime \u003d LocalTime.parse(starts[1], format);","lastModifiedDate":"2023-08-27"},{"lineNumber":264,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":265,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":266,"author":{"gitId":"LamJiuFong"},"content":"        String to;","lastModifiedDate":"2023-08-27"},{"lineNumber":267,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":268,"author":{"gitId":"LamJiuFong"},"content":"            to \u003d ft[1];","lastModifiedDate":"2023-08-27"},{"lineNumber":269,"author":{"gitId":"LamJiuFong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":270,"author":{"gitId":"LamJiuFong"},"content":"            throw new LackInformationException(\"\\\"/to\\\"\");","lastModifiedDate":"2023-08-27"},{"lineNumber":271,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":272,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":273,"author":{"gitId":"LamJiuFong"},"content":"        LocalDate endDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":274,"author":{"gitId":"LamJiuFong"},"content":"        LocalTime endTime \u003d null;","lastModifiedDate":"2023-08-27"},{"lineNumber":275,"author":{"gitId":"LamJiuFong"},"content":"        String[] ends \u003d to.split(\" \");","lastModifiedDate":"2023-08-27"},{"lineNumber":276,"author":{"gitId":"LamJiuFong"},"content":"        endDate \u003d LocalDate.parse(ends[0]);","lastModifiedDate":"2023-08-27"},{"lineNumber":277,"author":{"gitId":"LamJiuFong"},"content":"        if (ends.length \u003e 1) {","lastModifiedDate":"2023-08-27"},{"lineNumber":278,"author":{"gitId":"LamJiuFong"},"content":"            DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2023-08-27"},{"lineNumber":279,"author":{"gitId":"LamJiuFong"},"content":"            endTime \u003d LocalTime.parse(ends[1], format);","lastModifiedDate":"2023-08-27"},{"lineNumber":280,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":281,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":282,"author":{"gitId":"LamJiuFong"},"content":"        Event e;","lastModifiedDate":"2023-08-27"},{"lineNumber":283,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":284,"author":{"gitId":"LamJiuFong"},"content":"        if (startTime \u003d\u003d null \u0026\u0026 endTime \u003d\u003d null) {","lastModifiedDate":"2023-08-27"},{"lineNumber":285,"author":{"gitId":"LamJiuFong"},"content":"            e \u003d new Event(description, startDate, endDate);","lastModifiedDate":"2023-08-27"},{"lineNumber":286,"author":{"gitId":"LamJiuFong"},"content":"        } else if (startTime \u003d\u003d null) {","lastModifiedDate":"2023-08-27"},{"lineNumber":287,"author":{"gitId":"LamJiuFong"},"content":"            e \u003d new Event(description, startDate, endDate, endTime);","lastModifiedDate":"2023-08-27"},{"lineNumber":288,"author":{"gitId":"LamJiuFong"},"content":"        } else if (endTime \u003d\u003d null) {","lastModifiedDate":"2023-08-27"},{"lineNumber":289,"author":{"gitId":"LamJiuFong"},"content":"            e \u003d new Event(description, startDate, startTime, endDate);","lastModifiedDate":"2023-08-27"},{"lineNumber":290,"author":{"gitId":"LamJiuFong"},"content":"        } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":291,"author":{"gitId":"LamJiuFong"},"content":"            e \u003d new Event(description, startDate, startTime, endDate, endTime);","lastModifiedDate":"2023-08-27"},{"lineNumber":292,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":293,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":294,"author":{"gitId":"LamJiuFong"},"content":"        tasks.add(e);","lastModifiedDate":"2023-08-27"},{"lineNumber":295,"author":{"gitId":"LamJiuFong"},"content":"        addedTask(description);","lastModifiedDate":"2023-08-27"},{"lineNumber":296,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":297,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":298,"author":{"gitId":"LamJiuFong"},"content":"    private void addedTask(String x) {","lastModifiedDate":"2023-08-27"},{"lineNumber":299,"author":{"gitId":"LamJiuFong"},"content":"        this.ui.print(\"Added to list: \" + x);","lastModifiedDate":"2023-08-27"},{"lineNumber":300,"author":{"gitId":"LamJiuFong"},"content":"        this.ui.print(\"Now you have \" + tasks.size()","lastModifiedDate":"2023-08-29"},{"lineNumber":301,"author":{"gitId":"LamJiuFong"},"content":"                + (tasks.size() \u003d\u003d 1 ? \" task \" : \" tasks \") + \"in the list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":302,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":303,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":304,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":305,"author":{"gitId":"LamJiuFong"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-08-27"},{"lineNumber":306,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":307,"author":{"gitId":"LamJiuFong"},"content":"     * @param x Index of the target task.","lastModifiedDate":"2023-08-27"},{"lineNumber":308,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":309,"author":{"gitId":"LamJiuFong"},"content":"    private void markDone(String x) {","lastModifiedDate":"2023-08-27"},{"lineNumber":310,"author":{"gitId":"LamJiuFong"},"content":"        if (x \u003d\u003d null || x.trim().isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":311,"author":{"gitId":"LamJiuFong"},"content":"            throw new InvalidMarkingException(\"Missing index\");","lastModifiedDate":"2023-08-27"},{"lineNumber":312,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":313,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":314,"author":{"gitId":"LamJiuFong"},"content":"        int j;","lastModifiedDate":"2023-08-27"},{"lineNumber":315,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":316,"author":{"gitId":"LamJiuFong"},"content":"            j \u003d Integer.parseInt(x);","lastModifiedDate":"2023-08-27"},{"lineNumber":317,"author":{"gitId":"LamJiuFong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":318,"author":{"gitId":"LamJiuFong"},"content":"            throw new InvalidMarkingException(\"Please provide a valid index\");","lastModifiedDate":"2023-08-27"},{"lineNumber":319,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":320,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":321,"author":{"gitId":"LamJiuFong"},"content":"        if (j-1 \u003e tasks.size()-1 || j-1\u003c0) {","lastModifiedDate":"2023-08-27"},{"lineNumber":322,"author":{"gitId":"LamJiuFong"},"content":"            throw new InvalidMarkingException(\"There is no corresponding task in the list\");","lastModifiedDate":"2023-08-27"},{"lineNumber":323,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":324,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":325,"author":{"gitId":"LamJiuFong"},"content":"        Task t \u003d tasks.get(j-1);","lastModifiedDate":"2023-08-27"},{"lineNumber":326,"author":{"gitId":"LamJiuFong"},"content":"        t.markDone();","lastModifiedDate":"2023-08-27"},{"lineNumber":327,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":328,"author":{"gitId":"LamJiuFong"},"content":"        this.ui.print(\"Task marked as done.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":329,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":330,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":331,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":332,"author":{"gitId":"LamJiuFong"},"content":"     * Marks the task as undone.","lastModifiedDate":"2023-08-27"},{"lineNumber":333,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":334,"author":{"gitId":"LamJiuFong"},"content":"     * @param x Index of the target task.","lastModifiedDate":"2023-08-27"},{"lineNumber":335,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":336,"author":{"gitId":"LamJiuFong"},"content":"    private void markUndone(String x) {","lastModifiedDate":"2023-08-27"},{"lineNumber":337,"author":{"gitId":"LamJiuFong"},"content":"        if (x \u003d\u003d null || x.trim().isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":338,"author":{"gitId":"LamJiuFong"},"content":"            throw new InvalidMarkingException(\"Missing index\");","lastModifiedDate":"2023-08-27"},{"lineNumber":339,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":340,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":341,"author":{"gitId":"LamJiuFong"},"content":"        int j;","lastModifiedDate":"2023-08-27"},{"lineNumber":342,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":343,"author":{"gitId":"LamJiuFong"},"content":"            j \u003d Integer.parseInt(x);","lastModifiedDate":"2023-08-27"},{"lineNumber":344,"author":{"gitId":"LamJiuFong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":345,"author":{"gitId":"LamJiuFong"},"content":"            throw new InvalidMarkingException(\"Please provide a valid index\");","lastModifiedDate":"2023-08-27"},{"lineNumber":346,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":347,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":348,"author":{"gitId":"LamJiuFong"},"content":"        if (j-1 \u003e tasks.size()-1 || j-1\u003c0) {","lastModifiedDate":"2023-08-27"},{"lineNumber":349,"author":{"gitId":"LamJiuFong"},"content":"            throw new InvalidMarkingException(\"There is no corresponding task in the list\");","lastModifiedDate":"2023-08-27"},{"lineNumber":350,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":351,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":352,"author":{"gitId":"LamJiuFong"},"content":"        Task t \u003d tasks.get(j-1);","lastModifiedDate":"2023-08-27"},{"lineNumber":353,"author":{"gitId":"LamJiuFong"},"content":"        t.markUndone();","lastModifiedDate":"2023-08-27"},{"lineNumber":354,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":355,"author":{"gitId":"LamJiuFong"},"content":"        this.ui.print(\"Task marked as undone.\");","lastModifiedDate":"2023-08-28"},{"lineNumber":356,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":357,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":358,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-27"},{"lineNumber":359,"author":{"gitId":"LamJiuFong"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2023-08-27"},{"lineNumber":360,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-27"},{"lineNumber":361,"author":{"gitId":"LamJiuFong"},"content":"     * @param x Index of the target task.","lastModifiedDate":"2023-08-27"},{"lineNumber":362,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-27"},{"lineNumber":363,"author":{"gitId":"LamJiuFong"},"content":"    private void delete(String x) {","lastModifiedDate":"2023-08-27"},{"lineNumber":364,"author":{"gitId":"LamJiuFong"},"content":"        if (x \u003d\u003d null || x.trim().isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":365,"author":{"gitId":"LamJiuFong"},"content":"            throw new InvalidMarkingException(\"Missing index\");","lastModifiedDate":"2023-08-27"},{"lineNumber":366,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":367,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":368,"author":{"gitId":"LamJiuFong"},"content":"        int j;","lastModifiedDate":"2023-08-27"},{"lineNumber":369,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":370,"author":{"gitId":"LamJiuFong"},"content":"            j \u003d Integer.parseInt(x);","lastModifiedDate":"2023-08-27"},{"lineNumber":371,"author":{"gitId":"LamJiuFong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":372,"author":{"gitId":"LamJiuFong"},"content":"            throw new InvalidMarkingException(\"Please provide a valid index\");","lastModifiedDate":"2023-08-27"},{"lineNumber":373,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":374,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":375,"author":{"gitId":"LamJiuFong"},"content":"        if (j - 1 \u003e tasks.size() - 1 || j - 1 \u003c 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":376,"author":{"gitId":"LamJiuFong"},"content":"            throw new InvalidMarkingException(\"There is no corresponding task in the list\");","lastModifiedDate":"2023-08-27"},{"lineNumber":377,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":378,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":379,"author":{"gitId":"LamJiuFong"},"content":"        Task t \u003d tasks.get(j - 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":380,"author":{"gitId":"LamJiuFong"},"content":"        tasks.remove(j - 1);","lastModifiedDate":"2023-08-27"},{"lineNumber":381,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":382,"author":{"gitId":"LamJiuFong"},"content":"        this.ui.print(\"I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-27"},{"lineNumber":383,"author":{"gitId":"LamJiuFong"},"content":"        this.ui.print(t);","lastModifiedDate":"2023-08-27"},{"lineNumber":384,"author":{"gitId":"LamJiuFong"},"content":"        this.ui.print(\"Now you have \" + tasks.size() + (tasks.size() \u003e 1 ? \" tasks\" : \" task\")","lastModifiedDate":"2023-08-29"},{"lineNumber":385,"author":{"gitId":"LamJiuFong"},"content":"                + \" in the list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":386,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":387,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":388,"author":{"gitId":"LamJiuFong"},"content":"    private void find(String x) {","lastModifiedDate":"2023-08-29"},{"lineNumber":389,"author":{"gitId":"LamJiuFong"},"content":"        if (x \u003d\u003d null || x.trim().isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":390,"author":{"gitId":"LamJiuFong"},"content":"            throw new InvalidFindingException(\"Missing keyword\");","lastModifiedDate":"2023-08-29"},{"lineNumber":391,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":392,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":393,"author":{"gitId":"LamJiuFong"},"content":"        int counter \u003d 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":394,"author":{"gitId":"LamJiuFong"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":395,"author":{"gitId":"LamJiuFong"},"content":"            Task t \u003d tasks.get(i);","lastModifiedDate":"2023-08-29"},{"lineNumber":396,"author":{"gitId":"LamJiuFong"},"content":"            if (t.toString().contains(x)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":397,"author":{"gitId":"LamJiuFong"},"content":"                this.ui.print(counter + \" \" + t);","lastModifiedDate":"2023-08-29"},{"lineNumber":398,"author":{"gitId":"LamJiuFong"},"content":"                counter +\u003d 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":399,"author":{"gitId":"LamJiuFong"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":400,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":401,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":402,"author":{"gitId":"LamJiuFong"},"content":"        if (counter \u003d\u003d 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":403,"author":{"gitId":"LamJiuFong"},"content":"            this.ui.print(\"No matching found\");","lastModifiedDate":"2023-08-29"},{"lineNumber":404,"author":{"gitId":"LamJiuFong"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":405,"author":{"gitId":"LamJiuFong"},"content":"            this.ui.print(\"You have \" + (counter-1) + \" matching tasks in your list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":406,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":407,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":408,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"LamJiuFong":408}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"import duke.exception.DukeFileNotFoundException;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"import java.io.File;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":" * An object that deals with loading and saving tasks in the file.","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"public class Storage {","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"    /** The file that the storage will be dealing with. */","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"    private File f \u003d null;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"     * Constructs a new Storage that deals with the file at the corresponding path.","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"LamJiuFong"},"content":"     * @param filepath Path to the file.","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"LamJiuFong"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"LamJiuFong"},"content":"        this.f \u003d new File(filepath);","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"LamJiuFong"},"content":"            f.createNewFile();","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"LamJiuFong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"LamJiuFong"},"content":"            throw new DukeFileNotFoundException();","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"LamJiuFong"},"content":"     * Loads all the lines in the file and stores in a list.","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"LamJiuFong"},"content":"     * @return The list with all the lines.","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"LamJiuFong"},"content":"    public ArrayList\u003cString\u003e load() {","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"LamJiuFong"},"content":"        Scanner sc;","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"LamJiuFong"},"content":"        ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"LamJiuFong"},"content":"            sc \u003d new Scanner(f);","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"LamJiuFong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"LamJiuFong"},"content":"            throw new DukeFileNotFoundException();","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"LamJiuFong"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"LamJiuFong"},"content":"            String s \u003d sc.nextLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"LamJiuFong"},"content":"            lines.add(s);","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"LamJiuFong"},"content":"        return lines;","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"LamJiuFong"},"content":"     * Stores the strings from a list to a file.","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"LamJiuFong"},"content":"     * @param strings The list of strings to be stored.","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"LamJiuFong"},"content":"    public void store(ArrayList\u003cString\u003e strings) {","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"LamJiuFong"},"content":"        FileWriter fw;","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":61,"author":{"gitId":"LamJiuFong"},"content":"            fw \u003d new FileWriter(f);","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"LamJiuFong"},"content":"            for (String s : strings) {","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"LamJiuFong"},"content":"                fw.write(s + \"\\n\");","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"LamJiuFong"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"LamJiuFong"},"content":"            fw.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":66,"author":{"gitId":"LamJiuFong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":67,"author":{"gitId":"LamJiuFong"},"content":"            throw new DukeFileNotFoundException();","lastModifiedDate":"2023-08-27"},{"lineNumber":68,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":69,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":70,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"LamJiuFong":70}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":" * A list to store the tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"public class TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"    /** A list to store the tasks. */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"     * Constructs a new TaskList that have an empty list.","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"     * Constructs a new TaskList that contains the tasks in the provided list.","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"     * @param strings List containing the tasks.","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"LamJiuFong"},"content":"    public TaskList(ArrayList\u003cString\u003e strings) {","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"LamJiuFong"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"LamJiuFong"},"content":"        Parser parser \u003d new Parser(this);","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"LamJiuFong"},"content":"        for (String s : strings) {","lastModifiedDate":"2023-08-27"},{"lineNumber":29,"author":{"gitId":"LamJiuFong"},"content":"            parser.parseFromFile(s);","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"LamJiuFong"},"content":"     * Returns true if this list contains no elements.","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"LamJiuFong"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"LamJiuFong"},"content":"        return this.tasks.isEmpty();","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"LamJiuFong"},"content":"     * Returns the size of the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"LamJiuFong"},"content":"    public int size() {","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"LamJiuFong"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"LamJiuFong"},"content":"     * Returns the task at the specific position.","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"LamJiuFong"},"content":"     * @param i Index of the task to return.","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"LamJiuFong"},"content":"    public Task get(int i) {","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"LamJiuFong"},"content":"        return this.tasks.get(i);","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"LamJiuFong"},"content":"     * Adds the task into the list.","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"LamJiuFong"},"content":"     * @param t Task to add.","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"LamJiuFong"},"content":"    public void add(Task t) {","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"LamJiuFong"},"content":"        this.tasks.add(t);","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":64,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":65,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"LamJiuFong"},"content":"     * Removes the task at the specific position.","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"LamJiuFong"},"content":"     * @param i Index of the task to remove.","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"LamJiuFong"},"content":"    public void remove(int i) {","lastModifiedDate":"2023-08-27"},{"lineNumber":71,"author":{"gitId":"LamJiuFong"},"content":"        this.tasks.remove(i);","lastModifiedDate":"2023-08-27"},{"lineNumber":72,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":73,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":74,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"LamJiuFong"},"content":"     * Returns a list of string representation of all the tasks for file writing.","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"LamJiuFong"},"content":"    public ArrayList\u003cString\u003e toStringInFile() {","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"LamJiuFong"},"content":"        ArrayList\u003cString\u003e strings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"LamJiuFong"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"LamJiuFong"},"content":"            strings.add(t.toStringInFile());","lastModifiedDate":"2023-08-27"},{"lineNumber":81,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":82,"author":{"gitId":"LamJiuFong"},"content":"        return strings;","lastModifiedDate":"2023-08-27"},{"lineNumber":83,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":84,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"LamJiuFong":84}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"package duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":" * An interface that interacts with the user.","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"public class Ui {","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"     * Prints a welcome message to the screen.","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"    public void welcome() {","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"        System.out.println(\"Hello! I\u0027m BoxBox\\nWhat can I do for you?\");","lastModifiedDate":"2023-08-27"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"     * Prints a farewell message to the screen.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"    public void farewell() {","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"        System.out.println(\"Bye! Hope to see you again!\");","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"LamJiuFong"},"content":"     * Prints the provided string to the screen.","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"LamJiuFong"},"content":"     * @param s String to be printed.","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"LamJiuFong"},"content":"    public void print(String s) {","lastModifiedDate":"2023-08-27"},{"lineNumber":30,"author":{"gitId":"LamJiuFong"},"content":"        System.out.println(s);","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"LamJiuFong"},"content":"     * Prints the provided task to the screen.","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"LamJiuFong"},"content":"     * @param t Task to be printed.","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"LamJiuFong"},"content":"    public void print(Task t) {","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"LamJiuFong"},"content":"        System.out.println(t);","lastModifiedDate":"2023-08-27"},{"lineNumber":40,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":41,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":42,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"LamJiuFong"},"content":"     * Reads the input on the terminal and returns the input.","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"LamJiuFong"},"content":"     * If nothing is on the terminal, returns an empty string.","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"LamJiuFong"},"content":"     * @return Input on the terminal.","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"LamJiuFong"},"content":"    public String readCommand() {","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"LamJiuFong"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-27"},{"lineNumber":50,"author":{"gitId":"LamJiuFong"},"content":"        if (sc.hasNextLine()) {","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"LamJiuFong"},"content":"            return sc.nextLine();","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"LamJiuFong"},"content":"        } else {","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"LamJiuFong"},"content":"            return \"\";","lastModifiedDate":"2023-08-27"},{"lineNumber":54,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"LamJiuFong":56}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"package duke.exception;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":" * An exception pertaining to Duke.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"public class DukeException extends RuntimeException{","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"     * Constructs a Duke Exception instance.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"     * @param s Message of the exception.","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"    public DukeException(String s) {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"        super(s);","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"LamJiuFong":15}},{"path":"src/main/java/duke/exception/DukeFileNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"package duke.exception;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":" * An exception thrown when the file is not found.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"public class DukeFileNotFoundException extends DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"     * Constructs a DukeFileNotFoundException instance.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"    public DukeFileNotFoundException() {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"        super(\"No available file\");","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"LamJiuFong":13}},{"path":"src/main/java/duke/exception/InvalidFindingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"package duke.exception;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":" * Exception thrown when the finding command is invalid.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"public class InvalidFindingException extends DukeException{","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"     * Creates an InvalidFindingException instance.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"     * @param s Message of the exception.","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"    public InvalidFindingException(String s) {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"        super(s);","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"LamJiuFong":15}},{"path":"src/main/java/duke/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"package duke.exception;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":" * An exception thrown when the given instruction is not identifiable.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"public class InvalidInputException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"     * Constructs an InvalidInputException instance.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"     * @param s Message of the exception.","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"    public InvalidInputException(String s) {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"        super(s);","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"LamJiuFong":15}},{"path":"src/main/java/duke/exception/InvalidMarkingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"package duke.exception;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":" * An exception thrown when the marking of task cannot be done.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"public class InvalidMarkingException extends DukeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"     * Creates an InvalidMarkingException instance.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"     * @param s Message of the exception.","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"    public InvalidMarkingException(String s) {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"        super(s);","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"LamJiuFong":15}},{"path":"src/main/java/duke/exception/LackDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"package duke.exception;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":" * An exception thrown when the description of the task is not provided.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"public class LackDescriptionException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"     * Creates a duke.exception.LackDescriptionException instance.","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"     * @param s Message of the exception.","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"    public LackDescriptionException(String s) {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"        super(\"The description of \"+ s + \" should not be empty\");","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"LamJiuFong":15}},{"path":"src/main/java/duke/exception/LackInformationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"package duke.exception;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":" * An exception thrown when the information provided is insufficient.","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"public class LackInformationException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"     * Creates a LackInformationException instance.","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"     * @param s Message of the exception.","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"    public LackInformationException(String s) {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"        super(\"Please provide information for: \" + s);","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"LamJiuFong":15}},{"path":"src/main/java/duke/stub/TaskListStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"package duke.stub;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":"import duke.task.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"/**","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":" * A stub for the TaskList class.","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":" */","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"public class TaskListStub extends TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"    /** A list to store the tasks. */","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"     * Constructs a new TaskListStub.","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"     * @param b If true, the list will be empty.","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"     * @param unmarked If true, all the tasks in the list will be unmarked.","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"    public TaskListStub(boolean b, boolean unmarked) {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"LamJiuFong"},"content":"        if (b) {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"            this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"LamJiuFong"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"LamJiuFong"},"content":"            this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"LamJiuFong"},"content":"            Task t1 \u003d new Task(\"task1\");","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"LamJiuFong"},"content":"            Task t2 \u003d new Task(\"task2\");","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"LamJiuFong"},"content":"            Task t3 \u003d new Task(\"task3\");","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"LamJiuFong"},"content":"            if (!unmarked) {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"LamJiuFong"},"content":"                t1.markDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"LamJiuFong"},"content":"                t2.markDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"                t3.markDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"LamJiuFong"},"content":"            this.tasks.add(t1);","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"LamJiuFong"},"content":"            this.tasks.add(t2);","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"LamJiuFong"},"content":"            this.tasks.add(t3);","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"LamJiuFong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"LamJiuFong"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"LamJiuFong"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"LamJiuFong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"LamJiuFong"},"content":"    public int size() {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"LamJiuFong"},"content":"        return tasks.size();","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"LamJiuFong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"LamJiuFong"},"content":"    public Task get(int i) {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"LamJiuFong"},"content":"        return tasks.get(i);","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"LamJiuFong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"LamJiuFong"},"content":"    public void add(Task t) {","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"LamJiuFong"},"content":"        tasks.add(t);","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"LamJiuFong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"LamJiuFong"},"content":"    public void remove(int i) {","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"LamJiuFong"},"content":"        tasks.remove(i);","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"LamJiuFong"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"LamJiuFong"},"content":"    public ArrayList\u003cString\u003e toStringInFile() {","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"LamJiuFong"},"content":"        return null;","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"LamJiuFong":69}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"package duke.task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":" * A task that has a deadline.","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"    private final LocalDate date;","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"    private final LocalTime time;","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"     * Creates a deadline task instance.","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"     * @param date duke.task.Deadline date of the task.","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"    public Deadline(String description, LocalDate date) {","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"LamJiuFong"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"        this.time \u003d null;","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"LamJiuFong"},"content":"     * Creates a deadline task instance with a specific time.","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"LamJiuFong"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"LamJiuFong"},"content":"     * @param date duke.task.Deadline date of the task.","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"LamJiuFong"},"content":"     * @param time duke.task.Deadline time of the task.","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"    public Deadline(String description, LocalDate date, LocalTime time) {","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"LamJiuFong"},"content":"        super(description);","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"LamJiuFong"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"LamJiuFong"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"LamJiuFong"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"LamJiuFong"},"content":"     * @return Desired string representation of the task.","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"LamJiuFong"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"LamJiuFong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"LamJiuFong"},"content":"        return \"[D] \" + super.toString() + \" (by: \"","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"LamJiuFong"},"content":"                + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"LamJiuFong"},"content":"                + this.timeString() + \")\";","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"LamJiuFong"},"content":"    private String timeString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"LamJiuFong"},"content":"        return (this.time !\u003d null)","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"LamJiuFong"},"content":"                ? \" \" + this.time.format(DateTimeFormatter.ofPattern(\"h:mma\"))","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"LamJiuFong"},"content":"                : \"\";","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"LamJiuFong"},"content":"     * Returns a string representation of the task to be inserted into a file.","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"LamJiuFong"},"content":"     * @return Desired string representation of the task.","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"LamJiuFong"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"LamJiuFong"},"content":"    public String toStringInFile() {","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"LamJiuFong"},"content":"        return \"[D] /\" + super.toStringInFile() + \" / \" + this.date","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"LamJiuFong"},"content":"                + this.timeStringInFile();","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"LamJiuFong"},"content":"    private String timeStringInFile() {","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"LamJiuFong"},"content":"        return this.time !\u003d null","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"LamJiuFong"},"content":"                ? \" / \" + this.time.format(DateTimeFormatter.ofPattern(\"HH:mm\"))","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"LamJiuFong"},"content":"                : \"\";","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"LamJiuFong":73}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"package duke.task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":" * A task that has a starting and ending time.","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"    private final LocalDate start;","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"    private final LocalTime startTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"    private final LocalDate end;","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"    private final LocalTime endTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"     * Creates an event task instance.","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"     * @param start Starting time of the task.","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"     * @param end Ending time of the task.","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"    public Event(String description, LocalDate start, LocalDate end) {","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"LamJiuFong"},"content":"        super(description);","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"LamJiuFong"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"LamJiuFong"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"LamJiuFong"},"content":"        this.startTime \u003d null;","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"LamJiuFong"},"content":"        this.endTime \u003d null;","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"LamJiuFong"},"content":"    public Event(String description, LocalDate start, LocalTime startTime, LocalDate end) {","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"        super(description);","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"LamJiuFong"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"LamJiuFong"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"LamJiuFong"},"content":"        this.endTime \u003d null;","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"LamJiuFong"},"content":"    public Event(String description, LocalDate start, LocalDate end, LocalTime endTime) {","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"LamJiuFong"},"content":"        super(description);","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"LamJiuFong"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"LamJiuFong"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"LamJiuFong"},"content":"        this.startTime \u003d null;","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"LamJiuFong"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"LamJiuFong"},"content":"    public Event(String description, LocalDate start, LocalTime startTime, LocalDate end, LocalTime endTime) {","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"LamJiuFong"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"LamJiuFong"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"LamJiuFong"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"LamJiuFong"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"LamJiuFong"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"LamJiuFong"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"LamJiuFong"},"content":"     * @return Desired string representation of the task.","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"LamJiuFong"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"LamJiuFong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"LamJiuFong"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"LamJiuFong"},"content":"        return \"[E] \" + super.toString() + \" (from: \" + this.start.format(dateFormat)","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"LamJiuFong"},"content":"                + this.startTimeString() + \" to: \"","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"LamJiuFong"},"content":"                + this.end.format(dateFormat) + this.endTimeString()+ \")\";","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"LamJiuFong"},"content":"    private String startTimeString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"LamJiuFong"},"content":"        return (this.startTime !\u003d null)","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"LamJiuFong"},"content":"                ? \" \" + this.startTime.format(DateTimeFormatter.ofPattern(\"h:mma\"))","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"LamJiuFong"},"content":"                : \"\";","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"LamJiuFong"},"content":"    private String endTimeString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"LamJiuFong"},"content":"        return (this.endTime !\u003d null)","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"LamJiuFong"},"content":"                ? \" \" + this.endTime.format(DateTimeFormatter.ofPattern(\"h:mma\"))","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"LamJiuFong"},"content":"                : \"\";","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":78,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":79,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":80,"author":{"gitId":"LamJiuFong"},"content":"     * Returns a string representation of the task to be inserted into a file.","lastModifiedDate":"2023-08-26"},{"lineNumber":81,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":82,"author":{"gitId":"LamJiuFong"},"content":"     * @return Desired string representation of the task.","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":84,"author":{"gitId":"LamJiuFong"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":85,"author":{"gitId":"LamJiuFong"},"content":"    public String toStringInFile() {","lastModifiedDate":"2023-08-26"},{"lineNumber":86,"author":{"gitId":"LamJiuFong"},"content":"        return \"[E] /\" + super.toStringInFile() + \" / \" + this.start","lastModifiedDate":"2023-08-26"},{"lineNumber":87,"author":{"gitId":"LamJiuFong"},"content":"                + this.startTimeStringInFile() + \" / \" + this.end","lastModifiedDate":"2023-08-26"},{"lineNumber":88,"author":{"gitId":"LamJiuFong"},"content":"                + this.endTimeStringInFile();","lastModifiedDate":"2023-08-26"},{"lineNumber":89,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":90,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":91,"author":{"gitId":"LamJiuFong"},"content":"    private String startTimeStringInFile() {","lastModifiedDate":"2023-08-26"},{"lineNumber":92,"author":{"gitId":"LamJiuFong"},"content":"        return this.startTime !\u003d null","lastModifiedDate":"2023-08-26"},{"lineNumber":93,"author":{"gitId":"LamJiuFong"},"content":"                ? \" / \" + this.startTime.format(DateTimeFormatter.ofPattern(\"HH:mm\"))","lastModifiedDate":"2023-08-26"},{"lineNumber":94,"author":{"gitId":"LamJiuFong"},"content":"                : \"\";","lastModifiedDate":"2023-08-26"},{"lineNumber":95,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":96,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":97,"author":{"gitId":"LamJiuFong"},"content":"    private String endTimeStringInFile() {","lastModifiedDate":"2023-08-26"},{"lineNumber":98,"author":{"gitId":"LamJiuFong"},"content":"        return this.endTime !\u003d null","lastModifiedDate":"2023-08-26"},{"lineNumber":99,"author":{"gitId":"LamJiuFong"},"content":"                ? \" / \" + this.endTime.format(DateTimeFormatter.ofPattern(\"HH:mm\"))","lastModifiedDate":"2023-08-26"},{"lineNumber":100,"author":{"gitId":"LamJiuFong"},"content":"                : \"\";","lastModifiedDate":"2023-08-26"},{"lineNumber":101,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":102,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"LamJiuFong":102}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"package duke.task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":" * A task.","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"public class Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"    private String description;","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"     * Creates a task instance.","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"     * Returns the current status of the task.","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"     * @return A boolean value to indicate if the task is done.","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"LamJiuFong"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"LamJiuFong"},"content":"        return (this.isDone ? \"/\" : \" \");","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"LamJiuFong"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"    public void markDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"LamJiuFong"},"content":"     * Marks a task as undone.","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"LamJiuFong"},"content":"    public void markUndone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"LamJiuFong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"LamJiuFong"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"LamJiuFong"},"content":"     * @return Desired string representation of the task.","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"LamJiuFong"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"LamJiuFong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"LamJiuFong"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"LamJiuFong"},"content":"     * Returns a string representation of the task to be inserted into a file.","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"LamJiuFong"},"content":"     * @return Desired string representation of the task.","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"LamJiuFong"},"content":"    public String toStringInFile() {","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"LamJiuFong"},"content":"        if (isDone) {","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"LamJiuFong"},"content":"            return \" 1 / \" + this.description;","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"LamJiuFong"},"content":"        } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"LamJiuFong"},"content":"            return \" 0 / \" + this.description;","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"LamJiuFong":65}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"package duke.task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":" * A task to be done.","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"     * Creates a todo instance.","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"        super(description);","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"     * @return Desired string representation of the task.","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"LamJiuFong"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"LamJiuFong"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"LamJiuFong"},"content":"     * Returns a string representation of the task to be inserted into a file.","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"LamJiuFong"},"content":"     * @return Desired string representation of the task.","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"    @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"    public String toStringInFile() {","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"LamJiuFong"},"content":"        return \"[T] /\" + super.toStringInFile();","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"LamJiuFong":36}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":"import duke.exception.InvalidMarkingException;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"import duke.exception.LackDescriptionException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"import duke.exception.LackInformationException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"import duke.stub.TaskListStub;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"    // creates to new output stream","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"LamJiuFong"},"content":"    private ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"LamJiuFong"},"content":"    @BeforeEach","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"LamJiuFong"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"LamJiuFong"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"LamJiuFong"},"content":"    public void parse_listButEmptyList_emptyMessage() {","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"LamJiuFong"},"content":"        Parser parser \u003d new Parser(new TaskListStub(true, true), new Ui()); //The implementation of Ui is simple enough, unnecessary to create a UiStub","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"        parser.parse(\"list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(\"list is empty :(\\n\", outContent.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"LamJiuFong"},"content":"    public void parse_listNonEmptyList_listPrinted() {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"LamJiuFong"},"content":"        Parser parser \u003d new Parser(new TaskListStub(false, true), new Ui());","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"LamJiuFong"},"content":"        parser.parse(\"list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(\"1 [ ] task1\\n\" + \"2 [ ] task2\\n\" + \"3 [ ] task3\\n\", outContent.toString()); //less likely for task.toString() to have bug","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"LamJiuFong"},"content":"    public void parse_markNoIndex_invalidMarkingExceptionThrown() {","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"LamJiuFong"},"content":"        Parser parser \u003d new Parser(new TaskListStub(false, true), new Ui());","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"LamJiuFong"},"content":"            parser.parse(\"mark\");","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"LamJiuFong"},"content":"        } catch (InvalidMarkingException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"LamJiuFong"},"content":"            assertEquals(\"Missing index\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"LamJiuFong"},"content":"    public void parse_unmarkNoIndex_invalidMarkingExceptionThrown() {","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"LamJiuFong"},"content":"        Parser parser \u003d new Parser(new TaskListStub(false, true), new Ui());","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"LamJiuFong"},"content":"            parser.parse(\"unmark\");","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"LamJiuFong"},"content":"        } catch (InvalidMarkingException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"LamJiuFong"},"content":"            assertEquals(\"Missing index\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"LamJiuFong"},"content":"    public void parse_markNonInteger_invalidMarkingExceptionThrown() {","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"LamJiuFong"},"content":"        Parser parser \u003d new Parser(new TaskListStub(false, true), new Ui());","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"LamJiuFong"},"content":"            parser.parse(\"mark nonInteger\");","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"LamJiuFong"},"content":"        } catch (InvalidMarkingException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"LamJiuFong"},"content":"            assertEquals(\"Please provide a valid index\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"LamJiuFong"},"content":"    public void parse_unmarkNonInteger_invalidMarkingExceptionThrown() {","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"LamJiuFong"},"content":"        Parser parser \u003d new Parser(new TaskListStub(false, true), new Ui());","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"LamJiuFong"},"content":"            parser.parse(\"unmark nonInteger\");","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"LamJiuFong"},"content":"        } catch (InvalidMarkingException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"LamJiuFong"},"content":"            assertEquals(\"Please provide a valid index\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"LamJiuFong"},"content":"    public void parse_markInvalidInteger_invalidMarkingExceptionThrown() {","lastModifiedDate":"2023-08-29"},{"lineNumber":89,"author":{"gitId":"LamJiuFong"},"content":"        Parser parser \u003d new Parser(new TaskListStub(false, true), new Ui());","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"LamJiuFong"},"content":"            parser.parse(\"mark 4\"); //TaskListStub only has three tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"LamJiuFong"},"content":"        } catch (InvalidMarkingException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"LamJiuFong"},"content":"            assertEquals(\"There is no corresponding task in the list\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":96,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":98,"author":{"gitId":"LamJiuFong"},"content":"            parser.parse(\"mark 0\");","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"LamJiuFong"},"content":"        } catch (InvalidMarkingException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"LamJiuFong"},"content":"            assertEquals(\"There is no corresponding task in the list\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"LamJiuFong"},"content":"            parser.parse(\"mark -1\");","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"LamJiuFong"},"content":"        } catch (InvalidMarkingException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"LamJiuFong"},"content":"            assertEquals(\"There is no corresponding task in the list\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"LamJiuFong"},"content":"    public void parse_unmarkInvalidInteger_invalidMarkingExceptionThrown() {","lastModifiedDate":"2023-08-29"},{"lineNumber":115,"author":{"gitId":"LamJiuFong"},"content":"        Parser parser \u003d new Parser(new TaskListStub(false, true), new Ui());","lastModifiedDate":"2023-08-29"},{"lineNumber":116,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":117,"author":{"gitId":"LamJiuFong"},"content":"            parser.parse(\"unmark 4\"); //TaskListStub only has three tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":118,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":119,"author":{"gitId":"LamJiuFong"},"content":"        } catch (InvalidMarkingException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"LamJiuFong"},"content":"            assertEquals(\"There is no corresponding task in the list\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"LamJiuFong"},"content":"            parser.parse(\"unmark 0\");","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"LamJiuFong"},"content":"        } catch (InvalidMarkingException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"LamJiuFong"},"content":"            assertEquals(\"There is no corresponding task in the list\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":128,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":129,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":130,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":131,"author":{"gitId":"LamJiuFong"},"content":"            parser.parse(\"unmark -1\");","lastModifiedDate":"2023-08-29"},{"lineNumber":132,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":133,"author":{"gitId":"LamJiuFong"},"content":"        } catch (InvalidMarkingException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":134,"author":{"gitId":"LamJiuFong"},"content":"            assertEquals(\"There is no corresponding task in the list\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":135,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"LamJiuFong"},"content":"    public void parse_markValidInteger_taskMarked() {","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"LamJiuFong"},"content":"        Parser parser \u003d new Parser(new TaskListStub(false, true), new Ui());","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"LamJiuFong"},"content":"        parser.parse(\"mark 1\");","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(\"Task marked as done.\\n\", outContent.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"LamJiuFong"},"content":"        outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"LamJiuFong"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"LamJiuFong"},"content":"        parser.parse(\"list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":148,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(\"1 [/] task1\\n\" + \"2 [ ] task2\\n\" + \"3 [ ] task3\\n\", outContent.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":149,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"LamJiuFong"},"content":"        outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-08-29"},{"lineNumber":151,"author":{"gitId":"LamJiuFong"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-08-29"},{"lineNumber":152,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":153,"author":{"gitId":"LamJiuFong"},"content":"        parser.parse(\"mark 2\");","lastModifiedDate":"2023-08-29"},{"lineNumber":154,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(\"Task marked as done.\\n\", outContent.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":155,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"LamJiuFong"},"content":"        outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"LamJiuFong"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-08-29"},{"lineNumber":158,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":159,"author":{"gitId":"LamJiuFong"},"content":"        parser.parse(\"list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":160,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(\"1 [/] task1\\n\" + \"2 [/] task2\\n\" + \"3 [ ] task3\\n\", outContent.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":162,"author":{"gitId":"LamJiuFong"},"content":"        outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-08-29"},{"lineNumber":163,"author":{"gitId":"LamJiuFong"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-08-29"},{"lineNumber":164,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":165,"author":{"gitId":"LamJiuFong"},"content":"        parser.parse(\"mark 3\");","lastModifiedDate":"2023-08-29"},{"lineNumber":166,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(\"Task marked as done.\\n\", outContent.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":167,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":168,"author":{"gitId":"LamJiuFong"},"content":"        outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-08-29"},{"lineNumber":169,"author":{"gitId":"LamJiuFong"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-08-29"},{"lineNumber":170,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":171,"author":{"gitId":"LamJiuFong"},"content":"        parser.parse(\"list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":172,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(\"1 [/] task1\\n\" + \"2 [/] task2\\n\" + \"3 [/] task3\\n\", outContent.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":173,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":174,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":175,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":176,"author":{"gitId":"LamJiuFong"},"content":"    public void parse_unmarkValidInteger_taskUnmarked() {","lastModifiedDate":"2023-08-29"},{"lineNumber":177,"author":{"gitId":"LamJiuFong"},"content":"        Parser parser \u003d new Parser(new TaskListStub(false, false), new Ui());","lastModifiedDate":"2023-08-29"},{"lineNumber":178,"author":{"gitId":"LamJiuFong"},"content":"        parser.parse(\"unmark 1\");","lastModifiedDate":"2023-08-29"},{"lineNumber":179,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(\"Task marked as undone.\\n\", outContent.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":180,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":181,"author":{"gitId":"LamJiuFong"},"content":"        outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-08-29"},{"lineNumber":182,"author":{"gitId":"LamJiuFong"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-08-29"},{"lineNumber":183,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":184,"author":{"gitId":"LamJiuFong"},"content":"        parser.parse(\"list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":185,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(\"1 [ ] task1\\n\" + \"2 [/] task2\\n\" + \"3 [/] task3\\n\", outContent.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":186,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":187,"author":{"gitId":"LamJiuFong"},"content":"        outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-08-29"},{"lineNumber":188,"author":{"gitId":"LamJiuFong"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-08-29"},{"lineNumber":189,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":190,"author":{"gitId":"LamJiuFong"},"content":"        parser.parse(\"unmark 2\");","lastModifiedDate":"2023-08-29"},{"lineNumber":191,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(\"Task marked as undone.\\n\", outContent.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":192,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":193,"author":{"gitId":"LamJiuFong"},"content":"        outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-08-29"},{"lineNumber":194,"author":{"gitId":"LamJiuFong"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-08-29"},{"lineNumber":195,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":196,"author":{"gitId":"LamJiuFong"},"content":"        parser.parse(\"list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":197,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(\"1 [ ] task1\\n\" + \"2 [ ] task2\\n\" + \"3 [/] task3\\n\", outContent.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":198,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":199,"author":{"gitId":"LamJiuFong"},"content":"        outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-08-29"},{"lineNumber":200,"author":{"gitId":"LamJiuFong"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-08-29"},{"lineNumber":201,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":202,"author":{"gitId":"LamJiuFong"},"content":"        parser.parse(\"unmark 3\");","lastModifiedDate":"2023-08-29"},{"lineNumber":203,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(\"Task marked as undone.\\n\", outContent.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":204,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":205,"author":{"gitId":"LamJiuFong"},"content":"        outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-08-29"},{"lineNumber":206,"author":{"gitId":"LamJiuFong"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-08-29"},{"lineNumber":207,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":208,"author":{"gitId":"LamJiuFong"},"content":"        parser.parse(\"list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":209,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(\"1 [ ] task1\\n\" + \"2 [ ] task2\\n\" + \"3 [ ] task3\\n\", outContent.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":210,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":211,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":212,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":213,"author":{"gitId":"LamJiuFong"},"content":"    public void parse_todoNoDescription_lackDescriptionExceptionThrown() {","lastModifiedDate":"2023-08-29"},{"lineNumber":214,"author":{"gitId":"LamJiuFong"},"content":"        Parser parser \u003d new Parser(new TaskListStub(false, true), new Ui());","lastModifiedDate":"2023-08-29"},{"lineNumber":215,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":216,"author":{"gitId":"LamJiuFong"},"content":"            parser.parse(\"todo\");","lastModifiedDate":"2023-08-29"},{"lineNumber":217,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":218,"author":{"gitId":"LamJiuFong"},"content":"        } catch (LackDescriptionException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":219,"author":{"gitId":"LamJiuFong"},"content":"            assertEquals(\"The description of todo should not be empty\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":220,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":221,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":222,"author":{"gitId":"LamJiuFong"},"content":"        parser.parse(\"list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":223,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(\"1 [ ] task1\\n\" + \"2 [ ] task2\\n\" + \"3 [ ] task3\\n\", outContent.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":224,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":225,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":226,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":227,"author":{"gitId":"LamJiuFong"},"content":"    public void parse_todoValidInput_addTaskToList() {","lastModifiedDate":"2023-08-29"},{"lineNumber":228,"author":{"gitId":"LamJiuFong"},"content":"        Parser parser \u003d new Parser(new TaskListStub(false, true), new Ui());","lastModifiedDate":"2023-08-29"},{"lineNumber":229,"author":{"gitId":"LamJiuFong"},"content":"        parser.parse(\"todo read books\");","lastModifiedDate":"2023-08-29"},{"lineNumber":230,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(\"Added to list: read books\\n\" + \"Now you have 4 tasks in the list\\n\", outContent.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":231,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":232,"author":{"gitId":"LamJiuFong"},"content":"        outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-08-29"},{"lineNumber":233,"author":{"gitId":"LamJiuFong"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-08-29"},{"lineNumber":234,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":235,"author":{"gitId":"LamJiuFong"},"content":"        parser.parse(\"list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":236,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(\"1 [ ] task1\\n\" + \"2 [ ] task2\\n\" + \"3 [ ] task3\\n\" + \"4 [T] [ ] read books\\n\", outContent.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":237,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":238,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":239,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":240,"author":{"gitId":"LamJiuFong"},"content":"    public void parse_deadlineNoDescription_lackDescriptionExceptionThrown() {","lastModifiedDate":"2023-08-29"},{"lineNumber":241,"author":{"gitId":"LamJiuFong"},"content":"        Parser parser \u003d new Parser(new TaskListStub(false, true), new Ui());","lastModifiedDate":"2023-08-29"},{"lineNumber":242,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":243,"author":{"gitId":"LamJiuFong"},"content":"            parser.parse(\"deadline\");","lastModifiedDate":"2023-08-29"},{"lineNumber":244,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":245,"author":{"gitId":"LamJiuFong"},"content":"        } catch (LackDescriptionException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":246,"author":{"gitId":"LamJiuFong"},"content":"            assertEquals(\"The description of deadline should not be empty\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":247,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":248,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":249,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":250,"author":{"gitId":"LamJiuFong"},"content":"            parser.parse(\"deadline /by 10\");","lastModifiedDate":"2023-08-29"},{"lineNumber":251,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":252,"author":{"gitId":"LamJiuFong"},"content":"        } catch (LackDescriptionException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":253,"author":{"gitId":"LamJiuFong"},"content":"            assertEquals(\"The description of deadline should not be empty\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":254,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":255,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":256,"author":{"gitId":"LamJiuFong"},"content":"        parser.parse(\"list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":257,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(\"1 [ ] task1\\n\" + \"2 [ ] task2\\n\" + \"3 [ ] task3\\n\", outContent.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":258,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":259,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":260,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":261,"author":{"gitId":"LamJiuFong"},"content":"    public void parse_deadlineNoTimeInformation_lackInformationExceptionThrown() {","lastModifiedDate":"2023-08-29"},{"lineNumber":262,"author":{"gitId":"LamJiuFong"},"content":"        Parser parser \u003d new Parser(new TaskListStub(false, true), new Ui());","lastModifiedDate":"2023-08-29"},{"lineNumber":263,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":264,"author":{"gitId":"LamJiuFong"},"content":"            parser.parse(\"deadline play games\");","lastModifiedDate":"2023-08-29"},{"lineNumber":265,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":266,"author":{"gitId":"LamJiuFong"},"content":"        } catch (LackInformationException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":267,"author":{"gitId":"LamJiuFong"},"content":"            assertEquals(\"Please provide information for: \\\"/by\\\"\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":268,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":269,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":270,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":271,"author":{"gitId":"LamJiuFong"},"content":"            parser.parse(\"deadline play games /by \");","lastModifiedDate":"2023-08-29"},{"lineNumber":272,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":273,"author":{"gitId":"LamJiuFong"},"content":"        } catch (LackInformationException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":274,"author":{"gitId":"LamJiuFong"},"content":"            assertEquals(\"Please provide information for: \\\"/by\\\"\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":275,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":276,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":277,"author":{"gitId":"LamJiuFong"},"content":"        parser.parse(\"list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":278,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(\"1 [ ] task1\\n\" + \"2 [ ] task2\\n\" + \"3 [ ] task3\\n\", outContent.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":279,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":280,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":281,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":282,"author":{"gitId":"LamJiuFong"},"content":"    public void parse_deadlineInvalidTimeFormat_dateTimeParseExceptionThrown() {","lastModifiedDate":"2023-08-29"},{"lineNumber":283,"author":{"gitId":"LamJiuFong"},"content":"        Parser parser \u003d new Parser(new TaskListStub(false, true), new Ui());","lastModifiedDate":"2023-08-29"},{"lineNumber":284,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":285,"author":{"gitId":"LamJiuFong"},"content":"            parser.parse(\"deadline play games /by 2023/4/2 14:00\");","lastModifiedDate":"2023-08-29"},{"lineNumber":286,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":287,"author":{"gitId":"LamJiuFong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":288,"author":{"gitId":"LamJiuFong"},"content":"            //do nothing","lastModifiedDate":"2023-08-29"},{"lineNumber":289,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":290,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":291,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":292,"author":{"gitId":"LamJiuFong"},"content":"            parser.parse(\"deadline play games /by 2023/04/04 14-00\");","lastModifiedDate":"2023-08-29"},{"lineNumber":293,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":294,"author":{"gitId":"LamJiuFong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":295,"author":{"gitId":"LamJiuFong"},"content":"            //do nothing","lastModifiedDate":"2023-08-29"},{"lineNumber":296,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":297,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":298,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":299,"author":{"gitId":"LamJiuFong"},"content":"            parser.parse(\"deadline play games /by 2023/04/04 \");","lastModifiedDate":"2023-08-29"},{"lineNumber":300,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":301,"author":{"gitId":"LamJiuFong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":302,"author":{"gitId":"LamJiuFong"},"content":"            //do nothing","lastModifiedDate":"2023-08-29"},{"lineNumber":303,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":304,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":305,"author":{"gitId":"LamJiuFong"},"content":"        parser.parse(\"list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":306,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(\"1 [ ] task1\\n\" + \"2 [ ] task2\\n\" + \"3 [ ] task3\\n\", outContent.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":307,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":308,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":309,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":310,"author":{"gitId":"LamJiuFong"},"content":"    public void parse_deadlineValidInput_addTaskToList() {","lastModifiedDate":"2023-08-29"},{"lineNumber":311,"author":{"gitId":"LamJiuFong"},"content":"        Parser parser \u003d new Parser(new TaskListStub(false, true), new Ui());","lastModifiedDate":"2023-08-29"},{"lineNumber":312,"author":{"gitId":"LamJiuFong"},"content":"        parser.parse(\"deadline play games /by 2023-12-31 14:00\");","lastModifiedDate":"2023-08-29"},{"lineNumber":313,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(\"Added to list: play games\\n\" + \"Now you have 4 tasks in the list\\n\", outContent.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":314,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":315,"author":{"gitId":"LamJiuFong"},"content":"        outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-08-29"},{"lineNumber":316,"author":{"gitId":"LamJiuFong"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-08-29"},{"lineNumber":317,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":318,"author":{"gitId":"LamJiuFong"},"content":"        parser.parse(\"list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":319,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(\"1 [ ] task1\\n\" + \"2 [ ] task2\\n\" + \"3 [ ] task3\\n\" + \"4 [D] [ ] play games (by: Dec 31 2023 2:00PM)\\n\", outContent.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":320,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":321,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":322,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":323,"author":{"gitId":"LamJiuFong"},"content":"    public void parse_eventNoDescription_lackDescriptionExceptionThrown() {","lastModifiedDate":"2023-08-29"},{"lineNumber":324,"author":{"gitId":"LamJiuFong"},"content":"        Parser parser \u003d new Parser(new TaskListStub(false, true), new Ui());","lastModifiedDate":"2023-08-29"},{"lineNumber":325,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":326,"author":{"gitId":"LamJiuFong"},"content":"            parser.parse(\"event\");","lastModifiedDate":"2023-08-29"},{"lineNumber":327,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":328,"author":{"gitId":"LamJiuFong"},"content":"        } catch (LackDescriptionException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":329,"author":{"gitId":"LamJiuFong"},"content":"            assertEquals(\"The description of event should not be empty\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":330,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":331,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":332,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":333,"author":{"gitId":"LamJiuFong"},"content":"            parser.parse(\"event /from 10 /to 2\");","lastModifiedDate":"2023-08-29"},{"lineNumber":334,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":335,"author":{"gitId":"LamJiuFong"},"content":"        } catch (LackDescriptionException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":336,"author":{"gitId":"LamJiuFong"},"content":"            assertEquals(\"The description of event should not be empty\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":337,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":338,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":339,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":340,"author":{"gitId":"LamJiuFong"},"content":"            parser.parse(\"event /from 10\");","lastModifiedDate":"2023-08-29"},{"lineNumber":341,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":342,"author":{"gitId":"LamJiuFong"},"content":"        } catch (LackDescriptionException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":343,"author":{"gitId":"LamJiuFong"},"content":"            assertEquals(\"The description of event should not be empty\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":344,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":345,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":346,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":347,"author":{"gitId":"LamJiuFong"},"content":"            parser.parse(\"event /to 2\");","lastModifiedDate":"2023-08-29"},{"lineNumber":348,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":349,"author":{"gitId":"LamJiuFong"},"content":"        } catch (LackDescriptionException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":350,"author":{"gitId":"LamJiuFong"},"content":"            assertEquals(\"The description of event should not be empty\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":351,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":352,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":353,"author":{"gitId":"LamJiuFong"},"content":"        parser.parse(\"list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":354,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(\"1 [ ] task1\\n\" + \"2 [ ] task2\\n\" + \"3 [ ] task3\\n\", outContent.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":355,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":356,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":357,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":358,"author":{"gitId":"LamJiuFong"},"content":"    public void parse_eventNoTimeInformation_lackInformationExceptionThrown() {","lastModifiedDate":"2023-08-29"},{"lineNumber":359,"author":{"gitId":"LamJiuFong"},"content":"        Parser parser \u003d new Parser(new TaskListStub(false, true), new Ui());","lastModifiedDate":"2023-08-29"},{"lineNumber":360,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":361,"author":{"gitId":"LamJiuFong"},"content":"            parser.parse(\"event party\");","lastModifiedDate":"2023-08-29"},{"lineNumber":362,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":363,"author":{"gitId":"LamJiuFong"},"content":"        } catch (LackInformationException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":364,"author":{"gitId":"LamJiuFong"},"content":"            assertEquals(\"Please provide information for: \\\"/from\\\"\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":365,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":366,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":367,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":368,"author":{"gitId":"LamJiuFong"},"content":"            parser.parse(\"event party /from\");","lastModifiedDate":"2023-08-29"},{"lineNumber":369,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":370,"author":{"gitId":"LamJiuFong"},"content":"        } catch (LackInformationException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":371,"author":{"gitId":"LamJiuFong"},"content":"            assertEquals(\"Please provide information for: \\\"/from\\\"\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":372,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":373,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":374,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":375,"author":{"gitId":"LamJiuFong"},"content":"            parser.parse(\"event party /to 2023-12-31\");","lastModifiedDate":"2023-08-29"},{"lineNumber":376,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":377,"author":{"gitId":"LamJiuFong"},"content":"        } catch (LackInformationException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":378,"author":{"gitId":"LamJiuFong"},"content":"            assertEquals(\"Please provide information for: \\\"/from\\\"\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":379,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":380,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":381,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":382,"author":{"gitId":"LamJiuFong"},"content":"            parser.parse(\"event party /from /to 2023-12-31\");","lastModifiedDate":"2023-08-29"},{"lineNumber":383,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":384,"author":{"gitId":"LamJiuFong"},"content":"        } catch (LackInformationException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":385,"author":{"gitId":"LamJiuFong"},"content":"            assertEquals(\"Please provide information for: \\\"/from\\\"\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":386,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":387,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":388,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":389,"author":{"gitId":"LamJiuFong"},"content":"            parser.parse(\"event party /from 2023-11-21\");","lastModifiedDate":"2023-08-29"},{"lineNumber":390,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":391,"author":{"gitId":"LamJiuFong"},"content":"        } catch (LackInformationException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":392,"author":{"gitId":"LamJiuFong"},"content":"            assertEquals(\"Please provide information for: \\\"/to\\\"\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":393,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":394,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":395,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":396,"author":{"gitId":"LamJiuFong"},"content":"            parser.parse(\"event party /from 2023-11-21 /to \");","lastModifiedDate":"2023-08-29"},{"lineNumber":397,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":398,"author":{"gitId":"LamJiuFong"},"content":"        } catch (LackInformationException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":399,"author":{"gitId":"LamJiuFong"},"content":"            assertEquals(\"Please provide information for: \\\"/to\\\"\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":400,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":401,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":402,"author":{"gitId":"LamJiuFong"},"content":"        parser.parse(\"list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":403,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(\"1 [ ] task1\\n\" + \"2 [ ] task2\\n\" + \"3 [ ] task3\\n\", outContent.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":404,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":405,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":406,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":407,"author":{"gitId":"LamJiuFong"},"content":"    public void parse_eventInvalidTimeFormat_dateTimeParseExceptionThrown() {","lastModifiedDate":"2023-08-29"},{"lineNumber":408,"author":{"gitId":"LamJiuFong"},"content":"        Parser parser \u003d new Parser(new TaskListStub(false, true), new Ui());","lastModifiedDate":"2023-08-29"},{"lineNumber":409,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":410,"author":{"gitId":"LamJiuFong"},"content":"            parser.parse(\"event party /from 2023/4/2 14:00 /to 2023-12-31 13:00\");","lastModifiedDate":"2023-08-29"},{"lineNumber":411,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":412,"author":{"gitId":"LamJiuFong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":413,"author":{"gitId":"LamJiuFong"},"content":"            //do nothing","lastModifiedDate":"2023-08-29"},{"lineNumber":414,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":415,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":416,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":417,"author":{"gitId":"LamJiuFong"},"content":"            parser.parse(\"event party /from 2023-04-02 14:00 /to 2023/12/31 13:00\");","lastModifiedDate":"2023-08-29"},{"lineNumber":418,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":419,"author":{"gitId":"LamJiuFong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":420,"author":{"gitId":"LamJiuFong"},"content":"            //do nothing","lastModifiedDate":"2023-08-29"},{"lineNumber":421,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":422,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":423,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":424,"author":{"gitId":"LamJiuFong"},"content":"            parser.parse(\"event party /from 2023-04-02 2PM /to 2023-12-31 13:00\");","lastModifiedDate":"2023-08-29"},{"lineNumber":425,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":426,"author":{"gitId":"LamJiuFong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":427,"author":{"gitId":"LamJiuFong"},"content":"            //do nothing","lastModifiedDate":"2023-08-29"},{"lineNumber":428,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":429,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":430,"author":{"gitId":"LamJiuFong"},"content":"        parser.parse(\"list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":431,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(\"1 [ ] task1\\n\" + \"2 [ ] task2\\n\" + \"3 [ ] task3\\n\", outContent.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":432,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":433,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":434,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":435,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":436,"author":{"gitId":"LamJiuFong"},"content":"    public void parse_eventValidInput_addTaskToList() {","lastModifiedDate":"2023-08-29"},{"lineNumber":437,"author":{"gitId":"LamJiuFong"},"content":"        Parser parser \u003d new Parser(new TaskListStub(false, true), new Ui());","lastModifiedDate":"2023-08-29"},{"lineNumber":438,"author":{"gitId":"LamJiuFong"},"content":"        parser.parse(\"event party /from 2023-04-02 14:00 /to 2023-12-31 13:00\");","lastModifiedDate":"2023-08-29"},{"lineNumber":439,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(\"Added to list: party\\n\" + \"Now you have 4 tasks in the list\\n\", outContent.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":440,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":441,"author":{"gitId":"LamJiuFong"},"content":"        outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-08-29"},{"lineNumber":442,"author":{"gitId":"LamJiuFong"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-08-29"},{"lineNumber":443,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":444,"author":{"gitId":"LamJiuFong"},"content":"        parser.parse(\"list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":445,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(\"1 [ ] task1\\n\" + \"2 [ ] task2\\n\" + \"3 [ ] task3\\n\" + \"4 [E] [ ] party (from: Apr 2 2023 2:00PM to: Dec 31 2023 1:00PM)\\n\", outContent.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":446,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":447,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":448,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":449,"author":{"gitId":"LamJiuFong"},"content":"    public void parse_deleteNoIndex_invalidMarkingExceptionThrown() {","lastModifiedDate":"2023-08-29"},{"lineNumber":450,"author":{"gitId":"LamJiuFong"},"content":"        Parser parser \u003d new Parser(new TaskListStub(false, true), new Ui());","lastModifiedDate":"2023-08-29"},{"lineNumber":451,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":452,"author":{"gitId":"LamJiuFong"},"content":"            parser.parse(\"delete\");","lastModifiedDate":"2023-08-29"},{"lineNumber":453,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":454,"author":{"gitId":"LamJiuFong"},"content":"        } catch (InvalidMarkingException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":455,"author":{"gitId":"LamJiuFong"},"content":"            assertEquals(\"Missing index\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":456,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":457,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":458,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":459,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":460,"author":{"gitId":"LamJiuFong"},"content":"    public void parse_deleteNonInteger_invalidMarkingExceptionThrown() {","lastModifiedDate":"2023-08-29"},{"lineNumber":461,"author":{"gitId":"LamJiuFong"},"content":"        Parser parser \u003d new Parser(new TaskListStub(false, true), new Ui());","lastModifiedDate":"2023-08-29"},{"lineNumber":462,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":463,"author":{"gitId":"LamJiuFong"},"content":"            parser.parse(\"delete nonInteger\");","lastModifiedDate":"2023-08-29"},{"lineNumber":464,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":465,"author":{"gitId":"LamJiuFong"},"content":"        } catch (InvalidMarkingException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":466,"author":{"gitId":"LamJiuFong"},"content":"            assertEquals(\"Please provide a valid index\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":467,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":468,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":469,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":470,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":471,"author":{"gitId":"LamJiuFong"},"content":"    public void parse_deleteInvalidInteger_invalidMarkingExceptionThrown() {","lastModifiedDate":"2023-08-29"},{"lineNumber":472,"author":{"gitId":"LamJiuFong"},"content":"        Parser parser \u003d new Parser(new TaskListStub(false, true), new Ui());","lastModifiedDate":"2023-08-29"},{"lineNumber":473,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":474,"author":{"gitId":"LamJiuFong"},"content":"            parser.parse(\"delete 4\"); //TaskListStub only has three tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":475,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":476,"author":{"gitId":"LamJiuFong"},"content":"        } catch (InvalidMarkingException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":477,"author":{"gitId":"LamJiuFong"},"content":"            assertEquals(\"There is no corresponding task in the list\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":478,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":479,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":480,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":481,"author":{"gitId":"LamJiuFong"},"content":"            parser.parse(\"delete 0\");","lastModifiedDate":"2023-08-29"},{"lineNumber":482,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":483,"author":{"gitId":"LamJiuFong"},"content":"        } catch (InvalidMarkingException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":484,"author":{"gitId":"LamJiuFong"},"content":"            assertEquals(\"There is no corresponding task in the list\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":485,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":486,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":487,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":488,"author":{"gitId":"LamJiuFong"},"content":"            parser.parse(\"delete -1\");","lastModifiedDate":"2023-08-29"},{"lineNumber":489,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":490,"author":{"gitId":"LamJiuFong"},"content":"        } catch (InvalidMarkingException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":491,"author":{"gitId":"LamJiuFong"},"content":"            assertEquals(\"There is no corresponding task in the list\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":492,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":493,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":494,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":495,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":496,"author":{"gitId":"LamJiuFong"},"content":"    public void parse_deleteValidInteger_taskDeleted() {","lastModifiedDate":"2023-08-29"},{"lineNumber":497,"author":{"gitId":"LamJiuFong"},"content":"        Parser parser \u003d new Parser(new TaskListStub(false, true), new Ui());","lastModifiedDate":"2023-08-29"},{"lineNumber":498,"author":{"gitId":"LamJiuFong"},"content":"        parser.parse(\"delete 1\");","lastModifiedDate":"2023-08-29"},{"lineNumber":499,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(\"I\u0027ve removed this task:\\n\" + \"[ ] task1\\n\" + \"Now you have 2 tasks in the list\\n\", outContent.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":500,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":501,"author":{"gitId":"LamJiuFong"},"content":"        outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-08-29"},{"lineNumber":502,"author":{"gitId":"LamJiuFong"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-08-29"},{"lineNumber":503,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":504,"author":{"gitId":"LamJiuFong"},"content":"        parser.parse(\"list\");","lastModifiedDate":"2023-08-29"},{"lineNumber":505,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(\"1 [ ] task2\\n\" + \"2 [ ] task3\\n\", outContent.toString());","lastModifiedDate":"2023-08-29"},{"lineNumber":506,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":507,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":508,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":509,"author":{"gitId":"LamJiuFong"},"content":"    public void parse_invalidInstruction_invalidInputExceptionThrown() {","lastModifiedDate":"2023-08-29"},{"lineNumber":510,"author":{"gitId":"LamJiuFong"},"content":"        Parser parser \u003d new Parser(new TaskListStub(false, true), new Ui());","lastModifiedDate":"2023-08-29"},{"lineNumber":511,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":512,"author":{"gitId":"LamJiuFong"},"content":"            parser.parse(\"check homework\");","lastModifiedDate":"2023-08-29"},{"lineNumber":513,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":514,"author":{"gitId":"LamJiuFong"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":515,"author":{"gitId":"LamJiuFong"},"content":"            assertEquals(\"OOPS! I do not know what check means. Please try again :)\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":516,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":517,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":518,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":519,"author":{"gitId":"LamJiuFong"},"content":"            parser.parse(\"copy homework\");","lastModifiedDate":"2023-08-29"},{"lineNumber":520,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":521,"author":{"gitId":"LamJiuFong"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":522,"author":{"gitId":"LamJiuFong"},"content":"            assertEquals(\"OOPS! I do not know what copy means. Please try again :)\", e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":523,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":524,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":525,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"LamJiuFong":525}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"package duke;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"import duke.exception.DukeFileNotFoundException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"public class StorageTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"    public void load_validFile_contentLoaded() {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"        // test on non-existing file","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"LamJiuFong"},"content":"        ","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"        File f \u003d new File(\"./dukeTest.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"LamJiuFong"},"content":"            f.createNewFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"LamJiuFong"},"content":"        } catch (IOException ignored) {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"LamJiuFong"},"content":"            fail(\"Couldn\u0027t find file\");","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"LamJiuFong"},"content":"        FileWriter fw;","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"            fw \u003d new FileWriter(f);","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"            fw.write(\"[D] / 0 / play games / 2023-12-31 / 14:00\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"LamJiuFong"},"content":"            fw.write(\"[T] / 1 / read\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"LamJiuFong"},"content":"            fw.write(\"[E] / 0 / do homework / 2023-12-01 / 18:00 / 2023-12-31 / 07:00\\n\");","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"LamJiuFong"},"content":"            fw.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"LamJiuFong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"LamJiuFong"},"content":"            fail(\"Couldn\u0027t write to file\");","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"LamJiuFong"},"content":"        //ensures that there is a file so that the constructor of Storage is most likely to not encounter any bugs","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"LamJiuFong"},"content":"        Storage s \u003d new Storage(\"./dukeTest.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"LamJiuFong"},"content":"        ArrayList\u003cString\u003e strings \u003d s.load();","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"LamJiuFong"},"content":"        Scanner sc \u003d null;","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"LamJiuFong"},"content":"            sc \u003d new Scanner(f);","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"LamJiuFong"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"LamJiuFong"},"content":"            fail(\"Couldn\u0027t scan file\");","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"LamJiuFong"},"content":"        for (int i\u003d0; i\u003cstrings.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"LamJiuFong"},"content":"            if (!sc.hasNextLine()) {        //array has more lines than the file","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"LamJiuFong"},"content":"                fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"LamJiuFong"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"LamJiuFong"},"content":"            String line \u003d sc.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"LamJiuFong"},"content":"            assertEquals(strings.get(i), line);","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"LamJiuFong"},"content":"        if (sc.hasNextLine()) {             //file has more lines than the array","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"LamJiuFong"},"content":"        // test on existing file","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"LamJiuFong"},"content":"        Storage s2 \u003d new Storage(\"./dukeTest2.txt\");","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"LamJiuFong"},"content":"        ArrayList\u003cString\u003e strings2 \u003d s2.load();","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"LamJiuFong"},"content":"        Scanner sc2 \u003d null;","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"LamJiuFong"},"content":"            sc2 \u003d new Scanner(f);","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"LamJiuFong"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"LamJiuFong"},"content":"            fail(\"Couldn\u0027t scan file\");","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":76,"author":{"gitId":"LamJiuFong"},"content":"        for (int i\u003d0; i\u003cstrings.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"LamJiuFong"},"content":"            if (!sc2.hasNextLine()) {        //array has more lines than the file","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"LamJiuFong"},"content":"                fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"LamJiuFong"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"LamJiuFong"},"content":"            String line \u003d sc2.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"LamJiuFong"},"content":"            assertEquals(strings2.get(i), line);","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":84,"author":{"gitId":"LamJiuFong"},"content":"        if (sc2.hasNextLine()) {             //file has more lines than the array","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"LamJiuFong":88}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"todo","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"todo read","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"mark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"mark 0","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"deadline read","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"deadline /by 5","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"deadline play /from","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"deadline play /by 3","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"event /from 5 /to 2","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"event cook /from 2","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"event cook /to 3","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"event","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"event cook /from 5 /to 2","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"unmark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"unmark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"LamJiuFong":21}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"LamJiuFong":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"LamJiuFong":1,"-":37}}]
