[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"# duke.main.Duke project template","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"3. After that, locate the `src/main/java/duke.main.Duke.java` file, right-click it, and choose `Run duke.main.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"WeeMingQing":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"checkstyle {","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"WeeMingQing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"WeeMingQing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"WeeMingQing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"WeeMingQing"},"content":"    mainClass.set(\"duke.main.Duke\")","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"WeeMingQing":20,"-":41}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"import duke.task.Deadlines;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"import duke.task.Events;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"import duke.task.Todos;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":" * A class for the command for adding new task to list based on user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"     * The type of task being added; todo, deadline or event.","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"    private final String commandType;","lastModifiedDate":"2023-09-08"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"     * The description of task being added.","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"    private final String description;","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"     * The starting date for the task being added.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"    private final String startDate;","lastModifiedDate":"2023-09-08"},{"lineNumber":31,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"WeeMingQing"},"content":"     * The ending date for the task being added.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"WeeMingQing"},"content":"    private final String endDate;","lastModifiedDate":"2023-09-08"},{"lineNumber":36,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"WeeMingQing"},"content":"     * The constructor for AddCommand","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"WeeMingQing"},"content":"     *","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"WeeMingQing"},"content":"     * @param commandType The type of task being added; todo, deadline or event","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"WeeMingQing"},"content":"     * @param description The description of task being added","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"WeeMingQing"},"content":"     * @param startDate   The starting date for the task being added","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"WeeMingQing"},"content":"     * @param endDate     The ending date for the task being added","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"WeeMingQing"},"content":"    public AddCommand(String commandType, String description, String startDate, String endDate) {","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"WeeMingQing"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"WeeMingQing"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"WeeMingQing"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"WeeMingQing"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":51,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"WeeMingQing"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"WeeMingQing"},"content":"        Task temp \u003d null;","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"WeeMingQing"},"content":"        switch (commandType) {","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"WeeMingQing"},"content":"        case \"T\":","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"WeeMingQing"},"content":"            temp \u003d new Todos(this.description);","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"WeeMingQing"},"content":"            break;","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"WeeMingQing"},"content":"        case \"D\":","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"WeeMingQing"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"WeeMingQing"},"content":"                temp \u003d new Deadlines(this.description, this.endDate);","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"WeeMingQing"},"content":"                break;","lastModifiedDate":"2023-09-02"},{"lineNumber":63,"author":{"gitId":"WeeMingQing"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":64,"author":{"gitId":"WeeMingQing"},"content":"                return \"JonBird:\\n\\t\" + \"Please ensure that your date is in \\\"yyyy-MM-dd HH:mm\\\"\"","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"WeeMingQing"},"content":"                        + \" format. Put 00:00 if time does not matter.\";","lastModifiedDate":"2023-09-09"},{"lineNumber":66,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":67,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"WeeMingQing"},"content":"        case \"E\":","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"WeeMingQing"},"content":"            try {","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"WeeMingQing"},"content":"                temp \u003d new Events(this.description, this.startDate, this.endDate);","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"WeeMingQing"},"content":"                break;","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"WeeMingQing"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"WeeMingQing"},"content":"                return \"JonBird:\\n\\t\" + \"Please ensure that your date is in \\\"yyyy-MM-dd HH:mm\\\"\"","lastModifiedDate":"2023-09-09"},{"lineNumber":74,"author":{"gitId":"WeeMingQing"},"content":"                        + \" format. Put 00:00 if time does not matter.\";","lastModifiedDate":"2023-09-09"},{"lineNumber":75,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":76,"author":{"gitId":"WeeMingQing"},"content":"        default:","lastModifiedDate":"2023-09-08"},{"lineNumber":77,"author":{"gitId":"WeeMingQing"},"content":"            return \"Something went wrong. Please try again.\";","lastModifiedDate":"2023-09-09"},{"lineNumber":78,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":79,"author":{"gitId":"WeeMingQing"},"content":"        taskList.addTask(temp);","lastModifiedDate":"2023-09-02"},{"lineNumber":80,"author":{"gitId":"WeeMingQing"},"content":"        storage.writeData(taskList.convertToFileContent());","lastModifiedDate":"2023-09-02"},{"lineNumber":81,"author":{"gitId":"WeeMingQing"},"content":"        return this.printCommand(taskList);","lastModifiedDate":"2023-09-09"},{"lineNumber":82,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":83,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":84,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"WeeMingQing"},"content":"    public String printCommand(TaskList taskList) {","lastModifiedDate":"2023-09-09"},{"lineNumber":86,"author":{"gitId":"WeeMingQing"},"content":"        return \"JonBird:\\n\\tGot it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-09"},{"lineNumber":87,"author":{"gitId":"WeeMingQing"},"content":"                + \"\\t\\t\" + taskList.getTask(taskList.size() - 1).printTask()","lastModifiedDate":"2023-09-09"},{"lineNumber":88,"author":{"gitId":"WeeMingQing"},"content":"                + \"\\n\\tNow you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2023-09-09"},{"lineNumber":89,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":90,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":91,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":92,"author":{"gitId":"WeeMingQing"},"content":"    public boolean isContinue() {","lastModifiedDate":"2023-09-02"},{"lineNumber":93,"author":{"gitId":"WeeMingQing"},"content":"        return true;","lastModifiedDate":"2023-09-02"},{"lineNumber":94,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":95,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"WeeMingQing":95}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":" * A class for the command for terminating the Duke bot.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"        return this.printCommand(taskList);","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"    public String printCommand(TaskList taskList) {","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"        return \"JonBird:\\n\\tBye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"    public boolean isContinue() {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"        return false;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"WeeMingQing":24}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":" * An abstract class for command based on user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"     * Runs the actions of the command based on user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"     * @param taskList The list of tasks under the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"     * @param storage The storage responsible for saving and load the taskList","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"     *                into a file.","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"    public abstract String execute(TaskList taskList, Storage storage);","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"     * Prints the actions taken by the command based on user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"     * @param taskList The list of tasks under the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"    public abstract String printCommand(TaskList taskList);","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"     * Returns true or false based on whether the command will cause the program","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"     * to terminate and stop accepting user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"WeeMingQing"},"content":"    public abstract boolean isContinue();","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"WeeMingQing":30}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":" * A class for the command for deleting task from list based on user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"     * The index of the task in the taskList to be deleted.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"    private final int index;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"     * The constructor for DeleteCommand","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"     * @param index The index of the task in the taskList to be deleted","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"        String result \u003d this.printCommand(taskList);","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"        taskList.removeTask(this.index - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"WeeMingQing"},"content":"        storage.writeData(taskList.convertToFileContent());","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"        return result;","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"WeeMingQing"},"content":"    public String printCommand(TaskList taskList) {","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"WeeMingQing"},"content":"        Task temp \u003d taskList.getTask(this.index - 1);","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"WeeMingQing"},"content":"        return \"JonBird:\\n\\tNoted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"WeeMingQing"},"content":"                + \"\\t\\t\" + temp.printTask()","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"WeeMingQing"},"content":"                + \"\\n\\tNow you have \" + (taskList.size() - 1) + \" tasks in the list.\";","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"WeeMingQing"},"content":"    public boolean isContinue() {","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"WeeMingQing"},"content":"        return true;","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"WeeMingQing":45}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"package duke.command;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":" * A class for the command for finding tasks in list using keywords","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"    /** Keywords to search for in the task description*/","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"    private final String keywords;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"     * The constructor for FindCommand","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"     * @param keywords Keywords to search for in the task description","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"    public FindCommand(String keywords) {","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"        this.keywords \u003d keywords.toLowerCase().trim();","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"        TaskList tempList \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"        for (Task task : taskList.getTaskList()) {","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"            String description \u003d task.getDescription().toLowerCase();","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"            if (description.contains(this.keywords)) {","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"WeeMingQing"},"content":"                tempList.addTask(task);","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"WeeMingQing"},"content":"        return this.printCommand(tempList);","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"WeeMingQing"},"content":"    public String printCommand(TaskList filteredTaskList) {","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"WeeMingQing"},"content":"        String result \u003d \"JonBird:\\n\\tHere are the tasks in your list:\";","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"WeeMingQing"},"content":"        for (int i \u003d 0; i \u003c filteredTaskList.size(); i++) {","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"WeeMingQing"},"content":"            result +\u003d \"\\n\\t\\t\" + (i + 1) + \". \" + filteredTaskList.getTask(i).printTask();","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"WeeMingQing"},"content":"        return result;","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"WeeMingQing"},"content":"    public boolean isContinue() {","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"WeeMingQing"},"content":"        return true;","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"WeeMingQing":47}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":" * A class for the command for listing all the tasks in the list.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"        return this.printCommand(taskList);","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"    public String printCommand(TaskList taskList) {","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"        String result \u003d \"JonBird:\\n\\tHere are the tasks in your list:\";","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"            result +\u003d (\"\\n\\t\\t\" + (i + 1) + \". \" + taskList.getTask(i).printTask());","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"        return result;","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"    public boolean isContinue() {","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"        return true;","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"WeeMingQing":28}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":" * A class for the command for marking a task in list as done","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":" * based on user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"     * The index of the task in the taskList to be marked.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"    private final int index;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"     * The constructor for MarkCommand","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"     * @param index The index of the task in the taskList to be marked","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"        taskList.getTask(this.index - 1).markAsDone();","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"        storage.writeData(taskList.convertToFileContent());","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"WeeMingQing"},"content":"        return this.printCommand(taskList);","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"WeeMingQing"},"content":"    public String printCommand(TaskList taskList) {","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"WeeMingQing"},"content":"        return \"JonBird:\\n\\tNice! I\u0027ve marked this task as done:\"","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"WeeMingQing"},"content":"                + \"\\n\\t\\t\" + taskList.getTask(this.index - 1).printTask();","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"WeeMingQing"},"content":"    public boolean isContinue() {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"WeeMingQing"},"content":"        return true;","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"WeeMingQing":42}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"package duke.command;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import duke.main.Storage;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":" * A class for the command for marking a task in list as undone","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":" * based on user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"     * The index of the task in the taskList to be unmarked.","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"    private final int index;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"     * The constructor for UnmarkCommand","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"     * @param index The index of the task in the taskList to be unmarked","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"        taskList.getTask(this.index - 1).markAsUndone();","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"        storage.writeData(taskList.convertToFileContent());","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"WeeMingQing"},"content":"        return this.printCommand(taskList);","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"WeeMingQing"},"content":"    public String printCommand(TaskList taskList) {","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"WeeMingQing"},"content":"        return \"JonBird:\\n\\tOK, I\u0027ve marked this task as not done yet:\"","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"WeeMingQing"},"content":"                + \"\\n\\t\\t\" + taskList.getTask(this.index - 1).printTask();","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"WeeMingQing"},"content":"    public boolean isContinue() {","lastModifiedDate":"2023-09-02"},{"lineNumber":40,"author":{"gitId":"WeeMingQing"},"content":"        return true;","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"WeeMingQing":42}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"/** This class handles exceptions from Duke bot.*/","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"     * The constructor for DukeException","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"     * @param errorMsg The error message for the Duke exception","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"    public DukeException(String errorMsg) {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"        super(errorMsg);","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"        return \"☹ OOPS!!! \" + super.getMessage();","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"WeeMingQing":17}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"/** This class handles exceptions for invalid commands from Duke bot*/","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"     * The constructor for InvalidCommandException","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"     * @param errorMsg The error message for the InvalidCommandException","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"    public InvalidCommandException(String errorMsg) {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"        super(errorMsg);","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"WeeMingQing":13}},{"path":"src/main/java/duke/exception/InvalidSyntaxException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"package duke.exception;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"/** This class handles exceptions for invalid syntax for commands from Duke bot.*/","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"public class InvalidSyntaxException extends DukeException {","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"     * The constructor for InvalidSyntaxException","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"     * @param errorMsg The error message for the InvalidSyntaxException","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"    public InvalidSyntaxException(String errorMsg) {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"        super(errorMsg);","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"WeeMingQing":14}},{"path":"src/main/java/duke/main/DateFormatter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"package duke.main;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":" * A class for formatting between LocalDateTime object and String based on","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":" * user input","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"public class DateFormatter {","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"     * Returns LocalDateTime object from String","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"     * @param date The String containing date from user input","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"     * @return LocalDateTime","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"     * @throws DateTimeException if the format of String is wrong","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"    public LocalDateTime stringToDate(String date) throws DateTimeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"        String dateFormat \u003d \"yyyy-MM-dd HH:mm\";","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(dateFormat);","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(date, formatter);","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"        return dateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"WeeMingQing"},"content":"     * Returns dateTime in a certain format","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"     * @param dateTime The LocalDateTime containing dateTime from user input","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"WeeMingQing"},"content":"     * @return dateTime in String format","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"WeeMingQing"},"content":"    public String dateToString(LocalDateTime dateTime) {","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"WeeMingQing"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"WeeMingQing"},"content":"        String result \u003d dateTime.format(formatter);","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"WeeMingQing"},"content":"        return result;","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":38,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"WeeMingQing"},"content":"     * Returns dateTime in a certain format to save in a file","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"WeeMingQing"},"content":"     * @param dateTime The LocalDateTime containing dateTime from user input","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"WeeMingQing"},"content":"     * @return dateTime in String format","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"WeeMingQing"},"content":"    public String saveDateToFile(LocalDateTime dateTime) {","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"WeeMingQing"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"WeeMingQing"},"content":"        String result \u003d dateTime.format(formatter);","lastModifiedDate":"2023-09-02"},{"lineNumber":47,"author":{"gitId":"WeeMingQing"},"content":"        return result;","lastModifiedDate":"2023-09-02"},{"lineNumber":48,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":49,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"WeeMingQing"},"content":"     * Returns only date in a certain format from LocalDateTime object","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"WeeMingQing"},"content":"     * @param dateTime The LocalDateTime containing dateTime from user input","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"WeeMingQing"},"content":"     * @return only date in String format","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"WeeMingQing"},"content":"    public String dateTimeToDate(LocalDateTime dateTime) {","lastModifiedDate":"2023-09-02"},{"lineNumber":56,"author":{"gitId":"WeeMingQing"},"content":"        LocalDate date \u003d dateTime.toLocalDate();","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"WeeMingQing"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"WeeMingQing"},"content":"        String result \u003d date.format(formatter);","lastModifiedDate":"2023-09-02"},{"lineNumber":59,"author":{"gitId":"WeeMingQing"},"content":"        return result;","lastModifiedDate":"2023-09-02"},{"lineNumber":60,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":61,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":62,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"WeeMingQing"},"content":"     * Returns only time in a certain format from LocalDateTime object","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"WeeMingQing"},"content":"     * @param dateTime The LocalDateTime containing dateTime from user input","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"WeeMingQing"},"content":"     * @return only time in String format","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"WeeMingQing"},"content":"    public String dateTimeToTime(LocalDateTime dateTime) {","lastModifiedDate":"2023-09-02"},{"lineNumber":68,"author":{"gitId":"WeeMingQing"},"content":"        LocalTime time \u003d dateTime.toLocalTime();","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"WeeMingQing"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2023-09-02"},{"lineNumber":70,"author":{"gitId":"WeeMingQing"},"content":"        String result \u003d time.format(formatter);","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"WeeMingQing"},"content":"        return result;","lastModifiedDate":"2023-09-02"},{"lineNumber":72,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":73,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":74,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"WeeMingQing":74}},{"path":"src/main/java/duke/main/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"package duke.main;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":" * A class for customised dialog box.","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"     * The constructor for DialogBox","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"     * @param text The label","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"     * @param img The viewimage","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"WeeMingQing"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"WeeMingQing"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"WeeMingQing"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"WeeMingQing"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"WeeMingQing"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"WeeMingQing"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"WeeMingQing"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"WeeMingQing"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"WeeMingQing"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"WeeMingQing"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"WeeMingQing"},"content":"    private void flip() {","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"WeeMingQing"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"WeeMingQing"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"WeeMingQing"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"WeeMingQing"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"WeeMingQing"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"WeeMingQing"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"WeeMingQing"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-09"},{"lineNumber":58,"author":{"gitId":"WeeMingQing"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"WeeMingQing"},"content":"        db.flip();","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"WeeMingQing"},"content":"        return db;","lastModifiedDate":"2023-09-09"},{"lineNumber":61,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"WeeMingQing":62}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"package duke.main;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":" * A class for the Duke bot.","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"     * The ui for Duke bot","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"    private static final Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"    private static TaskList inputList;","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"    private static Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"    private static Storage storage \u003d new Storage();","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"    String getResponse(String userInput) {","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"        inputList \u003d storage.loadData();","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"        String input \u003d userInput.trim();","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"        String[] inp \u003d input.split(\"\\\\s+\");","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"            Command currentCommand \u003d parser.parse(inp, inputList);","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"WeeMingQing"},"content":"            return currentCommand.execute(inputList, storage);","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"WeeMingQing"},"content":"            return \"JonBird:\\n\\t\" + e;","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"WeeMingQing"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"WeeMingQing"},"content":"            return \"JonBird:\\n\\t\" + \"Please ensure that your date is in \\\"yyyy-MM-dd HH:mm\\\"\"","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"WeeMingQing"},"content":"                    + \" format. Put 00:00 if time does not matter.\";","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":36,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"WeeMingQing":36,"-":1}},{"path":"src/main/java/duke/main/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"package duke.main;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":" * A class for launching GUI for bot.","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"public class Launcher {","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"WeeMingQing":12}},{"path":"src/main/java/duke/main/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"package duke.main;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"        try {","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"            stage.show();","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"WeeMingQing":31}},{"path":"src/main/java/duke/main/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"package duke.main;","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"/**","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":" */","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"WeeMingQing"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-09"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":33,"author":{"gitId":"WeeMingQing"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"WeeMingQing"},"content":"        this.duke \u003d d;","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":36,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"WeeMingQing"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"WeeMingQing"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"WeeMingQing"},"content":"    @FXML","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"WeeMingQing"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"WeeMingQing"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"WeeMingQing"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-09"},{"lineNumber":45,"author":{"gitId":"WeeMingQing"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-09"},{"lineNumber":46,"author":{"gitId":"WeeMingQing"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"WeeMingQing"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"WeeMingQing"},"content":"        );","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"WeeMingQing"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"WeeMingQing":51}},{"path":"src/main/java/duke/main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"package duke.main;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2023-09-08"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"import duke.command.Command;","lastModifiedDate":"2023-09-08"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-09-08"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-09-08"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-09-08"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-09-08"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"import duke.exception.InvalidSyntaxException;","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":" * A class handling commands from user input","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"public class Parser {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"     * A list of valid commands","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"    public enum ValidCommand {","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"        BYE, LIST, TODO, DEADLINE, EVENT, MARK, UNMARK, DELETE, UNKNOWN, FIND, INCORRECTFORMAT","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-08"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"     * The current command from user input","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"    private ValidCommand currentCommand;","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"WeeMingQing"},"content":"     * Returns Command object based on user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"WeeMingQing"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"WeeMingQing"},"content":"     * @param inp      The String array containing the user input","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"WeeMingQing"},"content":"     * @param taskList The list of tasks under the user","lastModifiedDate":"2023-09-03"},{"lineNumber":37,"author":{"gitId":"WeeMingQing"},"content":"     * @return Command","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"WeeMingQing"},"content":"     * @throws DukeException if the format of Command is wrong","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"WeeMingQing"},"content":"    public Command parse(String[] inp, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-09-02"},{"lineNumber":41,"author":{"gitId":"WeeMingQing"},"content":"        String title \u003d \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":42,"author":{"gitId":"WeeMingQing"},"content":"        String startDate \u003d \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":43,"author":{"gitId":"WeeMingQing"},"content":"        String endDate \u003d \"\";","lastModifiedDate":"2023-09-02"},{"lineNumber":44,"author":{"gitId":"WeeMingQing"},"content":"        int taskIndex \u003d 0;","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"WeeMingQing"},"content":"        boolean isValid \u003d false;","lastModifiedDate":"2023-09-02"},{"lineNumber":46,"author":{"gitId":"WeeMingQing"},"content":"        currentCommand \u003d commandConverter(inp[0]);","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"WeeMingQing"},"content":"        if (currentCommand !\u003d ValidCommand.UNKNOWN) {","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"WeeMingQing"},"content":"            if (commandSorter(currentCommand).equals(\"update\")) {","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"WeeMingQing"},"content":"                if (inp.length !\u003d 2) {","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"WeeMingQing"},"content":"                    currentCommand \u003d ValidCommand.INCORRECTFORMAT;","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"WeeMingQing"},"content":"                } else {","lastModifiedDate":"2023-09-02"},{"lineNumber":52,"author":{"gitId":"WeeMingQing"},"content":"                    try {","lastModifiedDate":"2023-09-02"},{"lineNumber":53,"author":{"gitId":"WeeMingQing"},"content":"                        taskIndex \u003d Integer.parseInt(inp[1]);","lastModifiedDate":"2023-09-02"},{"lineNumber":54,"author":{"gitId":"WeeMingQing"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":55,"author":{"gitId":"WeeMingQing"},"content":"                        currentCommand \u003d ValidCommand.INCORRECTFORMAT;","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"WeeMingQing"},"content":"                    }","lastModifiedDate":"2023-09-02"},{"lineNumber":57,"author":{"gitId":"WeeMingQing"},"content":"                }","lastModifiedDate":"2023-09-02"},{"lineNumber":58,"author":{"gitId":"WeeMingQing"},"content":"            } else if (commandSorter(currentCommand).equals(\"short_comm\")) {","lastModifiedDate":"2023-09-18"},{"lineNumber":59,"author":{"gitId":"WeeMingQing"},"content":"                title \u003d titleGetter(currentCommand, inp);","lastModifiedDate":"2023-09-18"},{"lineNumber":60,"author":{"gitId":"WeeMingQing"},"content":"                endDate \u003d endDateGetter(currentCommand, inp);","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"WeeMingQing"},"content":"                isValid \u003d commandValidator(currentCommand, inp);","lastModifiedDate":"2023-09-18"},{"lineNumber":62,"author":{"gitId":"WeeMingQing"},"content":"            } else if (commandSorter(currentCommand).equals(\"event\")) {","lastModifiedDate":"2023-09-18"},{"lineNumber":63,"author":{"gitId":"WeeMingQing"},"content":"                title \u003d titleGetter(currentCommand, inp);","lastModifiedDate":"2023-09-18"},{"lineNumber":64,"author":{"gitId":"WeeMingQing"},"content":"                startDate \u003d startDateGetter(currentCommand, inp);","lastModifiedDate":"2023-09-18"},{"lineNumber":65,"author":{"gitId":"WeeMingQing"},"content":"                endDate \u003d endDateGetter(currentCommand, inp);","lastModifiedDate":"2023-09-18"},{"lineNumber":66,"author":{"gitId":"WeeMingQing"},"content":"                isValid \u003d commandValidator(currentCommand, inp);","lastModifiedDate":"2023-09-18"},{"lineNumber":67,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":68,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":69,"author":{"gitId":"WeeMingQing"},"content":"        return commandHandler(inp, isValid, title, startDate, endDate, taskIndex, currentCommand, taskList);","lastModifiedDate":"2023-09-18"},{"lineNumber":70,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":71,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":72,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":73,"author":{"gitId":"WeeMingQing"},"content":"     * Returns Command of enum type based on user input","lastModifiedDate":"2023-09-18"},{"lineNumber":74,"author":{"gitId":"WeeMingQing"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":75,"author":{"gitId":"WeeMingQing"},"content":"     * @param value The String containing command from user input","lastModifiedDate":"2023-09-18"},{"lineNumber":76,"author":{"gitId":"WeeMingQing"},"content":"     * @return Command of enum type","lastModifiedDate":"2023-09-18"},{"lineNumber":77,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":78,"author":{"gitId":"WeeMingQing"},"content":"    public static ValidCommand commandConverter(String value) {","lastModifiedDate":"2023-09-18"},{"lineNumber":79,"author":{"gitId":"WeeMingQing"},"content":"        try {","lastModifiedDate":"2023-09-18"},{"lineNumber":80,"author":{"gitId":"WeeMingQing"},"content":"            ValidCommand val \u003d ValidCommand.valueOf(value.toUpperCase());","lastModifiedDate":"2023-09-18"},{"lineNumber":81,"author":{"gitId":"WeeMingQing"},"content":"            return val;","lastModifiedDate":"2023-09-18"},{"lineNumber":82,"author":{"gitId":"WeeMingQing"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-09-18"},{"lineNumber":83,"author":{"gitId":"WeeMingQing"},"content":"            return ValidCommand.UNKNOWN;","lastModifiedDate":"2023-09-18"},{"lineNumber":84,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":85,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":86,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":87,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":88,"author":{"gitId":"WeeMingQing"},"content":"     * Returns Command based on user input","lastModifiedDate":"2023-09-18"},{"lineNumber":89,"author":{"gitId":"WeeMingQing"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":90,"author":{"gitId":"WeeMingQing"},"content":"     * @param inp The String containing command from user input","lastModifiedDate":"2023-09-18"},{"lineNumber":91,"author":{"gitId":"WeeMingQing"},"content":"     * @param isValid Returns whether the task input is valid or not","lastModifiedDate":"2023-09-18"},{"lineNumber":92,"author":{"gitId":"WeeMingQing"},"content":"     * @param title The description of the task","lastModifiedDate":"2023-09-18"},{"lineNumber":93,"author":{"gitId":"WeeMingQing"},"content":"     * @param startDate The String containing startDate of task if present","lastModifiedDate":"2023-09-18"},{"lineNumber":94,"author":{"gitId":"WeeMingQing"},"content":"     * @param endDate The String containing endDate of task if present","lastModifiedDate":"2023-09-18"},{"lineNumber":95,"author":{"gitId":"WeeMingQing"},"content":"     * @return Command","lastModifiedDate":"2023-09-18"},{"lineNumber":96,"author":{"gitId":"WeeMingQing"},"content":"     * @throws DukeException if the format of Command is wrong","lastModifiedDate":"2023-09-18"},{"lineNumber":97,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":98,"author":{"gitId":"WeeMingQing"},"content":"    public static Command taskHandler(String[] inp, boolean isValid, String title, String startDate, String endDate)","lastModifiedDate":"2023-09-18"},{"lineNumber":99,"author":{"gitId":"WeeMingQing"},"content":"            throws DukeException {","lastModifiedDate":"2023-09-18"},{"lineNumber":100,"author":{"gitId":"WeeMingQing"},"content":"        if (inp.length \u003c 2 || !isValid) {","lastModifiedDate":"2023-09-18"},{"lineNumber":101,"author":{"gitId":"WeeMingQing"},"content":"            throw new InvalidSyntaxException(\"The description of a \" + inp[0] + \" cannot be empty.\");","lastModifiedDate":"2023-09-18"},{"lineNumber":102,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":103,"author":{"gitId":"WeeMingQing"},"content":"        if (inp[0].equals(\"todo\")) {","lastModifiedDate":"2023-09-18"},{"lineNumber":104,"author":{"gitId":"WeeMingQing"},"content":"            return new AddCommand(\"T\", title, \"\", \"\");","lastModifiedDate":"2023-09-18"},{"lineNumber":105,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-09-08"},{"lineNumber":106,"author":{"gitId":"WeeMingQing"},"content":"        if (inp[0].equals(\"deadline\")) {","lastModifiedDate":"2023-09-18"},{"lineNumber":107,"author":{"gitId":"WeeMingQing"},"content":"            if (endDate.equals(\"\")) {","lastModifiedDate":"2023-09-18"},{"lineNumber":108,"author":{"gitId":"WeeMingQing"},"content":"                throw new InvalidSyntaxException(\"The end date of a \" + inp[0] + \" cannot be empty.\");","lastModifiedDate":"2023-09-18"},{"lineNumber":109,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":110,"author":{"gitId":"WeeMingQing"},"content":"            return new AddCommand(\"D\", title, \"\", endDate);","lastModifiedDate":"2023-09-18"},{"lineNumber":111,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":112,"author":{"gitId":"WeeMingQing"},"content":"        if (inp[0].equals(\"event\")) {","lastModifiedDate":"2023-09-18"},{"lineNumber":113,"author":{"gitId":"WeeMingQing"},"content":"            if (startDate.equals(\"\")) {","lastModifiedDate":"2023-09-18"},{"lineNumber":114,"author":{"gitId":"WeeMingQing"},"content":"                throw new InvalidSyntaxException(\"The start date of a \" + inp[0] + \" cannot be empty.\");","lastModifiedDate":"2023-09-18"},{"lineNumber":115,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":116,"author":{"gitId":"WeeMingQing"},"content":"            if (endDate.equals(\"\")) {","lastModifiedDate":"2023-09-18"},{"lineNumber":117,"author":{"gitId":"WeeMingQing"},"content":"                throw new InvalidSyntaxException(\"The end date of a \" + inp[0] + \" cannot be empty.\");","lastModifiedDate":"2023-09-18"},{"lineNumber":118,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-09-08"},{"lineNumber":119,"author":{"gitId":"WeeMingQing"},"content":"            return new AddCommand(\"E\", title, startDate, endDate);","lastModifiedDate":"2023-09-18"},{"lineNumber":120,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":121,"author":{"gitId":"WeeMingQing"},"content":"        return null;","lastModifiedDate":"2023-09-18"},{"lineNumber":122,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":123,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":124,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":125,"author":{"gitId":"WeeMingQing"},"content":"     * Returns Command for Mark, Unmark and Delete if task index is valid","lastModifiedDate":"2023-09-18"},{"lineNumber":126,"author":{"gitId":"WeeMingQing"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":127,"author":{"gitId":"WeeMingQing"},"content":"     * @param taskIndex The task index based on user input","lastModifiedDate":"2023-09-18"},{"lineNumber":128,"author":{"gitId":"WeeMingQing"},"content":"     * @param command The command based on user input","lastModifiedDate":"2023-09-18"},{"lineNumber":129,"author":{"gitId":"WeeMingQing"},"content":"     * @param taskList The user\u0027s task list","lastModifiedDate":"2023-09-18"},{"lineNumber":130,"author":{"gitId":"WeeMingQing"},"content":"     * @return Command for Mark, Unmark and Delete if task index is valid","lastModifiedDate":"2023-09-18"},{"lineNumber":131,"author":{"gitId":"WeeMingQing"},"content":"     * @throws DukeException if the task index is invalid","lastModifiedDate":"2023-09-18"},{"lineNumber":132,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":133,"author":{"gitId":"WeeMingQing"},"content":"    public static Command taskIndexValidator(int taskIndex, ValidCommand command, TaskList taskList)","lastModifiedDate":"2023-09-18"},{"lineNumber":134,"author":{"gitId":"WeeMingQing"},"content":"            throws DukeException {","lastModifiedDate":"2023-09-18"},{"lineNumber":135,"author":{"gitId":"WeeMingQing"},"content":"        if (taskIndex \u003e taskList.size() || taskIndex \u003c 1) {","lastModifiedDate":"2023-09-18"},{"lineNumber":136,"author":{"gitId":"WeeMingQing"},"content":"            throw new InvalidSyntaxException(\"The task does not exist.\");","lastModifiedDate":"2023-09-18"},{"lineNumber":137,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":138,"author":{"gitId":"WeeMingQing"},"content":"        if (command \u003d\u003d ValidCommand.MARK) {","lastModifiedDate":"2023-09-18"},{"lineNumber":139,"author":{"gitId":"WeeMingQing"},"content":"            return new MarkCommand(taskIndex);","lastModifiedDate":"2023-09-18"},{"lineNumber":140,"author":{"gitId":"WeeMingQing"},"content":"        } else if (command \u003d\u003d ValidCommand.UNMARK) {","lastModifiedDate":"2023-09-18"},{"lineNumber":141,"author":{"gitId":"WeeMingQing"},"content":"            return new UnmarkCommand(taskIndex);","lastModifiedDate":"2023-09-18"},{"lineNumber":142,"author":{"gitId":"WeeMingQing"},"content":"        } else {","lastModifiedDate":"2023-09-18"},{"lineNumber":143,"author":{"gitId":"WeeMingQing"},"content":"            return new DeleteCommand(taskIndex);","lastModifiedDate":"2023-09-18"},{"lineNumber":144,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":145,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":146,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":147,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":148,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":149,"author":{"gitId":"WeeMingQing"},"content":"     * Returns Command based on user input","lastModifiedDate":"2023-09-18"},{"lineNumber":150,"author":{"gitId":"WeeMingQing"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":151,"author":{"gitId":"WeeMingQing"},"content":"     * @param inp The String containing command from user input","lastModifiedDate":"2023-09-18"},{"lineNumber":152,"author":{"gitId":"WeeMingQing"},"content":"     * @param isValid Returns whether the task input is valid or not","lastModifiedDate":"2023-09-18"},{"lineNumber":153,"author":{"gitId":"WeeMingQing"},"content":"     * @param title The description of the task","lastModifiedDate":"2023-09-18"},{"lineNumber":154,"author":{"gitId":"WeeMingQing"},"content":"     * @param startDate The String containing startDate of task if present","lastModifiedDate":"2023-09-18"},{"lineNumber":155,"author":{"gitId":"WeeMingQing"},"content":"     * @param endDate The String containing endDate of task if present","lastModifiedDate":"2023-09-18"},{"lineNumber":156,"author":{"gitId":"WeeMingQing"},"content":"     * @param taskIndex The task index based on user input","lastModifiedDate":"2023-09-18"},{"lineNumber":157,"author":{"gitId":"WeeMingQing"},"content":"     * @param currentCommand The command based on user input","lastModifiedDate":"2023-09-18"},{"lineNumber":158,"author":{"gitId":"WeeMingQing"},"content":"     * @param taskList The user\u0027s task list","lastModifiedDate":"2023-09-18"},{"lineNumber":159,"author":{"gitId":"WeeMingQing"},"content":"     * @return Command based on user input","lastModifiedDate":"2023-09-18"},{"lineNumber":160,"author":{"gitId":"WeeMingQing"},"content":"     * @throws DukeException if the task index or input format is invalid","lastModifiedDate":"2023-09-18"},{"lineNumber":161,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":162,"author":{"gitId":"WeeMingQing"},"content":"    public static Command commandHandler(String[] inp, boolean isValid, String title, String startDate, String endDate,","lastModifiedDate":"2023-09-18"},{"lineNumber":163,"author":{"gitId":"WeeMingQing"},"content":"                                         int taskIndex, ValidCommand currentCommand,","lastModifiedDate":"2023-09-18"},{"lineNumber":164,"author":{"gitId":"WeeMingQing"},"content":"                                         TaskList taskList) throws DukeException {","lastModifiedDate":"2023-09-18"},{"lineNumber":165,"author":{"gitId":"WeeMingQing"},"content":"        switch (currentCommand) {","lastModifiedDate":"2023-09-02"},{"lineNumber":166,"author":{"gitId":"WeeMingQing"},"content":"        case UNKNOWN:","lastModifiedDate":"2023-09-02"},{"lineNumber":167,"author":{"gitId":"WeeMingQing"},"content":"            throw new InvalidSyntaxException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-02"},{"lineNumber":168,"author":{"gitId":"WeeMingQing"},"content":"        case INCORRECTFORMAT:","lastModifiedDate":"2023-09-18"},{"lineNumber":169,"author":{"gitId":"WeeMingQing"},"content":"            throw new InvalidSyntaxException(\"The format of the command is invalid.\");","lastModifiedDate":"2023-09-18"},{"lineNumber":170,"author":{"gitId":"WeeMingQing"},"content":"        case BYE:","lastModifiedDate":"2023-09-02"},{"lineNumber":171,"author":{"gitId":"WeeMingQing"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-09-02"},{"lineNumber":172,"author":{"gitId":"WeeMingQing"},"content":"        case LIST:","lastModifiedDate":"2023-09-02"},{"lineNumber":173,"author":{"gitId":"WeeMingQing"},"content":"            return new ListCommand();","lastModifiedDate":"2023-09-02"},{"lineNumber":174,"author":{"gitId":"WeeMingQing"},"content":"        case FIND:","lastModifiedDate":"2023-09-03"},{"lineNumber":175,"author":{"gitId":"WeeMingQing"},"content":"            return new FindCommand(title);","lastModifiedDate":"2023-09-03"},{"lineNumber":176,"author":{"gitId":"WeeMingQing"},"content":"        case UNMARK:","lastModifiedDate":"2023-09-02"},{"lineNumber":177,"author":{"gitId":"WeeMingQing"},"content":"        case MARK:","lastModifiedDate":"2023-09-02"},{"lineNumber":178,"author":{"gitId":"WeeMingQing"},"content":"        case DELETE:","lastModifiedDate":"2023-09-02"},{"lineNumber":179,"author":{"gitId":"WeeMingQing"},"content":"            return taskIndexValidator(taskIndex, currentCommand, taskList);","lastModifiedDate":"2023-09-18"},{"lineNumber":180,"author":{"gitId":"WeeMingQing"},"content":"        default:","lastModifiedDate":"2023-09-18"},{"lineNumber":181,"author":{"gitId":"WeeMingQing"},"content":"            return taskHandler(inp, isValid, title, startDate, endDate);","lastModifiedDate":"2023-09-18"},{"lineNumber":182,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":183,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":184,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":185,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":186,"author":{"gitId":"WeeMingQing"},"content":"     * Returns type of command","lastModifiedDate":"2023-09-18"},{"lineNumber":187,"author":{"gitId":"WeeMingQing"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":188,"author":{"gitId":"WeeMingQing"},"content":"     * @param currentCommand The current command entered by user","lastModifiedDate":"2023-09-18"},{"lineNumber":189,"author":{"gitId":"WeeMingQing"},"content":"     * @return type of command","lastModifiedDate":"2023-09-18"},{"lineNumber":190,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":191,"author":{"gitId":"WeeMingQing"},"content":"    public static String commandSorter(ValidCommand currentCommand) {","lastModifiedDate":"2023-09-18"},{"lineNumber":192,"author":{"gitId":"WeeMingQing"},"content":"        switch(currentCommand) {","lastModifiedDate":"2023-09-18"},{"lineNumber":193,"author":{"gitId":"WeeMingQing"},"content":"        case MARK:","lastModifiedDate":"2023-09-18"},{"lineNumber":194,"author":{"gitId":"WeeMingQing"},"content":"        case UNMARK:","lastModifiedDate":"2023-09-18"},{"lineNumber":195,"author":{"gitId":"WeeMingQing"},"content":"        case DELETE:","lastModifiedDate":"2023-09-18"},{"lineNumber":196,"author":{"gitId":"WeeMingQing"},"content":"            return \"update\";","lastModifiedDate":"2023-09-18"},{"lineNumber":197,"author":{"gitId":"WeeMingQing"},"content":"        case TODO:","lastModifiedDate":"2023-09-18"},{"lineNumber":198,"author":{"gitId":"WeeMingQing"},"content":"        case DEADLINE:","lastModifiedDate":"2023-09-18"},{"lineNumber":199,"author":{"gitId":"WeeMingQing"},"content":"        case FIND:","lastModifiedDate":"2023-09-18"},{"lineNumber":200,"author":{"gitId":"WeeMingQing"},"content":"            return \"short_comm\";","lastModifiedDate":"2023-09-18"},{"lineNumber":201,"author":{"gitId":"WeeMingQing"},"content":"        case EVENT:","lastModifiedDate":"2023-09-18"},{"lineNumber":202,"author":{"gitId":"WeeMingQing"},"content":"            return \"event\";","lastModifiedDate":"2023-09-18"},{"lineNumber":203,"author":{"gitId":"WeeMingQing"},"content":"        default:","lastModifiedDate":"2023-09-02"},{"lineNumber":204,"author":{"gitId":"WeeMingQing"},"content":"            return \"Invalid\";","lastModifiedDate":"2023-09-18"},{"lineNumber":205,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":206,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":207,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":208,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":209,"author":{"gitId":"WeeMingQing"},"content":"     * Returns whether the description of the task is valid","lastModifiedDate":"2023-09-18"},{"lineNumber":210,"author":{"gitId":"WeeMingQing"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":211,"author":{"gitId":"WeeMingQing"},"content":"     * @param currentCommand The current command entered by user","lastModifiedDate":"2023-09-18"},{"lineNumber":212,"author":{"gitId":"WeeMingQing"},"content":"     * @return whether the description of the task is valid","lastModifiedDate":"2023-09-18"},{"lineNumber":213,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":214,"author":{"gitId":"WeeMingQing"},"content":"    public static boolean commandValidator(ValidCommand currentCommand, String[] inp) {","lastModifiedDate":"2023-09-18"},{"lineNumber":215,"author":{"gitId":"WeeMingQing"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-09-18"},{"lineNumber":216,"author":{"gitId":"WeeMingQing"},"content":"        for (; i \u003c inp.length; i++) {","lastModifiedDate":"2023-09-18"},{"lineNumber":217,"author":{"gitId":"WeeMingQing"},"content":"            if (inp[i].equals(\"/by\") || inp[i].equals(\"/from\")) {","lastModifiedDate":"2023-09-18"},{"lineNumber":218,"author":{"gitId":"WeeMingQing"},"content":"                break;","lastModifiedDate":"2023-09-18"},{"lineNumber":219,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":220,"author":{"gitId":"WeeMingQing"},"content":"            if (i \u003d\u003d 1) {","lastModifiedDate":"2023-09-18"},{"lineNumber":221,"author":{"gitId":"WeeMingQing"},"content":"                return true;","lastModifiedDate":"2023-09-18"},{"lineNumber":222,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":223,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":224,"author":{"gitId":"WeeMingQing"},"content":"        return false;","lastModifiedDate":"2023-09-18"},{"lineNumber":225,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":226,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":227,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":228,"author":{"gitId":"WeeMingQing"},"content":"     * Returns the description for the task","lastModifiedDate":"2023-09-18"},{"lineNumber":229,"author":{"gitId":"WeeMingQing"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":230,"author":{"gitId":"WeeMingQing"},"content":"     * @param currentCommand The current command entered by user","lastModifiedDate":"2023-09-18"},{"lineNumber":231,"author":{"gitId":"WeeMingQing"},"content":"     * @param inp The String array for the user input","lastModifiedDate":"2023-09-18"},{"lineNumber":232,"author":{"gitId":"WeeMingQing"},"content":"     * @return the description for the task","lastModifiedDate":"2023-09-18"},{"lineNumber":233,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":234,"author":{"gitId":"WeeMingQing"},"content":"    public static String titleGetter(ValidCommand currentCommand, String[] inp) {","lastModifiedDate":"2023-09-18"},{"lineNumber":235,"author":{"gitId":"WeeMingQing"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-09-18"},{"lineNumber":236,"author":{"gitId":"WeeMingQing"},"content":"        String title \u003d \"\";","lastModifiedDate":"2023-09-18"},{"lineNumber":237,"author":{"gitId":"WeeMingQing"},"content":"        for (; i \u003c inp.length; i++) {","lastModifiedDate":"2023-09-18"},{"lineNumber":238,"author":{"gitId":"WeeMingQing"},"content":"            if (inp[i].equals(\"/by\") || inp[i].equals(\"/from\")) {","lastModifiedDate":"2023-09-18"},{"lineNumber":239,"author":{"gitId":"WeeMingQing"},"content":"                break;","lastModifiedDate":"2023-09-18"},{"lineNumber":240,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":241,"author":{"gitId":"WeeMingQing"},"content":"            if (title.equals(\"\")) {","lastModifiedDate":"2023-09-18"},{"lineNumber":242,"author":{"gitId":"WeeMingQing"},"content":"                title \u003d inp[i];","lastModifiedDate":"2023-09-18"},{"lineNumber":243,"author":{"gitId":"WeeMingQing"},"content":"            } else {","lastModifiedDate":"2023-09-18"},{"lineNumber":244,"author":{"gitId":"WeeMingQing"},"content":"                title +\u003d \" \" + inp[i];","lastModifiedDate":"2023-09-18"},{"lineNumber":245,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-09-02"},{"lineNumber":246,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":247,"author":{"gitId":"WeeMingQing"},"content":"        return title;","lastModifiedDate":"2023-09-18"},{"lineNumber":248,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":249,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":250,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":251,"author":{"gitId":"WeeMingQing"},"content":"     * Returns the endDate for the task","lastModifiedDate":"2023-09-18"},{"lineNumber":252,"author":{"gitId":"WeeMingQing"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":253,"author":{"gitId":"WeeMingQing"},"content":"     * @param currentCommand The current command entered by user","lastModifiedDate":"2023-09-18"},{"lineNumber":254,"author":{"gitId":"WeeMingQing"},"content":"     * @param inp The String array for the user input","lastModifiedDate":"2023-09-18"},{"lineNumber":255,"author":{"gitId":"WeeMingQing"},"content":"     * @return the endDate for the task","lastModifiedDate":"2023-09-18"},{"lineNumber":256,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":257,"author":{"gitId":"WeeMingQing"},"content":"    public static String endDateGetter(ValidCommand currentCommand, String[] inp) {","lastModifiedDate":"2023-09-18"},{"lineNumber":258,"author":{"gitId":"WeeMingQing"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-09-18"},{"lineNumber":259,"author":{"gitId":"WeeMingQing"},"content":"        String endDate \u003d \"\";","lastModifiedDate":"2023-09-18"},{"lineNumber":260,"author":{"gitId":"WeeMingQing"},"content":"        for (; i \u003c inp.length; i++) {","lastModifiedDate":"2023-09-18"},{"lineNumber":261,"author":{"gitId":"WeeMingQing"},"content":"            if (inp[i].equals(\"/by\") || inp[i].equals(\"/to\")) {","lastModifiedDate":"2023-09-18"},{"lineNumber":262,"author":{"gitId":"WeeMingQing"},"content":"                break;","lastModifiedDate":"2023-09-18"},{"lineNumber":263,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":264,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":265,"author":{"gitId":"WeeMingQing"},"content":"        for (int j \u003d i + 1; j \u003c inp.length; j++) {","lastModifiedDate":"2023-09-18"},{"lineNumber":266,"author":{"gitId":"WeeMingQing"},"content":"            if (endDate.equals(\"\")) {","lastModifiedDate":"2023-09-18"},{"lineNumber":267,"author":{"gitId":"WeeMingQing"},"content":"                endDate \u003d inp[j];","lastModifiedDate":"2023-09-18"},{"lineNumber":268,"author":{"gitId":"WeeMingQing"},"content":"            } else {","lastModifiedDate":"2023-09-18"},{"lineNumber":269,"author":{"gitId":"WeeMingQing"},"content":"                endDate +\u003d \" \" + inp[j];","lastModifiedDate":"2023-09-18"},{"lineNumber":270,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":271,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":272,"author":{"gitId":"WeeMingQing"},"content":"        return endDate;","lastModifiedDate":"2023-09-18"},{"lineNumber":273,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":274,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":275,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":276,"author":{"gitId":"WeeMingQing"},"content":"     * Returns the startDate for the task","lastModifiedDate":"2023-09-18"},{"lineNumber":277,"author":{"gitId":"WeeMingQing"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":278,"author":{"gitId":"WeeMingQing"},"content":"     * @param currentCommand The current command entered by user","lastModifiedDate":"2023-09-18"},{"lineNumber":279,"author":{"gitId":"WeeMingQing"},"content":"     * @param inp The String array for the user input","lastModifiedDate":"2023-09-18"},{"lineNumber":280,"author":{"gitId":"WeeMingQing"},"content":"     * @return the startDate for the task","lastModifiedDate":"2023-09-18"},{"lineNumber":281,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":282,"author":{"gitId":"WeeMingQing"},"content":"    public static String startDateGetter(ValidCommand currentCommand, String[] inp) {","lastModifiedDate":"2023-09-18"},{"lineNumber":283,"author":{"gitId":"WeeMingQing"},"content":"        int start \u003d 1;","lastModifiedDate":"2023-09-18"},{"lineNumber":284,"author":{"gitId":"WeeMingQing"},"content":"        String startDate \u003d \"\";","lastModifiedDate":"2023-09-18"},{"lineNumber":285,"author":{"gitId":"WeeMingQing"},"content":"        for (; start \u003c inp.length; start++) {","lastModifiedDate":"2023-09-18"},{"lineNumber":286,"author":{"gitId":"WeeMingQing"},"content":"            if (inp[start].equals(\"/from\")) {","lastModifiedDate":"2023-09-18"},{"lineNumber":287,"author":{"gitId":"WeeMingQing"},"content":"                break;","lastModifiedDate":"2023-09-18"},{"lineNumber":288,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":289,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":290,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":291,"author":{"gitId":"WeeMingQing"},"content":"        for (int end \u003d start + 1; end \u003c inp.length; end++) {","lastModifiedDate":"2023-09-18"},{"lineNumber":292,"author":{"gitId":"WeeMingQing"},"content":"            if (inp[end].equals(\"/to\")) {","lastModifiedDate":"2023-09-18"},{"lineNumber":293,"author":{"gitId":"WeeMingQing"},"content":"                break;","lastModifiedDate":"2023-09-18"},{"lineNumber":294,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":295,"author":{"gitId":"WeeMingQing"},"content":"            if (startDate.equals(\"\")) {","lastModifiedDate":"2023-09-18"},{"lineNumber":296,"author":{"gitId":"WeeMingQing"},"content":"                startDate \u003d inp[end];","lastModifiedDate":"2023-09-18"},{"lineNumber":297,"author":{"gitId":"WeeMingQing"},"content":"            } else {","lastModifiedDate":"2023-09-18"},{"lineNumber":298,"author":{"gitId":"WeeMingQing"},"content":"                startDate +\u003d \" \" + inp[end];","lastModifiedDate":"2023-09-18"},{"lineNumber":299,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":300,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":301,"author":{"gitId":"WeeMingQing"},"content":"        return startDate;","lastModifiedDate":"2023-09-18"},{"lineNumber":302,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":303,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"WeeMingQing":303}},{"path":"src/main/java/duke/main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"package duke.main;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-08"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"import duke.task.Deadlines;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"import duke.task.Events;","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"import duke.task.Task;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"import duke.task.Todos;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":" * A class handling the saving and load the taskList","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":" * into a file.","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"     * The path of the file where the taskList is saved","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"    protected String filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"WeeMingQing"},"content":"     * The constructor for the Storage","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"WeeMingQing"},"content":"    public Storage() {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"WeeMingQing"},"content":"        String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"WeeMingQing"},"content":"        Path path \u003d Paths.get(home, \"data\", \"duke.txt\");","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"WeeMingQing"},"content":"        File file \u003d new File(path.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"WeeMingQing"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"WeeMingQing"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"WeeMingQing"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"WeeMingQing"},"content":"                file.createNewFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"WeeMingQing"},"content":"            this.filePath \u003d path.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"WeeMingQing"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"WeeMingQing"},"content":"            System.out.println(\"Cannot create file!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"WeeMingQing"},"content":"     * Writes the data into the file.","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"WeeMingQing"},"content":"     * @param data The content to be written into the file","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"WeeMingQing"},"content":"    public void writeData(String data) {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"WeeMingQing"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"WeeMingQing"},"content":"            FileWriter file \u003d new FileWriter(this.filePath, false);","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"WeeMingQing"},"content":"            file.write(data);","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"WeeMingQing"},"content":"            file.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"WeeMingQing"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"WeeMingQing"},"content":"            //Throw DukeException","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"WeeMingQing"},"content":"     * Reads the content of the file","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"WeeMingQing"},"content":"     * @return TaskList","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"WeeMingQing"},"content":"    public TaskList loadData() {","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"WeeMingQing"},"content":"        TaskList tempList \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"WeeMingQing"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"WeeMingQing"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"WeeMingQing"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"WeeMingQing"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"WeeMingQing"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"WeeMingQing"},"content":"                tempList.addTask(parseLine(line));","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"WeeMingQing"},"content":"            scanner.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"WeeMingQing"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"WeeMingQing"},"content":"            System.out.println(\"File is not found!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"WeeMingQing"},"content":"        return tempList;","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"WeeMingQing"},"content":"     * Reads the line and convert them into Task objects","lastModifiedDate":"2023-09-03"},{"lineNumber":84,"author":{"gitId":"WeeMingQing"},"content":"     * @param line The line read from the file","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"WeeMingQing"},"content":"     * @return Task","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"WeeMingQing"},"content":"    public Task parseLine(String line) {","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"WeeMingQing"},"content":"        String[] input \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"WeeMingQing"},"content":"        if (input[0].equals(\"T\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"WeeMingQing"},"content":"            Todos task \u003d new Todos(input[2]);","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"WeeMingQing"},"content":"            if (input[1].equals(\"1\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"WeeMingQing"},"content":"                task.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"WeeMingQing"},"content":"            return task;","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"WeeMingQing"},"content":"        } else if (input[0].equals(\"D\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"WeeMingQing"},"content":"            Deadlines task \u003d new Deadlines(input[2], input[3]);","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"WeeMingQing"},"content":"            if (input[1].equals(\"1\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"WeeMingQing"},"content":"                task.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"WeeMingQing"},"content":"            return task;","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"WeeMingQing"},"content":"        } else if (input[0].equals(\"E\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"WeeMingQing"},"content":"            Events task \u003d new Events(input[2], input[3], input[4]);","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"WeeMingQing"},"content":"            if (input[1].equals(\"1\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"WeeMingQing"},"content":"                task.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"WeeMingQing"},"content":"            return task;","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"WeeMingQing"},"content":"        return null;","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"WeeMingQing":111}},{"path":"src/main/java/duke/main/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"package duke.main;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":" * A class handling the ui of the Duke bot","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"public class Ui {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"     * Greets the user when the bot starts.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"    public void greetUser() {","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"        System.out.println(\"Hello! I\u0027m JonBird.\\nWhat can I do for you?\");","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"     * Runs the program for ui","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"    public void runProgram() {","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"        greetUser();","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"WeeMingQing":21}},{"path":"src/main/java/duke/task/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"import duke.main.DateFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":" * A Task with deadline.","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"     * A formatter for the date","lastModifiedDate":"2023-09-08"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"    private static final DateFormatter DF \u003d new DateFormatter();","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"     * The deadline of a task","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"    protected LocalDateTime endDate;","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"     * The constructor for Deadlines","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"     * @param description The description of the task with deadline","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"     * @param endDate The deadline of a task","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"    public Deadlines(String description, String endDate) {","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"        this.endDate \u003d DF.stringToDate(endDate);","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"WeeMingQing"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"WeeMingQing"},"content":"        return \"D\";","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"WeeMingQing"},"content":"    public String printTask() {","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"WeeMingQing"},"content":"        return \"[\" + this.getTypeIcon() + \"]\" + this.getStatusIcon() + this.description","lastModifiedDate":"2023-09-08"},{"lineNumber":39,"author":{"gitId":"WeeMingQing"},"content":"                + \" (by: \" + DF.dateToString(this.endDate) + \")\";","lastModifiedDate":"2023-09-08"},{"lineNumber":40,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"WeeMingQing":41}},{"path":"src/main/java/duke/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"import duke.main.DateFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":" * A Task with starting date and deadline","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"public class Events extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"     * A formatter for the date","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"    private static final DateFormatter DF \u003d new DateFormatter();","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-08"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"     * The starting date of a task","lastModifiedDate":"2023-09-08"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-08"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"    protected LocalDateTime startDate;","lastModifiedDate":"2023-09-08"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"     * The deadline of a task","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"    protected LocalDateTime endDate;","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"     * The constructor for Deadlines","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"     * @param description The description of the task with starting date and deadline","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"     * @param startDate The starting date of a task","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"WeeMingQing"},"content":"     * @param endDate The deadline of a task","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"WeeMingQing"},"content":"    public Events(String description, String startDate, String endDate) {","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"WeeMingQing"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"WeeMingQing"},"content":"        this.startDate \u003d DF.stringToDate(startDate);","lastModifiedDate":"2023-09-02"},{"lineNumber":34,"author":{"gitId":"WeeMingQing"},"content":"        this.endDate \u003d DF.stringToDate(endDate);","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"WeeMingQing"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"WeeMingQing"},"content":"        return \"E\";","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"WeeMingQing"},"content":"    public String printTask() {","lastModifiedDate":"2023-08-23"},{"lineNumber":44,"author":{"gitId":"WeeMingQing"},"content":"        if (this.startDate.toLocalDate().equals(this.endDate.toLocalDate())) {","lastModifiedDate":"2023-09-02"},{"lineNumber":45,"author":{"gitId":"WeeMingQing"},"content":"            return \"[\" + this.getTypeIcon() + \"]\" + this.getStatusIcon() + this.description","lastModifiedDate":"2023-09-08"},{"lineNumber":46,"author":{"gitId":"WeeMingQing"},"content":"                    + \" (from: \" + DF.dateTimeToDate(this.startDate) + \" \"","lastModifiedDate":"2023-09-08"},{"lineNumber":47,"author":{"gitId":"WeeMingQing"},"content":"                    + DF.dateTimeToTime(this.startDate) + \" to: \"","lastModifiedDate":"2023-09-08"},{"lineNumber":48,"author":{"gitId":"WeeMingQing"},"content":"                    + DF.dateTimeToTime(this.endDate) + \")\";","lastModifiedDate":"2023-09-08"},{"lineNumber":49,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":50,"author":{"gitId":"WeeMingQing"},"content":"        return \"[\" + this.getTypeIcon() + \"]\" + this.getStatusIcon() + this.description","lastModifiedDate":"2023-09-08"},{"lineNumber":51,"author":{"gitId":"WeeMingQing"},"content":"                + \" (from: \" + DF.dateToString(this.startDate) + \" to: \" + DF.dateToString(this.endDate) + \")\";","lastModifiedDate":"2023-09-08"},{"lineNumber":52,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":53,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"WeeMingQing":55}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"/** Class to represent the task set by user*/","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"public abstract class Task {","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"    /** Description of the task*/","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"    /** Track whether the task is done or not*/","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"     * Constructor for the Task","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"     * @param description The description of the task based on the user input","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"    /** Method to mark the task as done*/","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"    /** Method to mark the task as undone*/","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"WeeMingQing"},"content":"    /** Return icon based on whether task is done or undone*/","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"WeeMingQing"},"content":"        return (this.isDone ? \"[X] \" : \"[ ] \"); // mark done task with X","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"WeeMingQing"},"content":"    /** Method to print the task*/","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"WeeMingQing"},"content":"    public abstract String printTask();","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"WeeMingQing"},"content":"    /** Method to get the typeIcon the task*/","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"WeeMingQing"},"content":"    public abstract String getTypeIcon();","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"WeeMingQing"},"content":"    /** Method to get the description of the task*/","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"WeeMingQing"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"WeeMingQing"},"content":"        return this.description;","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"WeeMingQing":45}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"import duke.main.DateFormatter;","lastModifiedDate":"2023-09-02"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"/** Class to represent the taskList of the user*/","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"public class TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"     * A formatter for the date","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"    private static final DateFormatter DF \u003d new DateFormatter();","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"    /** The list to store the tasks*/","lastModifiedDate":"2023-09-08"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-09-08"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"     * A constructor for the TaskList","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"        taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"     * Returns size of taskList","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"    public int size() {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"        return this.getTaskList().size();","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"WeeMingQing"},"content":"     * Returns taskList","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"WeeMingQing"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"WeeMingQing"},"content":"        return this.taskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"WeeMingQing"},"content":"     * Adds task to taskList","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"WeeMingQing"},"content":"     * @param task The task to be added","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"WeeMingQing"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"WeeMingQing"},"content":"        this.getTaskList().add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"WeeMingQing"},"content":"     * Returns task from taskList","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"WeeMingQing"},"content":"     * @param index The index of the task inside the taskList to be returned","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"WeeMingQing"},"content":"     * @return task","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"WeeMingQing"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"WeeMingQing"},"content":"        return this.getTaskList().get(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"WeeMingQing"},"content":"     * Removes task from taskList","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"WeeMingQing"},"content":"     * @param index The index of the task inside the taskList to be removed","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"WeeMingQing"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"WeeMingQing"},"content":"        this.getTaskList().remove(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"WeeMingQing"},"content":"     * Returns taskList in String format to be written to file","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"WeeMingQing"},"content":"     * @return content of taskList","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":67,"author":{"gitId":"WeeMingQing"},"content":"    public String convertToFileContent() {","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"WeeMingQing"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"WeeMingQing"},"content":"        String line \u003d \"\";","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"WeeMingQing"},"content":"        for (int i \u003d 0; i \u003c this.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"WeeMingQing"},"content":"            Task currentTask \u003d this.getTask(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"WeeMingQing"},"content":"            if (currentTask instanceof Todos) {","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"WeeMingQing"},"content":"                String mark \u003d currentTask.isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"WeeMingQing"},"content":"                line \u003d currentTask.getTypeIcon() + \" | \" + mark + \" | \" + currentTask.description;","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"WeeMingQing"},"content":"            } else if (currentTask instanceof Deadlines) {","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"WeeMingQing"},"content":"                String mark \u003d currentTask.isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"WeeMingQing"},"content":"                line \u003d currentTask.getTypeIcon() + \" | \" + mark + \" | \" + currentTask.description + \" | \"","lastModifiedDate":"2023-09-08"},{"lineNumber":78,"author":{"gitId":"WeeMingQing"},"content":"                        + DF.saveDateToFile(((Deadlines) currentTask).endDate);","lastModifiedDate":"2023-09-08"},{"lineNumber":79,"author":{"gitId":"WeeMingQing"},"content":"            } else if (currentTask instanceof Events) {","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"WeeMingQing"},"content":"                String mark \u003d currentTask.isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"WeeMingQing"},"content":"                line \u003d currentTask.getTypeIcon() + \" | \" + mark + \" | \" + currentTask.description + \" | \"","lastModifiedDate":"2023-09-08"},{"lineNumber":82,"author":{"gitId":"WeeMingQing"},"content":"                        + DF.saveDateToFile(((Events) currentTask).startDate) + \" | \"","lastModifiedDate":"2023-09-08"},{"lineNumber":83,"author":{"gitId":"WeeMingQing"},"content":"                        + DF.saveDateToFile(((Events) currentTask).endDate);","lastModifiedDate":"2023-09-08"},{"lineNumber":84,"author":{"gitId":"WeeMingQing"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"WeeMingQing"},"content":"            result +\u003d line + \"\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"WeeMingQing"},"content":"        return result;","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"WeeMingQing":90}},{"path":"src/main/java/duke/task/Todos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"package duke.task;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"/** Class to represent the task set by user*/","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"public class Todos extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"     * The constructor for Deadlines","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"     * @param description The description of the task","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"    public Todos(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"        return \"T\";","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"    public String printTask() {","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"        return \"[\" + this.getTypeIcon() + \"]\" + this.getStatusIcon() + this.description;","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"WeeMingQing":23}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"      \u003cStackPane alignment\u003d\"TOP_LEFT\" prefHeight\u003d\"69.0\" prefWidth\u003d\"272.0\" style\u003d\"-fx-background-color: #8afbff;-fx-border-width: 1;-fx-border-color: black;-fx-border-radius: 10px;-fx-background-radius: 10px; -fx-padding: 10px;\"\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"              \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"TOP_LEFT\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" textAlignment\u003d\"JUSTIFY\" wrapText\u003d\"true\" minWidth\u003d\"272\"/\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"      \u003c/StackPane\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"WeeMingQing":21}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.main.MainWindow\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"WeeMingQing":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"package duke.main;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"import duke.task.Deadlines;","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"import duke.task.Events;","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"import duke.task.Todos;","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"public class ParserTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"    public void parseListCommand() {","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"        Todos task1 \u003d new Todos(\"read a book\");","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"        Deadlines task2 \u003d new Deadlines(\"walk\", \"2002-12-01 12:12\");","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"        Events task3 \u003d new Events(\"run 2.4km\", \"2022-12-12 12:00\", \"2022-12-12 14:00\");","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"        taskList.addTask(task3);","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-09-02"},{"lineNumber":26,"author":{"gitId":"WeeMingQing"},"content":"        try {","lastModifiedDate":"2023-09-02"},{"lineNumber":27,"author":{"gitId":"WeeMingQing"},"content":"            AddCommand comm \u003d (AddCommand) parser.parse(new String[] {\"todo\", \"walk to school\"}, taskList);","lastModifiedDate":"2023-09-02"},{"lineNumber":28,"author":{"gitId":"WeeMingQing"},"content":"            comm.execute(taskList, storage);","lastModifiedDate":"2023-09-02"},{"lineNumber":29,"author":{"gitId":"WeeMingQing"},"content":"            assertEquals(taskList.getTask(taskList.size() - 1).printTask(), \"[T][ ] walk to school\");","lastModifiedDate":"2023-09-02"},{"lineNumber":30,"author":{"gitId":"WeeMingQing"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"WeeMingQing"},"content":"            System.out.println(\"Please check your test cases.\");","lastModifiedDate":"2023-09-02"},{"lineNumber":32,"author":{"gitId":"WeeMingQing"},"content":"        }","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"WeeMingQing"},"content":"        storage.writeData(\"\");","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":35,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"WeeMingQing":35}},{"path":"src/test/java/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"package duke.task;","lastModifiedDate":"2023-09-02"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-02"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-09"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"public class TaskTest {","lastModifiedDate":"2023-09-02"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"    public void todoToString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"        Todos task \u003d new Todos(\"read a book\");","lastModifiedDate":"2023-09-02"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"        assertEquals(task.printTask(), \"[T][ ] read a book\");","lastModifiedDate":"2023-09-02"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":12,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":13,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":14,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":15,"author":{"gitId":"WeeMingQing"},"content":"    public void deadlineToString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":16,"author":{"gitId":"WeeMingQing"},"content":"        Deadlines task \u003d new Deadlines(\"walk\", \"2002-12-01 12:12\");","lastModifiedDate":"2023-09-02"},{"lineNumber":17,"author":{"gitId":"WeeMingQing"},"content":"        assertEquals(task.printTask(), \"[D][ ] walk (by: Dec 01 2002 12:12)\");","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"WeeMingQing"},"content":"","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"WeeMingQing"},"content":"    @Test","lastModifiedDate":"2023-09-02"},{"lineNumber":21,"author":{"gitId":"WeeMingQing"},"content":"    public void eventToString() {","lastModifiedDate":"2023-09-02"},{"lineNumber":22,"author":{"gitId":"WeeMingQing"},"content":"        Events task \u003d new Events(\"run 2.4km\", \"2022-12-12 12:00\", \"2022-12-12 14:00\");","lastModifiedDate":"2023-09-02"},{"lineNumber":23,"author":{"gitId":"WeeMingQing"},"content":"        assertEquals(task.printTask(), \"[E][ ] run 2.4km (from: Dec 12 2022 12:00 to: 14:00)\");","lastModifiedDate":"2023-09-02"},{"lineNumber":24,"author":{"gitId":"WeeMingQing"},"content":"    }","lastModifiedDate":"2023-09-02"},{"lineNumber":25,"author":{"gitId":"WeeMingQing"},"content":"}","lastModifiedDate":"2023-09-02"}],"authorContributionMap":{"WeeMingQing":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WeeMingQing"},"content":"blah","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"WeeMingQing"},"content":"todo","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"WeeMingQing"},"content":"event","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"WeeMingQing"},"content":"deadline","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"WeeMingQing"},"content":"todo borrow book","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"WeeMingQing"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"WeeMingQing"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"WeeMingQing"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"WeeMingQing"},"content":"deadline return book /by tomorrow","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"WeeMingQing"},"content":"event project /from Mon morning /to Fri Night","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"WeeMingQing"},"content":"list","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"WeeMingQing":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"WeeMingQing"},"content":"java -classpath ..\\bin duke.main.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"WeeMingQing":1,"-":20}}]
