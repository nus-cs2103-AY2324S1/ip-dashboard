[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"3. After that, locate the `src/main/java/Main.java` file, right-click it, and choose `Run Main.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"larrywang0701":1,"-":23}},{"path":"src/main/java/ExitHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"public class ExitHandler implements ICommandHandler{","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"    public void execute(String command) {","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"        Main.getInstance().say(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"        Main.getInstance().exit();","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"larrywang0701":8}},{"path":"src/main/java/ICommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"public interface ICommandHandler {","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"    public void execute(String command);","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"larrywang0701":3}},{"path":"src/main/java/IntroHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"public class IntroHandler implements ICommandHandler{","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"    public void execute(String command) {","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"        String name \u003d Main.getInstance().getName();","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"        Main.getInstance().say(\"Hello! I\u0027m \" + name, true, false);","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"        Main.getInstance().say(\"What can I do for you?\", false, true);","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"larrywang0701":9}},{"path":"src/main/java/ListHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"public class ListHandler implements ICommandHandler{","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"    private String[] list;","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"    private int count;","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"    public ListHandler(){","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"        this.list \u003d new String[100];","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"        this.count \u003d 0;","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"    public void execute(String command) {","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"        if (!command.equals(\"list\")) {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"            if(this.count \u003e\u003d 100){","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"                Main.getInstance().say(\"list is full\");","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"            this.list[count] \u003d command;","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"            count++;","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"            Main.getInstance().say(\"added: \" + command);","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"        else{","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"            int number \u003d 0;","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"            for(int i \u003d 0;i \u003c this.count; i++){","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"                Main.getInstance().say((i + 1) + \". \" + this.list[i], i \u003d\u003d 0, i \u003d\u003d count - 1);","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"larrywang0701":29}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"public class Main {","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"    private static Main INSTANCE;","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"    private String name \u003d \"your girlfriend\";","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"    private HashMap\u003cString,ICommandHandler\u003e commands;","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"    private boolean isRunning;","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"    public Main(){","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"        this.commands \u003d new HashMap\u003cString,ICommandHandler\u003e();","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"        this.commands.put(\"intro\", new IntroHandler());","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"        this.commands.put(\"list\", new ListHandler());","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"        this.commands.put(\"bye\", new ExitHandler());","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"        initialize();","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"        INSTANCE.run();","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"    private void run(){","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"        this.executeCommand(\"intro\");","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"        this.isRunning \u003d true;","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"        while(this.isRunning){","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"            this.executeCommand(input);","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"        sc.close();","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"        return;","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"    private static void initialize(){","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"        INSTANCE \u003d new Main();","lastModifiedDate":"2023-08-22"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"    private void executeCommand(String command){","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"        if(!this.commands.containsKey(command)){","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"            this.commands.get(\"list\").execute(command);","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"            return;","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"        this.commands.get(command).execute(command);","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"    public static Main getInstance(){","lastModifiedDate":"2023-08-22"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"        return INSTANCE;","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"    public String getName(){","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"        return this.name;","lastModifiedDate":"2023-08-22"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"    public void exit(){","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"larrywang0701"},"content":"        this.isRunning \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"    public void say(String content){","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"        this.say(content, true,true);","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"larrywang0701"},"content":"    public void say(String content, boolean outputUpperLine, boolean outputLowerLine){","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"larrywang0701"},"content":"        if(outputUpperLine){","lastModifiedDate":"2023-08-22"},{"lineNumber":62,"author":{"gitId":"larrywang0701"},"content":"            System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"larrywang0701"},"content":"        System.out.println(\"    \" + content);","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"larrywang0701"},"content":"        if(outputLowerLine){","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"larrywang0701"},"content":"            System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"larrywang0701":70}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"larrywang0701":1,"-":20}}]
