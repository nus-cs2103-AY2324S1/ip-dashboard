[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"3. After that, locate the `src/main/java/main/Main.java` file, right-click it, and choose `Run main.Main.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"larrywang0701":1,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"    mainClass.set(\"main.Main\")","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"    archiveBaseName \u003d \"iP\"","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"larrywang0701":17,"-":40}},{"path":"src/main/java/command/CommandAddTaskHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package command;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"import main.Main;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import main.Ui;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import task.Task;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"public class CommandAddTaskHandler implements ICommandHandler {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"     * Execute the command","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"     * @param command the full command","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"     * @param parameters the command parameters (splited by spaces)","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"     * @throws CommandException when any exception happens during command execution","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"    public void execute(String command, String[] parameters) throws CommandException {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"        assert(Main.getInstance() !\u003d null);","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"        assert(Main.getInstance().getTaskList() !\u003d null);","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"        Main.getInstance().getTaskList().addTaskAndSay(new Task(command));","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"larrywang0701":21}},{"path":"src/main/java/command/CommandDeadlineHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package command;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import main.Main;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import main.Ui;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import task.DeadlineTask;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"public class CommandDeadlineHandler implements ICommandHandler {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"     * Execute the command","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"     * @param command the full command","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"     * @param parameters the command parameters (splited by spaces)","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"     * @throws CommandException when any exception happens during command execution","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"    public void execute(String command, String[] parameters) throws CommandException {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"        assert(Main.getInstance() !\u003d null);","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"        assert(Main.getInstance().getTaskList() !\u003d null);","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"        String taskName \u003d \"\";","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"        int length \u003d parameters.length;","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"        int i;","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"        for(i \u003d 1; i \u003c length; i++) {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"            if(!parameters[i].equals(\"/by\")){","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"                taskName +\u003d (i !\u003d 1 ? \" \" : \"\") + parameters[i];","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"            else{","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"        String deadline \u003d \"\";","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"        for(i++; i \u003c length; i++) {","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"            deadline +\u003d parameters[i] + (i !\u003d length - 1 ? \" \" : \"\");","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"        if(deadline.equals(\"\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"            throw new CommandException(\"Error: No deadline time is given.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"        Main.getInstance().getTaskList().addTaskAndSay(new DeadlineTask(taskName, deadline));","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"larrywang0701":40}},{"path":"src/main/java/command/CommandDeleteHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package command;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import main.Main;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import main.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import task.Task;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"public class CommandDeleteHandler implements ICommandHandler {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"     * Execute the command","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"     * @param command the full command","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"     * @param parameters the command parameters (splited by spaces)","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"     * @throws CommandException when any exception happens during command execution","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"    public void execute(String command, String[] parameters) throws CommandException {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"        assert(Main.getInstance() !\u003d null);","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"        assert(Main.getInstance().getTaskList() !\u003d null);","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"        assert(Ui.getInstance() !\u003d null);","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"        int number \u003d -1;","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"            number \u003d Integer.parseInt(parameters[1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"        catch (NumberFormatException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"            throw new CommandException(\"Input is not a valid number\");","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"        if(number \u003c\u003d 0 || number \u003e Main.getInstance().getTaskList().getCount()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"            throw new CommandException(\"Input number out of range.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"        Task removedTask \u003d Main.getInstance().getTaskList().removeTask(number - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"        String reply \u003d \"Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"        reply +\u003d \"  \" + removedTask.toString() + \"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"        reply +\u003d \"Now you have \" + Main.getInstance().getTaskList().getCount() +\" tasks in the list.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"        Ui.getInstance().say(reply);","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"larrywang0701":37}},{"path":"src/main/java/command/CommandDurationHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package command;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import main.Main;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import task.DeadlineTask;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import task.DurationTask;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"public class CommandDurationHandler implements ICommandHandler {","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"     * Execute the command","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"     * @param command the full command","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"     * @param parameters the command parameters (splited by spaces)","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"     * @throws CommandException when any exception happens during command execution","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"    public void execute(String command, String[] parameters) throws CommandException {","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"        assert(Main.getInstance() !\u003d null);","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"        assert(Main.getInstance().getTaskList() !\u003d null);","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"        String taskName \u003d \"\";","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"        int length \u003d parameters.length;","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"        int i;","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"        for(i \u003d 1; i \u003c length; i++) {","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"            if(!parameters[i].equals(\"/for\")){","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"                taskName +\u003d (i !\u003d 1 ? \" \" : \"\") + parameters[i];","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"            else{","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"                break;","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"        String durationStr \u003d \"\";","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"        for(i++; i \u003c length; i++) {","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"            durationStr +\u003d parameters[i] + (i !\u003d length - 1 ? \" \" : \"\");","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"        if(durationStr.equals(\"\")) {","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"            throw new CommandException(\"Error: No duration is given.\");","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"        float duration \u003d 0.0f;","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"            duration \u003d Float.parseFloat(durationStr);","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"        catch (NumberFormatException e) {","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"            throw new CommandException(\"Duration length is not a valid number\");","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"        Main.getInstance().getTaskList().addTaskAndSay(new DurationTask(taskName, duration));","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"larrywang0701":47}},{"path":"src/main/java/command/CommandEventHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package command;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import main.Main;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import main.Ui;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import task.DeadlineTask;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import task.EventTask;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"public class CommandEventHandler implements ICommandHandler {","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"     * Execute the command","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"     * @param command the full command","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"     * @param parameters the command parameters (splited by spaces)","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"     * @throws CommandException when any exception happens during command execution","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"    public void execute(String command, String[] parameters) throws CommandException {","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"        assert(Main.getInstance() !\u003d null);","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"        assert(Main.getInstance().getTaskList() !\u003d null);","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"        String taskName \u003d \"\";","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"        int length \u003d parameters.length;","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"        int i;","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"        for(i \u003d 1; i \u003c length; i++) {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"            if(!parameters[i].equals(\"/from\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"                taskName +\u003d (i !\u003d 1 ? \" \" : \"\") + parameters[i];","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"            else {","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"        String from \u003d \"\";","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"        int fromStringBeginParameterIndex \u003d i + 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"        for(i++; i \u003c length; i++) {","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"            if(!parameters[i].equals(\"/to\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"                from +\u003d (i !\u003d fromStringBeginParameterIndex ? \" \" : \"\") + parameters[i];","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"            else {","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"        String to \u003d \"\";","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"        for(i++; i \u003c length; i++) {","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"            to +\u003d parameters[i] + (i !\u003d length - 1 ? \" \" : \"\");","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"        if(from.equals(\"\") || to.equals(\"\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"            throw new CommandException(\"Error: No from/to time is given.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"        Main.getInstance().getTaskList().addTaskAndSay(new EventTask(taskName, from, to));","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"larrywang0701":52}},{"path":"src/main/java/command/CommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package command;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"     * Constructor for CommandException class","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"     * @param message The exception message","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"    public CommandException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"larrywang0701":12}},{"path":"src/main/java/command/CommandExitHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package command;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"import main.Main;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import main.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"public class CommandExitHandler implements ICommandHandler {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"     * Execute the command","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"     * @param command the full command","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"     * @param parameters the command parameters (splited by spaces)","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"     * @throws CommandException when any exception happens during command execution","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"    public void execute(String command, String[] parameters) {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"        assert(Ui.getInstance() !\u003d null);","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"        Ui.getInstance().byeAndExit();","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"larrywang0701":19}},{"path":"src/main/java/command/CommandFindHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import main.Main;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import main.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"public class CommandFindHandler implements ICommandHandler {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"     * Execute the command","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"     * @param command the full command","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"     * @param parameters the command parameters (splited by spaces)","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"     * @throws CommandException when any exception happens during command execution","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"    public void execute(String command, String[] parameters) throws CommandException {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"        assert(Main.getInstance() !\u003d null);","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"        assert(Main.getInstance().getTaskList() !\u003d null);","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"        assert(Ui.getInstance() !\u003d null);","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"        if(parameters.length \u003c 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"            throw new CommandException(\"Missing target task name\");","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"        StringBuilder reply \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"        Main.getInstance().getTaskList().iterate((index, task) -\u003e {if(task.getName().indexOf(parameters[1])!\u003d-1) {reply.append(task.toString() + \"\\n\"); }});","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"        Ui.getInstance().say(reply.toString());","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"larrywang0701":27}},{"path":"src/main/java/command/CommandIntroHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package command;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"import main.Main;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import main.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"public class CommandIntroHandler implements ICommandHandler {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"     * Execute the command","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"     * @param command the full command","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"     * @param parameters the command parameters (splited by spaces)","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"     * @throws CommandException when any exception happens during command execution","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"    public void execute(String command, String[] parameters) {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"        assert(Main.getInstance() !\u003d null);","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"        assert(Main.getInstance().getName() !\u003d null);","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"        assert(Ui.getInstance() !\u003d null);","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"        String name \u003d Main.getInstance().getName();","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"        Ui.getInstance().say(\"Hello! I\u0027m \" + name + \"\\nWhat can I do for you?\");","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"larrywang0701":22}},{"path":"src/main/java/command/CommandListHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package command;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"import main.Main;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import main.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"public class CommandListHandler implements ICommandHandler {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"     * Execute the command","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"     * @param command the full command","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"     * @param parameters the command parameters (splited by spaces)","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"     * @throws CommandException when any exception happens during command execution","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"    public void execute(String command, String[] parameters) {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"        assert(Main.getInstance() !\u003d null);","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"        assert(Main.getInstance().getTaskList() !\u003d null);","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"        assert(Ui.getInstance() !\u003d null);","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"        StringBuilder reply \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"        Main.getInstance().getTaskList().iterate((index, task) -\u003e reply.append(index + 1 + \".\" + task.toString() + \"\\n\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"        Ui.getInstance().say(reply.toString());","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"larrywang0701":25}},{"path":"src/main/java/command/CommandMarkUnmarkHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package command;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"import main.Main;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import main.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import task.Task;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"public class CommandMarkUnmarkHandler implements ICommandHandler {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"     * Execute the command","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"     * @param command the full command","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"     * @param parameters the command parameters (splited by spaces)","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"     * @throws CommandException when any exception happens during command execution","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"    public void execute(String command, String[] parameters) throws CommandException {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"        if(parameters.length \u003c 2){","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"            throw new CommandException(\"Error: The task name for marking / unmarking is not given.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"        boolean mark \u003d parameters[0].equals(\"mark\");","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"        String taskName \u003d mark ? command.replaceFirst(\"mark \", \"\") : command.replaceFirst(\"unmark \", \"\");","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"        Task task \u003d Main.getInstance().getTaskList().findTaskByName(taskName);","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"        if(task \u003d\u003d null) {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"            throw new CommandException(\"Error: Can not find any task with name \u0027\" +taskName + \"\u0027.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"        task.setIsDone(mark);","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"        String reply \u003d \"Nice! I\u0027ve marked this task as \" + (mark ? \"done\" : \"not done yet\") + \":\";","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"        reply +\u003d \"  \" + Main.getInstance().getTaskList().findTaskByName(taskName).toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"        Ui.getInstance().say(reply);","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"larrywang0701":33}},{"path":"src/main/java/command/CommandTodoHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package command;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import main.Main;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import main.Ui;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import task.TodoTask;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"public class CommandTodoHandler implements ICommandHandler{","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"     * Execute the command","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"     * @param command the full command","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"     * @param parameters the command parameters (splited by spaces)","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"     * @throws CommandException when any exception happens during command execution","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"    public void execute(String command, String[] parameters) throws CommandException {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"        assert(Main.getInstance() !\u003d null);","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"        assert(Main.getInstance().getTaskList() !\u003d null);","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"        Main.getInstance().getTaskList().addTaskAndSay(new TodoTask(command.replaceFirst(\"todo \", \"\")));","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"larrywang0701":22}},{"path":"src/main/java/command/ICommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package command;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"public interface ICommandHandler {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"     * This method will be called when the command is being executed.","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"     * @param command the full command","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"     * @param parameters the command parameters (splited by spaces)","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"     * @throws CommandException when any exception happens during command execution","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"    public void execute(String command, String parameters[]) throws CommandException;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"larrywang0701":12}},{"path":"src/main/java/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package command;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import main.Main;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import main.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"public class Parser {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"    private HashMap\u003cString, ICommandHandler\u003e commands;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"     * Constructor for the Parser class","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"    public Parser() {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"        this.commands \u003d new HashMap\u003cString, ICommandHandler\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"     * Register a new command","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"     * @param header the command\u0027s header","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"     * @param handler The command\u0027s handler","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"    public void registerCommand(String header, ICommandHandler handler) {","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"        this.commands.put(header, handler);","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"     * Execute a command","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"     * @param command the full command","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"    public void executeCommand(String command) {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"        assert(Ui.getInstance() !\u003d null);","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"        if(command.length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"            Ui.getInstance().say(\"You didn\u0027t say anything.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"            return;","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"        String[] splitedCommand \u003d command.split(\" \");","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"            if(command.equals(\"blah\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"                throw new CommandException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"            if(this.commands.containsKey(splitedCommand[0])) {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"                this.commands.get(splitedCommand[0]).execute(command, splitedCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"            else {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"                this.commands.get(\"add\").execute(command, splitedCommand);","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"        catch (CommandException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"            Ui.getInstance().sayError(\"An exception happened when executing this command: \" + e.getMessage());","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"larrywang0701":58}},{"path":"src/main/java/main/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package main;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import command.CommandAddTaskHandler;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import command.CommandDeadlineHandler;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import command.CommandDeleteHandler;","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import command.CommandDurationHandler;","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import command.CommandEventHandler;","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"import command.CommandExitHandler;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"import command.CommandFindHandler;","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"import command.CommandIntroHandler;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"import command.CommandListHandler;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"import command.CommandMarkUnmarkHandler;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"import command.CommandTodoHandler;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"import command.Parser;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"import task.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"import util.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"public class Main {","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"    private static Main INSTANCE;","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"    private String name \u003d \"Duke\";","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"    private Parser parser;","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"    private boolean isRunning;","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"     * Default constructor of the program\u0027s main class","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"    public Main() {","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"        this.taskList \u003d Storage.createTaskListFromFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"        this.parser.registerCommand(\"intro\", new CommandIntroHandler());","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"        this.parser.registerCommand(\"list\", new CommandListHandler());","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"        this.parser.registerCommand(\"add\", new CommandAddTaskHandler());","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"        this.parser.registerCommand(\"bye\", new CommandExitHandler());","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"        CommandMarkUnmarkHandler temp \u003d new CommandMarkUnmarkHandler();","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"        this.parser.registerCommand(\"mark\", temp);","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"        this.parser.registerCommand(\"unmark\", temp);","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"        this.parser.registerCommand(\"todo\", new CommandTodoHandler());","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"        this.parser.registerCommand(\"deadline\", new CommandDeadlineHandler());","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"        this.parser.registerCommand(\"event\", new CommandEventHandler());","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"        this.parser.registerCommand(\"delete\", new CommandDeleteHandler());","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"        this.parser.registerCommand(\"find\", new CommandFindHandler());","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"        this.parser.registerCommand(\"duration\", new CommandDurationHandler());","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"     * Main function for the program","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"     * @param args The arguments from JVM","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"larrywang0701"},"content":"        initialize();","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"        INSTANCE.run(args);","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":60,"author":{"gitId":"larrywang0701"},"content":"    private void run(String[] args) {","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"larrywang0701"},"content":"        Application.launch(Ui.class, args);","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"larrywang0701"},"content":"        return;","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":65,"author":{"gitId":"larrywang0701"},"content":"    private static void initialize() {","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"larrywang0701"},"content":"        INSTANCE \u003d new Main();","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"larrywang0701"},"content":"     * Returns the application singleton instance","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"larrywang0701"},"content":"     * @return the instance","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"larrywang0701"},"content":"    public static Main getInstance() {","lastModifiedDate":"2023-08-22"},{"lineNumber":75,"author":{"gitId":"larrywang0701"},"content":"        return INSTANCE;","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":77,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":78,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"larrywang0701"},"content":"     * Return the name of the chat bot","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"larrywang0701"},"content":"     * @return the name","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"larrywang0701"},"content":"    public String getName() {","lastModifiedDate":"2023-08-22"},{"lineNumber":84,"author":{"gitId":"larrywang0701"},"content":"        return this.name;","lastModifiedDate":"2023-08-22"},{"lineNumber":85,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":86,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":87,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"larrywang0701"},"content":"     * Exit the program","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"larrywang0701"},"content":"    public void exit() {","lastModifiedDate":"2023-08-22"},{"lineNumber":91,"author":{"gitId":"larrywang0701"},"content":"        System.exit(0);","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":93,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":94,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"larrywang0701"},"content":"     * Returns the TaskList instance","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"larrywang0701"},"content":"     * @return the instance","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"larrywang0701"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"larrywang0701"},"content":"        return this.taskList;","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"larrywang0701"},"content":"     * Returns the Parser instance","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"larrywang0701"},"content":"     * @return the instance","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"larrywang0701"},"content":"    public Parser getParser() {","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"larrywang0701"},"content":"        return this.parser;","lastModifiedDate":"2023-08-29"},{"lineNumber":111,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":112,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"larrywang0701":112}},{"path":"src/main/java/main/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package main;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import command.CommandException;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"import javafx.scene.control.*;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-19"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"import javafx.scene.layout.*;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"import javafx.scene.shape.Box;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"import javafx.scene.shape.Rectangle;","lastModifiedDate":"2023-09-19"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"import javafx.scene.text.TextAlignment;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"public class Ui extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"    private Stage window;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"    private static Ui INSTANCE;","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"    private Image portraitUser;","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"    private Image portraitBot;","lastModifiedDate":"2023-09-19"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"    private int portraitSize \u003d 50;","lastModifiedDate":"2023-09-19"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"     * Start method for JavaFX","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"     * @param primaryStage The primary stage provided by JavaFX","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"    public void start(Stage primaryStage) throws Exception {","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"        INSTANCE \u003d this;","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"        this.window \u003d primaryStage;","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"        AnchorPane anchorPane \u003d new AnchorPane();","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"        ScrollPane scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"        VBox dialogContainer \u003d new VBox();","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"        this.dialogContainer \u003d dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.AS_NEEDED);","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"        TextField messageInputArea \u003d new TextField();","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"        messageInputArea.setPrefSize(350, 20);","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"        messageInputArea.setLayoutX(0);","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"        messageInputArea.setLayoutY(600);","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"        Button sendMessageButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"        sendMessageButton.setPrefSize(50, 20);","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"larrywang0701"},"content":"        sendMessageButton.setLayoutX(350);","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"        sendMessageButton.setLayoutY(600);","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"larrywang0701"},"content":"        scrollPane.setPrefSize(400, 590);","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"        anchorPane.getChildren().addAll(scrollPane, messageInputArea, sendMessageButton);","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"        Scene mainScene \u003d new Scene(anchorPane);","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"        primaryStage.setTitle(\"Chat with \" + Main.getInstance().getName());","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"larrywang0701"},"content":"        primaryStage.setResizable(false);","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"larrywang0701"},"content":"        primaryStage.setMinHeight(600);","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"larrywang0701"},"content":"        primaryStage.setMinWidth(400);","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"larrywang0701"},"content":"        anchorPane.setPrefSize(400, 600);","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"larrywang0701"},"content":"        primaryStage.setScene(mainScene);","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"larrywang0701"},"content":"        primaryStage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"larrywang0701"},"content":"        primaryStage.setOnCloseRequest(event -\u003e {","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"larrywang0701"},"content":"            ButtonType exitBtn \u003d new ButtonType(\"Exit\");","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"larrywang0701"},"content":"            ButtonType cancelBtn \u003d new ButtonType(\"Cancel\");","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"larrywang0701"},"content":"            Alert closeConfirmation \u003d new Alert(Alert.AlertType.CONFIRMATION,\"\", cancelBtn, exitBtn);","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"larrywang0701"},"content":"            closeConfirmation.setHeaderText(\"Do you really want to exit?\");","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"larrywang0701"},"content":"            closeConfirmation.showAndWait().ifPresent(","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"larrywang0701"},"content":"                    result-\u003e{","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"larrywang0701"},"content":"                        if(result \u003d\u003d exitBtn) {","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"larrywang0701"},"content":"                            this.byeAndExit();","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"larrywang0701"},"content":"                        }","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"larrywang0701"},"content":"                    }","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"larrywang0701"},"content":"            );","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"larrywang0701"},"content":"            event.consume();","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"larrywang0701"},"content":"        });","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"larrywang0701"},"content":"        sendMessageButton.setOnMouseClicked(event -\u003e {","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"larrywang0701"},"content":"            String message \u003d messageInputArea.getText();","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"larrywang0701"},"content":"            messageInputArea.setText(\"\");","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"larrywang0701"},"content":"            this.addMessageBubble(message, true, false);","lastModifiedDate":"2023-09-19"},{"lineNumber":85,"author":{"gitId":"larrywang0701"},"content":"            Main.getInstance().getParser().executeCommand(message);","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"larrywang0701"},"content":"        });","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"larrywang0701"},"content":"        messageInputArea.setOnAction(event -\u003e {","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"larrywang0701"},"content":"            String message \u003d messageInputArea.getText();","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"larrywang0701"},"content":"            messageInputArea.setText(\"\");","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"larrywang0701"},"content":"            this.addMessageBubble(message, true, false);","lastModifiedDate":"2023-09-19"},{"lineNumber":92,"author":{"gitId":"larrywang0701"},"content":"            Main.getInstance().getParser().executeCommand(message);","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"larrywang0701"},"content":"        });","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"larrywang0701"},"content":"        this.portraitUser \u003d new Image(this.getClass().getResourceAsStream(\"/images/Portrait_User.png\"));","lastModifiedDate":"2023-09-19"},{"lineNumber":96,"author":{"gitId":"larrywang0701"},"content":"        this.portraitBot \u003d new Image(this.getClass().getResourceAsStream(\"/images/Portrait_Bot.png\"));","lastModifiedDate":"2023-09-19"},{"lineNumber":97,"author":{"gitId":"larrywang0701"},"content":"        Main.getInstance().getParser().executeCommand(\"intro\");","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":101,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"larrywang0701"},"content":"     * Hide the main window, pops a message box to say goodbye to the user and finally exit the whole program.","lastModifiedDate":"2023-09-07"},{"lineNumber":103,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"larrywang0701"},"content":"    public void byeAndExit() {","lastModifiedDate":"2023-09-18"},{"lineNumber":105,"author":{"gitId":"larrywang0701"},"content":"        assert(Main.getInstance() !\u003d null);","lastModifiedDate":"2023-09-12"},{"lineNumber":106,"author":{"gitId":"larrywang0701"},"content":"        this.window.hide();","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"larrywang0701"},"content":"        ButtonType okBtn \u003d new ButtonType(\"Bye\");","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"larrywang0701"},"content":"        Alert closeConfirmation \u003d new Alert(Alert.AlertType.NONE,\"\", okBtn);","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"larrywang0701"},"content":"        closeConfirmation.setHeaderText(\"Bye, hope to see you soon!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"larrywang0701"},"content":"        closeConfirmation.showAndWait();","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"larrywang0701"},"content":"        Main.getInstance().exit();","lastModifiedDate":"2023-09-07"},{"lineNumber":112,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":113,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":114,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":115,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"larrywang0701"},"content":"     * Outputs message to the user","lastModifiedDate":"2023-09-07"},{"lineNumber":117,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"larrywang0701"},"content":"     * @param content the message content","lastModifiedDate":"2023-09-07"},{"lineNumber":119,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"larrywang0701"},"content":"    public void say(String content) {","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"larrywang0701"},"content":"        this.addMessageBubble(content, false, false);","lastModifiedDate":"2023-09-19"},{"lineNumber":122,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":125,"author":{"gitId":"larrywang0701"},"content":"     * Outputs error message to the user","lastModifiedDate":"2023-09-07"},{"lineNumber":126,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":127,"author":{"gitId":"larrywang0701"},"content":"     * @param content the error message content","lastModifiedDate":"2023-09-07"},{"lineNumber":128,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":129,"author":{"gitId":"larrywang0701"},"content":"    public void sayError(String content) {","lastModifiedDate":"2023-09-07"},{"lineNumber":130,"author":{"gitId":"larrywang0701"},"content":"        this.addMessageBubble(content, false, true);","lastModifiedDate":"2023-09-19"},{"lineNumber":131,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":132,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":133,"author":{"gitId":"larrywang0701"},"content":"    private void addMessageBubble(String content, boolean isUser, boolean isError) {","lastModifiedDate":"2023-09-19"},{"lineNumber":134,"author":{"gitId":"larrywang0701"},"content":"        Pane messageBubble \u003d new Pane();","lastModifiedDate":"2023-09-07"},{"lineNumber":135,"author":{"gitId":"larrywang0701"},"content":"        messageBubble.setBackground(new Background(new BackgroundFill(isUser ? Color.LIGHTGREEN : Color.WHITE, CornerRadii.EMPTY, Insets.EMPTY)));","lastModifiedDate":"2023-09-07"},{"lineNumber":136,"author":{"gitId":"larrywang0701"},"content":"        ImageView portrait \u003d new ImageView(isUser ? this.portraitUser : this.portraitBot);","lastModifiedDate":"2023-09-19"},{"lineNumber":137,"author":{"gitId":"larrywang0701"},"content":"        portrait.setFitWidth(this.portraitSize);","lastModifiedDate":"2023-09-19"},{"lineNumber":138,"author":{"gitId":"larrywang0701"},"content":"        portrait.setFitHeight(this.portraitSize);","lastModifiedDate":"2023-09-19"},{"lineNumber":139,"author":{"gitId":"larrywang0701"},"content":"        portrait.setLayoutX(isUser ? 400 - this.portraitSize : 0);","lastModifiedDate":"2023-09-19"},{"lineNumber":140,"author":{"gitId":"larrywang0701"},"content":"        Rectangle portraitRect \u003d new Rectangle(this.portraitSize, this.portraitSize);","lastModifiedDate":"2023-09-19"},{"lineNumber":141,"author":{"gitId":"larrywang0701"},"content":"        portraitRect.setArcWidth(this.portraitSize);","lastModifiedDate":"2023-09-19"},{"lineNumber":142,"author":{"gitId":"larrywang0701"},"content":"        portraitRect.setArcHeight(this.portraitSize);","lastModifiedDate":"2023-09-19"},{"lineNumber":143,"author":{"gitId":"larrywang0701"},"content":"        portrait.setClip(portraitRect);","lastModifiedDate":"2023-09-19"},{"lineNumber":144,"author":{"gitId":"larrywang0701"},"content":"        Label label \u003d new Label(content);","lastModifiedDate":"2023-09-19"},{"lineNumber":145,"author":{"gitId":"larrywang0701"},"content":"        label.setPrefWidth(400 - this.portraitSize - 20);","lastModifiedDate":"2023-09-19"},{"lineNumber":146,"author":{"gitId":"larrywang0701"},"content":"        label.setMinHeight(this.portraitSize);","lastModifiedDate":"2023-09-19"},{"lineNumber":147,"author":{"gitId":"larrywang0701"},"content":"        label.setLayoutX(isUser ? 10 : this.portraitSize + 10);","lastModifiedDate":"2023-09-19"},{"lineNumber":148,"author":{"gitId":"larrywang0701"},"content":"        label.setWrapText(true);","lastModifiedDate":"2023-09-19"},{"lineNumber":149,"author":{"gitId":"larrywang0701"},"content":"        label.setTextFill(isError ? Color.RED : Color.BLACK);","lastModifiedDate":"2023-09-19"},{"lineNumber":150,"author":{"gitId":"larrywang0701"},"content":"        label.setTextAlignment(isUser ? TextAlignment.RIGHT : TextAlignment.LEFT);","lastModifiedDate":"2023-09-19"},{"lineNumber":151,"author":{"gitId":"larrywang0701"},"content":"        label.setAlignment(isUser ? Pos.CENTER_RIGHT : Pos.CENTER_LEFT);","lastModifiedDate":"2023-09-19"},{"lineNumber":152,"author":{"gitId":"larrywang0701"},"content":"        messageBubble.getChildren().addAll(label, portrait);","lastModifiedDate":"2023-09-19"},{"lineNumber":153,"author":{"gitId":"larrywang0701"},"content":"        messageBubble.prefHeightProperty().bind(label.heightProperty());","lastModifiedDate":"2023-09-19"},{"lineNumber":154,"author":{"gitId":"larrywang0701"},"content":"        this.dialogContainer.getChildren().add(messageBubble);","lastModifiedDate":"2023-09-07"},{"lineNumber":155,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":156,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":157,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":158,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"larrywang0701"},"content":"     * Returns the Ui singleton instance","lastModifiedDate":"2023-09-07"},{"lineNumber":160,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":161,"author":{"gitId":"larrywang0701"},"content":"     * @return the instance","lastModifiedDate":"2023-09-07"},{"lineNumber":162,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":163,"author":{"gitId":"larrywang0701"},"content":"    public static Ui getInstance() {","lastModifiedDate":"2023-09-07"},{"lineNumber":164,"author":{"gitId":"larrywang0701"},"content":"        return INSTANCE;","lastModifiedDate":"2023-09-07"},{"lineNumber":165,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":166,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"larrywang0701":166}},{"path":"src/main/java/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package task;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import command.CommandException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import main.Main;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import util.DateTimeUtil;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"public class DeadlineTask extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"     * The constructor for the DeadlineTask class","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"     * @param name The name of the task","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"     * @param deadlineStr The deadline time (as a string)","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"     * @throws CommandException when deadlineStr isn\u0027t in the correct date-time format","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"    public DeadlineTask(String name, String deadlineStr) throws CommandException {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"        this.deadline \u003d DateTimeUtil.parseDateTimeString(deadlineStr);","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"     * Get the string representation of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"     * @return string representation of the task","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"    public String toString(){","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + DateTimeUtil.dateTimeToString(this.deadline) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"larrywang0701":36}},{"path":"src/main/java/task/DurationTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package task;","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import command.CommandException;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import util.DateTimeUtil;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"public class DurationTask extends Task {","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"    private float durationHours;","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"     * The constructor for the DurationTask class","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"     * @param name The name of the task","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"     * @param durationHours The duration of the task, in hours","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"    public DurationTask(String name, float durationHours) {","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"        super(name);","lastModifiedDate":"2023-09-18"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"        this.durationHours \u003d durationHours;","lastModifiedDate":"2023-09-18"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"    public String toString(){","lastModifiedDate":"2023-09-18"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"        return \"[Duration]\" + super.toString() + \" (needs \" + this.durationHours + \" hours)\";","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"larrywang0701":26}},{"path":"src/main/java/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package task;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import command.CommandException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import util.DateTimeUtil;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"public class EventTask extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"     * The constructor for the EventTask class","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"     * @param name The name of the task","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"     * @param fromStr The \"from\" time (as a string)","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"     * @param toStr The \"to\" time (as a string)","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"     * @throws CommandException when fromStr or toStr is not in the correct date-time format,","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"     * or when the start time (by fromStr) of the event is behind the end time (by toStr) of the event","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"    public EventTask(String name, String fromStr, String toStr) throws CommandException {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"        this.from \u003d DateTimeUtil.parseDateTimeString(fromStr);","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"        this.to \u003d DateTimeUtil.parseDateTimeString(toStr);","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"        if(this.from.compareTo(this.to) \u003e 0){","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"            throw new CommandException(\"Start time \" + DateTimeUtil.dateTimeToString(this.from) + \" of this event is behind the end time \" + DateTimeUtil.dateTimeToString(this.to) + \".\");","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"     * Get the string representation of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"     * @return string representation of the task","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + DateTimeUtil.dateTimeToString(this.from )+ \" to: \" + DateTimeUtil.dateTimeToString(this.to) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"larrywang0701":40}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package task;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"public class Task implements Serializable {","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"    private String name;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"    private boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"     * The constructor for the Task class","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"     * @param name The name of the task","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"     * Set whether the task is marked as \"done\" or not","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"     * @param isDone Set to \"true\" if the task is marked as done, \"false\" otherwise.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"     * Returns whether the task is marked as done or not.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"     * @return \"true\" if the task is marked as done and \"false\" otherwise.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"     * Get the string representation of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"     * @return string representation of the task","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"        return \"[\" + (this.isDone ? \"X\" : \" \") + \"] \" + this.name;","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"     * Get the name of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"     * @return task name","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"    public String getName(){","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"        return this.name;","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"larrywang0701":55}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package task;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import command.CommandException;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import main.Main;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import main.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import util.Storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"import java.util.function.BiConsumer;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"public class TaskList {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"     * The default constructor for the Task class","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"     * Finds a task in the list by name and returns the task instance","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"     * @param name The name of the task that you want to find","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"     * @return The task instance found by the given name, or \"null\" if no task in the list has the given name.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"    public Task findTaskByName(String name) {","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"        int count \u003d this.tasks.size();","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"        for(int i \u003d 0; i \u003c count; i++){","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"            Task task \u003d this.tasks.get(i);","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"            if(task.getName().equals(name)){","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"                return task;","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"        return null;","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"     * Adds a new task into the list and then send a message to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"     * The new task must have a unique name from the names of all other tasks in the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"     * @param newTask the instance of the new task to add","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"     * @throws CommandException when there is already a task in the list that has the same name as the new task","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"    public void addTaskAndSay(Task newTask) throws CommandException {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"        assert(Ui.getInstance() !\u003d null);","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"        if(this.findTaskByName(newTask.getName()) !\u003d null){","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"            throw new CommandException(\"Error: A task with name \u0027\" + newTask.getName() + \"\u0027 already exists.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"        this.tasks.add(newTask);","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"        String reply \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"larrywang0701"},"content":"        reply +\u003d \"  \" + newTask.toString() + \"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"        reply +\u003d \"Now you have \" + Main.getInstance().getTaskList().getCount() +\" tasks in the list.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"larrywang0701"},"content":"        Ui.getInstance().say(reply);","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"        Storage.saveTasksToFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"larrywang0701"},"content":"     * Simply adds a new task into the list.","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"larrywang0701"},"content":"     * @param newTask the instance of the new task to add","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"larrywang0701"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"larrywang0701"},"content":"        this.tasks.add(newTask);","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"larrywang0701"},"content":"     * Removes a task from the list","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"larrywang0701"},"content":"     * @param index the index of the task instance that will be removed in the list","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"larrywang0701"},"content":"     * @return The removed task instance","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"larrywang0701"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"larrywang0701"},"content":"        Task removedTask \u003d this.tasks.remove(index);","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"larrywang0701"},"content":"        Storage.saveTasksToFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"larrywang0701"},"content":"        return removedTask;","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"larrywang0701"},"content":"     * Iterates all tasks by a given consumer method","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"larrywang0701"},"content":"     * @param consumer a BiConsumer that takes two parameters to consume:","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"larrywang0701"},"content":"     * the first parameter is the index of the current task in the list,","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"larrywang0701"},"content":"     * the second parameter is the current task instance.","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"larrywang0701"},"content":"    public void iterate(BiConsumer\u003cInteger, Task\u003e consumer) {","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"larrywang0701"},"content":"        int index \u003d 0;","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"larrywang0701"},"content":"        for(Task task : this.tasks){","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"larrywang0701"},"content":"            consumer.accept(index, task);","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"larrywang0701"},"content":"            index++;","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"larrywang0701"},"content":"     * Get the number of tasks in the list","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"larrywang0701"},"content":"     * @return the number of tasks in the list","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"larrywang0701"},"content":"    public int getCount(){","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"larrywang0701"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"larrywang0701":104}},{"path":"src/main/java/task/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package task;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"public class TodoTask extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"     * The constructor for the TodoTask class","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"     * @param name The name of the task","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"    public TodoTask(String name) {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"        super(name);","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"     * Get the string representation of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"     * @return string representation of the task","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"larrywang0701":23}},{"path":"src/main/java/util/DateTimeUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package util;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import command.CommandException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"public class DateTimeUtil {","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"     * Parse a string into a LocalDateTime instance","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"     * @param str The string representing a time in the format \"yyyy-MM-dd\" or \"yyyy-MM-dd HH:mm:ss\"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"     * @return The LocalDateTime instance created from the String","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"     * @throws CommandException when the string isn\u0027t in the correct format","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"    public static LocalDateTime parseDateTimeString(String str) throws CommandException {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"        LocalDateTime retVal;","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"            retVal \u003d LocalDateTime.parse(str, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\")); // Date + Time","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"        }catch (DateTimeParseException e){","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"            try{","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"                retVal \u003d LocalDateTime.parse(str + \" 00:00:00\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\")); // Date only","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"            catch (DateTimeParseException e2){","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"                throw new CommandException(\"Sorry, I couldn\u0027t recognize as a valid date-time: \" + str);","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"        return retVal;","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"     * Returns a formatted string representing a LocalDateTime instance","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"     * @param dt the LocalDateTime instance","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"     * @return the formatted string representing the LocalDateTime instance","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"    public static String dateTimeToString(LocalDateTime dt) {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"        return dt.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"larrywang0701":40}},{"path":"src/main/java/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package util;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import main.Main;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import main.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import task.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import task.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"import java.io.EOFException;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"public class Storage {","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"    private static final String PATH \u003d \"data.bin\";","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"     * Serializes all tasks into the data file.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"    public static void saveTasksToFile() {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"        try{","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"            FileOutputStream fos \u003d new FileOutputStream(PATH);","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"            ObjectOutputStream oos \u003d new ObjectOutputStream(fos);","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"            Main.getInstance().getTaskList().iterate((index, task) -\u003e {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"                try {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"                    oos.writeObject(task);","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"                } catch (IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"                    throw new RuntimeException(e);","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"            });","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"            oos.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"            fos.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"        catch(Exception e){","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"            Ui.getInstance().sayError(\"Unable to save tasks to file: \" + e.getMessage());","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"     * Create the TaskList instance from deserializing the data file","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"larrywang0701"},"content":"     * @return The TaskList containing all deserialized tasks form the data file,","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"larrywang0701"},"content":"     * or a TaskList instance containing no tasks if the data file not exists or can not be read.","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"larrywang0701"},"content":"    public static TaskList createTaskListFromFile() {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"larrywang0701"},"content":"        File file \u003d new File(PATH);","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"larrywang0701"},"content":"        if(!file.exists()){","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"larrywang0701"},"content":"            return new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"larrywang0701"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"larrywang0701"},"content":"        try{","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"larrywang0701"},"content":"            FileInputStream fis \u003d new FileInputStream(file);","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"larrywang0701"},"content":"            ObjectInputStream ois \u003d new ObjectInputStream(fis);","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"larrywang0701"},"content":"            while(true){","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"larrywang0701"},"content":"                try{","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"larrywang0701"},"content":"                    tl.addTask((Task)ois.readObject());","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"larrywang0701"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"larrywang0701"},"content":"                catch (EOFException e){","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"larrywang0701"},"content":"                    ois.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"larrywang0701"},"content":"                    fis.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"larrywang0701"},"content":"                    break;","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"larrywang0701"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"larrywang0701"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"larrywang0701"},"content":"            return tl;","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"larrywang0701"},"content":"        catch (Exception e){","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"larrywang0701"},"content":"            System.out.println(\"Warning: Unable to read tasks from file. \" + e.getMessage());","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"larrywang0701"},"content":"            return new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"larrywang0701":72}},{"path":"src/main/resources/images/info.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"Citation: Images Portrait_User.png and Portrait_Bot.png are taken from the following links:","lastModifiedDate":"2023-09-19"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"https://se-education.org/guides/tutorials/images/javafx/DaUser.png    (Portrait_User.png)","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"https://se-education.org/guides/tutorials/images/javafx/DaDuke.png    (Portrait_Bot.png)","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"larrywang0701":3}},{"path":"src/test/java/main/MainTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"package main;","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"import command.CommandException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"import task.EventTask;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"import task.Task;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"larrywang0701"},"content":"import task.TaskList;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"larrywang0701"},"content":"import util.DateTimeUtil;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"larrywang0701"},"content":"public class MainTest {","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"larrywang0701"},"content":"     * Test cases for DateTimeUtil.parseDateTimeString","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"    public void dateTimeParseTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"larrywang0701"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"larrywang0701"},"content":"            assertEquals(DateTimeUtil.parseDateTimeString(\"1970-01-01\").toString(), \"1970-01-01T00:00\");","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"larrywang0701"},"content":"            assertEquals(DateTimeUtil.parseDateTimeString(\"1970-01-01 05:01:03\").toString(), \"1970-01-01T05:01:03\");","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"larrywang0701"},"content":"        catch (Exception e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"larrywang0701"},"content":"            fail();","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"larrywang0701"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"larrywang0701"},"content":"        assertThrows(CommandException.class, () -\u003e DateTimeUtil.parseDateTimeString(\"1970 01 01\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"larrywang0701"},"content":"        assertThrows(CommandException.class, () -\u003e DateTimeUtil.parseDateTimeString(\"1970-01-01 00:00:100\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"larrywang0701"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"larrywang0701"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"larrywang0701"},"content":"     * Test cases for testing some exceptions in the program","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"larrywang0701"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"larrywang0701"},"content":"    @Test","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"larrywang0701"},"content":"    public void exceptionTest() {","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"larrywang0701"},"content":"        // Event tasks: start time must \u003c\u003d end time","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"larrywang0701"},"content":"        assertThrows(CommandException.class, ()-\u003enew EventTask(\"something\", \"2023-09-01 00:00:05\", \"2023-09-01 00:00:03\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"larrywang0701"},"content":"        assertDoesNotThrow(()-\u003enew EventTask(\"something\", \"2023-09-01 00:00:03\", \"2023-09-01 00:00:05\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"larrywang0701"},"content":"        TaskList testTaskList \u003d new TaskList();","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"larrywang0701"},"content":"        // No duplicate named tasks","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"larrywang0701"},"content":"        assertDoesNotThrow(()-\u003etestTaskList.addTask(new Task(\"name\")));","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"larrywang0701"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"larrywang0701"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"larrywang0701":42}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"larrywang0701"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"larrywang0701"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"larrywang0701"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"larrywang0701"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"larrywang0701"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"larrywang0701"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"larrywang0701":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"larrywang0701"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\main\\*.java","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"larrywang0701"},"content":"java -classpath ..\\bin main.Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"larrywang0701":2,"-":19}}]
