[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"amosting"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"amosting"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"amosting"},"content":"checkstyle {","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"amosting"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"amosting"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"amosting"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"amosting"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"amosting"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"amosting"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"amosting"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"amosting"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"amosting"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"amosting"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"amosting"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"amosting"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"amosting"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"amosting"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"amosting"},"content":"    mainClass.set(\"Launcher\")","lastModifiedDate":"2023-09-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"amosting"},"content":"    archiveBaseName \u003d \"Jarvis\"","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"amosting"},"content":"    archiveFileName \u003d \u0027Jarvis.jar\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"amosting"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"amosting":24,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"amosting"},"content":"# User Guide for Jarvis Personal Assistant Chatbot","lastModifiedDate":"2023-09-22"},{"lineNumber":2,"author":{"gitId":"amosting"},"content":"---","lastModifiedDate":"2023-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"amosting"},"content":"Jarvis is a Personal Assistant Chatbot that helps users to manage their day-to-day tasks.","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"amosting"},"content":"---","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"amosting"},"content":"### Creating Tasks","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"amosting"},"content":"You can request Jarvis to create 3 different types of tasks:","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"amosting"},"content":"- ***Todo*** - Tasks that are to be done regardless of time.","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"amosting"},"content":"- ***Event*** - Tasks that are to be done between specified date / time.","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"amosting"},"content":"- ***Deadline*** - Tasks that are to be done by a certain date / time.","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"amosting"},"content":"### Marking Tasks","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"amosting"},"content":"You can ask Jarvis to mark your tasks as done once you have completed it them.","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"amosting"},"content":"### Unchecking Tasks","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"amosting"},"content":"You can request Jarvis to uncheck your marked tasks if you realise the tasks is not done.","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"amosting"},"content":"### Listing Tasks","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"amosting"},"content":"You can ask Jarvis to list all existing tasks.","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"amosting"},"content":"### Deleting Tasks","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":29,"author":{"gitId":"amosting"},"content":"You can get Jarvis to delete existing tasks.","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":31,"author":{"gitId":"amosting"},"content":"### Finding Tasks","lastModifiedDate":"2023-09-22"},{"lineNumber":32,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"amosting"},"content":"You can request Jarvis to search through all your existing task and find task(s) that matches your search keyword.","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"amosting"},"content":"### Automatic Saving and Loading of Tasks","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"amosting"},"content":"Jarvis automatically saves tasks into a local file as you enter commands and automatically loads tasks when you start Jarvis.","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"amosting"},"content":"---","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"amosting"},"content":"### `todo` - Adds a new todo task","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"amosting"},"content":"Jarvis creates a todo task and adds it to the current list of tasks.","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"amosting"},"content":"***Format:***","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"amosting"},"content":"`todo DESCRIPTION PRIORITY`","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"amosting"},"content":"`DESCRIPTION`: Description of the todo task.","lastModifiedDate":"2023-09-22"},{"lineNumber":48,"author":{"gitId":"amosting"},"content":"`PRIORITY`: Priority of the todo task. It can only be low/medium/high.","lastModifiedDate":"2023-09-22"},{"lineNumber":49,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":50,"author":{"gitId":"amosting"},"content":"***Example of usage:***","lastModifiedDate":"2023-09-22"},{"lineNumber":51,"author":{"gitId":"amosting"},"content":"- Asking Jarvis to create a todo with description `build Mark III suit` and `medium` priority.","lastModifiedDate":"2023-09-22"},{"lineNumber":52,"author":{"gitId":"amosting"},"content":"  `todo build Mark III suit medium`","lastModifiedDate":"2023-09-22"},{"lineNumber":53,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":54,"author":{"gitId":"amosting"},"content":"***Expected outcome:***","lastModifiedDate":"2023-09-22"},{"lineNumber":55,"author":{"gitId":"amosting"},"content":"- A new todo created and added to the list of tasks.","lastModifiedDate":"2023-09-22"},{"lineNumber":56,"author":{"gitId":"amosting"},"content":"```  ","lastModifiedDate":"2023-09-22"},{"lineNumber":57,"author":{"gitId":"amosting"},"content":"As you please Sir, I\u0027ve added the task:","lastModifiedDate":"2023-09-22"},{"lineNumber":58,"author":{"gitId":"amosting"},"content":"\t[T][ ][M] build Mark III suit","lastModifiedDate":"2023-09-22"},{"lineNumber":59,"author":{"gitId":"amosting"},"content":"You have now 1 tasks in the list Sir.","lastModifiedDate":"2023-09-22"},{"lineNumber":60,"author":{"gitId":"amosting"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":61,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":62,"author":{"gitId":"amosting"},"content":"### `deadline` - Adds a new deadline task","lastModifiedDate":"2023-09-22"},{"lineNumber":63,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":64,"author":{"gitId":"amosting"},"content":"Jarvis creates a deadline task and adds it to the current list of tasks.","lastModifiedDate":"2023-09-22"},{"lineNumber":65,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":66,"author":{"gitId":"amosting"},"content":"***Format:***","lastModifiedDate":"2023-09-22"},{"lineNumber":67,"author":{"gitId":"amosting"},"content":"`deadline DESCRIPTION /BY PRIORITY`","lastModifiedDate":"2023-09-22"},{"lineNumber":68,"author":{"gitId":"amosting"},"content":"`DESCRIPTION`: Description of the todo task.","lastModifiedDate":"2023-09-22"},{"lineNumber":69,"author":{"gitId":"amosting"},"content":"`BY`: Date/time which the deadline task should be completed by.","lastModifiedDate":"2023-09-22"},{"lineNumber":70,"author":{"gitId":"amosting"},"content":"`PRIORITY`: Priority of the deadline task. It can only be low/medium/high.","lastModifiedDate":"2023-09-22"},{"lineNumber":71,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":72,"author":{"gitId":"amosting"},"content":"***Example of usage:***","lastModifiedDate":"2023-09-22"},{"lineNumber":73,"author":{"gitId":"amosting"},"content":"- Asking Jarvis to create a deadline with description `destroy Ultron` and `high` priority.","lastModifiedDate":"2023-09-22"},{"lineNumber":74,"author":{"gitId":"amosting"},"content":"  `todo destroy Ultron /by Monday 2pm high`","lastModifiedDate":"2023-09-22"},{"lineNumber":75,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":76,"author":{"gitId":"amosting"},"content":"***Expected outcome:***","lastModifiedDate":"2023-09-22"},{"lineNumber":77,"author":{"gitId":"amosting"},"content":"- A new deadline created and added to the list of tasks.","lastModifiedDate":"2023-09-22"},{"lineNumber":78,"author":{"gitId":"amosting"},"content":"```  ","lastModifiedDate":"2023-09-22"},{"lineNumber":79,"author":{"gitId":"amosting"},"content":"As you please Sir, I\u0027ve added the task:","lastModifiedDate":"2023-09-22"},{"lineNumber":80,"author":{"gitId":"amosting"},"content":"\t[D][ ][M] destroy Ultron (by: Monday 2pm)","lastModifiedDate":"2023-09-22"},{"lineNumber":81,"author":{"gitId":"amosting"},"content":"You have now 1 tasks in the list Sir.","lastModifiedDate":"2023-09-22"},{"lineNumber":82,"author":{"gitId":"amosting"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":83,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":84,"author":{"gitId":"amosting"},"content":"### `event` - Adds a new event task","lastModifiedDate":"2023-09-22"},{"lineNumber":85,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":86,"author":{"gitId":"amosting"},"content":"Jarvis creates a event task and adds it to the current list of tasks.","lastModifiedDate":"2023-09-22"},{"lineNumber":87,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":88,"author":{"gitId":"amosting"},"content":"***Format:***","lastModifiedDate":"2023-09-22"},{"lineNumber":89,"author":{"gitId":"amosting"},"content":"`event DESCRIPTION /from FROM /to TO PRIORITY`","lastModifiedDate":"2023-09-22"},{"lineNumber":90,"author":{"gitId":"amosting"},"content":"`DESCRIPTION`: Description of the todo task.","lastModifiedDate":"2023-09-22"},{"lineNumber":91,"author":{"gitId":"amosting"},"content":"`FROM`: Start date/time of the event task.","lastModifiedDate":"2023-09-22"},{"lineNumber":92,"author":{"gitId":"amosting"},"content":"`TO`: End date/time of the event task.","lastModifiedDate":"2023-09-22"},{"lineNumber":93,"author":{"gitId":"amosting"},"content":"`PRIORITY`: Priority of the event task. It can only be low/medium/high.","lastModifiedDate":"2023-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":95,"author":{"gitId":"amosting"},"content":"***Example of usage:***","lastModifiedDate":"2023-09-22"},{"lineNumber":96,"author":{"gitId":"amosting"},"content":"- Asking Jarvis to create a deadline with description `celebration for winning` and `low` priority.","lastModifiedDate":"2023-09-22"},{"lineNumber":97,"author":{"gitId":"amosting"},"content":"  `event celebration for winning /from Tuesday 6pm /to Wednesday 2am low`","lastModifiedDate":"2023-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":99,"author":{"gitId":"amosting"},"content":"***Expected outcome:***","lastModifiedDate":"2023-09-22"},{"lineNumber":100,"author":{"gitId":"amosting"},"content":"- A new event created and added to the list of tasks.","lastModifiedDate":"2023-09-22"},{"lineNumber":101,"author":{"gitId":"amosting"},"content":"```  ","lastModifiedDate":"2023-09-22"},{"lineNumber":102,"author":{"gitId":"amosting"},"content":"As you please Sir, I\u0027ve added the task:","lastModifiedDate":"2023-09-22"},{"lineNumber":103,"author":{"gitId":"amosting"},"content":"\t[E][ ][L] celebration for winning (from: Tuesday 6pm to: Wednesday 2am)","lastModifiedDate":"2023-09-22"},{"lineNumber":104,"author":{"gitId":"amosting"},"content":"You have now 1 tasks in the list Sir.","lastModifiedDate":"2023-09-22"},{"lineNumber":105,"author":{"gitId":"amosting"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":106,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":107,"author":{"gitId":"amosting"},"content":"### `mark` - Marks an existing task as done","lastModifiedDate":"2023-09-22"},{"lineNumber":108,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":109,"author":{"gitId":"amosting"},"content":"Jarvis marks the task with the specified index as done.","lastModifiedDate":"2023-09-22"},{"lineNumber":110,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":111,"author":{"gitId":"amosting"},"content":"***Format:***","lastModifiedDate":"2023-09-22"},{"lineNumber":112,"author":{"gitId":"amosting"},"content":"`mark INDEX`","lastModifiedDate":"2023-09-22"},{"lineNumber":113,"author":{"gitId":"amosting"},"content":"`INDEX`: Index of the task to be marked.","lastModifiedDate":"2023-09-22"},{"lineNumber":114,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":115,"author":{"gitId":"amosting"},"content":"***Example of usage:***","lastModifiedDate":"2023-09-22"},{"lineNumber":116,"author":{"gitId":"amosting"},"content":"- Asking Jarvis to mark the task with index `1` as done.","lastModifiedDate":"2023-09-22"},{"lineNumber":117,"author":{"gitId":"amosting"},"content":"  `mark 1`","lastModifiedDate":"2023-09-22"},{"lineNumber":118,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":119,"author":{"gitId":"amosting"},"content":"***Expected outcome:***","lastModifiedDate":"2023-09-22"},{"lineNumber":120,"author":{"gitId":"amosting"},"content":"- Task with index `1` is marked as done. Task marked done will have a visible `X` in the 2\u003csup\u003end\u003c/sup\u003e square bracket.","lastModifiedDate":"2023-09-22"},{"lineNumber":121,"author":{"gitId":"amosting"},"content":"```  ","lastModifiedDate":"2023-09-22"},{"lineNumber":122,"author":{"gitId":"amosting"},"content":"Roger that Sir, I\u0027ve marked this task as done:","lastModifiedDate":"2023-09-22"},{"lineNumber":123,"author":{"gitId":"amosting"},"content":"\t[T][X][M] build Mark III suit","lastModifiedDate":"2023-09-22"},{"lineNumber":124,"author":{"gitId":"amosting"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":125,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":126,"author":{"gitId":"amosting"},"content":"### `uncheck` - Unchecks an existing task marked as done","lastModifiedDate":"2023-09-22"},{"lineNumber":127,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":128,"author":{"gitId":"amosting"},"content":"Jarvis unchecks the task previously marked as done with the specified index as not done.","lastModifiedDate":"2023-09-22"},{"lineNumber":129,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":130,"author":{"gitId":"amosting"},"content":"***Format:***","lastModifiedDate":"2023-09-22"},{"lineNumber":131,"author":{"gitId":"amosting"},"content":"`uncheck INDEX`","lastModifiedDate":"2023-09-22"},{"lineNumber":132,"author":{"gitId":"amosting"},"content":"`INDEX`: Index of the task to be unchecked.","lastModifiedDate":"2023-09-22"},{"lineNumber":133,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":134,"author":{"gitId":"amosting"},"content":"***Example of usage:***","lastModifiedDate":"2023-09-22"},{"lineNumber":135,"author":{"gitId":"amosting"},"content":"- Asking Jarvis to uncheck the task with index `1` as not done.","lastModifiedDate":"2023-09-22"},{"lineNumber":136,"author":{"gitId":"amosting"},"content":"  `uncheck 1`","lastModifiedDate":"2023-09-22"},{"lineNumber":137,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":138,"author":{"gitId":"amosting"},"content":"***Expected outcome:***","lastModifiedDate":"2023-09-22"},{"lineNumber":139,"author":{"gitId":"amosting"},"content":"- Task with index `1` is marked as not done. Task marked not done will have an existing `X` in the 2\u003csup\u003end\u003c/sup\u003e square bracket removed.","lastModifiedDate":"2023-09-22"},{"lineNumber":140,"author":{"gitId":"amosting"},"content":"```  ","lastModifiedDate":"2023-09-22"},{"lineNumber":141,"author":{"gitId":"amosting"},"content":"Roger that Sir, I\u0027ve marked this task as done:","lastModifiedDate":"2023-09-22"},{"lineNumber":142,"author":{"gitId":"amosting"},"content":"\t[T][ ][M] build Mark III suit","lastModifiedDate":"2023-09-22"},{"lineNumber":143,"author":{"gitId":"amosting"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":144,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":145,"author":{"gitId":"amosting"},"content":"### `list` - Lists all existing tasks","lastModifiedDate":"2023-09-22"},{"lineNumber":146,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":147,"author":{"gitId":"amosting"},"content":"Jarvis lists all existing tasks.","lastModifiedDate":"2023-09-22"},{"lineNumber":148,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":149,"author":{"gitId":"amosting"},"content":"***Format:***","lastModifiedDate":"2023-09-22"},{"lineNumber":150,"author":{"gitId":"amosting"},"content":"`list` `","lastModifiedDate":"2023-09-22"},{"lineNumber":151,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":152,"author":{"gitId":"amosting"},"content":"***Example of usage:***","lastModifiedDate":"2023-09-22"},{"lineNumber":153,"author":{"gitId":"amosting"},"content":"- Asking Jarvis to list all existing tasks.","lastModifiedDate":"2023-09-22"},{"lineNumber":154,"author":{"gitId":"amosting"},"content":"  `list`","lastModifiedDate":"2023-09-22"},{"lineNumber":155,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":156,"author":{"gitId":"amosting"},"content":"***Expected outcome:***","lastModifiedDate":"2023-09-22"},{"lineNumber":157,"author":{"gitId":"amosting"},"content":"- A list of all existing tasks.","lastModifiedDate":"2023-09-22"},{"lineNumber":158,"author":{"gitId":"amosting"},"content":"```  ","lastModifiedDate":"2023-09-22"},{"lineNumber":159,"author":{"gitId":"amosting"},"content":"Roger that Sir, I\u0027ve marked this task as done:","lastModifiedDate":"2023-09-22"},{"lineNumber":160,"author":{"gitId":"amosting"},"content":"1.[T][ ][H] read book  ","lastModifiedDate":"2023-09-22"},{"lineNumber":161,"author":{"gitId":"amosting"},"content":"2.[T][X][H] read bible  ","lastModifiedDate":"2023-09-22"},{"lineNumber":162,"author":{"gitId":"amosting"},"content":"3.[D][ ][H] return book (by: Monday)  ","lastModifiedDate":"2023-09-22"},{"lineNumber":163,"author":{"gitId":"amosting"},"content":"4.[E][ ][H] project meeting (from: Monday 2pm to: 4pm)","lastModifiedDate":"2023-09-22"},{"lineNumber":164,"author":{"gitId":"amosting"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":166,"author":{"gitId":"amosting"},"content":"### `delete` - Deletes an existing task","lastModifiedDate":"2023-09-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":168,"author":{"gitId":"amosting"},"content":"Jarvis deletes the task with the specified index.","lastModifiedDate":"2023-09-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":170,"author":{"gitId":"amosting"},"content":"***Format:***","lastModifiedDate":"2023-09-22"},{"lineNumber":171,"author":{"gitId":"amosting"},"content":"`delete INDEX`","lastModifiedDate":"2023-09-22"},{"lineNumber":172,"author":{"gitId":"amosting"},"content":"`INDEX`: Index of the task to be deleted.","lastModifiedDate":"2023-09-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":174,"author":{"gitId":"amosting"},"content":"***Example of usage:***","lastModifiedDate":"2023-09-22"},{"lineNumber":175,"author":{"gitId":"amosting"},"content":"- Asking Jarvis to delete the task with index `1`.","lastModifiedDate":"2023-09-22"},{"lineNumber":176,"author":{"gitId":"amosting"},"content":"  `delete 1`","lastModifiedDate":"2023-09-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":178,"author":{"gitId":"amosting"},"content":"***Expected outcome:***","lastModifiedDate":"2023-09-22"},{"lineNumber":179,"author":{"gitId":"amosting"},"content":"- Task with index `1` is deleted. Deleted tasks will no longer appear when the command `list` is entered.","lastModifiedDate":"2023-09-22"},{"lineNumber":180,"author":{"gitId":"amosting"},"content":"```  ","lastModifiedDate":"2023-09-22"},{"lineNumber":181,"author":{"gitId":"amosting"},"content":"Alright Sir, I\u0027ve removed this task:","lastModifiedDate":"2023-09-22"},{"lineNumber":182,"author":{"gitId":"amosting"},"content":"\t[T][X][M] build Mark III suit","lastModifiedDate":"2023-09-22"},{"lineNumber":183,"author":{"gitId":"amosting"},"content":"You have now 2 tasks in the list Sir.","lastModifiedDate":"2023-09-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-09-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":186,"author":{"gitId":"amosting"},"content":"### `find` - Searches existing tasks","lastModifiedDate":"2023-09-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":188,"author":{"gitId":"amosting"},"content":"Jarvis finds all the task with the specified keyword.","lastModifiedDate":"2023-09-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":190,"author":{"gitId":"amosting"},"content":"***Format:***","lastModifiedDate":"2023-09-22"},{"lineNumber":191,"author":{"gitId":"amosting"},"content":"`find KEYWORD`","lastModifiedDate":"2023-09-22"},{"lineNumber":192,"author":{"gitId":"amosting"},"content":"`KEYWORD`: Keyword to be searched.","lastModifiedDate":"2023-09-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":194,"author":{"gitId":"amosting"},"content":"***Example of usage:***","lastModifiedDate":"2023-09-22"},{"lineNumber":195,"author":{"gitId":"amosting"},"content":"- Asking Jarvis to delete the task with index `1`.","lastModifiedDate":"2023-09-22"},{"lineNumber":196,"author":{"gitId":"amosting"},"content":"  `find book`","lastModifiedDate":"2023-09-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":198,"author":{"gitId":"amosting"},"content":"***Expected outcome:***","lastModifiedDate":"2023-09-22"},{"lineNumber":199,"author":{"gitId":"amosting"},"content":"- Task(s) with the containing the word \"search\" will be shown in a list.","lastModifiedDate":"2023-09-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"```  ","lastModifiedDate":"2021-07-17"},{"lineNumber":201,"author":{"gitId":"amosting"},"content":"Here are the matching task in your list Sir:","lastModifiedDate":"2023-09-22"},{"lineNumber":202,"author":{"gitId":"amosting"},"content":"1.[D][][M] return book (by: Monday)","lastModifiedDate":"2023-09-22"},{"lineNumber":203,"author":{"gitId":"amosting"},"content":"2.[T][][M] return book","lastModifiedDate":"2023-09-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"amosting":177,"-":27}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amosting"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"amosting"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"amosting"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"amosting"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"amosting"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"amosting"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"amosting"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"amosting"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"amosting"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"amosting"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"amosting"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"amosting"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"amosting"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"amosting"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"amosting"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"amosting"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"amosting"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"amosting"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"amosting"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"amosting"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"amosting"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"amosting"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"amosting"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"amosting"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"amosting"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"amosting"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"amosting"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"amosting"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"amosting"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"amosting"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"amosting"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"amosting"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"amosting"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"amosting"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"amosting"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"amosting"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"amosting"},"content":"    private void flip() {","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"amosting"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"amosting"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"amosting"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"amosting"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"amosting"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"amosting"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"amosting"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"amosting"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"amosting"},"content":"        db.flip();","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"amosting"},"content":"        return db;","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"amosting"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"amosting":59}},{"path":"src/main/java/Jarvis/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amosting"},"content":"package Jarvis;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"amosting"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"amosting"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"amosting"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"amosting"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"amosting"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"amosting"},"content":" * Represents a deadline task that extends the Task class.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"amosting"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"amosting"},"content":" *     The Deadline class is a subclass of the Task class and has 2 additional attributes, by and dateby.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"amosting"},"content":" *     By represents the time to complete the task by.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"amosting"},"content":" *     dateBy is by in a Java LocalDate if the formatting of by is correct.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"amosting"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"amosting"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"amosting"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"amosting"},"content":"    protected String by;","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"amosting"},"content":"    protected LocalDate dateBy;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"amosting"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"amosting"},"content":"     * Constructs a new Deadline object.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"amosting"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"amosting"},"content":"     * @param description description of the deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"amosting"},"content":"     * @param by when to complete the task by.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"amosting"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"amosting"},"content":"    public Deadline(String description, String by, String priority) {","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"amosting"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"amosting"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"amosting"},"content":"        this.priority \u003d mapPriority(priority);","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"amosting"},"content":"        stringToDate();","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"amosting"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"amosting"},"content":"     * Checks and converts the by string to a valid Java LocalDate if the format is correct","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"amosting"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"amosting"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"amosting"},"content":"    public void stringToDate() {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"amosting"},"content":"        Pattern datePattern \u003d Pattern.compile(","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"amosting"},"content":"                \"^((2000|2400|2800|(19|2[0-9])(0[48]|[2468][048]|[13579][26]))-02-29)$\"","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"amosting"},"content":"                        + \"|^(((19|2[0-9])[0-9]{2})-02-(0[1-9]|1[0-9]|2[0-8]))$\"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"amosting"},"content":"                        + \"|^(((19|2[0-9])[0-9]{2})-(0[13578]|10|12)-(0[1-9]|[12][0-9]|3[01]))$\"","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"amosting"},"content":"                        + \"|^(((19|2[0-9])[0-9]{2})-(0[469]|11)-(0[1-9]|[12][0-9]|30))$\");","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"amosting"},"content":"        Matcher dateTimeMatcher \u003d datePattern.matcher(this.by);","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"amosting"},"content":"        if (!dateTimeMatcher.matches()) { // if datetime doesn\u0027t match, do nothing","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"amosting"},"content":"            this.dateBy \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"amosting"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"amosting"},"content":"            Pattern dateTimePattern2 \u003d Pattern.compile(","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"amosting"},"content":"                    \"(\\\\d{4})-(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[0-2])\"); // YYYY-MM-DD","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"amosting"},"content":"            Matcher dateTimePattern2Matcher \u003d dateTimePattern2.matcher(this.by);","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"amosting"},"content":"            dateTimePattern2Matcher.matches();","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"amosting"},"content":"            int day \u003d Integer.parseInt(dateTimePattern2Matcher.group(3));","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"amosting"},"content":"            int month \u003d Integer.parseInt(dateTimePattern2Matcher.group(2));","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"amosting"},"content":"            int year \u003d Integer.parseInt(dateTimePattern2Matcher.group(1));","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"amosting"},"content":"            this.dateBy \u003d LocalDate.of(year, month, day);","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"amosting"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"amosting"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"amosting"},"content":"     * Converts the task to a user-friendly string representation","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"amosting"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"amosting"},"content":"     * @return A string representation of the task","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"amosting"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"amosting"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":66,"author":{"gitId":"amosting"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"amosting"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"amosting"},"content":"        if (dateBy \u003d\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"amosting"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"amosting"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"amosting"},"content":"            String formattedDate \u003d this.dateBy.format(formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"amosting"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"amosting"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"amosting"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"amosting":75}},{"path":"src/main/java/Jarvis/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amosting"},"content":"package Jarvis;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"amosting"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"amosting"},"content":" * Represents an event task with a start time and an end time.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"amosting"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"amosting"},"content":" *     The Event class is a subclass of the Task class and has 2 additional attributes,","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"amosting"},"content":" *     from and to, the represent the start time and end time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"amosting"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"amosting"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"amosting"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"amosting"},"content":"    protected String from;","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"amosting"},"content":"    protected String to;","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"amosting"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"amosting"},"content":"     * Constructs a new Event object.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"amosting"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"amosting"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"amosting"},"content":"     * @param from The starting time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"amosting"},"content":"     * @param to The ending time of the event.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"amosting"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"amosting"},"content":"    public Event(String description, String from, String to, String priority) {","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"amosting"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"amosting"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"amosting"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"amosting"},"content":"        this.priority \u003d mapPriority(priority);","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"amosting"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"amosting"},"content":"     * Converts the task to a user-friendly string representation.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"amosting"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"amosting"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"amosting"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"amosting"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"amosting"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"amosting"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"amosting"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"amosting":37}},{"path":"src/main/java/Jarvis/IncorrectJarvisCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amosting"},"content":"package Jarvis;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"amosting"},"content":"public class IncorrectJarvisCommandException extends JarvisException {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"amosting"},"content":"    public IncorrectJarvisCommandException(String errorMsg) {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"amosting"},"content":"        super(errorMsg);","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"amosting"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"amosting":7}},{"path":"src/main/java/Jarvis/InvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amosting"},"content":"package Jarvis;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"amosting"},"content":"public class InvalidTaskNumberException extends JarvisException {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"amosting"},"content":"    public InvalidTaskNumberException(String errorMsg) {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"amosting"},"content":"        super(errorMsg);","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"amosting"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"amosting":7}},{"path":"src/main/java/Jarvis/Jarvis.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amosting"},"content":"package Jarvis;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"amosting"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"amosting"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"amosting"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"amosting"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"amosting"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"amosting"},"content":" * Main application class for the Jarvis chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"amosting"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"amosting"},"content":" *     This class is responsible initialising the task list, loading and saving tasks in storage and","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"amosting"},"content":" *     running the main event loop of the application. It delegates command parsing to the Parser class and storage","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"amosting"},"content":" *     operations to the Storage class.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"amosting"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"amosting"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"amosting"},"content":"public class Jarvis {","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"amosting"},"content":"    private static TaskList tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"amosting"},"content":"    private static Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"amosting"},"content":"    private static Parser parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"amosting"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"amosting"},"content":"     * Constructs a new Jarvis chatbot.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"amosting"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"amosting"},"content":"     * @param filePath Path of the file to store the task data in.","lastModifiedDate":"2023-09-26"},{"lineNumber":25,"author":{"gitId":"amosting"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"amosting"},"content":"    public Jarvis(String filePath) {","lastModifiedDate":"2023-09-26"},{"lineNumber":27,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"amosting"},"content":"        assert !filePath.isEmpty() : \"filePath cannot be empty\";","lastModifiedDate":"2023-09-26"},{"lineNumber":29,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"amosting"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-26"},{"lineNumber":31,"author":{"gitId":"amosting"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"amosting"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"amosting"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"amosting"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"amosting"},"content":"            return parser.parseCommand(storage, tasks, input);","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"amosting"},"content":"        } catch (IncorrectJarvisCommandException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"amosting"},"content":"            return Ui.getListOfCommands(parser.validCommands, e);","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"amosting"},"content":"        } catch (InvalidTaskNumberException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"amosting"},"content":"            return Ui.respond(e.getMessage() + \"\\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"amosting"},"content":"                    \"    There are currently \" + tasks.countTask() + \" tasks in the list.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"amosting"},"content":"        } catch (WrongJarvisCommandFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"amosting"},"content":"            return Ui.respond(\"\");","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"amosting"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"amosting"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"amosting":47}},{"path":"src/main/java/Jarvis/JarvisException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amosting"},"content":"package Jarvis;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"amosting"},"content":"public class JarvisException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"amosting"},"content":"    public JarvisException(String errorMsg) {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"amosting"},"content":"        super(errorMsg);","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"amosting"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"amosting":7}},{"path":"src/main/java/Jarvis/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amosting"},"content":"package Jarvis;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"amosting"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"amosting"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"amosting"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"amosting"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"amosting"},"content":" * Responsible for parsing user input, executing commands and handling any exceptions","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"amosting"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"amosting"},"content":" *     This class takes care of interpreting user commands and then calling the appropriate methods to perform","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"amosting"},"content":" *     the actions described by those commands. It also handles any exceptions and calls the appropriate methods","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"amosting"},"content":" *     to print the details of the exception for the user to read.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"amosting"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"amosting"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"amosting"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"amosting"},"content":"    protected ArrayList\u003cString\u003e validCommands; // list of valid commands","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"amosting"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"amosting"},"content":"     * Constructs a new Parser object.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"amosting"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"amosting"},"content":"    public Parser() {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"amosting"},"content":"        validCommands \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"amosting"},"content":"        addValidCommands();","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"amosting"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"amosting"},"content":"     * Adds the list of valid commands into the validCommands ArrayList.","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"amosting"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"amosting"},"content":"    private void addValidCommands() {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"amosting"},"content":"        validCommands.add(\"list\");","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"amosting"},"content":"        validCommands.add(\"bye\");","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"amosting"},"content":"        validCommands.add(\"mark\");","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"amosting"},"content":"        validCommands.add(\"uncheck\");","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"amosting"},"content":"        validCommands.add(\"todo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"amosting"},"content":"        validCommands.add(\"deadline\");","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"amosting"},"content":"        validCommands.add(\"event\");","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"amosting"},"content":"        validCommands.add(\"find\");","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"amosting"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":41,"author":{"gitId":"amosting"},"content":"     * Parses the priority string provided by the user to a string understandable by the program","lastModifiedDate":"2023-09-14"},{"lineNumber":42,"author":{"gitId":"amosting"},"content":"     * @param priority contains priority of the task, either low, medium or high","lastModifiedDate":"2023-09-14"},{"lineNumber":43,"author":{"gitId":"amosting"},"content":"     * @return L, M or H representing low, medium or high respectively","lastModifiedDate":"2023-09-14"},{"lineNumber":44,"author":{"gitId":"amosting"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"amosting"},"content":"    private String parsePriority(String priority) {","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"amosting"},"content":"        if (priority.equals(\"low\")) {","lastModifiedDate":"2023-09-14"},{"lineNumber":47,"author":{"gitId":"amosting"},"content":"            return \"L\";","lastModifiedDate":"2023-09-14"},{"lineNumber":48,"author":{"gitId":"amosting"},"content":"        } else if (priority.equals(\"medium\")) {","lastModifiedDate":"2023-09-14"},{"lineNumber":49,"author":{"gitId":"amosting"},"content":"            return \"M\";","lastModifiedDate":"2023-09-14"},{"lineNumber":50,"author":{"gitId":"amosting"},"content":"        } else {","lastModifiedDate":"2023-09-14"},{"lineNumber":51,"author":{"gitId":"amosting"},"content":"            return \"H\";","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"amosting"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":55,"author":{"gitId":"amosting"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"amosting"},"content":"     * checks if the user inputted a valid command in the validCommand ArrayList.","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"amosting"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"amosting"},"content":"     * @param inputCommand commands that the user inputs.","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"amosting"},"content":"     * @return the valid command that the user inputted, an empty string otherwise.","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"amosting"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"amosting"},"content":"    // checks if command is valid and throws Jarvis.IncorrectJarvisCommandException","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"amosting"},"content":"    private String isValidCommand(String inputCommand) {","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"amosting"},"content":"        assert !inputCommand.isEmpty() : \"inputCommand parameter in isValidCommand() is an empty string\";","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"amosting"},"content":"        // check if command is one of the valid keywords","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"amosting"},"content":"        boolean isValidCommand \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"amosting"},"content":"        String validInputCommand \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"amosting"},"content":"        for (String validCommand: validCommands) {","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"amosting"},"content":"            if (inputCommand.contains(validCommand)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"amosting"},"content":"                isValidCommand \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"amosting"},"content":"                validInputCommand \u003d validCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"amosting"},"content":"                break;","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"amosting"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"amosting"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"amosting"},"content":"        if (!isValidCommand) {","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"amosting"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"amosting"},"content":"                throw new IncorrectJarvisCommandException(","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"amosting"},"content":"                        \"Apologies Sir, the command \" + inputCommand + \" is not a valid command.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"amosting"},"content":"            } catch (IncorrectJarvisCommandException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"amosting"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"amosting"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"amosting"},"content":"        return validInputCommand;","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"amosting"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"amosting"},"content":"     * checks if the command the user inputted has a wrong format, if the format of the command is wrong,","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"amosting"},"content":"     * print the details to the screen for the user to know how to correct it. This method assumes that","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"amosting"},"content":"     * isValidCommand has been run before this and the user has used a valid command. It just checks if","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"amosting"},"content":"     * the formatting of the command is correct.","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"amosting"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"amosting"},"content":"     * @param inputCommand the command the user inputted","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"amosting"},"content":"     * @param validInputCommand the valid command which the user inputted","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"amosting"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"amosting"},"content":"    // identifies which command has wrong formatting and prints feedback to user","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"amosting"},"content":"    public String isWrongFormat(String inputCommand, String validInputCommand) {","lastModifiedDate":"2023-09-13"},{"lineNumber":100,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":101,"author":{"gitId":"amosting"},"content":"        assert !inputCommand.isEmpty() : \"inputCommand parameter in isWrongFormat() is an empty string\";","lastModifiedDate":"2023-09-13"},{"lineNumber":102,"author":{"gitId":"amosting"},"content":"        assert !validInputCommand.isEmpty() : \"validInputCommand parameter in isWrongFormat() is an empty string\";","lastModifiedDate":"2023-09-13"},{"lineNumber":103,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":104,"author":{"gitId":"amosting"},"content":"        // since command is valid, check if formatting of the command is correct","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"amosting"},"content":"        boolean markMatch \u003d inputCommand.matches(\"mark \\\\d+\");","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"amosting"},"content":"        boolean uncheckMatch \u003d inputCommand.matches(\"unmark \\\\d+\");","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"amosting"},"content":"        boolean todoMatch \u003d inputCommand.matches(\"todo .+ (low|medium|high)\");","lastModifiedDate":"2023-09-22"},{"lineNumber":108,"author":{"gitId":"amosting"},"content":"        boolean deadlineMatch \u003d inputCommand.matches(\"deadline .+ /.+ (low|medium|high)\");","lastModifiedDate":"2023-09-22"},{"lineNumber":109,"author":{"gitId":"amosting"},"content":"        boolean eventMatch \u003d inputCommand.matches(\"event .+ /.+ /.+ (low|medium|high)\");","lastModifiedDate":"2023-09-22"},{"lineNumber":110,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"amosting"},"content":"        if (validInputCommand.equals(\"mark\") \u0026\u0026 !markMatch) { // if mark command but wrong format","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"amosting"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"amosting"},"content":"                throw new WrongJarvisCommandFormatException(","lastModifiedDate":"2023-09-05"},{"lineNumber":114,"author":{"gitId":"amosting"},"content":"                        \"Apologies Sir, the format of the mark command you provided is incorrect.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"amosting"},"content":"            } catch (WrongJarvisCommandFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"amosting"},"content":"                return Ui.getWrongFormatMessage(\"mark\", e);","lastModifiedDate":"2023-09-07"},{"lineNumber":117,"author":{"gitId":"amosting"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"amosting"},"content":"        } else if (validInputCommand.equals(\"uncheck\") \u0026\u0026 !uncheckMatch) { // if uncheck command but wrong format","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"amosting"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"amosting"},"content":"                throw new WrongJarvisCommandFormatException(","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"amosting"},"content":"                        \"Apologies Sir, the format of the uncheck command you provided is incorrect.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"amosting"},"content":"            } catch (WrongJarvisCommandFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"amosting"},"content":"                return Ui.getWrongFormatMessage(\"uncheck\", e);","lastModifiedDate":"2023-09-07"},{"lineNumber":124,"author":{"gitId":"amosting"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"amosting"},"content":"        } else if (validInputCommand.equals(\"todo\") \u0026\u0026 !todoMatch) { // if todo command but wrong format","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"amosting"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"amosting"},"content":"                throw new WrongJarvisCommandFormatException(","lastModifiedDate":"2023-09-05"},{"lineNumber":128,"author":{"gitId":"amosting"},"content":"                        \"Apologies Sir, the format of the todo command you provided is incorrect.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":129,"author":{"gitId":"amosting"},"content":"            } catch (WrongJarvisCommandFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"amosting"},"content":"                return Ui.getWrongFormatMessage(\"todo\", e);","lastModifiedDate":"2023-09-07"},{"lineNumber":131,"author":{"gitId":"amosting"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"amosting"},"content":"        } else if (validInputCommand.equals(\"deadline\") \u0026\u0026 !deadlineMatch) { // if deadline command but wrong format","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"amosting"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"amosting"},"content":"                throw new WrongJarvisCommandFormatException(","lastModifiedDate":"2023-09-05"},{"lineNumber":135,"author":{"gitId":"amosting"},"content":"                        \"Apologies Sir, the format of the deadline command you provided is incorrect.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":136,"author":{"gitId":"amosting"},"content":"            } catch (WrongJarvisCommandFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"amosting"},"content":"                return Ui.getWrongFormatMessage(\"deadline\", e);","lastModifiedDate":"2023-09-07"},{"lineNumber":138,"author":{"gitId":"amosting"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"amosting"},"content":"        } else { // if event command but wrong format","lastModifiedDate":"2023-09-07"},{"lineNumber":140,"author":{"gitId":"amosting"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"amosting"},"content":"                throw new WrongJarvisCommandFormatException(","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"amosting"},"content":"                        \"Apologies Sir, the format of the event command you provided is incorrect.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":143,"author":{"gitId":"amosting"},"content":"            } catch (WrongJarvisCommandFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"amosting"},"content":"                return Ui.getWrongFormatMessage(\"event\", e);","lastModifiedDate":"2023-09-07"},{"lineNumber":145,"author":{"gitId":"amosting"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"amosting"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"amosting"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":150,"author":{"gitId":"amosting"},"content":"     * Parses and executes command specified in the given user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":151,"author":{"gitId":"amosting"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":152,"author":{"gitId":"amosting"},"content":"     * @param storage The storage object responsible for task storage operations.","lastModifiedDate":"2023-09-01"},{"lineNumber":153,"author":{"gitId":"amosting"},"content":"     * @param tasks The task list that holds all tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":154,"author":{"gitId":"amosting"},"content":"     * @param userInput The string input from the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":155,"author":{"gitId":"amosting"},"content":"     * @throws IncorrectJarvisCommandException If the command is incorrect.","lastModifiedDate":"2023-09-01"},{"lineNumber":156,"author":{"gitId":"amosting"},"content":"     * @throws InvalidTaskNumberException If the task number is out of the range of the number of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":157,"author":{"gitId":"amosting"},"content":"     * @throws WrongJarvisCommandFormatException If the command is correct but its formatted incorrectly.","lastModifiedDate":"2023-09-01"},{"lineNumber":158,"author":{"gitId":"amosting"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":159,"author":{"gitId":"amosting"},"content":"    public String parseCommand(Storage storage, TaskList tasks, String userInput) throws","lastModifiedDate":"2023-09-13"},{"lineNumber":160,"author":{"gitId":"amosting"},"content":"            IncorrectJarvisCommandException, InvalidTaskNumberException, WrongJarvisCommandFormatException {","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":162,"author":{"gitId":"amosting"},"content":"        Pattern todoPattern \u003d Pattern.compile(\"(todo) (.+) (low|medium|high)\");","lastModifiedDate":"2023-09-14"},{"lineNumber":163,"author":{"gitId":"amosting"},"content":"        Pattern deadlinePattern \u003d Pattern.compile(\"(deadline) (.+) /by (.+) (low|medium|high)\");","lastModifiedDate":"2023-09-14"},{"lineNumber":164,"author":{"gitId":"amosting"},"content":"        Pattern eventPattern \u003d Pattern.compile(\"(event) (.+) /from (.+) /to (.+) (low|medium|high)\");","lastModifiedDate":"2023-09-14"},{"lineNumber":165,"author":{"gitId":"amosting"},"content":"        Pattern deletePattern \u003d Pattern.compile(\"(delete) (\\\\d+)\");","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"amosting"},"content":"        Pattern findPattern \u003d Pattern.compile(\"(find) (.+)\");","lastModifiedDate":"2023-09-01"},{"lineNumber":167,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"amosting"},"content":"        Matcher todoMatcher \u003d todoPattern.matcher(userInput);","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"amosting"},"content":"        Matcher deadlineMatcher \u003d deadlinePattern.matcher(userInput);","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"amosting"},"content":"        Matcher eventMatcher \u003d eventPattern.matcher(userInput);","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"amosting"},"content":"        Matcher deleteMatcher \u003d deletePattern.matcher(userInput);","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"amosting"},"content":"        Matcher findMatcher \u003d findPattern.matcher(userInput);","lastModifiedDate":"2023-09-01"},{"lineNumber":173,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"amosting"},"content":"        String nameOfValidCommand \u003d isValidCommand(userInput);","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"amosting"},"content":"        if (userInput.matches(\"list\")) { // if \"list\" is entered","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"amosting"},"content":"            return Ui.getTaskList(tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":178,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"amosting"},"content":"        } else if (userInput.matches(\"bye\")) { // if \"bye\" is entered","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"amosting"},"content":"            storage.deleteContents();","lastModifiedDate":"2023-09-07"},{"lineNumber":181,"author":{"gitId":"amosting"},"content":"            storage.save(tasks); // save task list to data file after bye is entered","lastModifiedDate":"2023-09-07"},{"lineNumber":182,"author":{"gitId":"amosting"},"content":"            return Ui.getByeMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":183,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":184,"author":{"gitId":"amosting"},"content":"        } else if (userInput.matches(\"mark \\\\d+\")","lastModifiedDate":"2023-09-05"},{"lineNumber":185,"author":{"gitId":"amosting"},"content":"                || userInput.matches(\"uncheck \\\\d+\")) { // if \"mark\" or \"uncheck\" is entered","lastModifiedDate":"2023-09-05"},{"lineNumber":186,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":187,"author":{"gitId":"amosting"},"content":"            int taskNum \u003d Integer.parseInt(userInput.substring(userInput.length() - 1));","lastModifiedDate":"2023-08-31"},{"lineNumber":188,"author":{"gitId":"amosting"},"content":"            if (!tasks.isValidTaskNumber(taskNum)) {","lastModifiedDate":"2023-09-07"},{"lineNumber":189,"author":{"gitId":"amosting"},"content":"                return null;","lastModifiedDate":"2023-09-07"},{"lineNumber":190,"author":{"gitId":"amosting"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":191,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":192,"author":{"gitId":"amosting"},"content":"            Task currentTask \u003d tasks.getTask(taskNum - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":193,"author":{"gitId":"amosting"},"content":"            if (userInput.matches(\"uncheck \\\\d+\")) { // if \"uncheck\" is entered","lastModifiedDate":"2023-08-31"},{"lineNumber":194,"author":{"gitId":"amosting"},"content":"                currentTask.setDone(false);","lastModifiedDate":"2023-08-31"},{"lineNumber":195,"author":{"gitId":"amosting"},"content":"                return Ui.getUncheckMessage(currentTask);","lastModifiedDate":"2023-09-07"},{"lineNumber":196,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":197,"author":{"gitId":"amosting"},"content":"            } else { // if \"mark\" is entered","lastModifiedDate":"2023-08-31"},{"lineNumber":198,"author":{"gitId":"amosting"},"content":"                currentTask.setDone(true);","lastModifiedDate":"2023-08-31"},{"lineNumber":199,"author":{"gitId":"amosting"},"content":"                return Ui.getMarkMessage(currentTask);","lastModifiedDate":"2023-09-07"},{"lineNumber":200,"author":{"gitId":"amosting"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":201,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":202,"author":{"gitId":"amosting"},"content":"        } else if (todoMatcher.matches()","lastModifiedDate":"2023-09-05"},{"lineNumber":203,"author":{"gitId":"amosting"},"content":"                || deadlineMatcher.matches()","lastModifiedDate":"2023-09-05"},{"lineNumber":204,"author":{"gitId":"amosting"},"content":"                || eventMatcher.matches()) { // if task command is entered","lastModifiedDate":"2023-09-05"},{"lineNumber":205,"author":{"gitId":"amosting"},"content":"            Task newTask;","lastModifiedDate":"2023-08-31"},{"lineNumber":206,"author":{"gitId":"amosting"},"content":"            if (todoMatcher.matches()) { // if \"todo\" is entered","lastModifiedDate":"2023-08-31"},{"lineNumber":207,"author":{"gitId":"amosting"},"content":"                String taskDescription \u003d todoMatcher.group(2);","lastModifiedDate":"2023-08-31"},{"lineNumber":208,"author":{"gitId":"amosting"},"content":"                String priority \u003d todoMatcher.group(3);","lastModifiedDate":"2023-09-14"},{"lineNumber":209,"author":{"gitId":"amosting"},"content":"                newTask \u003d new ToDo(taskDescription, parsePriority(priority));","lastModifiedDate":"2023-09-14"},{"lineNumber":210,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":211,"author":{"gitId":"amosting"},"content":"            } else if (deadlineMatcher.matches()) { // if \"deadline\" is entered","lastModifiedDate":"2023-08-31"},{"lineNumber":212,"author":{"gitId":"amosting"},"content":"                String taskDescription \u003d deadlineMatcher.group(2);","lastModifiedDate":"2023-08-31"},{"lineNumber":213,"author":{"gitId":"amosting"},"content":"                String by \u003d deadlineMatcher.group(3);","lastModifiedDate":"2023-08-31"},{"lineNumber":214,"author":{"gitId":"amosting"},"content":"                String priority \u003d deadlineMatcher.group(4);","lastModifiedDate":"2023-09-14"},{"lineNumber":215,"author":{"gitId":"amosting"},"content":"                newTask \u003d new Deadline(taskDescription, by, parsePriority(priority));","lastModifiedDate":"2023-09-14"},{"lineNumber":216,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":217,"author":{"gitId":"amosting"},"content":"            } else { // if \"event\" is entered","lastModifiedDate":"2023-08-31"},{"lineNumber":218,"author":{"gitId":"amosting"},"content":"                String taskDescription \u003d eventMatcher.group(2);","lastModifiedDate":"2023-08-31"},{"lineNumber":219,"author":{"gitId":"amosting"},"content":"                String from \u003d eventMatcher.group(3);","lastModifiedDate":"2023-08-31"},{"lineNumber":220,"author":{"gitId":"amosting"},"content":"                String to \u003d eventMatcher.group(4);","lastModifiedDate":"2023-08-31"},{"lineNumber":221,"author":{"gitId":"amosting"},"content":"                String priority \u003d eventMatcher.group(5);","lastModifiedDate":"2023-09-14"},{"lineNumber":222,"author":{"gitId":"amosting"},"content":"                newTask \u003d new Event(taskDescription, from, to, parsePriority(priority));","lastModifiedDate":"2023-09-14"},{"lineNumber":223,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":224,"author":{"gitId":"amosting"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":225,"author":{"gitId":"amosting"},"content":"            tasks.appendTask(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":226,"author":{"gitId":"amosting"},"content":"            return Ui.getTaskMessage(newTask, tasks);","lastModifiedDate":"2023-09-22"},{"lineNumber":227,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":228,"author":{"gitId":"amosting"},"content":"        } else if (deleteMatcher.matches()) { // if delete is entered","lastModifiedDate":"2023-08-31"},{"lineNumber":229,"author":{"gitId":"amosting"},"content":"            int taskNum \u003d Integer.parseInt(deleteMatcher.group(2));","lastModifiedDate":"2023-08-31"},{"lineNumber":230,"author":{"gitId":"amosting"},"content":"            if (tasks.isValidTaskNumber(taskNum)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":231,"author":{"gitId":"amosting"},"content":"                tasks.deleteTask(taskNum - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":232,"author":{"gitId":"amosting"},"content":"                Task deletedTask \u003d tasks.getTask(taskNum);","lastModifiedDate":"2023-09-22"},{"lineNumber":233,"author":{"gitId":"amosting"},"content":"                return Ui.getDeleteMessage(deletedTask ,tasks);","lastModifiedDate":"2023-09-22"},{"lineNumber":234,"author":{"gitId":"amosting"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":235,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":236,"author":{"gitId":"amosting"},"content":"        } else if (findMatcher.matches()) { // if find is entered","lastModifiedDate":"2023-09-01"},{"lineNumber":237,"author":{"gitId":"amosting"},"content":"            String keyword \u003d findMatcher.group(2);","lastModifiedDate":"2023-09-01"},{"lineNumber":238,"author":{"gitId":"amosting"},"content":"            return Ui.getFoundTaskMessage(tasks.findTask(keyword));","lastModifiedDate":"2023-09-07"},{"lineNumber":239,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":240,"author":{"gitId":"amosting"},"content":"        } else { // if none of the above commands go through","lastModifiedDate":"2023-09-07"},{"lineNumber":241,"author":{"gitId":"amosting"},"content":"            return isWrongFormat(userInput, nameOfValidCommand);","lastModifiedDate":"2023-09-07"},{"lineNumber":242,"author":{"gitId":"amosting"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":243,"author":{"gitId":"amosting"},"content":"        return null;","lastModifiedDate":"2023-09-07"},{"lineNumber":244,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":245,"author":{"gitId":"amosting"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"amosting":245}},{"path":"src/main/java/Jarvis/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amosting"},"content":"package Jarvis;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"amosting"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"amosting"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"amosting"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"amosting"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"amosting"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"amosting"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"amosting"},"content":"    private String filePath;","lastModifiedDate":"2023-09-26"},{"lineNumber":11,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"amosting"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"amosting"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"amosting"},"content":"    // load data from dataFile","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"amosting"},"content":"    public String load() {","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"amosting"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2023-09-26"},{"lineNumber":19,"author":{"gitId":"amosting"},"content":"        String fullData \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"amosting"},"content":"        try {","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"amosting"},"content":"            if (file.exists()) {","lastModifiedDate":"2023-09-26"},{"lineNumber":22,"author":{"gitId":"amosting"},"content":"                BufferedReader reader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-09-26"},{"lineNumber":23,"author":{"gitId":"amosting"},"content":"                String line;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":25,"author":{"gitId":"amosting"},"content":"                while ((line \u003d reader.readLine()) !\u003d null) { // append each line and a \\n  to the fullData variable","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"amosting"},"content":"                    if (fullData.equals(\"\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"amosting"},"content":"                        fullData \u003d line;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"amosting"},"content":"                    } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"amosting"},"content":"                        fullData \u003d fullData + \"\\n\" + line;","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"amosting"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"amosting"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"amosting"},"content":"                reader.close();","lastModifiedDate":"2023-09-26"},{"lineNumber":33,"author":{"gitId":"amosting"},"content":"            } else {","lastModifiedDate":"2023-09-26"},{"lineNumber":34,"author":{"gitId":"amosting"},"content":"                boolean fileCreated \u003d file.createNewFile();","lastModifiedDate":"2023-09-26"},{"lineNumber":35,"author":{"gitId":"amosting"},"content":"            }","lastModifiedDate":"2023-09-26"},{"lineNumber":36,"author":{"gitId":"amosting"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"amosting"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"amosting"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"amosting"},"content":"        return fullData;","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"amosting"},"content":"    // delete contents in dataFile","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"amosting"},"content":"    public void deleteContents() {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"amosting"},"content":"        try (FileWriter writer \u003d new FileWriter(this.filePath)) {","lastModifiedDate":"2023-09-26"},{"lineNumber":45,"author":{"gitId":"amosting"},"content":"            // Write an empty string to the file","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"amosting"},"content":"            writer.write(\"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"amosting"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"amosting"},"content":"            System.err.println(\"An error occurred: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"amosting"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"amosting"},"content":"    // write tasks in taskList to dateFile","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"amosting"},"content":"    public void save(TaskList tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"amosting"},"content":"        for (int i \u003d 0; i \u003c tasks.countTask(); i++) { // writing the string of each task to the data file","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"amosting"},"content":"            Task currentTask \u003d tasks.getTask(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"amosting"},"content":"            try (FileWriter dataFileWriter \u003d new FileWriter(this.filePath, true)) {","lastModifiedDate":"2023-09-26"},{"lineNumber":57,"author":{"gitId":"amosting"},"content":"                dataFileWriter.write(currentTask.toString() + \"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"amosting"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"amosting"},"content":"                System.err.println(\"An error occurred: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"amosting"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"amosting"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"amosting"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"amosting":63}},{"path":"src/main/java/Jarvis/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amosting"},"content":"package Jarvis;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"amosting"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"amosting"},"content":" * Abstract class representing a task.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"amosting"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"amosting"},"content":" *     This class serves as the parent for different types of tasks to inherit from and encapsulates","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"amosting"},"content":" *     the basic information and operations related to a task.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"amosting"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"amosting"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"amosting"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"amosting"},"content":"    protected String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"amosting"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"amosting"},"content":"    protected priorityLevels priority;","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"amosting"},"content":"    protected enum priorityLevels {","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"amosting"},"content":"        LOW,","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"amosting"},"content":"        MEDIUM,","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"amosting"},"content":"        HIGH","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"amosting"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"amosting"},"content":"     * Constructs a new Task with the given description","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"amosting"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"amosting"},"content":"     * @param description The description of the task","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"amosting"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"amosting"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":27,"author":{"gitId":"amosting"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"amosting"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"amosting"},"content":"    /**","lastModifiedDate":"2023-09-14"},{"lineNumber":32,"author":{"gitId":"amosting"},"content":"     * Maps the priority given to its respective enum value","lastModifiedDate":"2023-09-14"},{"lineNumber":33,"author":{"gitId":"amosting"},"content":"     * @param priority String representing the priority, either L, M or H","lastModifiedDate":"2023-09-14"},{"lineNumber":34,"author":{"gitId":"amosting"},"content":"     * @return the corresponding enum value","lastModifiedDate":"2023-09-14"},{"lineNumber":35,"author":{"gitId":"amosting"},"content":"     */","lastModifiedDate":"2023-09-14"},{"lineNumber":36,"author":{"gitId":"amosting"},"content":"    public priorityLevels mapPriority(String priority) {","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"amosting"},"content":"        if (priority.equals(\"L\")) {","lastModifiedDate":"2023-09-14"},{"lineNumber":38,"author":{"gitId":"amosting"},"content":"            return priorityLevels.LOW;","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"amosting"},"content":"        } else if (priority.equals(\"M\")) {","lastModifiedDate":"2023-09-14"},{"lineNumber":40,"author":{"gitId":"amosting"},"content":"            return priorityLevels.MEDIUM;","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"amosting"},"content":"        } else {","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"amosting"},"content":"            return priorityLevels.HIGH;","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"amosting"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"amosting"},"content":"    public void setPriority(String priority) {","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"amosting"},"content":"        this.priority \u003d mapPriority(priority);","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"amosting"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"amosting"},"content":"     * Sets if the task is done or not","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"amosting"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"amosting"},"content":"     * @param done true if task is done, false otherwise","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"amosting"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"amosting"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"amosting"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"amosting"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"amosting"},"content":"     * Abstract method for string to date conversion","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"amosting"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"amosting"},"content":"    public void stringToDate() {}","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"amosting"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"amosting"},"content":"     * Converts the task to a user-friendly string representation","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"amosting"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"amosting"},"content":"     * @return A string representation of the task","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"amosting"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"amosting"},"content":"    public String toString() { // generates the string of marking and task","lastModifiedDate":"2023-08-23"},{"lineNumber":70,"author":{"gitId":"amosting"},"content":"        String marking \u003d \"\";","lastModifiedDate":"2023-08-22"},{"lineNumber":71,"author":{"gitId":"amosting"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-08-22"},{"lineNumber":72,"author":{"gitId":"amosting"},"content":"            marking \u003d \"[X]\";","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"amosting"},"content":"        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":74,"author":{"gitId":"amosting"},"content":"            marking \u003d \"[ ]\";","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"amosting"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":76,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":77,"author":{"gitId":"amosting"},"content":"        String priority \u003d \"\";","lastModifiedDate":"2023-09-14"},{"lineNumber":78,"author":{"gitId":"amosting"},"content":"        if (this.priority \u003d\u003d priorityLevels.LOW) {","lastModifiedDate":"2023-09-14"},{"lineNumber":79,"author":{"gitId":"amosting"},"content":"            priority \u003d \"[L]\";","lastModifiedDate":"2023-09-14"},{"lineNumber":80,"author":{"gitId":"amosting"},"content":"        } else if (this.priority \u003d\u003d priorityLevels.MEDIUM) {","lastModifiedDate":"2023-09-14"},{"lineNumber":81,"author":{"gitId":"amosting"},"content":"            priority \u003d \"[M]\";","lastModifiedDate":"2023-09-14"},{"lineNumber":82,"author":{"gitId":"amosting"},"content":"        } else {","lastModifiedDate":"2023-09-14"},{"lineNumber":83,"author":{"gitId":"amosting"},"content":"            priority \u003d \"[H]\";","lastModifiedDate":"2023-09-14"},{"lineNumber":84,"author":{"gitId":"amosting"},"content":"        }","lastModifiedDate":"2023-09-14"},{"lineNumber":85,"author":{"gitId":"amosting"},"content":"        return marking + priority + \" \" + this.description;","lastModifiedDate":"2023-09-22"},{"lineNumber":86,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":87,"author":{"gitId":"amosting"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"amosting":87}},{"path":"src/main/java/Jarvis/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amosting"},"content":"package Jarvis;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"amosting"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"amosting"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"amosting"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"amosting"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"amosting"},"content":" * Class representing a list of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"amosting"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"amosting"},"content":" *     This class encapsulates the list of tasks and provides methods for adding, removing, and retrieving tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"amosting"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"amosting"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"amosting"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"amosting"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"amosting"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"amosting"},"content":"     * Constructs a new TaskList object from saved data.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"amosting"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"amosting"},"content":"     * @param tasks The string that holds the saved data.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"amosting"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"amosting"},"content":"    public TaskList(String tasks) { // tasks is a string","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"amosting"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"amosting"},"content":"            taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-26"},{"lineNumber":25,"author":{"gitId":"amosting"},"content":"        } else {","lastModifiedDate":"2023-09-26"},{"lineNumber":26,"author":{"gitId":"amosting"},"content":"            String[] stringTasks \u003d tasks.split(\"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"amosting"},"content":"            Pattern todoPattern \u003d Pattern.compile(","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"amosting"},"content":"                    \"\\\\[T\\\\]\\\\[(X|\\\\s)\\\\]\\\\[(L|M|H)\\\\] (.+)\"); // [T][-][L/M/H] xxxx","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"amosting"},"content":"            Pattern deadlinePattern \u003d Pattern.compile(","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"amosting"},"content":"                    \"\\\\[D\\\\]\\\\[(X|\\\\s)\\\\]\\\\[(L|M|H)\\\\] (.+) \\\\(by: (.+)\\\\)\"); // [D][-][L/M/H] xxxx (by: xxxxxx)","lastModifiedDate":"2023-09-14"},{"lineNumber":31,"author":{"gitId":"amosting"},"content":"            Pattern eventPattern \u003d Pattern.compile(","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"amosting"},"content":"                    \"\\\\[E\\\\]\\\\[(X|\\\\s)\\\\]\\\\[(L|M|H)\\\\] (.+) \\\\(from: (.+) to: (.+)\\\\)\"); // [E][-][L/M/H] xxxx (from: xxxxxx to: xxxxxx)","lastModifiedDate":"2023-09-14"},{"lineNumber":33,"author":{"gitId":"amosting"},"content":"            // [E][ ][H] project meeting (from: Monday 2pm to: 4pm)","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"amosting"},"content":"            taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"amosting"},"content":"            for (int i \u003d 0; i \u003c stringTasks.length; i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"amosting"},"content":"                Matcher todoMatcher \u003d todoPattern.matcher(stringTasks[i]);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"amosting"},"content":"                Matcher deadlineMatcher \u003d deadlinePattern.matcher(stringTasks[i]);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"amosting"},"content":"                Matcher eventMatcher \u003d eventPattern.matcher(stringTasks[i]);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"amosting"},"content":"                Task newTask;","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"amosting"},"content":"                if (todoMatcher.matches()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"amosting"},"content":"                    String description \u003d todoMatcher.group(3);","lastModifiedDate":"2023-09-14"},{"lineNumber":44,"author":{"gitId":"amosting"},"content":"                    String priority \u003d todoMatcher.group(2);","lastModifiedDate":"2023-09-14"},{"lineNumber":45,"author":{"gitId":"amosting"},"content":"                    newTask \u003d new ToDo(description, priority);","lastModifiedDate":"2023-09-14"},{"lineNumber":46,"author":{"gitId":"amosting"},"content":"                    if (todoMatcher.group(1).equals(\"X\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"amosting"},"content":"                        newTask.setDone(true);","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"amosting"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"amosting"},"content":"                } else if (deadlineMatcher.matches()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"amosting"},"content":"                    String description \u003d deadlineMatcher.group(3);","lastModifiedDate":"2023-09-14"},{"lineNumber":51,"author":{"gitId":"amosting"},"content":"                    String by \u003d deadlineMatcher.group(4);","lastModifiedDate":"2023-09-14"},{"lineNumber":52,"author":{"gitId":"amosting"},"content":"                    String priority \u003d deadlineMatcher.group(2);","lastModifiedDate":"2023-09-14"},{"lineNumber":53,"author":{"gitId":"amosting"},"content":"                    newTask \u003d new Deadline(description, by, priority);","lastModifiedDate":"2023-09-14"},{"lineNumber":54,"author":{"gitId":"amosting"},"content":"                    if (deadlineMatcher.group(1).equals(\"X\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"amosting"},"content":"                        newTask.setDone(true);","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"amosting"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"amosting"},"content":"                } else  {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"amosting"},"content":"                    eventMatcher.matches();","lastModifiedDate":"2023-09-22"},{"lineNumber":59,"author":{"gitId":"amosting"},"content":"                    String description \u003d eventMatcher.group(3);","lastModifiedDate":"2023-09-14"},{"lineNumber":60,"author":{"gitId":"amosting"},"content":"                    String from \u003d eventMatcher.group(4);","lastModifiedDate":"2023-09-14"},{"lineNumber":61,"author":{"gitId":"amosting"},"content":"                    String to \u003d eventMatcher.group(5);","lastModifiedDate":"2023-09-14"},{"lineNumber":62,"author":{"gitId":"amosting"},"content":"                    String priority \u003d eventMatcher.group(2);","lastModifiedDate":"2023-09-14"},{"lineNumber":63,"author":{"gitId":"amosting"},"content":"                    newTask \u003d new Event(description, from, to, priority);","lastModifiedDate":"2023-09-14"},{"lineNumber":64,"author":{"gitId":"amosting"},"content":"                    if (eventMatcher.group(1).equals(\"X\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"amosting"},"content":"                        newTask.setDone(true);","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"amosting"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"amosting"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"amosting"},"content":"                taskList.add(newTask); // add the task to the task list","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"amosting"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"amosting"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":73,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"amosting"},"content":"    public void appendTask(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"amosting"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"amosting"},"content":"    public void addTask(Task task, int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"amosting"},"content":"        this.taskList.add(index, task);","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"amosting"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"amosting"},"content":"        this.taskList.remove(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"amosting"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"amosting"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"amosting"},"content":"    public int countTask() {","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"amosting"},"content":"        return taskList.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"amosting"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-09-26"},{"lineNumber":95,"author":{"gitId":"amosting"},"content":"        return taskList.isEmpty();","lastModifiedDate":"2023-09-26"},{"lineNumber":96,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":97,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":98,"author":{"gitId":"amosting"},"content":"    // function checks if task number is valid and throws Jarvis.InvalidTaskNumberException","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"amosting"},"content":"    public boolean isValidTaskNumber(int taskNum) {","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"amosting"},"content":"        final String line \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"amosting"},"content":"        boolean isValid \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"amosting"},"content":"        if (taskNum \u003c 0 || taskNum \u003e this.taskList.size()) { // check if task number is of valid range","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"amosting"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"amosting"},"content":"                throw new InvalidTaskNumberException(\"Apologies Sir, the task number you provided is out of range.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"amosting"},"content":"            } catch (InvalidTaskNumberException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"amosting"},"content":"                isValid \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"amosting"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"amosting"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"amosting"},"content":"        return isValid;","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"amosting"},"content":"    public ArrayList\u003cTask\u003e findTask(String keyword) {","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"amosting"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"amosting"},"content":"        for (Task task: taskList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"amosting"},"content":"            if (task.description.contains(keyword)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"amosting"},"content":"                foundTasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"amosting"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"amosting"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"amosting"},"content":"        return foundTasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"amosting"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"amosting":121}},{"path":"src/main/java/Jarvis/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amosting"},"content":"package Jarvis;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"amosting"},"content":"/**","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"amosting"},"content":" * Represents a ToDo task that extends the Task class.","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"amosting"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"amosting"},"content":" *     The ToDo class is a subclass of the Task class","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"amosting"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"amosting"},"content":" */","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"amosting"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"amosting"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"amosting"},"content":"     * Constructs a new ToDo object.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"amosting"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"amosting"},"content":"     * @param description description of the deadline task.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"amosting"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"amosting"},"content":"    public ToDo(String description, String priority) {","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"amosting"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"amosting"},"content":"        this.priority \u003d mapPriority(priority);","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"amosting"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"amosting"},"content":"     * Converts the task to a user-friendly string representation","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"amosting"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"amosting"},"content":"     * @return A string representation of the task","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"amosting"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"amosting"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"amosting"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"amosting"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"amosting"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"amosting":30}},{"path":"src/main/java/Jarvis/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amosting"},"content":"package Jarvis;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"amosting"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"amosting"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"amosting"},"content":"    private static final String name \u003d \"Jarvis\";","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"amosting"},"content":"    private static final String greeting \u003d \"Good day Sir! I\u0027m \";","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"amosting"},"content":"    private static final String question \u003d \"How can I help you today Sir?\";","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"amosting"},"content":"    private static final String signOff \u003d \"Good bye Sir!\";","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"amosting"},"content":"    private static final String listInforming \u003d \"Here are the tasks in your list Sir:\";","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"amosting"},"content":"    private static final String markInforming \u003d \"Roger that Sir, I\u0027ve marked this task as done:\";","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"amosting"},"content":"    private static final String uncheckInforming \u003d \"Noted Sir, I\u0027ve marked this task as NOT done yet:\";","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"amosting"},"content":"    private static final String taskInforming \u003d \"As you please Sir, I\u0027ve added the task:\";","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"amosting"},"content":"    private static final String deleteInforming \u003d \"Alright Sir, I\u0027ve removed this task:\";","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"amosting"},"content":"    private static final String findInforming \u003d \"Here are the matching tasks in your list Sir:\";","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"amosting"},"content":"    private static final String listEmptyInforming \u003d \"There are currently no tasks in the list Sir.\";","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"amosting"},"content":"    public static String printGreeting() {","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"amosting"},"content":"        return greeting + name + \"!\" + \"\\n\" + question;","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"amosting"},"content":"    public static String getByeMessage() {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"amosting"},"content":"        return signOff;","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"amosting"},"content":"    public static String getMarkMessage(Task currentTask) {","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"amosting"},"content":"        return markInforming + \"\\n\" +","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"amosting"},"content":"               \"    \" + currentTask.toString();","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"amosting"},"content":"    public static String getUncheckMessage(Task currentTask) {","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"amosting"},"content":"        return uncheckInforming + \"\\n\" +","lastModifiedDate":"2023-09-22"},{"lineNumber":33,"author":{"gitId":"amosting"},"content":"                \"   \" + currentTask.toString();","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"amosting"},"content":"    public static String getListOfCommands(ArrayList\u003cString\u003e validCommands, Exception e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"amosting"},"content":"        String returnString \u003d e.getMessage() + \"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"amosting"},"content":"        for (int i \u003d 0; i \u003c validCommands.size(); i++) { // listing out the current task","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"amosting"},"content":"            int numbering \u003d i + 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"amosting"},"content":"            returnString \u003d returnString + \"    \" + numbering + \". \" + validCommands.get(i) + \"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"amosting"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"amosting"},"content":"        return returnString;","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"amosting"},"content":"    public static String getWrongFormatMessage(String command, Exception e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"amosting"},"content":"        assert command.matches(\"(?i:mark|uncheck|todo|deadline|event)\"): \"Command is not valid\";","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"amosting"},"content":"        if (command.equals(\"mark\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"amosting"},"content":"            return e.getMessage() + \"\\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"amosting"},"content":"                    \"    The following is the correct format:\" + \"\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"amosting"},"content":"                    + \"        mark \u003ctask number\u003e\";","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"amosting"},"content":"        } else if (command.equals(\"uncheck\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"amosting"},"content":"            return e.getMessage() + \"\\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"amosting"},"content":"                    \"    The following is the correct format:\" + \"\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"amosting"},"content":"                    + \"        uncheck \u003ctask number\u003e\";","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"amosting"},"content":"        } else if (command.equals(\"todo\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"amosting"},"content":"            return e.getMessage() + \"\\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"amosting"},"content":"                    \"    The following is the correct format:\" + \"\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"amosting"},"content":"                    + \"        todo \u003cdescription\u003e \u003cpriority: low/medium/high\u003e\";","lastModifiedDate":"2023-09-22"},{"lineNumber":61,"author":{"gitId":"amosting"},"content":"        } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"amosting"},"content":"            return e.getMessage() + \"\\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"amosting"},"content":"                    \"    The following is the correct format:\" + \"\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"amosting"},"content":"                    + \"        deadline \u003cdescription\u003e /by \u003cdate or time\u003e \u003cpriority: low/medium/high\u003e\";","lastModifiedDate":"2023-09-22"},{"lineNumber":65,"author":{"gitId":"amosting"},"content":"        } else {","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"amosting"},"content":"            return e.getMessage() + \"\\n\" +","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"amosting"},"content":"                    \"    The following is the correct format:\" + \"\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"amosting"},"content":"                    + \"        event \u003cdescription\u003e /from \u003cdate or time\u003e /to \u003cdate or time\u003e \u003cpriority: low/medium/high\u003e\";","lastModifiedDate":"2023-09-22"},{"lineNumber":69,"author":{"gitId":"amosting"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"amosting"},"content":"    public static String getTaskMessage(Task task,TaskList tasks) {","lastModifiedDate":"2023-09-22"},{"lineNumber":73,"author":{"gitId":"amosting"},"content":"        return taskInforming + \"\\n\" +","lastModifiedDate":"2023-09-22"},{"lineNumber":74,"author":{"gitId":"amosting"},"content":"                \"   \" + task.toString() + \"\\n\" +","lastModifiedDate":"2023-09-22"},{"lineNumber":75,"author":{"gitId":"amosting"},"content":"                \"You have now \" + tasks.countTask() + \" tasks in the list Sir.\";","lastModifiedDate":"2023-09-22"},{"lineNumber":76,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"amosting"},"content":"    public static String getDeleteMessage(Task task, TaskList tasks) {","lastModifiedDate":"2023-09-22"},{"lineNumber":79,"author":{"gitId":"amosting"},"content":"        return deleteInforming + \"\\n\" +","lastModifiedDate":"2023-09-22"},{"lineNumber":80,"author":{"gitId":"amosting"},"content":"                \"   \" + task.toString() + \"\\n\" +","lastModifiedDate":"2023-09-22"},{"lineNumber":81,"author":{"gitId":"amosting"},"content":"                \"You have now \" + tasks.countTask() + \" tasks in the list Sir.\";","lastModifiedDate":"2023-09-22"},{"lineNumber":82,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"amosting"},"content":"    public static String getTaskList(TaskList tasks) {","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"amosting"},"content":"        String returnString;","lastModifiedDate":"2023-09-26"},{"lineNumber":86,"author":{"gitId":"amosting"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-09-26"},{"lineNumber":87,"author":{"gitId":"amosting"},"content":"            returnString \u003d listEmptyInforming + \"\\n\";","lastModifiedDate":"2023-09-26"},{"lineNumber":88,"author":{"gitId":"amosting"},"content":"        } else {","lastModifiedDate":"2023-09-26"},{"lineNumber":89,"author":{"gitId":"amosting"},"content":"            returnString \u003d listInforming + \"\\n\";","lastModifiedDate":"2023-09-26"},{"lineNumber":90,"author":{"gitId":"amosting"},"content":"            for (int i \u003d 0; i \u003c tasks.countTask(); i++) { // listing out the current task","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"amosting"},"content":"                int count \u003d i + 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"amosting"},"content":"                Task currentTask \u003d tasks.getTask(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"amosting"},"content":"                returnString \u003d returnString + count + \".\" + currentTask.toString() + \"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"amosting"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"amosting"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":96,"author":{"gitId":"amosting"},"content":"        return returnString;","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"amosting"},"content":"    public static String getFoundTaskMessage(ArrayList\u003cTask\u003e foundTasks) {","lastModifiedDate":"2023-09-07"},{"lineNumber":100,"author":{"gitId":"amosting"},"content":"        String returnString \u003d findInforming + \"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":101,"author":{"gitId":"amosting"},"content":"        for (int i \u003d 0; i \u003c foundTasks.size(); i++) { // listing out the current task","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"amosting"},"content":"            int count \u003d i + 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"amosting"},"content":"            Task currentTask \u003d foundTasks.get(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"amosting"},"content":"            returnString \u003d returnString + count + \".\" + currentTask.toString() + \"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"amosting"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"amosting"},"content":"        return returnString;","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"amosting"},"content":"    public static String respond(String message) {","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"amosting"},"content":"        return message;","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":112,"author":{"gitId":"amosting"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"amosting":112}},{"path":"src/main/java/Jarvis/WrongJarvisCommandFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amosting"},"content":"package Jarvis;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"amosting"},"content":"public class WrongJarvisCommandFormatException extends JarvisException {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"amosting"},"content":"    public WrongJarvisCommandFormatException(String errorMsg) {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"amosting"},"content":"        super(errorMsg);","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"amosting"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"amosting":7}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amosting"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"amosting"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"amosting"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"amosting"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"amosting"},"content":"public class Launcher {","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"amosting"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"amosting"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"amosting"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"amosting":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amosting"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"amosting"},"content":"import Jarvis.Jarvis;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"amosting"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"amosting"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"amosting"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"amosting"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"amosting"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"amosting"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"amosting"},"content":"    private Jarvis jarvis \u003d new Jarvis(\"jarvis.txt\");","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"amosting"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"amosting"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"amosting"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"amosting"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"amosting"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"amosting"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"amosting"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"amosting"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setJarvis(jarvis);","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"amosting"},"content":"            stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"amosting"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"amosting"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"amosting"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"amosting"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"amosting":27}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amosting"},"content":"import Jarvis.Jarvis;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"amosting"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"amosting"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"amosting"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"amosting"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"amosting"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"amosting"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"amosting"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"amosting"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"amosting"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"amosting"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"amosting"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"amosting"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"amosting"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"amosting"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"amosting"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"amosting"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"amosting"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"amosting"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"amosting"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"amosting"},"content":"    private Jarvis jarvis;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"amosting"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/tony_stark.jpg\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"amosting"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/jarvis.jpeg\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"amosting"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"amosting"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"amosting"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"amosting"},"content":"    public void setJarvis(Jarvis jarvis) {","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"amosting"},"content":"        this.jarvis \u003d jarvis;","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"amosting"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"amosting"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"amosting"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"amosting"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"amosting"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"amosting"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"amosting"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"amosting"},"content":"        String response \u003d this.jarvis.getResponse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"amosting"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"amosting"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"amosting"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"amosting"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"amosting"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"amosting"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"amosting":50}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"amosting"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"amosting"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"amosting"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"amosting"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"amosting"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"amosting"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"amosting"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"amosting"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"amosting"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"amosting"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"amosting"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"amosting"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"amosting"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"amosting"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"amosting":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"amosting"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"amosting"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"amosting"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"amosting"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"amosting"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"amosting"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"amosting"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"amosting"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"amosting"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"amosting"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"amosting"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"amosting"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"amosting"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"amosting"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"amosting"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"amosting"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"amosting"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"amosting":19}},{"path":"src/test/java/Jarvis/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amosting"},"content":"package Jarvis;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"amosting"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"amosting"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"amosting"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"amosting"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"amosting"},"content":"    public void deadline_correctInitialisation_toStringCorrect() {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"amosting"},"content":"        Deadline deadline \u003d new Deadline(\"make helmet\", \"2023-09-02\", \"low\");","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"amosting"},"content":"        assertEquals(\"[D][ ][L] make helmet (by: Sep 2 2023)\", deadline.toString());","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"amosting"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"amosting":12}},{"path":"src/test/java/Jarvis/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amosting"},"content":"package Jarvis;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"amosting"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"amosting"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"amosting"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"amosting"},"content":"public class ToDoTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"amosting"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"amosting"},"content":"    public void todo_correctInitialisation_toStringCorrect() {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"amosting"},"content":"        ToDo todo \u003d new ToDo(\"Mark XXVI is ready for you sir\", \"low\");","lastModifiedDate":"2023-09-14"},{"lineNumber":10,"author":{"gitId":"amosting"},"content":"        assertEquals(\"[T][ ][L] Mark XXVI is ready for you sir\", todo.toString());","lastModifiedDate":"2023-09-14"},{"lineNumber":11,"author":{"gitId":"amosting"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"amosting"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"amosting":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"amosting"},"content":"todo borrow book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"amosting"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"amosting"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"amosting"},"content":"deadline finish assignment /by Saturday","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"amosting"},"content":"todo start on vlog","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"amosting"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"amosting"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"amosting"},"content":"mark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"amosting"},"content":"unmark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"amosting"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"amosting"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"amosting":11}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"amosting"},"content":"java -classpath ../bin Jarvis \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"amosting":1,"-":37}}]
