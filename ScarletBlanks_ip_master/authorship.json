[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"# TILL","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"# User Guide","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"## Features ","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"### Task Management","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":"Till allows you to efficiently manage your tasks. You can add various types of tasks, list them, mark them as done, unmark them, and even delete them from your task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"### Task Types","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"Till supports different types of tasks:","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"To-Do: Simple tasks without a specific deadline.","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"Deadlines: Tasks that need to be completed by a specific date and time.","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"Events: Tasks that have a starting and ending date and time.","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"## Usage","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"ScarletBlanks"},"content":"### `todo` - Add a To-Do task","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"ScarletBlanks"},"content":"Adds a To-Do task to your task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"ScarletBlanks"},"content":"Example of usage: ","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"ScarletBlanks"},"content":"`todo Buy groceries`","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"ScarletBlanks"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"ScarletBlanks"},"content":"Till adds the To-Do task to your task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"ScarletBlanks"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"ScarletBlanks"},"content":"Added: [T][✘] Buy groceries","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"ScarletBlanks"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"ScarletBlanks"},"content":"### `deadline` - Add a Deadline task","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"ScarletBlanks"},"content":"Adds a Deadline task to your task list with a specified deadline.","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"ScarletBlanks"},"content":"Example of usage:","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"ScarletBlanks"},"content":"`deadline Complete project /by 2023/12/31 2359`","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"ScarletBlanks"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"ScarletBlanks"},"content":"Till adds the Deadline task to your task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"ScarletBlanks"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"ScarletBlanks"},"content":"Added: [D][✘] Complete project (by: Dec 31 2023, 11:59 PM)","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"ScarletBlanks"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"ScarletBlanks"},"content":"### `event` - Add an Event task","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"ScarletBlanks"},"content":"Adds an Event task to your task list with a specified starting and ending date and time.","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"ScarletBlanks"},"content":"Example of usage:","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"ScarletBlanks"},"content":"`event Birthday party /from 2023-09-30 18:00 /to 2023-09-30 22:00`","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"ScarletBlanks"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"ScarletBlanks"},"content":"Till adds the Event task to your task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"ScarletBlanks"},"content":"```Added: [E][✘] Birthday party (from: 2023-09-30 18:00, to: 2023-09-30 22:00)```","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"ScarletBlanks"},"content":"### `list` - List all tasks","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"ScarletBlanks"},"content":"Lists all the tasks in your task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"ScarletBlanks"},"content":"Example of usage:","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"ScarletBlanks"},"content":"`list`","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"ScarletBlanks"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":76,"author":{"gitId":"ScarletBlanks"},"content":"Till displays a list of all your tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":77,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":78,"author":{"gitId":"ScarletBlanks"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"ScarletBlanks"},"content":"1. [T][✘] Buy groceries","lastModifiedDate":"2023-09-21"},{"lineNumber":80,"author":{"gitId":"ScarletBlanks"},"content":"2. [D][✘] Complete project (by: Dec 31 2023, 11:59 PM)","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"ScarletBlanks"},"content":"3. [E][✘] Birthday party (from: Sep 30 2023, 06:00 PM to: Sep 30 2023, 10:00 PM)","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":83,"author":{"gitId":"ScarletBlanks"},"content":"### `mark` - Mark a task as done","lastModifiedDate":"2023-09-21"},{"lineNumber":84,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":85,"author":{"gitId":"ScarletBlanks"},"content":"Marks a task as completed in your task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":87,"author":{"gitId":"ScarletBlanks"},"content":"Example of usage:","lastModifiedDate":"2023-09-21"},{"lineNumber":88,"author":{"gitId":"ScarletBlanks"},"content":"`mark 1`","lastModifiedDate":"2023-09-21"},{"lineNumber":89,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":90,"author":{"gitId":"ScarletBlanks"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":91,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":92,"author":{"gitId":"ScarletBlanks"},"content":"Till marks the specified task as done.","lastModifiedDate":"2023-09-21"},{"lineNumber":93,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":94,"author":{"gitId":"ScarletBlanks"},"content":"```Marked as done: [T][✓] Buy groceries```","lastModifiedDate":"2023-09-21"},{"lineNumber":95,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":96,"author":{"gitId":"ScarletBlanks"},"content":"### `unmark` - Unmark a task","lastModifiedDate":"2023-09-21"},{"lineNumber":97,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":98,"author":{"gitId":"ScarletBlanks"},"content":"Unmarks a previously marked task in your task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":99,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":100,"author":{"gitId":"ScarletBlanks"},"content":"Example of usage:","lastModifiedDate":"2023-09-21"},{"lineNumber":101,"author":{"gitId":"ScarletBlanks"},"content":"`unmark 1`","lastModifiedDate":"2023-09-21"},{"lineNumber":102,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":103,"author":{"gitId":"ScarletBlanks"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":104,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":105,"author":{"gitId":"ScarletBlanks"},"content":"Till unmarks the specified task.","lastModifiedDate":"2023-09-21"},{"lineNumber":106,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":107,"author":{"gitId":"ScarletBlanks"},"content":"```Unmarked: [T][✘] Buy groceries```","lastModifiedDate":"2023-09-21"},{"lineNumber":108,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":109,"author":{"gitId":"ScarletBlanks"},"content":"### `delete` - Delete a task","lastModifiedDate":"2023-09-21"},{"lineNumber":110,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":111,"author":{"gitId":"ScarletBlanks"},"content":"Deletes a task from your task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":112,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":113,"author":{"gitId":"ScarletBlanks"},"content":"Example of usage:","lastModifiedDate":"2023-09-21"},{"lineNumber":114,"author":{"gitId":"ScarletBlanks"},"content":"`delete 1`","lastModifiedDate":"2023-09-21"},{"lineNumber":115,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":116,"author":{"gitId":"ScarletBlanks"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":117,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":118,"author":{"gitId":"ScarletBlanks"},"content":"Till deletes the specified task.","lastModifiedDate":"2023-09-21"},{"lineNumber":119,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":120,"author":{"gitId":"ScarletBlanks"},"content":"```Deleted: [T][✘] Buy groceries```","lastModifiedDate":"2023-09-21"},{"lineNumber":121,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":122,"author":{"gitId":"ScarletBlanks"},"content":"### `find` - Find tasks","lastModifiedDate":"2023-09-21"},{"lineNumber":123,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":124,"author":{"gitId":"ScarletBlanks"},"content":"Finds tasks in your task list based on a keyword.","lastModifiedDate":"2023-09-21"},{"lineNumber":125,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":126,"author":{"gitId":"ScarletBlanks"},"content":"Example of usage:","lastModifiedDate":"2023-09-21"},{"lineNumber":127,"author":{"gitId":"ScarletBlanks"},"content":"`find project`","lastModifiedDate":"2023-09-21"},{"lineNumber":128,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":129,"author":{"gitId":"ScarletBlanks"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":130,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":131,"author":{"gitId":"ScarletBlanks"},"content":"Till displays tasks that match the keyword.","lastModifiedDate":"2023-09-21"},{"lineNumber":132,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":133,"author":{"gitId":"ScarletBlanks"},"content":"```1. [D][✘] Complete project (by: Dec 31 2023, 11:59 PM)```","lastModifiedDate":"2023-09-21"},{"lineNumber":134,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":135,"author":{"gitId":"ScarletBlanks"},"content":"### `remind` - Set reminders","lastModifiedDate":"2023-09-21"},{"lineNumber":136,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":137,"author":{"gitId":"ScarletBlanks"},"content":"Set reminders for tasks that are due within a specified number of days.","lastModifiedDate":"2023-09-21"},{"lineNumber":138,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":139,"author":{"gitId":"ScarletBlanks"},"content":"Example of usage:","lastModifiedDate":"2023-09-21"},{"lineNumber":140,"author":{"gitId":"ScarletBlanks"},"content":"`remind 7`","lastModifiedDate":"2023-09-21"},{"lineNumber":141,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":142,"author":{"gitId":"ScarletBlanks"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":143,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":144,"author":{"gitId":"ScarletBlanks"},"content":"Till displays tasks that are due within 7 days.","lastModifiedDate":"2023-09-21"},{"lineNumber":145,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":147,"author":{"gitId":"ScarletBlanks"},"content":"Here are the tasks due within the next 7 days:","lastModifiedDate":"2023-09-21"},{"lineNumber":148,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":149,"author":{"gitId":"ScarletBlanks"},"content":"1. [D][✘] Complete project (by: Dec 31 2023, 11:59 PM)","lastModifiedDate":"2023-09-21"},{"lineNumber":150,"author":{"gitId":"ScarletBlanks"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":151,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":152,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":153,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":154,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":155,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"ScarletBlanks":149,"-":6}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"javafx {","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"    version \u003d \"17.0.7\"","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"    modules \u003d [ \u0027javafx.controls\u0027 ]","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"ScarletBlanks"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"ScarletBlanks"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"ScarletBlanks"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"ScarletBlanks"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"ScarletBlanks"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"ScarletBlanks"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"ScarletBlanks"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"ScarletBlanks"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"ScarletBlanks"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"ScarletBlanks"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"ScarletBlanks"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"ScarletBlanks"},"content":"checkstyle {","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"ScarletBlanks"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"ScarletBlanks"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":62,"author":{"gitId":"ScarletBlanks"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ScarletBlanks":24,"-":43}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"T | 0 | Study for CS2103T","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"T | 0 | do_this","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"D | 0 | return book | 2019-10-15T18:00 | 2","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"E | 0 | e | 26Jun | 29Jun","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"D | 0 | item | 2019-07-22T18:00 | 2","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"E | 0 | desc | 27jun | 28jun","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"E | 0 | test | 7 | 1","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"ScarletBlanks":7}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"# TILL","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"### Task Management","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":"Till allows you to efficiently manage your tasks. You can add various types of tasks, list them, mark them as done, unmark them, and even delete them from your task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"### Task Types","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"Till supports different types of tasks:","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"To-Do: Simple tasks without a specific deadline.","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"Deadlines: Tasks that need to be completed by a specific date and time.","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"Events: Tasks that have a starting and ending date and time.","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"ScarletBlanks"},"content":"### `todo` - Add a To-Do task","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"ScarletBlanks"},"content":"Adds a To-Do task to your task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"ScarletBlanks"},"content":"`todo Buy groceries`","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"ScarletBlanks"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"ScarletBlanks"},"content":"Till adds the To-Do task to your task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"ScarletBlanks"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"ScarletBlanks"},"content":"Added: [T][✘] Buy groceries","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"ScarletBlanks"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"ScarletBlanks"},"content":"### `deadline` - Add a Deadline task","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"ScarletBlanks"},"content":"Adds a Deadline task to your task list with a specified deadline.","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"ScarletBlanks"},"content":"Example of usage:","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"ScarletBlanks"},"content":"`deadline Complete project /by 2023/12/31 2359`","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"ScarletBlanks"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"ScarletBlanks"},"content":"Till adds the Deadline task to your task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"ScarletBlanks"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"ScarletBlanks"},"content":"Added: [D][✘] Complete project (by: Dec 31 2023, 11:59 PM)","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"ScarletBlanks"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"ScarletBlanks"},"content":"### `event` - Add an Event task","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"ScarletBlanks"},"content":"Adds an Event task to your task list with a specified starting and ending date and time.","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"ScarletBlanks"},"content":"`event Birthday party /from 2023-09-30 18:00 /to 2023-09-30 22:00`","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"ScarletBlanks"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"ScarletBlanks"},"content":"Till adds the Event task to your task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"ScarletBlanks"},"content":"```Added: [E][✘] Birthday party (from: 2023-09-30 18:00 to: 2023-09-30 22:00)```","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"ScarletBlanks"},"content":"### `list` - List all tasks","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"ScarletBlanks"},"content":"Lists all the tasks in your task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"ScarletBlanks"},"content":"Example of usage:","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"ScarletBlanks"},"content":"`list`","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"ScarletBlanks"},"content":"Till displays a list of all your tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":79,"author":{"gitId":"ScarletBlanks"},"content":"1. [T][✘] Buy groceries","lastModifiedDate":"2023-09-21"},{"lineNumber":80,"author":{"gitId":"ScarletBlanks"},"content":"2. [D][✘] Complete project (by: Dec 31 2023, 11:59 PM)","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"ScarletBlanks"},"content":"3. [E][✘] Birthday party (from: Sep 30 2023, 06:00 PM to: Sep 30 2023, 10:00 PM)","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":83,"author":{"gitId":"ScarletBlanks"},"content":"### `mark` - Mark a task as done","lastModifiedDate":"2023-09-21"},{"lineNumber":84,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":85,"author":{"gitId":"ScarletBlanks"},"content":"Marks a task as completed in your task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":87,"author":{"gitId":"ScarletBlanks"},"content":"Example of usage:","lastModifiedDate":"2023-09-21"},{"lineNumber":88,"author":{"gitId":"ScarletBlanks"},"content":"`mark 1`","lastModifiedDate":"2023-09-21"},{"lineNumber":89,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":90,"author":{"gitId":"ScarletBlanks"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":91,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":92,"author":{"gitId":"ScarletBlanks"},"content":"Till marks the specified task as done.","lastModifiedDate":"2023-09-21"},{"lineNumber":93,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":94,"author":{"gitId":"ScarletBlanks"},"content":"```Marked as done: [T][✓] Buy groceries```","lastModifiedDate":"2023-09-21"},{"lineNumber":95,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":96,"author":{"gitId":"ScarletBlanks"},"content":"### `unmark` - Unmark a task","lastModifiedDate":"2023-09-21"},{"lineNumber":97,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":98,"author":{"gitId":"ScarletBlanks"},"content":"Unmarks a previously marked task in your task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":99,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":100,"author":{"gitId":"ScarletBlanks"},"content":"Example of usage:","lastModifiedDate":"2023-09-21"},{"lineNumber":101,"author":{"gitId":"ScarletBlanks"},"content":"`unmark 1`","lastModifiedDate":"2023-09-21"},{"lineNumber":102,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":103,"author":{"gitId":"ScarletBlanks"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":104,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":105,"author":{"gitId":"ScarletBlanks"},"content":"Till unmarks the specified task.","lastModifiedDate":"2023-09-21"},{"lineNumber":106,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":107,"author":{"gitId":"ScarletBlanks"},"content":"```Unmarked: [T][✘] Buy groceries```","lastModifiedDate":"2023-09-21"},{"lineNumber":108,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":109,"author":{"gitId":"ScarletBlanks"},"content":"### `delete` - Delete a task","lastModifiedDate":"2023-09-21"},{"lineNumber":110,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":111,"author":{"gitId":"ScarletBlanks"},"content":"Deletes a task from your task list.","lastModifiedDate":"2023-09-21"},{"lineNumber":112,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":113,"author":{"gitId":"ScarletBlanks"},"content":"Example of usage:","lastModifiedDate":"2023-09-21"},{"lineNumber":114,"author":{"gitId":"ScarletBlanks"},"content":"`delete 1`","lastModifiedDate":"2023-09-21"},{"lineNumber":115,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":116,"author":{"gitId":"ScarletBlanks"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":117,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":118,"author":{"gitId":"ScarletBlanks"},"content":"Till deletes the specified task.","lastModifiedDate":"2023-09-21"},{"lineNumber":119,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":120,"author":{"gitId":"ScarletBlanks"},"content":"```Deleted: [T][✘] Buy groceries```","lastModifiedDate":"2023-09-21"},{"lineNumber":121,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":122,"author":{"gitId":"ScarletBlanks"},"content":"### `find` - Find tasks","lastModifiedDate":"2023-09-21"},{"lineNumber":123,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":124,"author":{"gitId":"ScarletBlanks"},"content":"Finds tasks in your task list based on a keyword.","lastModifiedDate":"2023-09-21"},{"lineNumber":125,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":126,"author":{"gitId":"ScarletBlanks"},"content":"Example of usage:","lastModifiedDate":"2023-09-21"},{"lineNumber":127,"author":{"gitId":"ScarletBlanks"},"content":"`find project`","lastModifiedDate":"2023-09-21"},{"lineNumber":128,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":129,"author":{"gitId":"ScarletBlanks"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":130,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":131,"author":{"gitId":"ScarletBlanks"},"content":"Till displays tasks that match the keyword.","lastModifiedDate":"2023-09-21"},{"lineNumber":132,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":133,"author":{"gitId":"ScarletBlanks"},"content":"```1. [D][✘] Complete project (by: Dec 31 2023, 11:59 PM)```","lastModifiedDate":"2023-09-21"},{"lineNumber":134,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":135,"author":{"gitId":"ScarletBlanks"},"content":"### `remind` - Set reminders","lastModifiedDate":"2023-09-21"},{"lineNumber":136,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":137,"author":{"gitId":"ScarletBlanks"},"content":"Set reminders for tasks that are due within a specified number of days.","lastModifiedDate":"2023-09-21"},{"lineNumber":138,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":139,"author":{"gitId":"ScarletBlanks"},"content":"Example of usage:","lastModifiedDate":"2023-09-21"},{"lineNumber":140,"author":{"gitId":"ScarletBlanks"},"content":"`remind 7`","lastModifiedDate":"2023-09-21"},{"lineNumber":141,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":142,"author":{"gitId":"ScarletBlanks"},"content":"Expected outcome:","lastModifiedDate":"2023-09-21"},{"lineNumber":143,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":144,"author":{"gitId":"ScarletBlanks"},"content":"Till displays tasks that are due within 7 days.","lastModifiedDate":"2023-09-21"},{"lineNumber":145,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":146,"author":{"gitId":"ScarletBlanks"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":147,"author":{"gitId":"ScarletBlanks"},"content":"Here are the tasks due within the next 7 days:","lastModifiedDate":"2023-09-21"},{"lineNumber":148,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":149,"author":{"gitId":"ScarletBlanks"},"content":"1. [D][✘] Complete project (by: Dec 31 2023, 11:59 PM)","lastModifiedDate":"2023-09-21"},{"lineNumber":150,"author":{"gitId":"ScarletBlanks"},"content":"```","lastModifiedDate":"2023-09-21"},{"lineNumber":151,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":152,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":153,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":154,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":155,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"ScarletBlanks":131,"-":24}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":" * The Deadline class represents a task with a specific deadline. It is a subclass of the Task class.","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":" * It can have either a LocalDate or LocalDateTime deadline, and it can be marked as done or undone.","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"    //fields","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"    protected String by;","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"     * The date of the deadline for the task when it is represented as a LocalDate.","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"    protected LocalDate date;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"     * The date and time of the deadline for the task when it is represented as a LocalDateTime.","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"    protected LocalDateTime dateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"ScarletBlanks"},"content":"     * An integer representing the mode of time representation:","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"ScarletBlanks"},"content":"     * 1 for LocalDate, 2 for LocalDateTime, and 0 for custom format (stored as a string).","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"ScarletBlanks"},"content":"    protected int modeOfTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"ScarletBlanks"},"content":"     * The DateTimeFormatter used to format the date when it is represented as \"dd/MM/yyyy\".","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"ScarletBlanks"},"content":"    protected DateTimeFormatter formatDate \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"ScarletBlanks"},"content":"     * The DateTimeFormatter used to format the date and time when it is represented as \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"ScarletBlanks"},"content":"    protected DateTimeFormatter formatDateTime \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"ScarletBlanks"},"content":"    // Constructors","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"ScarletBlanks"},"content":"     * Constructs a Deadline object with a description and a LocalDate deadline.","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"ScarletBlanks"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"ScarletBlanks"},"content":"     * @param by          The deadline represented as a LocalDate.","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"ScarletBlanks"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"ScarletBlanks"},"content":"        super(description);","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"ScarletBlanks"},"content":"        this.modeOfTime \u003d 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"ScarletBlanks"},"content":"        this.date \u003d by;","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":52,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"ScarletBlanks"},"content":"     * Constructs a Deadline object with a description and a LocalDateTime deadline.","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"ScarletBlanks"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"ScarletBlanks"},"content":"     * @param by          The deadline represented as a LocalDateTime.","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"ScarletBlanks"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"ScarletBlanks"},"content":"        super(description);","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"ScarletBlanks"},"content":"        this.modeOfTime \u003d 2;","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"ScarletBlanks"},"content":"        this.dateTime \u003d by;","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"ScarletBlanks"},"content":"    public Deadline(String description, LocalDate by, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"ScarletBlanks"},"content":"        super(description);","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"ScarletBlanks"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"ScarletBlanks"},"content":"        this.modeOfTime \u003d 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"ScarletBlanks"},"content":"        this.date \u003d by;","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"ScarletBlanks"},"content":"    public Deadline(String description, LocalDateTime by, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"ScarletBlanks"},"content":"        super(description);","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"ScarletBlanks"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"ScarletBlanks"},"content":"        this.modeOfTime \u003d 2;","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"ScarletBlanks"},"content":"        this.dateTime \u003d by;","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"ScarletBlanks"},"content":"    public Deadline(String description, LocalDate by, boolean isDone, int modeOfTime) {","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"ScarletBlanks"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"ScarletBlanks"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"ScarletBlanks"},"content":"        this.modeOfTime \u003d modeOfTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"ScarletBlanks"},"content":"        this.date \u003d by;","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"ScarletBlanks"},"content":"    public Deadline(String description, LocalDateTime by, boolean isDone, int modeOfTime) {","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"ScarletBlanks"},"content":"        super(description);","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"ScarletBlanks"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"ScarletBlanks"},"content":"        this.dateTime \u003d by;","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"ScarletBlanks"},"content":"        this.modeOfTime \u003d modeOfTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"ScarletBlanks"},"content":"    private String dateAsString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"ScarletBlanks"},"content":"        if (this.modeOfTime \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"ScarletBlanks"},"content":"            return this.date.format(formatDate);","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"ScarletBlanks"},"content":"        } else if (this.modeOfTime \u003d\u003d 2) {","lastModifiedDate":"2023-09-07"},{"lineNumber":96,"author":{"gitId":"ScarletBlanks"},"content":"            return this.dateTime.format(formatDateTime);","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"ScarletBlanks"},"content":"        } else {","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"ScarletBlanks"},"content":"            return this.by;","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"ScarletBlanks"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"ScarletBlanks"},"content":"    private String dateAsSavedString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"ScarletBlanks"},"content":"        if (this.modeOfTime \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"ScarletBlanks"},"content":"            return this.date.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"ScarletBlanks"},"content":"        } else if (this.modeOfTime \u003d\u003d 2) {","lastModifiedDate":"2023-09-07"},{"lineNumber":106,"author":{"gitId":"ScarletBlanks"},"content":"            return this.dateTime.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"ScarletBlanks"},"content":"        } else {","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"ScarletBlanks"},"content":"            return this.by;","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"ScarletBlanks"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":112,"author":{"gitId":"ScarletBlanks"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"ScarletBlanks"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"ScarletBlanks"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.dateAsString() + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"ScarletBlanks"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"ScarletBlanks"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"ScarletBlanks"},"content":"        String divider \u003d \" | \";","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"ScarletBlanks"},"content":"        return \"D\" + divider + super.toSaveString() + divider + this.dateAsSavedString() + divider + this.modeOfTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":123,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":124,"author":{"gitId":"ScarletBlanks"},"content":"     * Returns the date of the deadline based on the mode of time representation.","lastModifiedDate":"2023-09-21"},{"lineNumber":125,"author":{"gitId":"ScarletBlanks"},"content":"     * If the mode is 1 (LocalDate), it returns a LocalDate; if the mode is 2 (LocalDateTime),","lastModifiedDate":"2023-09-21"},{"lineNumber":126,"author":{"gitId":"ScarletBlanks"},"content":"     * it converts the LocalDateTime to a LocalDate and returns it; otherwise, it returns null.","lastModifiedDate":"2023-09-21"},{"lineNumber":127,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":128,"author":{"gitId":"ScarletBlanks"},"content":"     * @return The date of the deadline.","lastModifiedDate":"2023-09-21"},{"lineNumber":129,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":130,"author":{"gitId":"ScarletBlanks"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2023-09-13"},{"lineNumber":131,"author":{"gitId":"ScarletBlanks"},"content":"        if (this.modeOfTime \u003d\u003d 1) {","lastModifiedDate":"2023-09-13"},{"lineNumber":132,"author":{"gitId":"ScarletBlanks"},"content":"            return date;","lastModifiedDate":"2023-09-13"},{"lineNumber":133,"author":{"gitId":"ScarletBlanks"},"content":"        } else if (this.modeOfTime \u003d\u003d 2) {","lastModifiedDate":"2023-09-13"},{"lineNumber":134,"author":{"gitId":"ScarletBlanks"},"content":"            return dateTime.toLocalDate();","lastModifiedDate":"2023-09-13"},{"lineNumber":135,"author":{"gitId":"ScarletBlanks"},"content":"        } else {","lastModifiedDate":"2023-09-22"},{"lineNumber":136,"author":{"gitId":"ScarletBlanks"},"content":"            return date;","lastModifiedDate":"2023-09-13"},{"lineNumber":137,"author":{"gitId":"ScarletBlanks"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":138,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":139,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ScarletBlanks":139}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":" * The DialogBox class represents a graphical dialog box in the user interface. It is used to display","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":" * messages from the user and responses from Duke (the chatbot).","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":" * It extends the HBox class and contains a Label for text content and an ImageView for displaying images.","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"    private final Label text;","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"    private final ImageView displayPicture;","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"ScarletBlanks"},"content":"     * Constructs a DialogBox with a Label and an ImageView to display text and an image, respectively.","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"ScarletBlanks"},"content":"     * @param l  The Label containing the text content of the dialog box.","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"ScarletBlanks"},"content":"     * @param iv The ImageView displaying an image in the dialog box (e.g., user\u0027s or Duke\u0027s avatar).","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"ScarletBlanks"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"ScarletBlanks"},"content":"        text \u003d l;","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"ScarletBlanks"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"ScarletBlanks"},"content":"        text.setWrapText(true);","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"ScarletBlanks"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"ScarletBlanks"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"ScarletBlanks"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"ScarletBlanks"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"ScarletBlanks"},"content":"     * Creates and returns a user\u0027s dialog box with the provided Label and ImageView.","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"ScarletBlanks"},"content":"     * @param l  The Label containing the user\u0027s message.","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"ScarletBlanks"},"content":"     * @param iv The ImageView for the user\u0027s avatar or image.","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"ScarletBlanks"},"content":"     * @return A DialogBox representing the user\u0027s message.","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"ScarletBlanks"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"ScarletBlanks"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"ScarletBlanks"},"content":"     * Creates and returns Duke\u0027s dialog box with the provided Label and ImageView.","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"ScarletBlanks"},"content":"     * Additionally, it flips the dialog box to align it to the top-left corner (Duke\u0027s messages).","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"ScarletBlanks"},"content":"     * @param l  The Label containing Duke\u0027s response message.","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"ScarletBlanks"},"content":"     * @param iv The ImageView for Duke\u0027s avatar or image.","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"ScarletBlanks"},"content":"     * @return A DialogBox representing Duke\u0027s response.","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"ScarletBlanks"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"ScarletBlanks"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"ScarletBlanks"},"content":"        db.flip();","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"ScarletBlanks"},"content":"        return db;","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":64,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"ScarletBlanks"},"content":"     * Flips the alignment of the dialog box to the top-left corner.","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"ScarletBlanks"},"content":"     * This is used for Duke\u0027s messages to align them differently from the user\u0027s messages.","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"ScarletBlanks"},"content":"    private void flip() {","lastModifiedDate":"2023-09-10"},{"lineNumber":69,"author":{"gitId":"ScarletBlanks"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"ScarletBlanks"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-10"},{"lineNumber":71,"author":{"gitId":"ScarletBlanks"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-09-10"},{"lineNumber":72,"author":{"gitId":"ScarletBlanks"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-09-10"},{"lineNumber":73,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":74,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"ScarletBlanks":74}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":" * The `Duke` class extends `Application` and serves as the central","lastModifiedDate":"2023-09-22"},{"lineNumber":22,"author":{"gitId":"ScarletBlanks"},"content":" * component for handling user input and providing output through a GUI.","lastModifiedDate":"2023-09-22"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":" * It manages a chat interface for interactions with the user.","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"ScarletBlanks"},"content":" * Credit to: https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"ScarletBlanks"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"ScarletBlanks"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"ScarletBlanks"},"content":"    private final Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"ScarletBlanks"},"content":"    private final Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"ScarletBlanks"},"content":"    String saveFileDir \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"ScarletBlanks"},"content":"    UiGUI UiGUI \u003d new UiGUI();","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"ScarletBlanks"},"content":"    Storage storage \u003d new Storage(saveFileDir);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"ScarletBlanks"},"content":"    TaskList tasks \u003d new TaskList(storage.loadSaveFile());","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"ScarletBlanks"},"content":"    ParserGUI parserGUI \u003d new ParserGUI(tasks, UiGUI, storage);","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"ScarletBlanks"},"content":"    ArrayList\u003cTask\u003e myList \u003d new ArrayList\u003cTask\u003e(); // Create an ArrayList object","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"ScarletBlanks"},"content":"    Scanner myScanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"ScarletBlanks"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"ScarletBlanks"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"ScarletBlanks"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"ScarletBlanks"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"ScarletBlanks"},"content":"    private Scene scene;","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"ScarletBlanks"},"content":"     * Starts the Duke application and initializes the GUI components.","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"ScarletBlanks"},"content":"     * @param stage The primary stage for the application.","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":48,"author":{"gitId":"ScarletBlanks"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"ScarletBlanks"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"ScarletBlanks"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"ScarletBlanks"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"ScarletBlanks"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"ScarletBlanks"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"ScarletBlanks"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"ScarletBlanks"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"ScarletBlanks"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"ScarletBlanks"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"ScarletBlanks"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"ScarletBlanks"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"ScarletBlanks"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"ScarletBlanks"},"content":"        stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"ScarletBlanks"},"content":"        // more code to be added here later","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"ScarletBlanks"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"ScarletBlanks"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"ScarletBlanks"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"ScarletBlanks"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"ScarletBlanks"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"ScarletBlanks"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"ScarletBlanks"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"ScarletBlanks"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"ScarletBlanks"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"ScarletBlanks"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"ScarletBlanks"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"ScarletBlanks"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"ScarletBlanks"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"ScarletBlanks"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"ScarletBlanks"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"ScarletBlanks"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"ScarletBlanks"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"ScarletBlanks"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":96,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"ScarletBlanks"},"content":"        AnchorPane.setLeftAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"ScarletBlanks"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-09-07"},{"lineNumber":99,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":100,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":101,"author":{"gitId":"ScarletBlanks"},"content":"        //Step 3. Add functionality to handle user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":102,"author":{"gitId":"ScarletBlanks"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-07"},{"lineNumber":103,"author":{"gitId":"ScarletBlanks"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2023-09-07"},{"lineNumber":104,"author":{"gitId":"ScarletBlanks"},"content":"            userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"ScarletBlanks"},"content":"        });","lastModifiedDate":"2023-09-07"},{"lineNumber":106,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"ScarletBlanks"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"ScarletBlanks"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"ScarletBlanks"},"content":"            userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"ScarletBlanks"},"content":"        });","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":112,"author":{"gitId":"ScarletBlanks"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2023-09-07"},{"lineNumber":113,"author":{"gitId":"ScarletBlanks"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-09-07"},{"lineNumber":114,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":115,"author":{"gitId":"ScarletBlanks"},"content":"        //Part 3. Add functionality to handle user input.","lastModifiedDate":"2023-09-07"},{"lineNumber":116,"author":{"gitId":"ScarletBlanks"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-09-07"},{"lineNumber":117,"author":{"gitId":"ScarletBlanks"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-07"},{"lineNumber":118,"author":{"gitId":"ScarletBlanks"},"content":"        });","lastModifiedDate":"2023-09-07"},{"lineNumber":119,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":120,"author":{"gitId":"ScarletBlanks"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-09-07"},{"lineNumber":121,"author":{"gitId":"ScarletBlanks"},"content":"            handleUserInput();","lastModifiedDate":"2023-09-07"},{"lineNumber":122,"author":{"gitId":"ScarletBlanks"},"content":"        });","lastModifiedDate":"2023-09-07"},{"lineNumber":123,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":124,"author":{"gitId":"ScarletBlanks"},"content":"        Label dukeText \u003d new Label(UiGUI.hello());","lastModifiedDate":"2023-09-13"},{"lineNumber":125,"author":{"gitId":"ScarletBlanks"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(dukeText, new ImageView(duke)));","lastModifiedDate":"2023-09-13"},{"lineNumber":126,"author":{"gitId":"ScarletBlanks"},"content":"        //Automatically remind for the next 3 days","lastModifiedDate":"2023-09-13"},{"lineNumber":127,"author":{"gitId":"ScarletBlanks"},"content":"        dukeText \u003d new Label(UiGUI.remind(tasks, 3));","lastModifiedDate":"2023-09-13"},{"lineNumber":128,"author":{"gitId":"ScarletBlanks"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(dukeText, new ImageView(duke)));","lastModifiedDate":"2023-09-13"},{"lineNumber":129,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":130,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":131,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":132,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":133,"author":{"gitId":"ScarletBlanks"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2023-09-07"},{"lineNumber":134,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-10"},{"lineNumber":135,"author":{"gitId":"ScarletBlanks"},"content":"     * @param text String containing text to add","lastModifiedDate":"2023-09-07"},{"lineNumber":136,"author":{"gitId":"ScarletBlanks"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2023-09-07"},{"lineNumber":137,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":138,"author":{"gitId":"ScarletBlanks"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2023-09-07"},{"lineNumber":139,"author":{"gitId":"ScarletBlanks"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2023-09-07"},{"lineNumber":140,"author":{"gitId":"ScarletBlanks"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2023-09-07"},{"lineNumber":141,"author":{"gitId":"ScarletBlanks"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2023-09-07"},{"lineNumber":142,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":143,"author":{"gitId":"ScarletBlanks"},"content":"        return textToAdd;","lastModifiedDate":"2023-09-07"},{"lineNumber":144,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":145,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":146,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":147,"author":{"gitId":"ScarletBlanks"},"content":"     * Handles user input by displaying it in the chat interface and obtaining","lastModifiedDate":"2023-09-22"},{"lineNumber":148,"author":{"gitId":"ScarletBlanks"},"content":"     * a response from the Duke chatbot.","lastModifiedDate":"2023-09-22"},{"lineNumber":149,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":150,"author":{"gitId":"ScarletBlanks"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":151,"author":{"gitId":"ScarletBlanks"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2023-09-07"},{"lineNumber":152,"author":{"gitId":"ScarletBlanks"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2023-09-07"},{"lineNumber":153,"author":{"gitId":"ScarletBlanks"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getUserDialog(userText, new ImageView(user)), DialogBox.getDukeDialog(dukeText, new ImageView(duke)));","lastModifiedDate":"2023-09-10"},{"lineNumber":154,"author":{"gitId":"ScarletBlanks"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":155,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":156,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":157,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":158,"author":{"gitId":"ScarletBlanks"},"content":"     * Obtains a response from the Duke chatbot based on user input.","lastModifiedDate":"2023-09-22"},{"lineNumber":159,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":160,"author":{"gitId":"ScarletBlanks"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2023-09-22"},{"lineNumber":161,"author":{"gitId":"ScarletBlanks"},"content":"     * @return The Duke chatbot\u0027s response.","lastModifiedDate":"2023-09-22"},{"lineNumber":162,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":163,"author":{"gitId":"ScarletBlanks"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":164,"author":{"gitId":"ScarletBlanks"},"content":"        return parserGUI.parseInput(input);","lastModifiedDate":"2023-09-13"},{"lineNumber":165,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":166,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":167,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ScarletBlanks":167,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"/**","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":" * The `DukeException` class is a custom exception that extends `RuntimeException`.","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":" * It is used to represent exceptions specific to the Duke chatbot application.","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":" * Each `DukeException` instance contains an error message and an error code for","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":" * identifying and handling different types of exceptions.","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":" */","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"     * The error code associated with the exception.","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"    private final String errorCode;","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"     * Constructs a new `DukeException` with the specified error message and error code.","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"     * @param errorMessage The error message describing the exception.","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"     * @param errorCode    The error code associated with the exception.","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"    public DukeException(String errorMessage, String errorCode) {","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"ScarletBlanks"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"        this.errorCode \u003d errorCode;","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"ScarletBlanks"},"content":"     * Gets the error code associated with this exception.","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"ScarletBlanks"},"content":"     * @return The error code as a String.","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"ScarletBlanks"},"content":"    public String getErrorCode() {","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"ScarletBlanks"},"content":"        return errorCode;","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ScarletBlanks":34}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":" * The Event class represents a task with a specified starting and ending date and time. It is a subclass of the Task class.","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":"     * The starting date and time of the event in string format.","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"    protected String from;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"     * The ending date and time of the event in string format.","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"    protected String to;","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"     * A boolean indicating whether the event task is marked as done or not.","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"     * Constructs an Event object with a description, starting date, and ending date.","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"ScarletBlanks"},"content":"     * @param from        The starting date and time of the event.","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"ScarletBlanks"},"content":"     * @param to          The ending date and time of the event.","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"ScarletBlanks"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"ScarletBlanks"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"ScarletBlanks"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"ScarletBlanks"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"ScarletBlanks"},"content":"     * Constructs an Event object with a description, starting date, ending date, and a boolean indicating whether it is done.","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"ScarletBlanks"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"ScarletBlanks"},"content":"     * @param from        The starting date and time of the event.","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"ScarletBlanks"},"content":"     * @param to          The ending date and time of the event.","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"ScarletBlanks"},"content":"     * @param isDone      A boolean indicating whether the event task is marked as done.","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"ScarletBlanks"},"content":"    public Event(String description, String from, String to, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"ScarletBlanks"},"content":"        super(description);","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"ScarletBlanks"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"ScarletBlanks"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"ScarletBlanks"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"ScarletBlanks"},"content":"     * Returns a string representation of the Event object.","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"ScarletBlanks"},"content":"     * @return A string representation of the event, including its type, description, and date/time details.","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"ScarletBlanks"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"ScarletBlanks"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"ScarletBlanks"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"ScarletBlanks"},"content":"     * Returns a string representation of the Event object suitable for saving to a file.","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"ScarletBlanks"},"content":"     * @return A string containing the event\u0027s details separated by a predefined divider.","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"ScarletBlanks"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"ScarletBlanks"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"ScarletBlanks"},"content":"        String divider \u003d \" | \";","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"ScarletBlanks"},"content":"        return \"E\" + divider + super.toSaveString() + divider + this.from + divider + this.to;","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ScarletBlanks":69}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package duke;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":" * The Launcher class serves as the entry point for launching the Duke application. It is used to work around","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":" * classpath issues when starting a JavaFX application.","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":" * Credit to: https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"public class Launcher {","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"     * The main method of the Launcher class, which launches the Duke application by calling the `Application.launch` method.","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"     * @param args The command-line arguments passed to the application.","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"        UiGUI uiGUI;","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"ScarletBlanks":21}},{"path":"src/main/java/duke/ParserGUI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package duke;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"public class ParserGUI {","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":"    private final TaskList tasks;","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":"    private final UiGUI UiGUI;","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"     * Creates a Parser","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"     * @param tasks   the TaskList","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"     * @param UiGUI   the ui object","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"     * @param storage the storage object","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"    ParserGUI(TaskList tasks, UiGUI UiGUI, Storage storage) {","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"        this.UiGUI \u003d UiGUI;","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"ScarletBlanks"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"ScarletBlanks"},"content":"     * Handles the \"bye\" command by saving tasks to a file and providing a goodbye message.","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"ScarletBlanks"},"content":"     * @return A goodbye message.","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"ScarletBlanks"},"content":"    private String handleBye() {","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"ScarletBlanks"},"content":"        storage.saveTasksToFile(tasks);","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"ScarletBlanks"},"content":"        return UiGUI.goodbye();","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"ScarletBlanks"},"content":"     * Handles the \"list\" command by displaying tasks in the task list.","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"ScarletBlanks"},"content":"     * @return A message displaying the tasks in the task list.","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"ScarletBlanks"},"content":"    private String handleList() {","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"ScarletBlanks"},"content":"        return UiGUI.tasksInList(this.tasks);","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"ScarletBlanks"},"content":"     * Handles the \"mark\" command by marking a task as done and updating the storage.","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"ScarletBlanks"},"content":"     * @param taskDetails The task number to mark as done.","lastModifiedDate":"2023-09-22"},{"lineNumber":48,"author":{"gitId":"ScarletBlanks"},"content":"     * @return A message indicating the task has been marked as done.","lastModifiedDate":"2023-09-22"},{"lineNumber":49,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":50,"author":{"gitId":"ScarletBlanks"},"content":"    private String handleMark(String taskDetails) {","lastModifiedDate":"2023-09-22"},{"lineNumber":51,"author":{"gitId":"ScarletBlanks"},"content":"        int number \u003d Integer.parseInt(taskDetails);","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"ScarletBlanks"},"content":"        Task item \u003d tasks.get(number);","lastModifiedDate":"2023-09-22"},{"lineNumber":53,"author":{"gitId":"ScarletBlanks"},"content":"        item.set();","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"ScarletBlanks"},"content":"        storage.saveTasksToFile(tasks);","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"ScarletBlanks"},"content":"        return UiGUI.taskDone(item);","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":57,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":59,"author":{"gitId":"ScarletBlanks"},"content":"     * Handles the \"unmark\" command by marking a task as undone and updating the storage.","lastModifiedDate":"2023-09-22"},{"lineNumber":60,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":61,"author":{"gitId":"ScarletBlanks"},"content":"     * @param taskDetails The task number to mark as undone.","lastModifiedDate":"2023-09-22"},{"lineNumber":62,"author":{"gitId":"ScarletBlanks"},"content":"     * @return A message indicating the task has been marked as undone.","lastModifiedDate":"2023-09-22"},{"lineNumber":63,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":64,"author":{"gitId":"ScarletBlanks"},"content":"    private String handleUnmark(String taskDetails) {","lastModifiedDate":"2023-09-22"},{"lineNumber":65,"author":{"gitId":"ScarletBlanks"},"content":"        int numero \u003d Integer.parseInt(taskDetails);","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"ScarletBlanks"},"content":"        Task item \u003d tasks.get(numero);","lastModifiedDate":"2023-09-22"},{"lineNumber":67,"author":{"gitId":"ScarletBlanks"},"content":"        item.unset();","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"ScarletBlanks"},"content":"        storage.saveTasksToFile(tasks);","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"ScarletBlanks"},"content":"        return UiGUI.taskUndone(item);","lastModifiedDate":"2023-09-12"},{"lineNumber":70,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":71,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":72,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":73,"author":{"gitId":"ScarletBlanks"},"content":"     * Handles the \"delete\" command by deleting a task and updating the storage.","lastModifiedDate":"2023-09-22"},{"lineNumber":74,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":75,"author":{"gitId":"ScarletBlanks"},"content":"     * @param taskDetails The task number to delete.","lastModifiedDate":"2023-09-22"},{"lineNumber":76,"author":{"gitId":"ScarletBlanks"},"content":"     * @return A message indicating the task has been deleted.","lastModifiedDate":"2023-09-22"},{"lineNumber":77,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":78,"author":{"gitId":"ScarletBlanks"},"content":"    private String handleDelete(String taskDetails) {","lastModifiedDate":"2023-09-22"},{"lineNumber":79,"author":{"gitId":"ScarletBlanks"},"content":"        int numbero \u003d Integer.parseInt(taskDetails);","lastModifiedDate":"2023-09-13"},{"lineNumber":80,"author":{"gitId":"ScarletBlanks"},"content":"        Task item \u003d tasks.get(numbero);","lastModifiedDate":"2023-09-22"},{"lineNumber":81,"author":{"gitId":"ScarletBlanks"},"content":"        tasks.delete(numbero);","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"ScarletBlanks"},"content":"        storage.saveTasksToFile(tasks);","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"ScarletBlanks"},"content":"        return UiGUI.taskDelete(item, tasks);","lastModifiedDate":"2023-09-12"},{"lineNumber":84,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":85,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":86,"author":{"gitId":"ScarletBlanks"},"content":"     * Handles the \"todo\" command by deleting a task and updating the storage.","lastModifiedDate":"2023-09-22"},{"lineNumber":87,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":88,"author":{"gitId":"ScarletBlanks"},"content":"     * @param taskDetails The task number to delete.","lastModifiedDate":"2023-09-22"},{"lineNumber":89,"author":{"gitId":"ScarletBlanks"},"content":"     * @return A message indicating the todo task has been added.","lastModifiedDate":"2023-09-22"},{"lineNumber":90,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":91,"author":{"gitId":"ScarletBlanks"},"content":"    private String handleTodoTask(String taskDetails) {","lastModifiedDate":"2023-09-22"},{"lineNumber":92,"author":{"gitId":"ScarletBlanks"},"content":"        if (!taskDetails.isEmpty()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":93,"author":{"gitId":"ScarletBlanks"},"content":"            ToDo t \u003d new ToDo(taskDetails);","lastModifiedDate":"2023-09-13"},{"lineNumber":94,"author":{"gitId":"ScarletBlanks"},"content":"            tasks.add(t);","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"ScarletBlanks"},"content":"            storage.saveTasksToFile(tasks);","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"ScarletBlanks"},"content":"            return UiGUI.taskAdd(t, tasks);","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"ScarletBlanks"},"content":"        } else {","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"ScarletBlanks"},"content":"            throw new DukeException(\"Invalid ToDo format. Use \u0027todo \u003cdescription\u003e\u0027\", \"invalid_date\");","lastModifiedDate":"2023-09-22"},{"lineNumber":99,"author":{"gitId":"ScarletBlanks"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":100,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":101,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":102,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":103,"author":{"gitId":"ScarletBlanks"},"content":"     * Handles the \"deadline\" command by creating a new deadline task, adding it to the task list,","lastModifiedDate":"2023-09-22"},{"lineNumber":104,"author":{"gitId":"ScarletBlanks"},"content":"     * saving the tasks to storage, and returning an appropriate response message.","lastModifiedDate":"2023-09-22"},{"lineNumber":105,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":106,"author":{"gitId":"ScarletBlanks"},"content":"     * @param taskDetails The task details including description and deadline.","lastModifiedDate":"2023-09-22"},{"lineNumber":107,"author":{"gitId":"ScarletBlanks"},"content":"     * @return A message indicating the task has been added or an error message.","lastModifiedDate":"2023-09-22"},{"lineNumber":108,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":109,"author":{"gitId":"ScarletBlanks"},"content":"    private String handleDeadline(String taskDetails) {","lastModifiedDate":"2023-09-22"},{"lineNumber":110,"author":{"gitId":"ScarletBlanks"},"content":"        String[] toBeSplit \u003d taskDetails.split(\" /by \");","lastModifiedDate":"2023-09-13"},{"lineNumber":111,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":112,"author":{"gitId":"ScarletBlanks"},"content":"        // Check if the input format is valid","lastModifiedDate":"2023-09-22"},{"lineNumber":113,"author":{"gitId":"ScarletBlanks"},"content":"        if (toBeSplit.length !\u003d 2) {","lastModifiedDate":"2023-09-13"},{"lineNumber":114,"author":{"gitId":"ScarletBlanks"},"content":"            throw new DukeException(\"Invalid deadline format. Use \u0027deadline \u003cdescription\u003e /by YYYY/MM/DD HHmm\u0027\", \"invalid_date\");","lastModifiedDate":"2023-09-22"},{"lineNumber":115,"author":{"gitId":"ScarletBlanks"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":116,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":117,"author":{"gitId":"ScarletBlanks"},"content":"        String deadlineDescription \u003d toBeSplit[0];","lastModifiedDate":"2023-09-13"},{"lineNumber":118,"author":{"gitId":"ScarletBlanks"},"content":"        String deadlineDate \u003d toBeSplit[1];","lastModifiedDate":"2023-09-13"},{"lineNumber":119,"author":{"gitId":"ScarletBlanks"},"content":"        Deadline d;","lastModifiedDate":"2023-09-12"},{"lineNumber":120,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":121,"author":{"gitId":"ScarletBlanks"},"content":"        // Check if the deadlineDate contains time (hours and minutes)","lastModifiedDate":"2023-09-22"},{"lineNumber":122,"author":{"gitId":"ScarletBlanks"},"content":"        if (deadlineDate.contains(\" \")) {","lastModifiedDate":"2023-09-13"},{"lineNumber":123,"author":{"gitId":"ScarletBlanks"},"content":"            d \u003d new Deadline(deadlineDescription, LocalDateTime.parse(deadlineDate, DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\")));","lastModifiedDate":"2023-09-13"},{"lineNumber":124,"author":{"gitId":"ScarletBlanks"},"content":"        } else {","lastModifiedDate":"2023-09-12"},{"lineNumber":125,"author":{"gitId":"ScarletBlanks"},"content":"            d \u003d new Deadline(deadlineDescription, LocalDate.parse(deadlineDate, DateTimeFormatter.ofPattern(\"yyyy/MM/dd\")));","lastModifiedDate":"2023-09-13"},{"lineNumber":126,"author":{"gitId":"ScarletBlanks"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":127,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":128,"author":{"gitId":"ScarletBlanks"},"content":"        tasks.add(d);","lastModifiedDate":"2023-09-12"},{"lineNumber":129,"author":{"gitId":"ScarletBlanks"},"content":"        storage.saveTasksToFile(tasks);","lastModifiedDate":"2023-09-12"},{"lineNumber":130,"author":{"gitId":"ScarletBlanks"},"content":"        return UiGUI.taskAdd(d, tasks);","lastModifiedDate":"2023-09-12"},{"lineNumber":131,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":132,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":133,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":134,"author":{"gitId":"ScarletBlanks"},"content":"     * Handles the \"event\" command by creating a new event task, adding it to the task list,","lastModifiedDate":"2023-09-22"},{"lineNumber":135,"author":{"gitId":"ScarletBlanks"},"content":"     * saving the tasks to storage, and returning an appropriate response message.","lastModifiedDate":"2023-09-22"},{"lineNumber":136,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":137,"author":{"gitId":"ScarletBlanks"},"content":"     * @param taskDetails The task details including description, event start date, and end date.","lastModifiedDate":"2023-09-22"},{"lineNumber":138,"author":{"gitId":"ScarletBlanks"},"content":"     * @return A message indicating the task has been added or an error message.","lastModifiedDate":"2023-09-22"},{"lineNumber":139,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":140,"author":{"gitId":"ScarletBlanks"},"content":"    private String handleEvent(String taskDetails) {","lastModifiedDate":"2023-09-22"},{"lineNumber":141,"author":{"gitId":"ScarletBlanks"},"content":"        if (!taskDetails.contains(\" /from \") || !taskDetails.contains(\" /to \")) {","lastModifiedDate":"2023-09-22"},{"lineNumber":142,"author":{"gitId":"ScarletBlanks"},"content":"            throw new DukeException(\"Invalid Event format. Use \u0027event \u003cdescription\u003e /from \u003cDateTime\u003e to \u003cDate Time\u003e\u0027\", \"invalid_date\");","lastModifiedDate":"2023-09-22"},{"lineNumber":143,"author":{"gitId":"ScarletBlanks"},"content":"        }","lastModifiedDate":"2023-09-22"},{"lineNumber":144,"author":{"gitId":"ScarletBlanks"},"content":"        String[] to_Split \u003d taskDetails.split(\" /from \");","lastModifiedDate":"2023-09-13"},{"lineNumber":145,"author":{"gitId":"ScarletBlanks"},"content":"        String[] second_Split \u003d to_Split[1].split(\" /to \");","lastModifiedDate":"2023-09-13"},{"lineNumber":146,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":147,"author":{"gitId":"ScarletBlanks"},"content":"        // Check if the input format is valid","lastModifiedDate":"2023-09-22"},{"lineNumber":148,"author":{"gitId":"ScarletBlanks"},"content":"        if (second_Split[1].length() \u003c 1 || second_Split[0].length() \u003c 1 || second_Split[0].length() \u003c 1) {","lastModifiedDate":"2023-09-22"},{"lineNumber":149,"author":{"gitId":"ScarletBlanks"},"content":"            throw new DukeException(\"Invalid Event format. Use \u0027event \u003cdescription\u003e /from \u003cDateTime\u003e to \u003cDate Time\u003e\u0027\", \"invalid_date\");","lastModifiedDate":"2023-09-22"},{"lineNumber":150,"author":{"gitId":"ScarletBlanks"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":151,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":152,"author":{"gitId":"ScarletBlanks"},"content":"        String eventDescription \u003d to_Split[0];","lastModifiedDate":"2023-09-13"},{"lineNumber":153,"author":{"gitId":"ScarletBlanks"},"content":"        String eventStartDate \u003d second_Split[0];","lastModifiedDate":"2023-09-13"},{"lineNumber":154,"author":{"gitId":"ScarletBlanks"},"content":"        String eventEndDate \u003d second_Split[1];","lastModifiedDate":"2023-09-13"},{"lineNumber":155,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":156,"author":{"gitId":"ScarletBlanks"},"content":"        Event e \u003d new Event(eventDescription, eventStartDate, eventEndDate);","lastModifiedDate":"2023-09-13"},{"lineNumber":157,"author":{"gitId":"ScarletBlanks"},"content":"        tasks.add(e);","lastModifiedDate":"2023-09-12"},{"lineNumber":158,"author":{"gitId":"ScarletBlanks"},"content":"        storage.saveTasksToFile(tasks);","lastModifiedDate":"2023-09-12"},{"lineNumber":159,"author":{"gitId":"ScarletBlanks"},"content":"        return UiGUI.taskAdd(e, tasks);","lastModifiedDate":"2023-09-12"},{"lineNumber":160,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":161,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":162,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":163,"author":{"gitId":"ScarletBlanks"},"content":"     * Handles the \"find\" command by searching for tasks that match a given keyword.","lastModifiedDate":"2023-09-22"},{"lineNumber":164,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":165,"author":{"gitId":"ScarletBlanks"},"content":"     * @param taskDetails The keyword to search for within task descriptions.","lastModifiedDate":"2023-09-22"},{"lineNumber":166,"author":{"gitId":"ScarletBlanks"},"content":"     * @return A message displaying matching tasks or an error message.","lastModifiedDate":"2023-09-22"},{"lineNumber":167,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":168,"author":{"gitId":"ScarletBlanks"},"content":"    private String handleFind(String taskDetails) {","lastModifiedDate":"2023-09-22"},{"lineNumber":169,"author":{"gitId":"ScarletBlanks"},"content":"        if (!taskDetails.isEmpty()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":170,"author":{"gitId":"ScarletBlanks"},"content":"            return UiGUI.printMatchingTasks(tasks, taskDetails);","lastModifiedDate":"2023-09-13"},{"lineNumber":171,"author":{"gitId":"ScarletBlanks"},"content":"        } else {","lastModifiedDate":"2023-09-12"},{"lineNumber":172,"author":{"gitId":"ScarletBlanks"},"content":"            return UiGUI.showError(\"find\");","lastModifiedDate":"2023-09-12"},{"lineNumber":173,"author":{"gitId":"ScarletBlanks"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":174,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":175,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":176,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":177,"author":{"gitId":"ScarletBlanks"},"content":"     * Handles the \"remind\" command by providing reminders for tasks due within a specified number of days.","lastModifiedDate":"2023-09-22"},{"lineNumber":178,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":179,"author":{"gitId":"ScarletBlanks"},"content":"     * @param taskDetails The number of days for which to provide reminders.","lastModifiedDate":"2023-09-22"},{"lineNumber":180,"author":{"gitId":"ScarletBlanks"},"content":"     * @return A message displaying reminders or an error message.","lastModifiedDate":"2023-09-22"},{"lineNumber":181,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":182,"author":{"gitId":"ScarletBlanks"},"content":"    private String handleRemind(String taskDetails) {","lastModifiedDate":"2023-09-22"},{"lineNumber":183,"author":{"gitId":"ScarletBlanks"},"content":"        int numberOfDays;","lastModifiedDate":"2023-09-13"},{"lineNumber":184,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":185,"author":{"gitId":"ScarletBlanks"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":186,"author":{"gitId":"ScarletBlanks"},"content":"            numberOfDays \u003d Integer.parseInt(taskDetails);","lastModifiedDate":"2023-09-13"},{"lineNumber":187,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":188,"author":{"gitId":"ScarletBlanks"},"content":"            // Check if the number of days is non-negative","lastModifiedDate":"2023-09-22"},{"lineNumber":189,"author":{"gitId":"ScarletBlanks"},"content":"            if (numberOfDays \u003c 0) {","lastModifiedDate":"2023-09-13"},{"lineNumber":190,"author":{"gitId":"ScarletBlanks"},"content":"                return UiGUI.showError(\"remind\");","lastModifiedDate":"2023-09-13"},{"lineNumber":191,"author":{"gitId":"ScarletBlanks"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":192,"author":{"gitId":"ScarletBlanks"},"content":"        } catch (NumberFormatException x) {","lastModifiedDate":"2023-09-13"},{"lineNumber":193,"author":{"gitId":"ScarletBlanks"},"content":"            return UiGUI.showError(\"remind\");","lastModifiedDate":"2023-09-13"},{"lineNumber":194,"author":{"gitId":"ScarletBlanks"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":195,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":196,"author":{"gitId":"ScarletBlanks"},"content":"        return UiGUI.remind(tasks, numberOfDays);","lastModifiedDate":"2023-09-13"},{"lineNumber":197,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-22"},{"lineNumber":198,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":199,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":200,"author":{"gitId":"ScarletBlanks"},"content":"     * Parses the input given by the user","lastModifiedDate":"2023-09-22"},{"lineNumber":201,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":202,"author":{"gitId":"ScarletBlanks"},"content":"     * @param userInput the full input string provided by the user","lastModifiedDate":"2023-09-22"},{"lineNumber":203,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":204,"author":{"gitId":"ScarletBlanks"},"content":"    public String parseInput(String userInput) {","lastModifiedDate":"2023-09-22"},{"lineNumber":205,"author":{"gitId":"ScarletBlanks"},"content":"        try {","lastModifiedDate":"2023-09-22"},{"lineNumber":206,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":207,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":208,"author":{"gitId":"ScarletBlanks"},"content":"            // Split the userInput into words","lastModifiedDate":"2023-09-22"},{"lineNumber":209,"author":{"gitId":"ScarletBlanks"},"content":"            String[] inputParts \u003d userInput.split(\"\\\\s+\", 2);","lastModifiedDate":"2023-09-22"},{"lineNumber":210,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":211,"author":{"gitId":"ScarletBlanks"},"content":"            // The first word is the command","lastModifiedDate":"2023-09-22"},{"lineNumber":212,"author":{"gitId":"ScarletBlanks"},"content":"            String command \u003d inputParts[0].toLowerCase().trim();","lastModifiedDate":"2023-09-22"},{"lineNumber":213,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":214,"author":{"gitId":"ScarletBlanks"},"content":"            // The rest of the input (if any) is the task description or arguments","lastModifiedDate":"2023-09-22"},{"lineNumber":215,"author":{"gitId":"ScarletBlanks"},"content":"            String taskDetails \u003d (inputParts.length \u003e 1) ? inputParts[1].trim() : \"\";","lastModifiedDate":"2023-09-22"},{"lineNumber":216,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":217,"author":{"gitId":"ScarletBlanks"},"content":"            Task item;","lastModifiedDate":"2023-09-22"},{"lineNumber":218,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":219,"author":{"gitId":"ScarletBlanks"},"content":"            switch (command) {","lastModifiedDate":"2023-09-22"},{"lineNumber":220,"author":{"gitId":"ScarletBlanks"},"content":"            case \"bye\":","lastModifiedDate":"2023-09-22"},{"lineNumber":221,"author":{"gitId":"ScarletBlanks"},"content":"                return handleBye();","lastModifiedDate":"2023-09-22"},{"lineNumber":222,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":223,"author":{"gitId":"ScarletBlanks"},"content":"            case \"list\":","lastModifiedDate":"2023-09-22"},{"lineNumber":224,"author":{"gitId":"ScarletBlanks"},"content":"                return handleList();","lastModifiedDate":"2023-09-22"},{"lineNumber":225,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":226,"author":{"gitId":"ScarletBlanks"},"content":"            case \"mark\":","lastModifiedDate":"2023-09-22"},{"lineNumber":227,"author":{"gitId":"ScarletBlanks"},"content":"                return handleMark(taskDetails);","lastModifiedDate":"2023-09-22"},{"lineNumber":228,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":229,"author":{"gitId":"ScarletBlanks"},"content":"            case \"unmark\":","lastModifiedDate":"2023-09-22"},{"lineNumber":230,"author":{"gitId":"ScarletBlanks"},"content":"                return handleUnmark(taskDetails);","lastModifiedDate":"2023-09-22"},{"lineNumber":231,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":232,"author":{"gitId":"ScarletBlanks"},"content":"            case \"delete\":","lastModifiedDate":"2023-09-22"},{"lineNumber":233,"author":{"gitId":"ScarletBlanks"},"content":"                return handleDelete(taskDetails);","lastModifiedDate":"2023-09-22"},{"lineNumber":234,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":235,"author":{"gitId":"ScarletBlanks"},"content":"            case \"todo\":","lastModifiedDate":"2023-09-22"},{"lineNumber":236,"author":{"gitId":"ScarletBlanks"},"content":"                return handleTodoTask(taskDetails);","lastModifiedDate":"2023-09-22"},{"lineNumber":237,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":238,"author":{"gitId":"ScarletBlanks"},"content":"            case \"deadline\":","lastModifiedDate":"2023-09-22"},{"lineNumber":239,"author":{"gitId":"ScarletBlanks"},"content":"                return handleDeadline(taskDetails);","lastModifiedDate":"2023-09-22"},{"lineNumber":240,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":241,"author":{"gitId":"ScarletBlanks"},"content":"            case \"event\":","lastModifiedDate":"2023-09-22"},{"lineNumber":242,"author":{"gitId":"ScarletBlanks"},"content":"                return handleEvent(taskDetails);","lastModifiedDate":"2023-09-22"},{"lineNumber":243,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":244,"author":{"gitId":"ScarletBlanks"},"content":"            case \"find\":","lastModifiedDate":"2023-09-22"},{"lineNumber":245,"author":{"gitId":"ScarletBlanks"},"content":"                return handleFind(taskDetails);","lastModifiedDate":"2023-09-22"},{"lineNumber":246,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":247,"author":{"gitId":"ScarletBlanks"},"content":"            default:","lastModifiedDate":"2023-09-12"},{"lineNumber":248,"author":{"gitId":"ScarletBlanks"},"content":"                throw new DukeException(\"Unrecognized command: \" + command, \"unrecognized_command\");","lastModifiedDate":"2023-09-21"},{"lineNumber":249,"author":{"gitId":"ScarletBlanks"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":250,"author":{"gitId":"ScarletBlanks"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":251,"author":{"gitId":"ScarletBlanks"},"content":"            return UiGUI.showExError(e.getMessage());","lastModifiedDate":"2023-09-21"},{"lineNumber":252,"author":{"gitId":"ScarletBlanks"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-22"},{"lineNumber":253,"author":{"gitId":"ScarletBlanks"},"content":"            // Handle number format exceptions and return an error message to the GUI.","lastModifiedDate":"2023-09-21"},{"lineNumber":254,"author":{"gitId":"ScarletBlanks"},"content":"            return UiGUI.showExError(\"Invalid input format: Please enter a valid number.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":255,"author":{"gitId":"ScarletBlanks"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":256,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":257,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":258,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"ScarletBlanks":258}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"import java.io.*;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":" * The Storage class handles the saving and loading of task data to and from a file.","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":" * It is responsible for converting tasks to a suitable format for storage and retrieving them when needed.","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"     * The directory path where the task data file is stored.","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"    private final String dir;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"     * Constructs a Storage object with the specified directory path.","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"     * @param dir The directory path where the task data file is stored.","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"    public Storage(String dir) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"ScarletBlanks"},"content":"        this.dir \u003d dir;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"ScarletBlanks"},"content":"     * Saves the tasks from a TaskList to a file in the specified directory.","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"ScarletBlanks"},"content":"     * @param tasks The TaskList containing the tasks to be saved.","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"ScarletBlanks"},"content":"    public void saveTasksToFile(TaskList tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"ScarletBlanks"},"content":"        FileWriter fileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"ScarletBlanks"},"content":"        BufferedWriter bufferedWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"ScarletBlanks"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"ScarletBlanks"},"content":"            File outputFile \u003d new File(dir);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"ScarletBlanks"},"content":"            outputFile.getParentFile().mkdirs();","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"ScarletBlanks"},"content":"            outputFile.createNewFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"ScarletBlanks"},"content":"            fileWriter \u003d new FileWriter(outputFile);","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"ScarletBlanks"},"content":"            bufferedWriter \u003d new BufferedWriter((fileWriter));","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"ScarletBlanks"},"content":"            for (Task t : tasks.getList()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"ScarletBlanks"},"content":"                bufferedWriter.write(t.toSaveString());","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"ScarletBlanks"},"content":"                bufferedWriter.newLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"ScarletBlanks"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"ScarletBlanks"},"content":"            bufferedWriter.flush();","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"ScarletBlanks"},"content":"            bufferedWriter.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"ScarletBlanks"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"ScarletBlanks"},"content":"            UiGUI.Error(e);","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"ScarletBlanks"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"ScarletBlanks"},"content":"     * Loads tasks from a file in the specified directory and returns them as an ArrayList of Task objects.","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"ScarletBlanks"},"content":"     * @return An ArrayList of Task objects representing the tasks loaded from the file.","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"ScarletBlanks"},"content":"    public ArrayList\u003cTask\u003e loadSaveFile() {","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"ScarletBlanks"},"content":"        FileReader fileReader;","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"ScarletBlanks"},"content":"        BufferedReader bufferedReader;","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"ScarletBlanks"},"content":"        ArrayList\u003cTask\u003e input \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"ScarletBlanks"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"ScarletBlanks"},"content":"            File outputFile \u003d new File(dir);","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"ScarletBlanks"},"content":"            outputFile.getParentFile().mkdirs();","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"ScarletBlanks"},"content":"            if (!outputFile.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"ScarletBlanks"},"content":"                outputFile.createNewFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"ScarletBlanks"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"ScarletBlanks"},"content":"            fileReader \u003d new FileReader(dir);","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"ScarletBlanks"},"content":"            bufferedReader \u003d new BufferedReader((fileReader));","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"ScarletBlanks"},"content":"            String nextLine;","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"ScarletBlanks"},"content":"            nextLine \u003d bufferedReader.readLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"ScarletBlanks"},"content":"            while (nextLine !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"ScarletBlanks"},"content":"                String[] splitted \u003d nextLine.split(\" \\\\| \");","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"ScarletBlanks"},"content":"                switch (splitted[0]) {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"ScarletBlanks"},"content":"                case \"T\":","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"ScarletBlanks"},"content":"                    input.add(new ToDo(splitted[2], (splitted[1] \u003d\u003d \"1\")));","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"ScarletBlanks"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"ScarletBlanks"},"content":"                case \"E\":","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"ScarletBlanks"},"content":"                    input.add(new Event(splitted[2], splitted[3], splitted[4], (splitted[1] \u003d\u003d \"1\")));","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"ScarletBlanks"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"ScarletBlanks"},"content":"                case \"D\":","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"ScarletBlanks"},"content":"                    int key \u003d Integer.valueOf(splitted[4]);","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"ScarletBlanks"},"content":"                    if (key \u003d\u003d 2) {","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"ScarletBlanks"},"content":"                        input.add(new Deadline(splitted[2], LocalDateTime.parse(splitted[3]), (splitted[1] \u003d\u003d \"1\")));","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"ScarletBlanks"},"content":"                    } else if (key \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"ScarletBlanks"},"content":"                        input.add(new Deadline(splitted[2], LocalDate.parse(splitted[3]), (splitted[1] \u003d\u003d \"1\")));","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"ScarletBlanks"},"content":"                    } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"ScarletBlanks"},"content":"                        UiGUI.badDateLoaded();","lastModifiedDate":"2023-09-21"},{"lineNumber":88,"author":{"gitId":"ScarletBlanks"},"content":"                    }","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"ScarletBlanks"},"content":"                    break;","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"ScarletBlanks"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"ScarletBlanks"},"content":"                nextLine \u003d bufferedReader.readLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"ScarletBlanks"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"ScarletBlanks"},"content":"            bufferedReader.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"ScarletBlanks"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"ScarletBlanks"},"content":"            UiGUI.Error(e);","lastModifiedDate":"2023-09-21"},{"lineNumber":96,"author":{"gitId":"ScarletBlanks"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"ScarletBlanks"},"content":"        return input;","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"ScarletBlanks":99}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"/**","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":" * The Task class represents a generic task with a description and a completion status.","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":" * It serves as the base class for various types of tasks, such as To-Do, Deadlines, and Events.","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":" */","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":"     * The description of the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"     * A boolean indicating whether the task is marked as done (true) or not (false).","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"     * Constructs a Task object with the given description.","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"ScarletBlanks"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"ScarletBlanks"},"content":"     * Returns the status icon of the task, indicating whether it is done or not.","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"ScarletBlanks"},"content":"     * @return A string containing \"X\" if the task is done, or \" \" (space) if it is not done.","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"ScarletBlanks"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"ScarletBlanks"},"content":"        return (this.isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"ScarletBlanks"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"ScarletBlanks"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"ScarletBlanks"},"content":"    public String get() {","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"ScarletBlanks"},"content":"        return description; // mark done task with X","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"ScarletBlanks"},"content":"     * Marks the task as done by setting its completion status to true.","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"ScarletBlanks"},"content":"    public void set() {","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"ScarletBlanks"},"content":"        this.isDone \u003d true; // mark done task with X","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"ScarletBlanks"},"content":"     * Marks the task as undone by setting its completion status to false.","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"ScarletBlanks"},"content":"    public void unset() {","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"ScarletBlanks"},"content":"        this.isDone \u003d false; // mark done task with X","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"ScarletBlanks"},"content":"     * Returns an integer representation of the task\u0027s completion status.","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"ScarletBlanks"},"content":"     * @return 1 if the task is done, or 0 if it is not done.","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"ScarletBlanks"},"content":"    public int isDoneInt() {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"ScarletBlanks"},"content":"        return this.isDone ? 1 : 0;","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"ScarletBlanks"},"content":"     * Checks if the task is marked as done.","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"ScarletBlanks"},"content":"     * @return true if the task is done, or false if it is not done.","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"ScarletBlanks"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"ScarletBlanks"},"content":"        return this.isDone;","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":77,"author":{"gitId":"ScarletBlanks"},"content":"     * Returns a string representation of the task, including its status icon and description.","lastModifiedDate":"2023-09-21"},{"lineNumber":78,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"ScarletBlanks"},"content":"     * @return A formatted string representing the task\u0027s status and description.","lastModifiedDate":"2023-09-21"},{"lineNumber":80,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"ScarletBlanks"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"ScarletBlanks"},"content":"        return \"[\" + this.getStatusIcon() + \"]\" + \" \" + this.get();","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"ScarletBlanks"},"content":"     * Returns a string representation of the task suitable for saving to a file.","lastModifiedDate":"2023-09-21"},{"lineNumber":87,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":88,"author":{"gitId":"ScarletBlanks"},"content":"     * @return A string containing the task\u0027s completion status (0 or 1) and description.","lastModifiedDate":"2023-09-21"},{"lineNumber":89,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":90,"author":{"gitId":"ScarletBlanks"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"ScarletBlanks"},"content":"        String divider \u003d \" | \";","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"ScarletBlanks"},"content":"        return this.isDoneInt() + divider + this.description;","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"ScarletBlanks"},"content":"    //...","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ScarletBlanks":97}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"/**","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":" * The `TaskList` class represents a collection of tasks in the Duke chatbot application.","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":" * It provides methods for adding, deleting, retrieving tasks, and obtaining the entire task list.","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":" */","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"     * The list that holds tasks.","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"    private final ArrayList\u003cTask\u003e myList;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"     * Constructs a new `TaskList` with the provided ArrayList of tasks.","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"     * @param myList An ArrayList containing tasks to initialize the task list.","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"    public TaskList(ArrayList\u003cTask\u003e myList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"        this.myList \u003d myList;","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"ScarletBlanks"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"ScarletBlanks"},"content":"     * @param t The task to be added.","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"ScarletBlanks"},"content":"    public void add(Task t) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"ScarletBlanks"},"content":"        this.myList.add(t);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":34,"author":{"gitId":"ScarletBlanks"},"content":"     * Deletes a task from the task list at the specified index.","lastModifiedDate":"2023-09-22"},{"lineNumber":35,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":36,"author":{"gitId":"ScarletBlanks"},"content":"     * @param i The index of the task to be deleted (1-based).","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"ScarletBlanks"},"content":"    public void delete(int i) {","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"ScarletBlanks"},"content":"        int num \u003d i - 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"ScarletBlanks"},"content":"        this.myList.remove(num);","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":44,"author":{"gitId":"ScarletBlanks"},"content":"     * Retrieves the entire list of tasks.","lastModifiedDate":"2023-09-22"},{"lineNumber":45,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":46,"author":{"gitId":"ScarletBlanks"},"content":"     * @return An ArrayList containing all the tasks in the task list.","lastModifiedDate":"2023-09-22"},{"lineNumber":47,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":48,"author":{"gitId":"ScarletBlanks"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"ScarletBlanks"},"content":"        return this.myList;","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":53,"author":{"gitId":"ScarletBlanks"},"content":"     * Retrieves a specific task from the task list at the specified index.","lastModifiedDate":"2023-09-22"},{"lineNumber":54,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":55,"author":{"gitId":"ScarletBlanks"},"content":"     * @param i The index of the task to be retrieved (1-based).","lastModifiedDate":"2023-09-22"},{"lineNumber":56,"author":{"gitId":"ScarletBlanks"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-09-22"},{"lineNumber":57,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":58,"author":{"gitId":"ScarletBlanks"},"content":"    public Task get(int i) {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"ScarletBlanks"},"content":"        int num \u003d i - 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"ScarletBlanks"},"content":"        return this.myList.get(num);","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"ScarletBlanks":62}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"/**","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":" * The `ToDo` class represents a specific type of task, namely a to-do task,","lastModifiedDate":"2023-09-22"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":" * which is a task without a specific date or time associated with it.","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":" * It extends the `Task` class and includes methods to mark the task as done","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":" * and convert the task to a string format for display and saving.","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":" */","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"     * A boolean flag indicating whether the to-do task is marked as done.","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"     * Constructs a new `ToDo` task with the given description.","lastModifiedDate":"2023-09-22"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2023-09-22"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"ScarletBlanks"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":26,"author":{"gitId":"ScarletBlanks"},"content":"     * Constructs a new `ToDo` task with the given description and done status.","lastModifiedDate":"2023-09-22"},{"lineNumber":27,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":28,"author":{"gitId":"ScarletBlanks"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2023-09-22"},{"lineNumber":29,"author":{"gitId":"ScarletBlanks"},"content":"     * @param isDone      A boolean indicating whether the task is marked as done.","lastModifiedDate":"2023-09-22"},{"lineNumber":30,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":31,"author":{"gitId":"ScarletBlanks"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"ScarletBlanks"},"content":"        super(description);","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"ScarletBlanks"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":37,"author":{"gitId":"ScarletBlanks"},"content":"     * Returns a string representation of the to-do task, including its type indicator \u0027[T]\u0027","lastModifiedDate":"2023-09-22"},{"lineNumber":38,"author":{"gitId":"ScarletBlanks"},"content":"     * and the description.","lastModifiedDate":"2023-09-22"},{"lineNumber":39,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":40,"author":{"gitId":"ScarletBlanks"},"content":"     * @return A string representation of the to-do task.","lastModifiedDate":"2023-09-22"},{"lineNumber":41,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":42,"author":{"gitId":"ScarletBlanks"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"ScarletBlanks"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"ScarletBlanks"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-22"},{"lineNumber":48,"author":{"gitId":"ScarletBlanks"},"content":"     * Returns a string representation of the to-do task in a format suitable for saving to a file.","lastModifiedDate":"2023-09-22"},{"lineNumber":49,"author":{"gitId":"ScarletBlanks"},"content":"     * The format is \u0027T | description\u0027.","lastModifiedDate":"2023-09-22"},{"lineNumber":50,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":51,"author":{"gitId":"ScarletBlanks"},"content":"     * @return A string representation of the to-do task for saving.","lastModifiedDate":"2023-09-22"},{"lineNumber":52,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-22"},{"lineNumber":53,"author":{"gitId":"ScarletBlanks"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"ScarletBlanks"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"ScarletBlanks"},"content":"        String divider \u003d \" | \";","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"ScarletBlanks"},"content":"        return \"T\" + divider + super.toSaveString();","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ScarletBlanks":58}},{"path":"src/main/java/duke/UiGUI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package duke;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"public class UiGUI {","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"    public UiGUI() {","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"     * Prints that a bad date/time was found","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"    public static String badDateLoaded() {","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"        return \"Invalid date/time format encountered\";","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"     * Prints the error","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"    public static String Error() {","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"        return (\"An error occurred\");","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"ScarletBlanks"},"content":"     * Prints the error with the exception message","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"ScarletBlanks"},"content":"     * @param e the Exception that was thrown","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"ScarletBlanks"},"content":"    public static String Error(Exception e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"ScarletBlanks"},"content":"        return (\"An error occurred\" + e.getMessage());","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"ScarletBlanks"},"content":"    private String printLines() {","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"ScarletBlanks"},"content":"        return (\"\");","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"ScarletBlanks"},"content":"     * Tells the user that he has entered in valid query for the specified type","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"ScarletBlanks"},"content":"     * @param taskType string, the type of task","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"ScarletBlanks"},"content":"    public String showError(String taskType) {","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"ScarletBlanks"},"content":"        return this.printLines() + \"☹ OOPS!!! The description of a \" + taskType + \" cannot be empty.\" + this.printLines();","lastModifiedDate":"2023-09-22"},{"lineNumber":43,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"ScarletBlanks"},"content":"     * Tells the user that he has entered in valid query for the specified type","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"ScarletBlanks"},"content":"     * @param info string, the type of task","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"ScarletBlanks"},"content":"    public String showExError(String info) {","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"ScarletBlanks"},"content":"        return info;","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"ScarletBlanks"},"content":"     * Tells the user the number of tasks left","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"ScarletBlanks"},"content":"     * @param i the number of tasks left","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"ScarletBlanks"},"content":"    public String showNumTasks(int i) {","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"ScarletBlanks"},"content":"        return this.printLines() + \"Now you have \" + i + \" tasks in the list.\" + this.printLines();","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"ScarletBlanks"},"content":"     * Sends the user a welcome message","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"ScarletBlanks"},"content":"    public String hello() {","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"ScarletBlanks"},"content":"        String logo \u003d \"___________  __________  __________  ||   \\n\" + \"|         | |         | |         |  ||      \\n\" + \"-----------  ---------- ----------   ||  \\n\" + \"    ||         ||          ||        ||       \\n\" + \"    ||         ||          ||        ||           \\n\" + \"    ||         ||          ||        ||           \\n\" + \"    ||         ||          ||        ||       \\n\" + \"    ||      __________  __________   ||      \\n\" + \"    ||      |         | |         |  ______ \\n\" + \"    ||      ----------  ----------   ______    \\n\";","lastModifiedDate":"2023-09-22"},{"lineNumber":68,"author":{"gitId":"ScarletBlanks"},"content":"        return this.printLines() + (\"Hello! I\u0027m \\n\" + logo) + \"What can I do for you?\" + this.printLines();","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":70,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":71,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":72,"author":{"gitId":"ScarletBlanks"},"content":"     * says Goodbye to the user","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"ScarletBlanks"},"content":"    public String goodbye() {","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"ScarletBlanks"},"content":"        return (\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":77,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"ScarletBlanks"},"content":"     * Notifies the user the tasks in list and the number of tasks","lastModifiedDate":"2023-09-12"},{"lineNumber":80,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"ScarletBlanks"},"content":"     * @param tasks the TaskList of tasks","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"ScarletBlanks"},"content":"    public String tasksInList(TaskList tasks) {","lastModifiedDate":"2023-09-12"},{"lineNumber":84,"author":{"gitId":"ScarletBlanks"},"content":"        String Total \u003d this.printLines();","lastModifiedDate":"2023-09-12"},{"lineNumber":85,"author":{"gitId":"ScarletBlanks"},"content":"        Total +\u003d \"Here are the tasks in your list:\" + \"\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":86,"author":{"gitId":"ScarletBlanks"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-09-12"},{"lineNumber":87,"author":{"gitId":"ScarletBlanks"},"content":"        for (Task t : tasks.getList()) {","lastModifiedDate":"2023-09-12"},{"lineNumber":88,"author":{"gitId":"ScarletBlanks"},"content":"            Total +\u003d (i + \".\" + t.toString()) + \"\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":89,"author":{"gitId":"ScarletBlanks"},"content":"            i++;","lastModifiedDate":"2023-09-12"},{"lineNumber":90,"author":{"gitId":"ScarletBlanks"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":91,"author":{"gitId":"ScarletBlanks"},"content":"        Total +\u003d this.printLines();","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"ScarletBlanks"},"content":"        return Total;","lastModifiedDate":"2023-09-12"},{"lineNumber":93,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":94,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"ScarletBlanks"},"content":"     * Notifies the user that a task has been marked as done","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"ScarletBlanks"},"content":"     * @param item the item marked as done","lastModifiedDate":"2023-09-12"},{"lineNumber":99,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"ScarletBlanks"},"content":"    public String taskDone(Task item) {","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"ScarletBlanks"},"content":"        return this.printLines() + \"Nice! I\u0027ve marked this task as done:\" + item.toString() + this.printLines();","lastModifiedDate":"2023-09-22"},{"lineNumber":102,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":103,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":104,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":105,"author":{"gitId":"ScarletBlanks"},"content":"     * Notifies the user that a task has been unmarked","lastModifiedDate":"2023-09-12"},{"lineNumber":106,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":107,"author":{"gitId":"ScarletBlanks"},"content":"     * @param item the item that has been unmarked","lastModifiedDate":"2023-09-12"},{"lineNumber":108,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":109,"author":{"gitId":"ScarletBlanks"},"content":"    public String taskUndone(Task item) {","lastModifiedDate":"2023-09-12"},{"lineNumber":110,"author":{"gitId":"ScarletBlanks"},"content":"        return this.printLines() + (\"OK, I\u0027ve marked this task as not done yet:\") + (item.toString()) + this.printLines();","lastModifiedDate":"2023-09-22"},{"lineNumber":111,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":112,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":114,"author":{"gitId":"ScarletBlanks"},"content":"     * Notifies the user that a task has been added","lastModifiedDate":"2023-09-12"},{"lineNumber":115,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":116,"author":{"gitId":"ScarletBlanks"},"content":"     * @param item  the item that has been added","lastModifiedDate":"2023-09-12"},{"lineNumber":117,"author":{"gitId":"ScarletBlanks"},"content":"     * @param tasks the TaskList containing the tasks","lastModifiedDate":"2023-09-12"},{"lineNumber":118,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":119,"author":{"gitId":"ScarletBlanks"},"content":"    public String taskAdd(Task item, TaskList tasks) {","lastModifiedDate":"2023-09-12"},{"lineNumber":120,"author":{"gitId":"ScarletBlanks"},"content":"        return this.printLines() + (\"Got it. I\u0027ve added this task:\") + (item.toString()) + (\"Now you have \" + tasks.getList().size() + \" tasks in the list.\") + this.printLines();","lastModifiedDate":"2023-09-22"},{"lineNumber":121,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":123,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":124,"author":{"gitId":"ScarletBlanks"},"content":"     * Notifies the user that a task has been deleted","lastModifiedDate":"2023-09-12"},{"lineNumber":125,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-12"},{"lineNumber":126,"author":{"gitId":"ScarletBlanks"},"content":"     * @param item  the item that has been deleted","lastModifiedDate":"2023-09-12"},{"lineNumber":127,"author":{"gitId":"ScarletBlanks"},"content":"     * @param tasks the TaskList","lastModifiedDate":"2023-09-12"},{"lineNumber":128,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":129,"author":{"gitId":"ScarletBlanks"},"content":"    public String taskDelete(Task item, TaskList tasks) {","lastModifiedDate":"2023-09-12"},{"lineNumber":130,"author":{"gitId":"ScarletBlanks"},"content":"        return this.printLines() + (\"Noted. I\u0027ve removed this task:\") + \"\\n\" + (item.toString()) + (\"Now you have \" + tasks.getList().size() + \" tasks in the list.\") + this.printLines();","lastModifiedDate":"2023-09-22"},{"lineNumber":131,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"ScarletBlanks"},"content":"     * Prints that an unrecognised command was found","lastModifiedDate":"2023-09-12"},{"lineNumber":135,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-12"},{"lineNumber":136,"author":{"gitId":"ScarletBlanks"},"content":"    public String unrecognisedCommand() {","lastModifiedDate":"2023-09-12"},{"lineNumber":137,"author":{"gitId":"ScarletBlanks"},"content":"        return (\"____________________________________________________________\") + \" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\" + (\"____________________________________________________________\");","lastModifiedDate":"2023-09-22"},{"lineNumber":138,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":139,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":140,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":141,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":142,"author":{"gitId":"ScarletBlanks"},"content":"     * Prints the tasks that match the query string","lastModifiedDate":"2023-09-21"},{"lineNumber":143,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":144,"author":{"gitId":"ScarletBlanks"},"content":"     * @param tasks The TaskList","lastModifiedDate":"2023-09-21"},{"lineNumber":145,"author":{"gitId":"ScarletBlanks"},"content":"     * @param query the String the user wishes to query with","lastModifiedDate":"2023-09-21"},{"lineNumber":146,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":147,"author":{"gitId":"ScarletBlanks"},"content":"    public String printMatchingTasks(TaskList tasks, String query) {","lastModifiedDate":"2023-09-12"},{"lineNumber":148,"author":{"gitId":"ScarletBlanks"},"content":"        String total \u003d this.printLines();","lastModifiedDate":"2023-09-12"},{"lineNumber":149,"author":{"gitId":"ScarletBlanks"},"content":"        total +\u003d (\"Here are the matching tasks in your list:\") + \"\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":150,"author":{"gitId":"ScarletBlanks"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-09-12"},{"lineNumber":151,"author":{"gitId":"ScarletBlanks"},"content":"        for (Task t : tasks.getList()) {","lastModifiedDate":"2023-09-12"},{"lineNumber":152,"author":{"gitId":"ScarletBlanks"},"content":"            if (t.toString().contains(query)) {","lastModifiedDate":"2023-09-12"},{"lineNumber":153,"author":{"gitId":"ScarletBlanks"},"content":"                total +\u003d (i + \".\" + t) + \"\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":154,"author":{"gitId":"ScarletBlanks"},"content":"                i++;","lastModifiedDate":"2023-09-12"},{"lineNumber":155,"author":{"gitId":"ScarletBlanks"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":156,"author":{"gitId":"ScarletBlanks"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":157,"author":{"gitId":"ScarletBlanks"},"content":"        total +\u003d this.printLines();","lastModifiedDate":"2023-09-12"},{"lineNumber":158,"author":{"gitId":"ScarletBlanks"},"content":"        return total;","lastModifiedDate":"2023-09-12"},{"lineNumber":159,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":160,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":161,"author":{"gitId":"ScarletBlanks"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":162,"author":{"gitId":"ScarletBlanks"},"content":"     * Reminds the user of the deeadlines coming up","lastModifiedDate":"2023-09-21"},{"lineNumber":163,"author":{"gitId":"ScarletBlanks"},"content":"     *","lastModifiedDate":"2023-09-22"},{"lineNumber":164,"author":{"gitId":"ScarletBlanks"},"content":"     * @param tasks        The TaskList","lastModifiedDate":"2023-09-21"},{"lineNumber":165,"author":{"gitId":"ScarletBlanks"},"content":"     * @param numberOfDays the number of days until the deadline is due","lastModifiedDate":"2023-09-21"},{"lineNumber":166,"author":{"gitId":"ScarletBlanks"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":167,"author":{"gitId":"ScarletBlanks"},"content":"    public String remind(TaskList tasks, int numberOfDays) {","lastModifiedDate":"2023-09-13"},{"lineNumber":168,"author":{"gitId":"ScarletBlanks"},"content":"        // Get the current date","lastModifiedDate":"2023-09-13"},{"lineNumber":169,"author":{"gitId":"ScarletBlanks"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-09-13"},{"lineNumber":170,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":171,"author":{"gitId":"ScarletBlanks"},"content":"        // Calculate the deadline threshold date","lastModifiedDate":"2023-09-13"},{"lineNumber":172,"author":{"gitId":"ScarletBlanks"},"content":"        LocalDate thresholdDate \u003d currentDate.plusDays(numberOfDays);","lastModifiedDate":"2023-09-13"},{"lineNumber":173,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":174,"author":{"gitId":"ScarletBlanks"},"content":"        // Create a StringBuilder to store the reminders","lastModifiedDate":"2023-09-13"},{"lineNumber":175,"author":{"gitId":"ScarletBlanks"},"content":"        String reminders \u003d \"\";","lastModifiedDate":"2023-09-13"},{"lineNumber":176,"author":{"gitId":"ScarletBlanks"},"content":"        reminders +\u003d (\"Here are the deadlines in the next \") + (numberOfDays) + (\" days:\\n\");","lastModifiedDate":"2023-09-22"},{"lineNumber":177,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":178,"author":{"gitId":"ScarletBlanks"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-09-13"},{"lineNumber":179,"author":{"gitId":"ScarletBlanks"},"content":"        for (Task task : tasks.getList()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":180,"author":{"gitId":"ScarletBlanks"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2023-09-13"},{"lineNumber":181,"author":{"gitId":"ScarletBlanks"},"content":"                Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-09-13"},{"lineNumber":182,"author":{"gitId":"ScarletBlanks"},"content":"                if (!deadline.isDone()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":183,"author":{"gitId":"ScarletBlanks"},"content":"                    LocalDate taskDate \u003d deadline.getDate();","lastModifiedDate":"2023-09-13"},{"lineNumber":184,"author":{"gitId":"ScarletBlanks"},"content":"                    if (taskDate !\u003d null \u0026\u0026 taskDate.isBefore(thresholdDate)) {","lastModifiedDate":"2023-09-13"},{"lineNumber":185,"author":{"gitId":"ScarletBlanks"},"content":"                        reminders +\u003d (i) + (\". \") + (task) + (\"\\n\");","lastModifiedDate":"2023-09-13"},{"lineNumber":186,"author":{"gitId":"ScarletBlanks"},"content":"                        i++;","lastModifiedDate":"2023-09-13"},{"lineNumber":187,"author":{"gitId":"ScarletBlanks"},"content":"                    }","lastModifiedDate":"2023-09-13"},{"lineNumber":188,"author":{"gitId":"ScarletBlanks"},"content":"                }","lastModifiedDate":"2023-09-13"},{"lineNumber":189,"author":{"gitId":"ScarletBlanks"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":190,"author":{"gitId":"ScarletBlanks"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":191,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":192,"author":{"gitId":"ScarletBlanks"},"content":"        if (i \u003d\u003d 1) {","lastModifiedDate":"2023-09-13"},{"lineNumber":193,"author":{"gitId":"ScarletBlanks"},"content":"            return \"No upcoming deadlines in the next \" + numberOfDays + \" days.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":194,"author":{"gitId":"ScarletBlanks"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":195,"author":{"gitId":"ScarletBlanks"},"content":"        return reminders;","lastModifiedDate":"2023-09-13"},{"lineNumber":196,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":197,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":198,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"ScarletBlanks":198}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"ScarletBlanks":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"seedu.duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"ScarletBlanks":19}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package duke; //same package as the class being tested","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"/**","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":" * Class for testing the Deadline class","lastModifiedDate":"2023-09-22"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":" */","lastModifiedDate":"2023-09-22"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"    public void outputTest() {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"        assertEquals(\"[D][ ] study for CS2103T (by: 22/06/2022 1600)\",","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"                new Deadline(\"study for CS2103T\", LocalDateTime.parse(\"2022-06-22T16:00\")).toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"    public void saveStringTest() {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"ScarletBlanks"},"content":"        assertEquals(\"D | 0 | study for CS2103T | 2022-06-22T16:00 | 2\",","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"                new Deadline(\"study for CS2103T\",","lastModifiedDate":"2023-09-22"},{"lineNumber":24,"author":{"gitId":"ScarletBlanks"},"content":"                        LocalDateTime.parse(\"2022-06-22T16:00\")).toSaveString());","lastModifiedDate":"2023-09-22"},{"lineNumber":25,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"ScarletBlanks":27}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package duke; //same package as the class being tested","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-22"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":"/**","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":" * Class for testing the Event Class","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":" */","lastModifiedDate":"2023-09-22"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"public class EventTest {","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"    public void outputTest() {","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"        Event event \u003d new Event(\"Meeting\", \"2023-09-13 09:00\", \"2023-09-13 10:00\");","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"        assertEquals(\"[E][ ] Meeting (from: 2023-09-13 09:00 to: 2023-09-13 10:00)\", event.toString());","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"    public void saveStringTest() {","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"        Event event \u003d new Event(\"Meeting\", \"2023-09-13 09:00\", \"2023-09-13 10:00\");","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"        assertEquals(\"E | 0 | Meeting | 2023-09-13 09:00 | 2023-09-13 10:00\", event.toSaveString());","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"ScarletBlanks":24}},{"path":"src/test/java/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package duke; //same package as the class being tested","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"/**","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":" * Class for testing the Task Class","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":" */","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"public class TaskTest {","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"    public void outputTest() {","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"        Task task \u003d new Task(\"Sample Task\");","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"        assertEquals(\"[ ] Sample Task\", task.toString());","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"    public void saveStringTest() {","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"        Task task \u003d new Task(\"Sample Task\");","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"        assertEquals(\"0 | Sample Task\", task.toSaveString());","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"ScarletBlanks":23}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"package duke; //same package as the class being tested","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-22"},{"lineNumber":6,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"/**","lastModifiedDate":"2023-09-22"},{"lineNumber":8,"author":{"gitId":"ScarletBlanks"},"content":" * Class for testing the ToDo Class","lastModifiedDate":"2023-09-22"},{"lineNumber":9,"author":{"gitId":"ScarletBlanks"},"content":" */","lastModifiedDate":"2023-09-22"},{"lineNumber":10,"author":{"gitId":"ScarletBlanks"},"content":"public class ToDoTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"ScarletBlanks"},"content":"    public void outputTest() {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"ScarletBlanks"},"content":"        assertEquals((new ToDo(\"study for CS2103T\")).toString(), \"[T][ ] study for CS2103T\");","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"ScarletBlanks"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"ScarletBlanks"},"content":"    public void saveStringTest() {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"ScarletBlanks"},"content":"        assertEquals((new ToDo(\"study for CS2103T\")).toSaveString(), \"T | 0 | study for CS2103T\");","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"ScarletBlanks"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"ScarletBlanks"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"ScarletBlanks"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"ScarletBlanks":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ScarletBlanks"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"ScarletBlanks"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"ScarletBlanks"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"ScarletBlanks"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"ScarletBlanks"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"ScarletBlanks":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"ScarletBlanks"},"content":"del ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ScarletBlanks":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"ScarletBlanks"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ScarletBlanks":1,"-":33}}]
