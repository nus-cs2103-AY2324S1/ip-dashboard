[{"path":"src/main/java/Bot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"public class Bot {","lastModifiedDate":"2023-08-19"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-19"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"        System.out.println(\"Hello! I\u0027m the trash gremlin Caelus!\\nWhat can I do for you?\");","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"        ArrayList\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"        Pattern markPattern \u003d Pattern.compile(\"mark \\\\d+\");","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"        Pattern unmarkPattern \u003d Pattern.compile(\"unmark \\\\d+\");","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"        Pattern deletePattern \u003d Pattern.compile(\"delete \\\\d+\");","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"        while (true) {","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"            try {","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"                String str \u003d sc.nextLine();","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"                if (str.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":"                    break;","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"sopa301"},"content":"                } else if (str.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"sopa301"},"content":"                    displayList(lst);","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"sopa301"},"content":"                } else if (str.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"sopa301"},"content":"                    if (!markPattern.matcher(str).matches()) {","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"sopa301"},"content":"                        throw new InvalidIndexException();","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"sopa301"},"content":"                    }","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"sopa301"},"content":"                    int index \u003d Integer.parseInt(str.substring(5)) - 1;","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"sopa301"},"content":"                    if (index \u003c 0 || index \u003e\u003d lst.size()) {","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"sopa301"},"content":"                        throw new InvalidIndexException();","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"sopa301"},"content":"                    }","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"sopa301"},"content":"                    lst.get(index).mark();","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"sopa301"},"content":"                    System.out.println(\"I\u0027ll mark this as done:\\n\" + lst.get(index).toString());","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"sopa301"},"content":"                } else if (str.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"sopa301"},"content":"                    if (!unmarkPattern.matcher(str).matches()) {","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"sopa301"},"content":"                        throw new InvalidIndexException();","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"sopa301"},"content":"                    }","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"sopa301"},"content":"                    int index \u003d Integer.parseInt(str.substring(7)) - 1;","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"sopa301"},"content":"                    if (index \u003c 0 || index \u003e\u003d lst.size()) {","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"sopa301"},"content":"                        throw new InvalidIndexException();","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"sopa301"},"content":"                    }","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"sopa301"},"content":"                    lst.get(index).unmark();","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"sopa301"},"content":"                    System.out.println(\"I\u0027ll mark this as not done:\\n\" + lst.get(index).toString());","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"sopa301"},"content":"                } else if (Task.isTaskCommand(str)) {","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"sopa301"},"content":"                    addTask(Task.makeTask(str), lst);","lastModifiedDate":"2023-08-20"},{"lineNumber":43,"author":{"gitId":"sopa301"},"content":"                } else if (str.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"sopa301"},"content":"                    if (!deletePattern.matcher(str).matches()) {","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"sopa301"},"content":"                        throw new InvalidIndexException();","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"sopa301"},"content":"                    }","lastModifiedDate":"2023-08-20"},{"lineNumber":47,"author":{"gitId":"sopa301"},"content":"                    int index \u003d Integer.parseInt(str.substring(7)) - 1;","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"sopa301"},"content":"                    if (index \u003c 0 || index \u003e\u003d lst.size()) {","lastModifiedDate":"2023-08-20"},{"lineNumber":49,"author":{"gitId":"sopa301"},"content":"                        throw new InvalidIndexException();","lastModifiedDate":"2023-08-20"},{"lineNumber":50,"author":{"gitId":"sopa301"},"content":"                    }","lastModifiedDate":"2023-08-20"},{"lineNumber":51,"author":{"gitId":"sopa301"},"content":"                    System.out.println(\"I\u0027ve removed this task:\\n\" + lst.remove(index).toString());","lastModifiedDate":"2023-08-20"},{"lineNumber":52,"author":{"gitId":"sopa301"},"content":"                    displayListLength(lst);","lastModifiedDate":"2023-08-20"},{"lineNumber":53,"author":{"gitId":"sopa301"},"content":"                } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":54,"author":{"gitId":"sopa301"},"content":"                    throw new InvalidCommandException();","lastModifiedDate":"2023-08-20"},{"lineNumber":55,"author":{"gitId":"sopa301"},"content":"                }","lastModifiedDate":"2023-08-20"},{"lineNumber":56,"author":{"gitId":"sopa301"},"content":"            } catch (BotException e) {","lastModifiedDate":"2023-08-20"},{"lineNumber":57,"author":{"gitId":"sopa301"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-08-20"},{"lineNumber":58,"author":{"gitId":"sopa301"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":59,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":60,"author":{"gitId":"sopa301"},"content":"        System.out.println(\"Bye. I\u0027ll be at the nearest trash can!\");","lastModifiedDate":"2023-08-20"},{"lineNumber":61,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":62,"author":{"gitId":"sopa301"},"content":"    private static void displayList(ArrayList\u003cTask\u003e lst) throws EmptyListException {","lastModifiedDate":"2023-08-20"},{"lineNumber":63,"author":{"gitId":"sopa301"},"content":"        if (lst.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-20"},{"lineNumber":64,"author":{"gitId":"sopa301"},"content":"            throw new EmptyListException();","lastModifiedDate":"2023-08-20"},{"lineNumber":65,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":66,"author":{"gitId":"sopa301"},"content":"        StringBuilder out \u003d new StringBuilder().append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-08-20"},{"lineNumber":67,"author":{"gitId":"sopa301"},"content":"        Iterator\u003cTask\u003e iter \u003d lst.iterator();","lastModifiedDate":"2023-08-20"},{"lineNumber":68,"author":{"gitId":"sopa301"},"content":"        int ctr \u003d 1;","lastModifiedDate":"2023-08-20"},{"lineNumber":69,"author":{"gitId":"sopa301"},"content":"        while (iter.hasNext()) {","lastModifiedDate":"2023-08-20"},{"lineNumber":70,"author":{"gitId":"sopa301"},"content":"            out.append(ctr).append(\". \").append(iter.next().toString()).append(\"\\n\");","lastModifiedDate":"2023-08-20"},{"lineNumber":71,"author":{"gitId":"sopa301"},"content":"            ctr++;","lastModifiedDate":"2023-08-20"},{"lineNumber":72,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":73,"author":{"gitId":"sopa301"},"content":"        out.deleteCharAt(out.length() - 1);","lastModifiedDate":"2023-08-20"},{"lineNumber":74,"author":{"gitId":"sopa301"},"content":"        System.out.println(out.toString());","lastModifiedDate":"2023-08-20"},{"lineNumber":75,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":76,"author":{"gitId":"sopa301"},"content":"    private static void displayListLength(ArrayList\u003cTask\u003e lst) {","lastModifiedDate":"2023-08-20"},{"lineNumber":77,"author":{"gitId":"sopa301"},"content":"        System.out.println(\"Now you have \" + lst.size() + \" task(s) in the list.\");","lastModifiedDate":"2023-08-20"},{"lineNumber":78,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":79,"author":{"gitId":"sopa301"},"content":"    private static void addTask(Task newTask, ArrayList\u003cTask\u003e lst) {","lastModifiedDate":"2023-08-20"},{"lineNumber":80,"author":{"gitId":"sopa301"},"content":"        System.out.println(\"Added:\\n\" + newTask.toString());","lastModifiedDate":"2023-08-20"},{"lineNumber":81,"author":{"gitId":"sopa301"},"content":"        lst.add(newTask);","lastModifiedDate":"2023-08-20"},{"lineNumber":82,"author":{"gitId":"sopa301"},"content":"        displayListLength(lst);","lastModifiedDate":"2023-08-20"},{"lineNumber":83,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":84,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"sopa301":84}},{"path":"src/main/java/BotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"public class BotException extends Exception{","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"    public BotException(String msg) {","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"        super(msg);","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"sopa301":6}},{"path":"src/main/java/EmptyListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"public class EmptyListException extends BotException{","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"    public EmptyListException() {","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"        super(\"Oops, there are no tasks in your list!\");","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"sopa301":5}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"public class InvalidCommandException extends BotException{","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"        super(\"Sorry, I dunno what you\u0027re saying. Must be the trash getting to my brain.\");","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"sopa301":5}},{"path":"src/main/java/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"public class InvalidIndexException extends BotException {","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"    public InvalidIndexException() {","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"        super(\"Sorry, that index doesn\u0027t exist. Please key in a valid index.\");","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"sopa301":5}},{"path":"src/main/java/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"public class InvalidTaskException extends BotException{","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"    public InvalidTaskException(String msg) {","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"        super(msg);","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"sopa301":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"    private final String name;","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"    protected boolean isDone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"    protected String getName() {","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"        return this.name;","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"    public abstract String toString();","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"    public void mark() {","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"sopa301"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"sopa301"},"content":"    public static Task makeTask(String str) throws InvalidTaskException {","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"sopa301"},"content":"        Task newTask;","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"sopa301"},"content":"        if (str.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"sopa301"},"content":"            newTask \u003d makeToDo(str);","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"sopa301"},"content":"        } else if (str.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"sopa301"},"content":"            newTask \u003d makeDeadline(str);","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"sopa301"},"content":"        } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"sopa301"},"content":"            newTask \u003d makeEvent(str);","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"sopa301"},"content":"        return newTask;","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"sopa301"},"content":"    public static boolean isTaskCommand(String str) {","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"sopa301"},"content":"        return str.startsWith(\"todo\") || str.startsWith(\"event\") ||str.startsWith(\"deadline\");","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"sopa301"},"content":"    public static Task makeEvent(String str) throws InvalidTaskException {","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"sopa301"},"content":"        String[] comps \u003d str.split(\"/\");","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"sopa301"},"content":"        if (comps.length !\u003d 3) {","lastModifiedDate":"2023-08-20"},{"lineNumber":38,"author":{"gitId":"sopa301"},"content":"            throw new InvalidTaskException(\"Please make sure the event is written in the correct format:\\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":39,"author":{"gitId":"sopa301"},"content":"                    + \"event ... /from ... /to ...\");","lastModifiedDate":"2023-08-20"},{"lineNumber":40,"author":{"gitId":"sopa301"},"content":"        } else if (comps[0].trim().equals(\"event\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":41,"author":{"gitId":"sopa301"},"content":"            throw new InvalidTaskException(\"Sorry, the event description can\u0027t be empty.\");","lastModifiedDate":"2023-08-20"},{"lineNumber":42,"author":{"gitId":"sopa301"},"content":"        } else if (comps[1].trim().equals(\"from\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":43,"author":{"gitId":"sopa301"},"content":"            throw new InvalidTaskException(\"Sorry, event start time can\u0027t be empty.\");","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"sopa301"},"content":"        } else if (comps[2].trim().equals(\"to\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"sopa301"},"content":"            throw new InvalidTaskException(\"Sorry, event end time can\u0027t be empty.\");","lastModifiedDate":"2023-08-20"},{"lineNumber":46,"author":{"gitId":"sopa301"},"content":"        } else if (!comps[1].startsWith(\"from \") || !comps[2].startsWith(\"to \")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":47,"author":{"gitId":"sopa301"},"content":"            throw new InvalidTaskException(\"Please make sure the event is written in the correct format:\\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":48,"author":{"gitId":"sopa301"},"content":"                    + \"event ... /from ... /to ...\");","lastModifiedDate":"2023-08-20"},{"lineNumber":49,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":50,"author":{"gitId":"sopa301"},"content":"        return new Event(comps[0].substring(6),","lastModifiedDate":"2023-08-20"},{"lineNumber":51,"author":{"gitId":"sopa301"},"content":"                comps[1].substring(5),","lastModifiedDate":"2023-08-20"},{"lineNumber":52,"author":{"gitId":"sopa301"},"content":"                comps[2].substring(3));","lastModifiedDate":"2023-08-20"},{"lineNumber":53,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":54,"author":{"gitId":"sopa301"},"content":"    public static Task makeToDo(String str) throws InvalidTaskException {","lastModifiedDate":"2023-08-20"},{"lineNumber":55,"author":{"gitId":"sopa301"},"content":"        String name \u003d str.substring(4).trim();","lastModifiedDate":"2023-08-20"},{"lineNumber":56,"author":{"gitId":"sopa301"},"content":"        if (name.equals(\"\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":57,"author":{"gitId":"sopa301"},"content":"            throw new InvalidTaskException(\"Sorry, the todo description can\u0027t be empty.\");","lastModifiedDate":"2023-08-20"},{"lineNumber":58,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":59,"author":{"gitId":"sopa301"},"content":"        return new ToDo(name);","lastModifiedDate":"2023-08-20"},{"lineNumber":60,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":61,"author":{"gitId":"sopa301"},"content":"    public static Task makeDeadline(String str) throws InvalidTaskException {","lastModifiedDate":"2023-08-20"},{"lineNumber":62,"author":{"gitId":"sopa301"},"content":"        String[] comps \u003d str.split(\"/\");","lastModifiedDate":"2023-08-20"},{"lineNumber":63,"author":{"gitId":"sopa301"},"content":"        if (comps.length !\u003d 2) {","lastModifiedDate":"2023-08-20"},{"lineNumber":64,"author":{"gitId":"sopa301"},"content":"            throw new InvalidTaskException(\"Please make sure the deadline is written in the correct format:\\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":65,"author":{"gitId":"sopa301"},"content":"                    + \"deadline ... /by ...\");","lastModifiedDate":"2023-08-20"},{"lineNumber":66,"author":{"gitId":"sopa301"},"content":"        } else if (comps[0].trim().equals(\"deadline\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":67,"author":{"gitId":"sopa301"},"content":"            throw new InvalidTaskException(\"Sorry, the deadline description can\u0027t be empty.\");","lastModifiedDate":"2023-08-20"},{"lineNumber":68,"author":{"gitId":"sopa301"},"content":"        } else if (comps[1].trim().equals(\"by\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":69,"author":{"gitId":"sopa301"},"content":"            throw new InvalidTaskException(\"Sorry, the deadline can\u0027t be empty.\");","lastModifiedDate":"2023-08-20"},{"lineNumber":70,"author":{"gitId":"sopa301"},"content":"        } else if (!comps[1].startsWith(\"by\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":71,"author":{"gitId":"sopa301"},"content":"            throw new InvalidTaskException(\"Please make sure the deadline is written in the correct format:\\n\"","lastModifiedDate":"2023-08-20"},{"lineNumber":72,"author":{"gitId":"sopa301"},"content":"                    + \"deadline ... /by ...\");","lastModifiedDate":"2023-08-20"},{"lineNumber":73,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":74,"author":{"gitId":"sopa301"},"content":"        return new Deadline(comps[0].substring(9),","lastModifiedDate":"2023-08-20"},{"lineNumber":75,"author":{"gitId":"sopa301"},"content":"                comps[1].substring(3));","lastModifiedDate":"2023-08-20"},{"lineNumber":76,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":77,"author":{"gitId":"sopa301"},"content":"    public static class ToDo extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":78,"author":{"gitId":"sopa301"},"content":"        public ToDo(String name) {","lastModifiedDate":"2023-08-20"},{"lineNumber":79,"author":{"gitId":"sopa301"},"content":"            super(name);","lastModifiedDate":"2023-08-20"},{"lineNumber":80,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":81,"author":{"gitId":"sopa301"},"content":"        @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":82,"author":{"gitId":"sopa301"},"content":"        public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":83,"author":{"gitId":"sopa301"},"content":"            return \"[T][\" + (super.isDone() ? \"X\" : \" \") + \"] \" + super.getName();","lastModifiedDate":"2023-08-20"},{"lineNumber":84,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":85,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":86,"author":{"gitId":"sopa301"},"content":"    public static class Deadline extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":87,"author":{"gitId":"sopa301"},"content":"        private final String by;","lastModifiedDate":"2023-08-20"},{"lineNumber":88,"author":{"gitId":"sopa301"},"content":"        public Deadline(String name, String by) {","lastModifiedDate":"2023-08-20"},{"lineNumber":89,"author":{"gitId":"sopa301"},"content":"            super(name);","lastModifiedDate":"2023-08-20"},{"lineNumber":90,"author":{"gitId":"sopa301"},"content":"            this.by \u003d by;","lastModifiedDate":"2023-08-20"},{"lineNumber":91,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":92,"author":{"gitId":"sopa301"},"content":"        @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":93,"author":{"gitId":"sopa301"},"content":"        public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":94,"author":{"gitId":"sopa301"},"content":"            return \"[D][\" + (super.isDone() ? \"X\" : \" \") + \"] \" + super.getName()","lastModifiedDate":"2023-08-20"},{"lineNumber":95,"author":{"gitId":"sopa301"},"content":"                    + \"(by: \" + this.by + \")\";","lastModifiedDate":"2023-08-20"},{"lineNumber":96,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":97,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":98,"author":{"gitId":"sopa301"},"content":"    public static class Event extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":99,"author":{"gitId":"sopa301"},"content":"        private final String from;","lastModifiedDate":"2023-08-20"},{"lineNumber":100,"author":{"gitId":"sopa301"},"content":"        private final String to;","lastModifiedDate":"2023-08-20"},{"lineNumber":101,"author":{"gitId":"sopa301"},"content":"        public Event(String name, String from, String to) {","lastModifiedDate":"2023-08-20"},{"lineNumber":102,"author":{"gitId":"sopa301"},"content":"            super(name);","lastModifiedDate":"2023-08-20"},{"lineNumber":103,"author":{"gitId":"sopa301"},"content":"            this.from \u003d from;","lastModifiedDate":"2023-08-20"},{"lineNumber":104,"author":{"gitId":"sopa301"},"content":"            this.to \u003d to;","lastModifiedDate":"2023-08-20"},{"lineNumber":105,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":106,"author":{"gitId":"sopa301"},"content":"        @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":107,"author":{"gitId":"sopa301"},"content":"        public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":108,"author":{"gitId":"sopa301"},"content":"            return \"[E][\" + (super.isDone() ? \"X\" : \" \") + \"] \" + super.getName()","lastModifiedDate":"2023-08-20"},{"lineNumber":109,"author":{"gitId":"sopa301"},"content":"                    + \"(from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-08-20"},{"lineNumber":110,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":111,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":112,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"sopa301":112}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"hello","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"todo taskone","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"mark 1","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"unmark 1","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"deadline tasktwo /by today","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"event taskthree /from ytd /to tmr","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"mark 3","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"delete 3","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"bye","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"sopa301":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":"java -classpath ..\\bin Bot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sopa301":1,"-":20}}]
