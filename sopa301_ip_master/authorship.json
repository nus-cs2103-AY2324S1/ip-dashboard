[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"sopa301"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"sopa301"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"sopa301"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"sopa301"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"sopa301"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"sopa301"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"sopa301"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"sopa301"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"sopa301"},"content":"    mainClass.set(\"bot.gui.Launcher\")","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"sopa301"},"content":"    archiveBaseName \u003d \"bot\"","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"sopa301"},"content":"checkstyle {","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"sopa301"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"sopa301":21,"-":40}},{"path":"src/main/java/bot/Bot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"package bot;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"import bot.exceptions.BotException;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"import bot.exceptions.LoadingException;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"import bot.utils.Command;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"import bot.utils.Parser;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"import bot.utils.Storage;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"import bot.utils.TaskList;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"import bot.utils.Ui;","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":" * Main class for the bot.","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"public class Bot {","lastModifiedDate":"2023-08-19"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"     * Storage object for storing data.","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":"    private final Storage storage;","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"sopa301"},"content":"     * User interface for interacting with the user.","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"sopa301"},"content":"    private final Ui ui;","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"sopa301"},"content":"     * Task list for storing tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"sopa301"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"sopa301"},"content":"     * Shows if the bot is active or not.","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"sopa301"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"sopa301"},"content":"     * Creates the bot.","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"sopa301"},"content":"    public Bot() {","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"sopa301"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"sopa301"},"content":"        this.storage \u003d new Storage(\"/data/tasks.txt\");","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"sopa301"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"sopa301"},"content":"            tasks \u003d new TaskList(storage.load(this.ui));","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"sopa301"},"content":"        } catch (LoadingException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"sopa301"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"sopa301"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":46,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"sopa301"},"content":"     * Gives the bot\u0027s response to a String input.","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"sopa301"},"content":"     * @param input Raw input string.","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"sopa301"},"content":"     * @return Bot\u0027s response as a string.","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"sopa301"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"sopa301"},"content":"        String response;","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"sopa301"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"sopa301"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"sopa301"},"content":"            response \u003d command.execute(tasks, ui, storage);","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"sopa301"},"content":"            if (command.isExit()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"sopa301"},"content":"                isExit \u003d true;","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"sopa301"},"content":"            }","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"sopa301"},"content":"            storage.save(tasks);","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"sopa301"},"content":"        } catch (BotException exception) {","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"sopa301"},"content":"            response \u003d ui.showError(exception.getMessage());","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"sopa301"},"content":"        return response;","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":68,"author":{"gitId":"sopa301"},"content":"     * Gets the bot\u0027s greeting message.","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"sopa301"},"content":"     * @return Greeting message.","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":72,"author":{"gitId":"sopa301"},"content":"    public String greet() {","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"sopa301"},"content":"        return ui.showWelcome();","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":75,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":77,"author":{"gitId":"sopa301"},"content":"     * Indicates if the bot is active.","lastModifiedDate":"2023-09-04"},{"lineNumber":78,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":79,"author":{"gitId":"sopa301"},"content":"     * @return True if the bot is active, else false.","lastModifiedDate":"2023-09-04"},{"lineNumber":80,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":81,"author":{"gitId":"sopa301"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-04"},{"lineNumber":82,"author":{"gitId":"sopa301"},"content":"        return this.isExit;","lastModifiedDate":"2023-09-04"},{"lineNumber":83,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":84,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-08-19"}],"authorContributionMap":{"sopa301":84}},{"path":"src/main/java/bot/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"package bot;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"import bot.gui.MainWindow;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":" * Main class for the entire project.","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"     * Bot used in the project.","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"sopa301"},"content":"    private final Bot bot \u003d new Bot();","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"sopa301"},"content":"     * Creates the GUI for the bot.","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"sopa301"},"content":"     * @param stage the primary stage for this application, onto which","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"sopa301"},"content":"     *              the application scene can be set.","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"sopa301"},"content":"     *              Applications may create other stages, if needed,","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"sopa301"},"content":"     *              but they will not be primary stages.","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"sopa301"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"sopa301"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"sopa301"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"sopa301"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"sopa301"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"sopa301"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"sopa301"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"sopa301"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBot(bot);","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"sopa301"},"content":"            stage.show();","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"sopa301"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"sopa301"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"sopa301":42}},{"path":"src/main/java/bot/enums/DoneStatus.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"package bot.enums;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":" * Indicates whether a task is done or not.","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"public enum DoneStatus {","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"     * Indicates task is done.","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"    DONE,","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"     * Indicates task is not done.","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"    NOT_DONE","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"sopa301":15}},{"path":"src/main/java/bot/exceptions/BotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"package bot.exceptions;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":" * Supertype of all exceptions that occur specific to the bot.","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"public class BotException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"     * Default constructor.","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"     * @param msg Message to be displayed when getMessage is called.","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"    public BotException(String msg) {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"        super(msg);","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"sopa301":16}},{"path":"src/main/java/bot/exceptions/EmptyListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"package bot.exceptions;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":" * Exception for when the task list is empty and a function requires an","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":" * item in the task list.","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"public class EmptyListException extends BotException {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"     * Default constructor.","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"    public EmptyListException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"        super(\"Oops, there are no tasks in your list!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"sopa301":14}},{"path":"src/main/java/bot/exceptions/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"package bot.exceptions;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":" * Exception for when invalid arguments are provided to a command.","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"public class InvalidArgumentException extends BotException {","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"     * Default constructor.","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"    public InvalidArgumentException() {","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"        super(\"Sorry, but that command can\u0027t be done with the provided argument(s).\");","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"     * Creates an InvalidArgumentException with the provided string as the error","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"     * message.","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":"     * @param str Error message.","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"sopa301"},"content":"    public InvalidArgumentException(String str) {","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"sopa301"},"content":"        super(str);","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"sopa301":23}},{"path":"src/main/java/bot/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"package bot.exceptions;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":" * Exception for when an invalid command is sent to the bot.","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"public class InvalidCommandException extends BotException {","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"     * Default constructor. Currently set to Trash Gremlin Caelus personality.","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"        super(\"Sorry, I dunno what you\u0027re saying. Must be the trash getting to my brain.\");","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"sopa301":13}},{"path":"src/main/java/bot/exceptions/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"package bot.exceptions;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":" * Exception for when an index is given that is out of range for the requested operation.","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"public class InvalidIndexException extends InvalidArgumentException {","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"     * Default constructor.","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"    public InvalidIndexException() {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"        super(\"Sorry, that index doesn\u0027t exist. Please key in a valid index.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"     * Constructor with variable message.","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"     * @param msg Message to be displayed when getMessage is called.","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"sopa301"},"content":"    public InvalidIndexException(String msg) {","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"sopa301"},"content":"        super(msg);","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"sopa301":22}},{"path":"src/main/java/bot/exceptions/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"package bot.exceptions;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":" * Exception for incorrect inputs when creating a Task object.","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"public class InvalidTaskException extends InvalidArgumentException {","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"     * Constructor with variable message.","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"     * @param msg Message to be displayed when getMessage is called.","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"    public InvalidTaskException(String msg) {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"        super(msg);","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"sopa301":15}},{"path":"src/main/java/bot/exceptions/LoadingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"package bot.exceptions;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":" * Exception for when the storage class fails to load or save data for any reason.","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"public class LoadingException extends BotException {","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"     * Creates a LoadingException with the given string as the error message.","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"     * @param str Error message.","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"    public LoadingException(String str) {","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"        super(str);","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"sopa301":15}},{"path":"src/main/java/bot/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"package bot.gui;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"sopa301"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"sopa301"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"sopa301"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"sopa301"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"sopa301"},"content":"     * Dialog text.","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"sopa301"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"sopa301"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"sopa301"},"content":"     * Image for the dialog box.","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"sopa301"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"sopa301"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"sopa301"},"content":"     * Creates a dialog box with the given text and image.","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"sopa301"},"content":"     * @param text Text to show in the box.","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"sopa301"},"content":"     * @param img Image to show in the box.","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"sopa301"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"sopa301"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"sopa301"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"sopa301"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"sopa301"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"sopa301"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"sopa301"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"sopa301"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"sopa301"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"sopa301"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"sopa301"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"sopa301"},"content":"    private void flip() {","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"sopa301"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"sopa301"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"sopa301"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"sopa301"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"sopa301"},"content":"     * Creates a dialog box to show on the user\u0027s side with the given text and image.","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"sopa301"},"content":"     * @param text Text to show.","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"sopa301"},"content":"     * @param img Image to show.","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"sopa301"},"content":"     * @return Dialog box.","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"sopa301"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"sopa301"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"sopa301"},"content":"     * Creates a dialog box to show on the bot\u0027s side with the given text and image.","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":77,"author":{"gitId":"sopa301"},"content":"     * @param text Text to show.","lastModifiedDate":"2023-09-04"},{"lineNumber":78,"author":{"gitId":"sopa301"},"content":"     * @param img Image to show.","lastModifiedDate":"2023-09-04"},{"lineNumber":79,"author":{"gitId":"sopa301"},"content":"     * @return Dialog box.","lastModifiedDate":"2023-09-04"},{"lineNumber":80,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":81,"author":{"gitId":"sopa301"},"content":"    public static DialogBox getBotDialog(String text, Image img) {","lastModifiedDate":"2023-09-04"},{"lineNumber":82,"author":{"gitId":"sopa301"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-04"},{"lineNumber":83,"author":{"gitId":"sopa301"},"content":"        db.flip();","lastModifiedDate":"2023-09-04"},{"lineNumber":84,"author":{"gitId":"sopa301"},"content":"        return db;","lastModifiedDate":"2023-09-04"},{"lineNumber":85,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":86,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"sopa301":86}},{"path":"src/main/java/bot/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"package bot.gui;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"import bot.Main;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"public class Launcher {","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"     * Main method for the entire project.","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"     * @param args Command line arguments.","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"        Application.launch(Main.class);","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"sopa301":18}},{"path":"src/main/java/bot/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"package bot.gui;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"import bot.Bot;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":"     * Scroll pane on the GUI.","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"sopa301"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"sopa301"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"sopa301"},"content":"     * Dialog container for the GUI.","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"sopa301"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"sopa301"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"sopa301"},"content":"     * User input field for the GUI","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"sopa301"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"sopa301"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"sopa301"},"content":"     * Bot instance exchanging data with the GUI.","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"sopa301"},"content":"    private Bot bot;","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"sopa301"},"content":"     * User\u0027s image in the GUI.","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"sopa301"},"content":"    private final Image userImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"sopa301"},"content":"            this.getClass().getResourceAsStream(\"/images/DaUser.png\")));","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"sopa301"},"content":"     * Bot\u0027s image in the GUI.","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"sopa301"},"content":"    private final Image botImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"sopa301"},"content":"            this.getClass().getResourceAsStream(\"/images/DaBot.png\")));","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"sopa301"},"content":"     * Initialises the main window in the GUI.","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"sopa301"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"sopa301"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"sopa301"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"sopa301"},"content":"     * Sets the active bot instance to the given bot.","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"sopa301"},"content":"     * @param bot Bot to use in the GUI.","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"sopa301"},"content":"    public void setBot(Bot bot) {","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"sopa301"},"content":"        this.bot \u003d bot;","lastModifiedDate":"2023-09-04"},{"lineNumber":64,"author":{"gitId":"sopa301"},"content":"        dialogContainer.getChildren().add(DialogBox.getBotDialog(bot.greet(), botImage));","lastModifiedDate":"2023-09-04"},{"lineNumber":65,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"sopa301"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"sopa301"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"sopa301"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":72,"author":{"gitId":"sopa301"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-04"},{"lineNumber":73,"author":{"gitId":"sopa301"},"content":"        if (bot.isExit()) {","lastModifiedDate":"2023-09-04"},{"lineNumber":74,"author":{"gitId":"sopa301"},"content":"            return;","lastModifiedDate":"2023-09-04"},{"lineNumber":75,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":76,"author":{"gitId":"sopa301"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-04"},{"lineNumber":77,"author":{"gitId":"sopa301"},"content":"        String response \u003d bot.getResponse(input);","lastModifiedDate":"2023-09-04"},{"lineNumber":78,"author":{"gitId":"sopa301"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-04"},{"lineNumber":79,"author":{"gitId":"sopa301"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-04"},{"lineNumber":80,"author":{"gitId":"sopa301"},"content":"                DialogBox.getBotDialog(response, botImage)","lastModifiedDate":"2023-09-04"},{"lineNumber":81,"author":{"gitId":"sopa301"},"content":"        );","lastModifiedDate":"2023-09-04"},{"lineNumber":82,"author":{"gitId":"sopa301"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-04"},{"lineNumber":83,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":84,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"sopa301":84}},{"path":"src/main/java/bot/utils/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"package bot.utils;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"import bot.enums.DoneStatus;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"import bot.exceptions.EmptyListException;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"import bot.exceptions.InvalidArgumentException;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"import bot.exceptions.InvalidIndexException;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"import bot.exceptions.InvalidTaskException;","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":" * Command abstraction for executing commands.","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"public abstract class Command {","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"     * Regex pattern for delete commands.","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":"    private static final Pattern PATTERN_DELETE \u003d Pattern.compile(\"delete -?\\\\d+\");","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"sopa301"},"content":"     * Regex pattern for mark commands.","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"sopa301"},"content":"    private static final Pattern PATTERN_MARK \u003d Pattern.compile(\"mark -?\\\\d+\");","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"sopa301"},"content":"     * Regex pattern for unmark commands.","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"sopa301"},"content":"    private static final Pattern PATTERN_UNMARK \u003d Pattern.compile(\"unmark -?\\\\d+\");","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"sopa301"},"content":"     * Default constructor. Does nothing.","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"sopa301"},"content":"    public Command() {}","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"sopa301"},"content":"     * Creates an ExitCommand to indicate the end of the program.","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"sopa301"},"content":"     * @return ExitCommand object.","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"sopa301"},"content":"    public static Command exit() {","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"sopa301"},"content":"        return new ExitCommand();","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"sopa301"},"content":"     * Creates a ListCommand to instruct the bot to display the items in the list.","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"sopa301"},"content":"     * @return ListCommand object.","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"sopa301"},"content":"    public static Command list() {","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"sopa301"},"content":"        return new ListCommand();","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"sopa301"},"content":"     * Creates a MarkCommand to instruct the bot to mark the task at the given index","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"sopa301"},"content":"     * in the list.","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"sopa301"},"content":"     * @param str Full command string.","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"sopa301"},"content":"     * @return MarkCommand object.","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"sopa301"},"content":"     * @throws InvalidArgumentException If the string doesn\u0027t contain an int.","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"sopa301"},"content":"    public static Command mark(String str) throws InvalidArgumentException {","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"sopa301"},"content":"        if (!PATTERN_MARK.matcher(str).matches()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"sopa301"},"content":"            throw new InvalidArgumentException();","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"sopa301"},"content":"        int index \u003d Integer.parseInt(str.substring(5));","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"sopa301"},"content":"        return new MarkCommand(index, DoneStatus.DONE);","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"sopa301"},"content":"     * Creates a MarkCommand to instruct the bot to unmark the task at the given index","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"sopa301"},"content":"     * in the list.","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"sopa301"},"content":"     * @param str Full command string.","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"sopa301"},"content":"     * @return MarkCommand object.","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"sopa301"},"content":"     * @throws InvalidArgumentException If the string doesn\u0027t contain an int.","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"sopa301"},"content":"    public static Command unmark(String str) throws InvalidArgumentException {","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"sopa301"},"content":"        if (!PATTERN_UNMARK.matcher(str).matches()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"sopa301"},"content":"            throw new InvalidArgumentException();","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":79,"author":{"gitId":"sopa301"},"content":"        int index \u003d Integer.parseInt(str.substring(7));","lastModifiedDate":"2023-08-26"},{"lineNumber":80,"author":{"gitId":"sopa301"},"content":"        return new MarkCommand(index, DoneStatus.NOT_DONE);","lastModifiedDate":"2023-08-26"},{"lineNumber":81,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":82,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":84,"author":{"gitId":"sopa301"},"content":"     * Creates an AddCommand to instruct the bot to add a task to the list.","lastModifiedDate":"2023-08-26"},{"lineNumber":85,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":86,"author":{"gitId":"sopa301"},"content":"     * @param str Full command string.","lastModifiedDate":"2023-08-26"},{"lineNumber":87,"author":{"gitId":"sopa301"},"content":"     * @return AddCommand object.","lastModifiedDate":"2023-08-26"},{"lineNumber":88,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":89,"author":{"gitId":"sopa301"},"content":"    public static Command add(String str) {","lastModifiedDate":"2023-08-26"},{"lineNumber":90,"author":{"gitId":"sopa301"},"content":"        return new AddCommand(str);","lastModifiedDate":"2023-08-26"},{"lineNumber":91,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":92,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":93,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":94,"author":{"gitId":"sopa301"},"content":"     * Creates a MarkCommand to instruct the bot to delete the task at the given index","lastModifiedDate":"2023-08-26"},{"lineNumber":95,"author":{"gitId":"sopa301"},"content":"     * in the list.","lastModifiedDate":"2023-08-26"},{"lineNumber":96,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":97,"author":{"gitId":"sopa301"},"content":"     * @param str Full command string.","lastModifiedDate":"2023-08-26"},{"lineNumber":98,"author":{"gitId":"sopa301"},"content":"     * @return DeleteCommand object.","lastModifiedDate":"2023-08-26"},{"lineNumber":99,"author":{"gitId":"sopa301"},"content":"     * @throws InvalidArgumentException If the string doesn\u0027t contain an int.","lastModifiedDate":"2023-08-26"},{"lineNumber":100,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":101,"author":{"gitId":"sopa301"},"content":"    public static Command delete(String str) throws InvalidArgumentException {","lastModifiedDate":"2023-08-26"},{"lineNumber":102,"author":{"gitId":"sopa301"},"content":"        if (!PATTERN_DELETE.matcher(str).matches()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":103,"author":{"gitId":"sopa301"},"content":"            throw new InvalidArgumentException();","lastModifiedDate":"2023-08-26"},{"lineNumber":104,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":105,"author":{"gitId":"sopa301"},"content":"        int index \u003d Integer.parseInt(str.substring(7));","lastModifiedDate":"2023-08-26"},{"lineNumber":106,"author":{"gitId":"sopa301"},"content":"        return new DeleteCommand(index);","lastModifiedDate":"2023-08-26"},{"lineNumber":107,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":108,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":109,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":110,"author":{"gitId":"sopa301"},"content":"     * Creates a FindCommand to instruct the bot to look for tasks that meet specific criteria.","lastModifiedDate":"2023-08-26"},{"lineNumber":111,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":112,"author":{"gitId":"sopa301"},"content":"     * @param str Full command string.","lastModifiedDate":"2023-08-26"},{"lineNumber":113,"author":{"gitId":"sopa301"},"content":"     * @return FindCommand object.","lastModifiedDate":"2023-08-26"},{"lineNumber":114,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":115,"author":{"gitId":"sopa301"},"content":"    public static Command find(String str) {","lastModifiedDate":"2023-08-26"},{"lineNumber":116,"author":{"gitId":"sopa301"},"content":"        return new FindCommand(str);","lastModifiedDate":"2023-08-26"},{"lineNumber":117,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":118,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":119,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":120,"author":{"gitId":"sopa301"},"content":"     * Checks if the bot should exit after the execution of the command.","lastModifiedDate":"2023-08-26"},{"lineNumber":121,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":122,"author":{"gitId":"sopa301"},"content":"     * @return True if the bot should exit, false otherwise.","lastModifiedDate":"2023-08-26"},{"lineNumber":123,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":124,"author":{"gitId":"sopa301"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-08-26"},{"lineNumber":125,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":126,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":127,"author":{"gitId":"sopa301"},"content":"     * Executes the command.","lastModifiedDate":"2023-08-26"},{"lineNumber":128,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":129,"author":{"gitId":"sopa301"},"content":"     * @param tasks   Task list containing tasks.","lastModifiedDate":"2023-08-26"},{"lineNumber":130,"author":{"gitId":"sopa301"},"content":"     * @param ui      User interface for interacting with users.","lastModifiedDate":"2023-08-26"},{"lineNumber":131,"author":{"gitId":"sopa301"},"content":"     * @param storage Storage for storing data.","lastModifiedDate":"2023-08-26"},{"lineNumber":132,"author":{"gitId":"sopa301"},"content":"     * @return Bot\u0027s response to the command.","lastModifiedDate":"2023-09-04"},{"lineNumber":133,"author":{"gitId":"sopa301"},"content":"     * @throws EmptyListException    If an illegal operation is performed on an empty list.","lastModifiedDate":"2023-08-26"},{"lineNumber":134,"author":{"gitId":"sopa301"},"content":"     * @throws InvalidIndexException If the command tries to access an invalid index.","lastModifiedDate":"2023-08-26"},{"lineNumber":135,"author":{"gitId":"sopa301"},"content":"     * @throws InvalidTaskException  If the command creates a task and fails to do so.","lastModifiedDate":"2023-08-26"},{"lineNumber":136,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":137,"author":{"gitId":"sopa301"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws EmptyListException,","lastModifiedDate":"2023-09-04"},{"lineNumber":138,"author":{"gitId":"sopa301"},"content":"            InvalidIndexException, InvalidTaskException;","lastModifiedDate":"2023-08-26"},{"lineNumber":139,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":140,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":141,"author":{"gitId":"sopa301"},"content":"     * Bot.Command to indicate the end of the program.","lastModifiedDate":"2023-08-26"},{"lineNumber":142,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":143,"author":{"gitId":"sopa301"},"content":"    private static class ExitCommand extends Command {","lastModifiedDate":"2023-08-26"},{"lineNumber":144,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":145,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-26"},{"lineNumber":146,"author":{"gitId":"sopa301"},"content":"         * Checks if the bot should exit after the execution of the command.","lastModifiedDate":"2023-08-26"},{"lineNumber":147,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-26"},{"lineNumber":148,"author":{"gitId":"sopa301"},"content":"         * @return True if the bot should exit, false otherwise.","lastModifiedDate":"2023-08-26"},{"lineNumber":149,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-26"},{"lineNumber":150,"author":{"gitId":"sopa301"},"content":"        public boolean isExit() {","lastModifiedDate":"2023-08-26"},{"lineNumber":151,"author":{"gitId":"sopa301"},"content":"            return true;","lastModifiedDate":"2023-08-26"},{"lineNumber":152,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":153,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":154,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-26"},{"lineNumber":155,"author":{"gitId":"sopa301"},"content":"         * Executes the command.","lastModifiedDate":"2023-08-26"},{"lineNumber":156,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-26"},{"lineNumber":157,"author":{"gitId":"sopa301"},"content":"         * @param tasks   Bot.Task list containing tasks.","lastModifiedDate":"2023-08-26"},{"lineNumber":158,"author":{"gitId":"sopa301"},"content":"         * @param ui      User interface for interacting with users.","lastModifiedDate":"2023-08-26"},{"lineNumber":159,"author":{"gitId":"sopa301"},"content":"         * @param storage Bot.Storage for storing data.","lastModifiedDate":"2023-08-26"},{"lineNumber":160,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-26"},{"lineNumber":161,"author":{"gitId":"sopa301"},"content":"        public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-04"},{"lineNumber":162,"author":{"gitId":"sopa301"},"content":"            return ui.showGoodbye();","lastModifiedDate":"2023-09-04"},{"lineNumber":163,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":164,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":165,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":166,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":167,"author":{"gitId":"sopa301"},"content":"     * Bot.Command to list all tasks in the task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":168,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":169,"author":{"gitId":"sopa301"},"content":"    private static class ListCommand extends Command {","lastModifiedDate":"2023-08-26"},{"lineNumber":170,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-26"},{"lineNumber":171,"author":{"gitId":"sopa301"},"content":"         * Checks if the bot should exit after the execution of the command.","lastModifiedDate":"2023-08-26"},{"lineNumber":172,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-26"},{"lineNumber":173,"author":{"gitId":"sopa301"},"content":"         * @return True if the bot should exit, false otherwise.","lastModifiedDate":"2023-08-26"},{"lineNumber":174,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-26"},{"lineNumber":175,"author":{"gitId":"sopa301"},"content":"        public boolean isExit() {","lastModifiedDate":"2023-08-26"},{"lineNumber":176,"author":{"gitId":"sopa301"},"content":"            return false;","lastModifiedDate":"2023-08-26"},{"lineNumber":177,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":178,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":179,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-26"},{"lineNumber":180,"author":{"gitId":"sopa301"},"content":"         * Executes the command.","lastModifiedDate":"2023-08-26"},{"lineNumber":181,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-26"},{"lineNumber":182,"author":{"gitId":"sopa301"},"content":"         * @param tasks   Bot.Task list containing tasks.","lastModifiedDate":"2023-08-26"},{"lineNumber":183,"author":{"gitId":"sopa301"},"content":"         * @param ui      User interface for interacting with users.","lastModifiedDate":"2023-08-26"},{"lineNumber":184,"author":{"gitId":"sopa301"},"content":"         * @param storage Bot.Storage for storing data.","lastModifiedDate":"2023-08-26"},{"lineNumber":185,"author":{"gitId":"sopa301"},"content":"         * @return Bot\u0027s response to the command.","lastModifiedDate":"2023-09-04"},{"lineNumber":186,"author":{"gitId":"sopa301"},"content":"         * @throws EmptyListException If an illegal operation is performed on an empty list.","lastModifiedDate":"2023-08-26"},{"lineNumber":187,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-26"},{"lineNumber":188,"author":{"gitId":"sopa301"},"content":"        public String execute(TaskList tasks, Ui ui, Storage storage) throws EmptyListException {","lastModifiedDate":"2023-09-04"},{"lineNumber":189,"author":{"gitId":"sopa301"},"content":"            if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-26"},{"lineNumber":190,"author":{"gitId":"sopa301"},"content":"                throw new EmptyListException();","lastModifiedDate":"2023-08-26"},{"lineNumber":191,"author":{"gitId":"sopa301"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":192,"author":{"gitId":"sopa301"},"content":"            return ui.println(\"Here are the tasks in your list:\").concat(ui.displayTaskList(tasks));","lastModifiedDate":"2023-09-04"},{"lineNumber":193,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":194,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":195,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":196,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":197,"author":{"gitId":"sopa301"},"content":"     * Bot.Command to mark the task as done or not done.","lastModifiedDate":"2023-08-26"},{"lineNumber":198,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":199,"author":{"gitId":"sopa301"},"content":"    private static class MarkCommand extends Command {","lastModifiedDate":"2023-08-26"},{"lineNumber":200,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-26"},{"lineNumber":201,"author":{"gitId":"sopa301"},"content":"         * Index to mark the task at.","lastModifiedDate":"2023-08-26"},{"lineNumber":202,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-26"},{"lineNumber":203,"author":{"gitId":"sopa301"},"content":"        private final int index;","lastModifiedDate":"2023-09-04"},{"lineNumber":204,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-26"},{"lineNumber":205,"author":{"gitId":"sopa301"},"content":"         * Mark the task as done or not done.","lastModifiedDate":"2023-08-26"},{"lineNumber":206,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-26"},{"lineNumber":207,"author":{"gitId":"sopa301"},"content":"        private final DoneStatus done;","lastModifiedDate":"2023-09-04"},{"lineNumber":208,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":209,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-26"},{"lineNumber":210,"author":{"gitId":"sopa301"},"content":"         * Creates a MarkCommand with the command to mark or unmark the task","lastModifiedDate":"2023-08-26"},{"lineNumber":211,"author":{"gitId":"sopa301"},"content":"         * at the given index.","lastModifiedDate":"2023-08-26"},{"lineNumber":212,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-26"},{"lineNumber":213,"author":{"gitId":"sopa301"},"content":"         * @param index Index to mark the task at.","lastModifiedDate":"2023-08-26"},{"lineNumber":214,"author":{"gitId":"sopa301"},"content":"         * @param done  Mark the task as done or not done.","lastModifiedDate":"2023-08-26"},{"lineNumber":215,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-26"},{"lineNumber":216,"author":{"gitId":"sopa301"},"content":"        protected MarkCommand(int index, DoneStatus done) {","lastModifiedDate":"2023-08-26"},{"lineNumber":217,"author":{"gitId":"sopa301"},"content":"            this.index \u003d index;","lastModifiedDate":"2023-08-26"},{"lineNumber":218,"author":{"gitId":"sopa301"},"content":"            this.done \u003d done;","lastModifiedDate":"2023-08-26"},{"lineNumber":219,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":220,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":221,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-26"},{"lineNumber":222,"author":{"gitId":"sopa301"},"content":"         * Checks if the bot should exit after the execution of the command.","lastModifiedDate":"2023-08-26"},{"lineNumber":223,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-26"},{"lineNumber":224,"author":{"gitId":"sopa301"},"content":"         * @return True if the bot should exit, false otherwise.","lastModifiedDate":"2023-08-26"},{"lineNumber":225,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-26"},{"lineNumber":226,"author":{"gitId":"sopa301"},"content":"        public boolean isExit() {","lastModifiedDate":"2023-08-26"},{"lineNumber":227,"author":{"gitId":"sopa301"},"content":"            return false;","lastModifiedDate":"2023-08-26"},{"lineNumber":228,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":229,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":230,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-26"},{"lineNumber":231,"author":{"gitId":"sopa301"},"content":"         * Executes the command.","lastModifiedDate":"2023-08-26"},{"lineNumber":232,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-26"},{"lineNumber":233,"author":{"gitId":"sopa301"},"content":"         * @param tasks   Bot.Task list containing tasks.","lastModifiedDate":"2023-08-26"},{"lineNumber":234,"author":{"gitId":"sopa301"},"content":"         * @param ui      User interface for interacting with users.","lastModifiedDate":"2023-08-26"},{"lineNumber":235,"author":{"gitId":"sopa301"},"content":"         * @param storage Bot.Storage for storing data.","lastModifiedDate":"2023-08-26"},{"lineNumber":236,"author":{"gitId":"sopa301"},"content":"         * @return Bot\u0027s response to the command.","lastModifiedDate":"2023-09-04"},{"lineNumber":237,"author":{"gitId":"sopa301"},"content":"         * @throws InvalidIndexException If the command tries to access an invalid index.","lastModifiedDate":"2023-08-26"},{"lineNumber":238,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-26"},{"lineNumber":239,"author":{"gitId":"sopa301"},"content":"        public String execute(TaskList tasks, Ui ui, Storage storage) throws InvalidIndexException {","lastModifiedDate":"2023-09-04"},{"lineNumber":240,"author":{"gitId":"sopa301"},"content":"            if (done.equals(DoneStatus.DONE)) {","lastModifiedDate":"2023-08-26"},{"lineNumber":241,"author":{"gitId":"sopa301"},"content":"                tasks.mark(index);","lastModifiedDate":"2023-08-26"},{"lineNumber":242,"author":{"gitId":"sopa301"},"content":"                return ui.println(\"I\u0027ll mark this as done:\\n\" + tasks.get(index).toString());","lastModifiedDate":"2023-09-04"},{"lineNumber":243,"author":{"gitId":"sopa301"},"content":"            } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":244,"author":{"gitId":"sopa301"},"content":"                tasks.unmark(index);","lastModifiedDate":"2023-08-26"},{"lineNumber":245,"author":{"gitId":"sopa301"},"content":"                return ui.println(\"I\u0027ll mark this as not done:\\n\" + tasks.get(index).toString());","lastModifiedDate":"2023-09-04"},{"lineNumber":246,"author":{"gitId":"sopa301"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":247,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":248,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":249,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":250,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":251,"author":{"gitId":"sopa301"},"content":"     * Bot.Command to add tasks to the task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":252,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":253,"author":{"gitId":"sopa301"},"content":"    private static class AddCommand extends Command {","lastModifiedDate":"2023-08-26"},{"lineNumber":254,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-26"},{"lineNumber":255,"author":{"gitId":"sopa301"},"content":"         * Full command string","lastModifiedDate":"2023-08-26"},{"lineNumber":256,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-26"},{"lineNumber":257,"author":{"gitId":"sopa301"},"content":"        private final String input;","lastModifiedDate":"2023-09-04"},{"lineNumber":258,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":259,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-26"},{"lineNumber":260,"author":{"gitId":"sopa301"},"content":"         * Creates an AddCommand with the full command string.","lastModifiedDate":"2023-08-26"},{"lineNumber":261,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-26"},{"lineNumber":262,"author":{"gitId":"sopa301"},"content":"         * @param input Full command string.","lastModifiedDate":"2023-08-26"},{"lineNumber":263,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-26"},{"lineNumber":264,"author":{"gitId":"sopa301"},"content":"        protected AddCommand(String input) {","lastModifiedDate":"2023-08-26"},{"lineNumber":265,"author":{"gitId":"sopa301"},"content":"            this.input \u003d input;","lastModifiedDate":"2023-08-26"},{"lineNumber":266,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":267,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":268,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-26"},{"lineNumber":269,"author":{"gitId":"sopa301"},"content":"         * Checks if the bot should exit after the execution of the command.","lastModifiedDate":"2023-08-26"},{"lineNumber":270,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-26"},{"lineNumber":271,"author":{"gitId":"sopa301"},"content":"         * @return True if the bot should exit, false otherwise.","lastModifiedDate":"2023-08-26"},{"lineNumber":272,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-26"},{"lineNumber":273,"author":{"gitId":"sopa301"},"content":"        public boolean isExit() {","lastModifiedDate":"2023-08-26"},{"lineNumber":274,"author":{"gitId":"sopa301"},"content":"            return false;","lastModifiedDate":"2023-08-26"},{"lineNumber":275,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":276,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":277,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-26"},{"lineNumber":278,"author":{"gitId":"sopa301"},"content":"         * Executes the command.","lastModifiedDate":"2023-08-26"},{"lineNumber":279,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-26"},{"lineNumber":280,"author":{"gitId":"sopa301"},"content":"         * @param tasks   Bot.Task list containing tasks.","lastModifiedDate":"2023-08-26"},{"lineNumber":281,"author":{"gitId":"sopa301"},"content":"         * @param ui      User interface for interacting with users.","lastModifiedDate":"2023-08-26"},{"lineNumber":282,"author":{"gitId":"sopa301"},"content":"         * @param storage Bot.Storage for storing data.","lastModifiedDate":"2023-08-26"},{"lineNumber":283,"author":{"gitId":"sopa301"},"content":"         * @return Bot\u0027s response to the command.","lastModifiedDate":"2023-09-04"},{"lineNumber":284,"author":{"gitId":"sopa301"},"content":"         * @throws InvalidTaskException If the command creates a task and fails to do so.","lastModifiedDate":"2023-08-26"},{"lineNumber":285,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-26"},{"lineNumber":286,"author":{"gitId":"sopa301"},"content":"        public String execute(TaskList tasks, Ui ui, Storage storage) throws InvalidTaskException {","lastModifiedDate":"2023-09-04"},{"lineNumber":287,"author":{"gitId":"sopa301"},"content":"            Task newTask \u003d Task.makeTask(input);","lastModifiedDate":"2023-08-26"},{"lineNumber":288,"author":{"gitId":"sopa301"},"content":"            tasks.add(newTask);","lastModifiedDate":"2023-08-26"},{"lineNumber":289,"author":{"gitId":"sopa301"},"content":"            return ui.println(\"Added:\\n\" + newTask.toString())","lastModifiedDate":"2023-09-04"},{"lineNumber":290,"author":{"gitId":"sopa301"},"content":"                    .concat(ui.println(\"Now you have \" + tasks.size() + \" task(s) in the list.\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":291,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":292,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":293,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":294,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":295,"author":{"gitId":"sopa301"},"content":"     * Command to delete tasks.","lastModifiedDate":"2023-08-26"},{"lineNumber":296,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":297,"author":{"gitId":"sopa301"},"content":"    private static class DeleteCommand extends Command {","lastModifiedDate":"2023-08-26"},{"lineNumber":298,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-26"},{"lineNumber":299,"author":{"gitId":"sopa301"},"content":"         * Index to delete task at.","lastModifiedDate":"2023-08-26"},{"lineNumber":300,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-26"},{"lineNumber":301,"author":{"gitId":"sopa301"},"content":"        private final int index;","lastModifiedDate":"2023-09-04"},{"lineNumber":302,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":303,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-26"},{"lineNumber":304,"author":{"gitId":"sopa301"},"content":"         * Creates a DeleteCommand with the given index.","lastModifiedDate":"2023-08-26"},{"lineNumber":305,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-26"},{"lineNumber":306,"author":{"gitId":"sopa301"},"content":"         * @param index Index to delete task at.","lastModifiedDate":"2023-08-26"},{"lineNumber":307,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-26"},{"lineNumber":308,"author":{"gitId":"sopa301"},"content":"        protected DeleteCommand(int index) {","lastModifiedDate":"2023-08-26"},{"lineNumber":309,"author":{"gitId":"sopa301"},"content":"            this.index \u003d index;","lastModifiedDate":"2023-08-26"},{"lineNumber":310,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":311,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":312,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-26"},{"lineNumber":313,"author":{"gitId":"sopa301"},"content":"         * Checks if the bot should exit after the execution of the command.","lastModifiedDate":"2023-08-26"},{"lineNumber":314,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-26"},{"lineNumber":315,"author":{"gitId":"sopa301"},"content":"         * @return True if the bot should exit, false otherwise.","lastModifiedDate":"2023-08-26"},{"lineNumber":316,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-26"},{"lineNumber":317,"author":{"gitId":"sopa301"},"content":"        public boolean isExit() {","lastModifiedDate":"2023-08-26"},{"lineNumber":318,"author":{"gitId":"sopa301"},"content":"            return false;","lastModifiedDate":"2023-08-26"},{"lineNumber":319,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":320,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":321,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-26"},{"lineNumber":322,"author":{"gitId":"sopa301"},"content":"         * Executes the command.","lastModifiedDate":"2023-08-26"},{"lineNumber":323,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-26"},{"lineNumber":324,"author":{"gitId":"sopa301"},"content":"         * @param tasks   Bot.Task list containing tasks.","lastModifiedDate":"2023-08-26"},{"lineNumber":325,"author":{"gitId":"sopa301"},"content":"         * @param ui      User interface for interacting with users.","lastModifiedDate":"2023-08-26"},{"lineNumber":326,"author":{"gitId":"sopa301"},"content":"         * @param storage Bot.Storage for storing data.","lastModifiedDate":"2023-08-26"},{"lineNumber":327,"author":{"gitId":"sopa301"},"content":"         * @return Bot\u0027s response to the command.","lastModifiedDate":"2023-09-04"},{"lineNumber":328,"author":{"gitId":"sopa301"},"content":"         * @throws InvalidIndexException If the command tries to access an invalid index.","lastModifiedDate":"2023-08-26"},{"lineNumber":329,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-26"},{"lineNumber":330,"author":{"gitId":"sopa301"},"content":"        public String execute(TaskList tasks, Ui ui, Storage storage) throws InvalidIndexException {","lastModifiedDate":"2023-09-04"},{"lineNumber":331,"author":{"gitId":"sopa301"},"content":"            Task task \u003d tasks.remove(index);","lastModifiedDate":"2023-08-26"},{"lineNumber":332,"author":{"gitId":"sopa301"},"content":"            return ui.println(\"I\u0027ve removed this task:\\n\" + task.toString())","lastModifiedDate":"2023-09-04"},{"lineNumber":333,"author":{"gitId":"sopa301"},"content":"                    .concat(ui.println(\"Now you have \" + tasks.size() + \" task(s) in the list.\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":334,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":335,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":336,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":337,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":338,"author":{"gitId":"sopa301"},"content":"     * Command for finding specific tasks in the task list.","lastModifiedDate":"2023-08-26"},{"lineNumber":339,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":340,"author":{"gitId":"sopa301"},"content":"    private static class FindCommand extends Command {","lastModifiedDate":"2023-08-26"},{"lineNumber":341,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-26"},{"lineNumber":342,"author":{"gitId":"sopa301"},"content":"         * Full command string.","lastModifiedDate":"2023-08-26"},{"lineNumber":343,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-26"},{"lineNumber":344,"author":{"gitId":"sopa301"},"content":"        private final String input;","lastModifiedDate":"2023-09-04"},{"lineNumber":345,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":346,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-26"},{"lineNumber":347,"author":{"gitId":"sopa301"},"content":"         * Creates an FindCommand with the full command string.","lastModifiedDate":"2023-08-26"},{"lineNumber":348,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-26"},{"lineNumber":349,"author":{"gitId":"sopa301"},"content":"         * @param input Full command string.","lastModifiedDate":"2023-08-26"},{"lineNumber":350,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-26"},{"lineNumber":351,"author":{"gitId":"sopa301"},"content":"        protected FindCommand(String input) {","lastModifiedDate":"2023-08-26"},{"lineNumber":352,"author":{"gitId":"sopa301"},"content":"            this.input \u003d input;","lastModifiedDate":"2023-08-26"},{"lineNumber":353,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":354,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":355,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-26"},{"lineNumber":356,"author":{"gitId":"sopa301"},"content":"         * Checks if the bot should exit after the execution of the command.","lastModifiedDate":"2023-08-26"},{"lineNumber":357,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-26"},{"lineNumber":358,"author":{"gitId":"sopa301"},"content":"         * @return True if the bot should exit, false otherwise.","lastModifiedDate":"2023-08-26"},{"lineNumber":359,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-26"},{"lineNumber":360,"author":{"gitId":"sopa301"},"content":"        public boolean isExit() {","lastModifiedDate":"2023-08-26"},{"lineNumber":361,"author":{"gitId":"sopa301"},"content":"            return false;","lastModifiedDate":"2023-08-26"},{"lineNumber":362,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":363,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":364,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-26"},{"lineNumber":365,"author":{"gitId":"sopa301"},"content":"         * Executes the command.","lastModifiedDate":"2023-08-26"},{"lineNumber":366,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-26"},{"lineNumber":367,"author":{"gitId":"sopa301"},"content":"         * @param tasks   Task list containing tasks.","lastModifiedDate":"2023-08-26"},{"lineNumber":368,"author":{"gitId":"sopa301"},"content":"         * @param ui      User interface for interacting with users.","lastModifiedDate":"2023-08-26"},{"lineNumber":369,"author":{"gitId":"sopa301"},"content":"         * @param storage Storage for storing data.","lastModifiedDate":"2023-08-26"},{"lineNumber":370,"author":{"gitId":"sopa301"},"content":"         * @return Bot\u0027s response to the command.","lastModifiedDate":"2023-09-04"},{"lineNumber":371,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-26"},{"lineNumber":372,"author":{"gitId":"sopa301"},"content":"        public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-04"},{"lineNumber":373,"author":{"gitId":"sopa301"},"content":"            TaskList queries \u003d tasks.findAll(input.substring(5).trim());","lastModifiedDate":"2023-08-26"},{"lineNumber":374,"author":{"gitId":"sopa301"},"content":"            if (queries.size() \u003e 0) {","lastModifiedDate":"2023-08-26"},{"lineNumber":375,"author":{"gitId":"sopa301"},"content":"                return ui.println(\"Here are the matching tasks in your list:\")","lastModifiedDate":"2023-09-04"},{"lineNumber":376,"author":{"gitId":"sopa301"},"content":"                        .concat(ui.displayTaskList(queries));","lastModifiedDate":"2023-09-04"},{"lineNumber":377,"author":{"gitId":"sopa301"},"content":"            } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":378,"author":{"gitId":"sopa301"},"content":"                return ui.println(\"Sorry, no matching tasks found.\");","lastModifiedDate":"2023-09-04"},{"lineNumber":379,"author":{"gitId":"sopa301"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":380,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":381,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":382,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"sopa301":382}},{"path":"src/main/java/bot/utils/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"package bot.utils;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"import bot.exceptions.InvalidArgumentException;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"import bot.exceptions.InvalidCommandException;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":" * Abstraction for making sense of user commands.","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"public class Parser {","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"     * Default constructor. It does nothing as the parser is not meant to","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"     * be instantiated.","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"    public Parser() {}","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"     * Parses the command string into a command to be executed.","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":"     * Does not guarantee the command is syntactically correct.","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"sopa301"},"content":"     * @param str Full command string.","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"sopa301"},"content":"     * @return Command object.","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"sopa301"},"content":"     * @throws InvalidCommandException If the command is invalid.","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"sopa301"},"content":"     * @throws InvalidArgumentException If the arguments are clearly invalid.","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"sopa301"},"content":"    public static Command parse(String str) throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"sopa301"},"content":"        if (str.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"sopa301"},"content":"            return Command.exit();","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"sopa301"},"content":"        } else if (str.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"sopa301"},"content":"            return Command.list();","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"sopa301"},"content":"        } else if (str.startsWith(\"mark \") || str.equals(\"mark\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":31,"author":{"gitId":"sopa301"},"content":"            return Command.mark(str);","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"sopa301"},"content":"        } else if (str.startsWith(\"unmark \") || str.equals(\"unmark\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":33,"author":{"gitId":"sopa301"},"content":"            return Command.unmark(str);","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"sopa301"},"content":"        } else if (Task.isTaskCommand(str)) {","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"sopa301"},"content":"            return Command.add(str);","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"sopa301"},"content":"        } else if (str.startsWith(\"delete \") || str.equals(\"delete\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":37,"author":{"gitId":"sopa301"},"content":"            return Command.delete(str);","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"sopa301"},"content":"        } else if (str.startsWith(\"find \") || str.equals(\"find\")) {","lastModifiedDate":"2023-09-02"},{"lineNumber":39,"author":{"gitId":"sopa301"},"content":"            return Command.find(str);","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"sopa301"},"content":"        } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"sopa301"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"sopa301":44}},{"path":"src/main/java/bot/utils/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"package bot.utils;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"import java.io.File;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"import bot.exceptions.InvalidTaskException;","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"import bot.exceptions.LoadingException;","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":" * Abstraction for storing and loading data from a local file.","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"public class Storage {","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"     * File path for loading and saving data.","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"sopa301"},"content":"    private String filePath;","lastModifiedDate":"2023-09-02"},{"lineNumber":20,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"sopa301"},"content":"     * Creates a Storage object that stores and loads data at that file path.","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"sopa301"},"content":"     * @param filePath Path to file.","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"sopa301"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"sopa301"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"sopa301"},"content":"     * Loads data from that file path, and creates the file if it doesn\u0027t exist.","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"sopa301"},"content":"     * @param ui UI for displaying messages.","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"sopa301"},"content":"     * @return ArrayList of Task objects.","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"sopa301"},"content":"     * @throws LoadingException If the data file cannot be read or created.","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"sopa301"},"content":"    public ArrayList\u003cTask\u003e load(Ui ui) throws LoadingException {","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"sopa301"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"sopa301"},"content":"        File f \u003d new File(this.filePath);","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"sopa301"},"content":"        File parent \u003d new File(f.getParent());","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"sopa301"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"sopa301"},"content":"            if (f.isFile()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"sopa301"},"content":"                Scanner scanner \u003d new Scanner(f);","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"sopa301"},"content":"                while (scanner.hasNextLine()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"sopa301"},"content":"                    try {","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"sopa301"},"content":"                        tasks.add(Task.convertFromString(scanner.nextLine()));","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"sopa301"},"content":"                    } catch (InvalidTaskException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"sopa301"},"content":"                        ui.println(\"Invalid task, skipping...\");","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"sopa301"},"content":"                    }","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"sopa301"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"sopa301"},"content":"            } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"sopa301"},"content":"                ui.println(\"No data found, creating...\");","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"sopa301"},"content":"                if (!parent.isDirectory()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"sopa301"},"content":"                    parent.mkdirs();","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"sopa301"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"sopa301"},"content":"                f.createNewFile();","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"sopa301"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"sopa301"},"content":"        } catch (IOException | SecurityException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"sopa301"},"content":"            throw new LoadingException(e.getMessage());","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"sopa301"},"content":"        return tasks;","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"sopa301"},"content":"     * Saves task list to file named at filePath. Assumes the file has been created.","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"sopa301"},"content":"     * @param lst Bot.Task list to save to file.","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"sopa301"},"content":"     * @throws LoadingException If the list cannot be saved fully.","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"sopa301"},"content":"    public void save(TaskList lst) throws LoadingException {","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"sopa301"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"sopa301"},"content":"            File f \u003d new File(this.filePath);","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"sopa301"},"content":"            FileWriter fw \u003d new FileWriter(f);","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"sopa301"},"content":"            for (int i \u003d 1; i \u003c lst.size(); i++) {","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"sopa301"},"content":"                fw.write(lst.get(i).convertToDataString());","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"sopa301"},"content":"                fw.write(System.lineSeparator());","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"sopa301"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"sopa301"},"content":"            if (lst.size() \u003e 0) {","lastModifiedDate":"2023-08-26"},{"lineNumber":79,"author":{"gitId":"sopa301"},"content":"                fw.write(lst.get(lst.size()).convertToDataString());","lastModifiedDate":"2023-08-26"},{"lineNumber":80,"author":{"gitId":"sopa301"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":81,"author":{"gitId":"sopa301"},"content":"            fw.close();","lastModifiedDate":"2023-08-26"},{"lineNumber":82,"author":{"gitId":"sopa301"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"sopa301"},"content":"            throw new LoadingException(e.getMessage());","lastModifiedDate":"2023-08-26"},{"lineNumber":84,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":85,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":86,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"sopa301":86}},{"path":"src/main/java/bot/utils/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"package bot.utils;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-25"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"import bot.exceptions.InvalidTaskException;","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"/**","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":" * Abstract task class for tasks that can be created for the task list in the chatbot.","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":" */","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"     * Name of the task.","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"    private String name;","lastModifiedDate":"2023-09-02"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"sopa301"},"content":"     * Indicates if the task is completed.","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"sopa301"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"sopa301"},"content":"     * Default constructor.","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"sopa301"},"content":"     * @param name Name of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"sopa301"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"sopa301"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":33,"author":{"gitId":"sopa301"},"content":"     * Alternative constructor. Usually used when reading data from a file.","lastModifiedDate":"2023-08-25"},{"lineNumber":34,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-25"},{"lineNumber":35,"author":{"gitId":"sopa301"},"content":"     * @param name   Name of the task.","lastModifiedDate":"2023-08-25"},{"lineNumber":36,"author":{"gitId":"sopa301"},"content":"     * @param isDone Completion status of task.","lastModifiedDate":"2023-08-25"},{"lineNumber":37,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":38,"author":{"gitId":"sopa301"},"content":"    protected Task(String name, boolean isDone) {","lastModifiedDate":"2023-08-25"},{"lineNumber":39,"author":{"gitId":"sopa301"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-25"},{"lineNumber":40,"author":{"gitId":"sopa301"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-25"},{"lineNumber":41,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":42,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":43,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"sopa301"},"content":"     * Creates a task based on the string input. Throws an InvalidTaskException","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"sopa301"},"content":"     * if no task can be created from the string.","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"sopa301"},"content":"     * @param str Raw string to create task from.","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"sopa301"},"content":"     * @return Task object containing information from the string.","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"sopa301"},"content":"     * @throws InvalidTaskException If no task can be created.","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"sopa301"},"content":"    public static Task makeTask(String str) throws InvalidTaskException {","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"sopa301"},"content":"        Task newTask;","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"sopa301"},"content":"        if (str.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"sopa301"},"content":"            newTask \u003d ToDo.makeToDo(str);","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"sopa301"},"content":"        } else if (str.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"sopa301"},"content":"            newTask \u003d Deadline.makeDeadline(str);","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"sopa301"},"content":"        } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"sopa301"},"content":"            newTask \u003d Event.makeEvent(str);","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"sopa301"},"content":"        return newTask;","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"sopa301"},"content":"     * Reads a string of standardised data and constructs a Task object based on the information.","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"sopa301"},"content":"     * @param str Data string.","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"sopa301"},"content":"     * @return Bot.Task object.","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"sopa301"},"content":"     * @throws InvalidTaskException If the task object cannot be created from the string.","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"sopa301"},"content":"    public static Task convertFromString(String str) throws InvalidTaskException {","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"sopa301"},"content":"        if (str.startsWith(\"t\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"sopa301"},"content":"            return ToDo.convertFromString(str);","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"sopa301"},"content":"        if (str.startsWith(\"d\")) {","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"sopa301"},"content":"            return Deadline.convertFromString(str);","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"sopa301"},"content":"        return Event.convertFromString(str);","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":79,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":80,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":81,"author":{"gitId":"sopa301"},"content":"     * Checks if the raw string contains a task command.","lastModifiedDate":"2023-08-26"},{"lineNumber":82,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"sopa301"},"content":"     * @param str Raw string to check.","lastModifiedDate":"2023-08-26"},{"lineNumber":84,"author":{"gitId":"sopa301"},"content":"     * @return True if a task command is found, false otherwise.","lastModifiedDate":"2023-08-26"},{"lineNumber":85,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":86,"author":{"gitId":"sopa301"},"content":"    public static boolean isTaskCommand(String str) {","lastModifiedDate":"2023-08-26"},{"lineNumber":87,"author":{"gitId":"sopa301"},"content":"        return str.startsWith(\"todo \") || str.startsWith(\"event \") || str.startsWith(\"deadline \");","lastModifiedDate":"2023-08-26"},{"lineNumber":88,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":89,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":90,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"sopa301"},"content":"     * Gets completion status of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":93,"author":{"gitId":"sopa301"},"content":"     * @return True if the task is complete, false otherwise.","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"sopa301"},"content":"    @SuppressWarnings(\"BooleanMethodIsAlwaysInverted\")","lastModifiedDate":"2023-08-25"},{"lineNumber":96,"author":{"gitId":"sopa301"},"content":"    protected boolean isDone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":97,"author":{"gitId":"sopa301"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-20"},{"lineNumber":98,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":99,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"sopa301"},"content":"     * Gets the name of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"sopa301"},"content":"     * @return Name of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"sopa301"},"content":"    protected String getName() {","lastModifiedDate":"2023-08-20"},{"lineNumber":106,"author":{"gitId":"sopa301"},"content":"        return this.name;","lastModifiedDate":"2023-08-20"},{"lineNumber":107,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":108,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"sopa301"},"content":"     * Gets the string representation of the task.","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"sopa301"},"content":"     * @return String representation of task.","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"sopa301"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":115,"author":{"gitId":"sopa301"},"content":"    public String toString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":116,"author":{"gitId":"sopa301"},"content":"        return \"[\" + (this.isDone() ? \"X\" : \" \") + \"] \" + this.getName();","lastModifiedDate":"2023-08-25"},{"lineNumber":117,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-25"},{"lineNumber":118,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"sopa301"},"content":"     * Changes the task\u0027s completion status to complete.","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"sopa301"},"content":"    public void mark() {","lastModifiedDate":"2023-08-20"},{"lineNumber":123,"author":{"gitId":"sopa301"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-20"},{"lineNumber":124,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":125,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":126,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":127,"author":{"gitId":"sopa301"},"content":"     * Changes the task\u0027s completion status to incomplete.","lastModifiedDate":"2023-08-24"},{"lineNumber":128,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":129,"author":{"gitId":"sopa301"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-20"},{"lineNumber":130,"author":{"gitId":"sopa301"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":131,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":132,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":133,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-25"},{"lineNumber":134,"author":{"gitId":"sopa301"},"content":"     * Creates data string of task.","lastModifiedDate":"2023-08-25"},{"lineNumber":135,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-25"},{"lineNumber":136,"author":{"gitId":"sopa301"},"content":"     * @return Data string.","lastModifiedDate":"2023-08-25"},{"lineNumber":137,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-25"},{"lineNumber":138,"author":{"gitId":"sopa301"},"content":"    public abstract String convertToDataString();","lastModifiedDate":"2023-08-25"},{"lineNumber":139,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":140,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":141,"author":{"gitId":"sopa301"},"content":"     * ToDo subclass. Contains a name.","lastModifiedDate":"2023-08-24"},{"lineNumber":142,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":143,"author":{"gitId":"sopa301"},"content":"    public static class ToDo extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":144,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-24"},{"lineNumber":145,"author":{"gitId":"sopa301"},"content":"         * Default constructor.","lastModifiedDate":"2023-08-24"},{"lineNumber":146,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-26"},{"lineNumber":147,"author":{"gitId":"sopa301"},"content":"         * @param name Name of task.","lastModifiedDate":"2023-08-24"},{"lineNumber":148,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-24"},{"lineNumber":149,"author":{"gitId":"sopa301"},"content":"        public ToDo(String name) {","lastModifiedDate":"2023-08-20"},{"lineNumber":150,"author":{"gitId":"sopa301"},"content":"            super(name);","lastModifiedDate":"2023-08-20"},{"lineNumber":151,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":152,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":153,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-25"},{"lineNumber":154,"author":{"gitId":"sopa301"},"content":"         * Alternative constructor. Usually used when reading data from a file.","lastModifiedDate":"2023-08-25"},{"lineNumber":155,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-25"},{"lineNumber":156,"author":{"gitId":"sopa301"},"content":"         * @param name   Name of ToDo.","lastModifiedDate":"2023-08-25"},{"lineNumber":157,"author":{"gitId":"sopa301"},"content":"         * @param isDone Completion status of Todo.","lastModifiedDate":"2023-08-25"},{"lineNumber":158,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-25"},{"lineNumber":159,"author":{"gitId":"sopa301"},"content":"        protected ToDo(String name, boolean isDone) {","lastModifiedDate":"2023-08-25"},{"lineNumber":160,"author":{"gitId":"sopa301"},"content":"            super(name, isDone);","lastModifiedDate":"2023-08-25"},{"lineNumber":161,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":162,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":163,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-25"},{"lineNumber":164,"author":{"gitId":"sopa301"},"content":"         * Reads a string of standardised data and creates a ToDo object.","lastModifiedDate":"2023-08-25"},{"lineNumber":165,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-25"},{"lineNumber":166,"author":{"gitId":"sopa301"},"content":"         * @param str Data string to read.","lastModifiedDate":"2023-08-25"},{"lineNumber":167,"author":{"gitId":"sopa301"},"content":"         * @return ToDo object.","lastModifiedDate":"2023-08-25"},{"lineNumber":168,"author":{"gitId":"sopa301"},"content":"         * @throws InvalidTaskException If an object cannot be created.","lastModifiedDate":"2023-08-25"},{"lineNumber":169,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-25"},{"lineNumber":170,"author":{"gitId":"sopa301"},"content":"        public static ToDo convertFromString(String str) throws InvalidTaskException {","lastModifiedDate":"2023-08-25"},{"lineNumber":171,"author":{"gitId":"sopa301"},"content":"            if (!str.matches(\"t/[01]/.+\")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":172,"author":{"gitId":"sopa301"},"content":"                throw new InvalidTaskException(\"Could not read Todo.\");","lastModifiedDate":"2023-08-25"},{"lineNumber":173,"author":{"gitId":"sopa301"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":174,"author":{"gitId":"sopa301"},"content":"            String[] arr \u003d str.split(\"/\");","lastModifiedDate":"2023-08-25"},{"lineNumber":175,"author":{"gitId":"sopa301"},"content":"            return new ToDo(arr[2], arr[1].equals(\"1\"));","lastModifiedDate":"2023-08-25"},{"lineNumber":176,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":177,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":178,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-26"},{"lineNumber":179,"author":{"gitId":"sopa301"},"content":"         * Checks for sameness of ToDo. ToDos are the same if they have the same name.","lastModifiedDate":"2023-08-26"},{"lineNumber":180,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-26"},{"lineNumber":181,"author":{"gitId":"sopa301"},"content":"         * @param o Object to compare to.","lastModifiedDate":"2023-08-26"},{"lineNumber":182,"author":{"gitId":"sopa301"},"content":"         * @return True if objects are the same, else false.","lastModifiedDate":"2023-08-26"},{"lineNumber":183,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-26"},{"lineNumber":184,"author":{"gitId":"sopa301"},"content":"        @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":185,"author":{"gitId":"sopa301"},"content":"        public boolean equals(Object o) {","lastModifiedDate":"2023-08-26"},{"lineNumber":186,"author":{"gitId":"sopa301"},"content":"            if (this \u003d\u003d o) {","lastModifiedDate":"2023-08-26"},{"lineNumber":187,"author":{"gitId":"sopa301"},"content":"                return true;","lastModifiedDate":"2023-08-26"},{"lineNumber":188,"author":{"gitId":"sopa301"},"content":"            } else if (o instanceof ToDo) {","lastModifiedDate":"2023-08-26"},{"lineNumber":189,"author":{"gitId":"sopa301"},"content":"                return this.getName().equals(((ToDo) o).getName());","lastModifiedDate":"2023-08-26"},{"lineNumber":190,"author":{"gitId":"sopa301"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":191,"author":{"gitId":"sopa301"},"content":"            return false;","lastModifiedDate":"2023-08-26"},{"lineNumber":192,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":193,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":194,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-25"},{"lineNumber":195,"author":{"gitId":"sopa301"},"content":"         * Creates a ToDo object.","lastModifiedDate":"2023-08-25"},{"lineNumber":196,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-25"},{"lineNumber":197,"author":{"gitId":"sopa301"},"content":"         * @param str Raw string to create the ToDo object from.","lastModifiedDate":"2023-08-25"},{"lineNumber":198,"author":{"gitId":"sopa301"},"content":"         * @return ToDo object.","lastModifiedDate":"2023-08-25"},{"lineNumber":199,"author":{"gitId":"sopa301"},"content":"         * @throws InvalidTaskException If a ToDo object cannot be created from the string.","lastModifiedDate":"2023-08-25"},{"lineNumber":200,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-25"},{"lineNumber":201,"author":{"gitId":"sopa301"},"content":"        public static ToDo makeToDo(String str) throws InvalidTaskException {","lastModifiedDate":"2023-08-25"},{"lineNumber":202,"author":{"gitId":"sopa301"},"content":"            String name \u003d str.substring(4).trim();","lastModifiedDate":"2023-08-25"},{"lineNumber":203,"author":{"gitId":"sopa301"},"content":"            if (name.equals(\"\")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":204,"author":{"gitId":"sopa301"},"content":"                throw new InvalidTaskException(\"Sorry, the todo description can\u0027t be empty.\");","lastModifiedDate":"2023-08-25"},{"lineNumber":205,"author":{"gitId":"sopa301"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":206,"author":{"gitId":"sopa301"},"content":"            return new ToDo(name);","lastModifiedDate":"2023-08-25"},{"lineNumber":207,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":208,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":209,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-26"},{"lineNumber":210,"author":{"gitId":"sopa301"},"content":"         * String representation of the todo.","lastModifiedDate":"2023-08-26"},{"lineNumber":211,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-26"},{"lineNumber":212,"author":{"gitId":"sopa301"},"content":"         * @return String representation.","lastModifiedDate":"2023-08-26"},{"lineNumber":213,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-26"},{"lineNumber":214,"author":{"gitId":"sopa301"},"content":"        @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":215,"author":{"gitId":"sopa301"},"content":"        public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":216,"author":{"gitId":"sopa301"},"content":"            return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-26"},{"lineNumber":217,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":218,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":219,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-26"},{"lineNumber":220,"author":{"gitId":"sopa301"},"content":"         * Get data string representation.","lastModifiedDate":"2023-08-26"},{"lineNumber":221,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-26"},{"lineNumber":222,"author":{"gitId":"sopa301"},"content":"         * @return Data string.","lastModifiedDate":"2023-08-26"},{"lineNumber":223,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-26"},{"lineNumber":224,"author":{"gitId":"sopa301"},"content":"        public String convertToDataString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":225,"author":{"gitId":"sopa301"},"content":"            return \"t/\" + (super.isDone() ? \"1\" : \"0\") + \"/\" + super.getName();","lastModifiedDate":"2023-08-26"},{"lineNumber":226,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":227,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":228,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":229,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":230,"author":{"gitId":"sopa301"},"content":"     * Deadline subclass. Contains a name and a time the deadline is due.","lastModifiedDate":"2023-08-24"},{"lineNumber":231,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":232,"author":{"gitId":"sopa301"},"content":"    public static class Deadline extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":233,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-24"},{"lineNumber":234,"author":{"gitId":"sopa301"},"content":"         * The time the deadline is due.","lastModifiedDate":"2023-08-24"},{"lineNumber":235,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-24"},{"lineNumber":236,"author":{"gitId":"sopa301"},"content":"        private LocalDate by;","lastModifiedDate":"2023-09-02"},{"lineNumber":237,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":238,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-24"},{"lineNumber":239,"author":{"gitId":"sopa301"},"content":"         * Default constructor.","lastModifiedDate":"2023-08-24"},{"lineNumber":240,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-24"},{"lineNumber":241,"author":{"gitId":"sopa301"},"content":"         * @param name Name of the deadline.","lastModifiedDate":"2023-08-24"},{"lineNumber":242,"author":{"gitId":"sopa301"},"content":"         * @param by   The time the deadline is due.","lastModifiedDate":"2023-08-24"},{"lineNumber":243,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-24"},{"lineNumber":244,"author":{"gitId":"sopa301"},"content":"        public Deadline(String name, LocalDate by) {","lastModifiedDate":"2023-08-25"},{"lineNumber":245,"author":{"gitId":"sopa301"},"content":"            super(name);","lastModifiedDate":"2023-08-20"},{"lineNumber":246,"author":{"gitId":"sopa301"},"content":"            this.by \u003d by;","lastModifiedDate":"2023-08-20"},{"lineNumber":247,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":248,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":249,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-25"},{"lineNumber":250,"author":{"gitId":"sopa301"},"content":"         * Alternative constructor. Usually used when reading data from a file.","lastModifiedDate":"2023-08-25"},{"lineNumber":251,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-25"},{"lineNumber":252,"author":{"gitId":"sopa301"},"content":"         * @param name   Name of deadline.","lastModifiedDate":"2023-08-26"},{"lineNumber":253,"author":{"gitId":"sopa301"},"content":"         * @param isDone Completion status of deadline.","lastModifiedDate":"2023-08-26"},{"lineNumber":254,"author":{"gitId":"sopa301"},"content":"         * @param by     The time the deadline is due.","lastModifiedDate":"2023-08-25"},{"lineNumber":255,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-25"},{"lineNumber":256,"author":{"gitId":"sopa301"},"content":"        protected Deadline(String name, boolean isDone, LocalDate by) {","lastModifiedDate":"2023-08-25"},{"lineNumber":257,"author":{"gitId":"sopa301"},"content":"            super(name, isDone);","lastModifiedDate":"2023-08-25"},{"lineNumber":258,"author":{"gitId":"sopa301"},"content":"            this.by \u003d by;","lastModifiedDate":"2023-08-25"},{"lineNumber":259,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":260,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":261,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-25"},{"lineNumber":262,"author":{"gitId":"sopa301"},"content":"         * Reads a string of standardised data and constructs a Deadline object based on the information.","lastModifiedDate":"2023-08-25"},{"lineNumber":263,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-25"},{"lineNumber":264,"author":{"gitId":"sopa301"},"content":"         * @param str Data string.","lastModifiedDate":"2023-08-25"},{"lineNumber":265,"author":{"gitId":"sopa301"},"content":"         * @return Deadline object.","lastModifiedDate":"2023-08-25"},{"lineNumber":266,"author":{"gitId":"sopa301"},"content":"         * @throws InvalidTaskException If Deadline object cannot be created.","lastModifiedDate":"2023-08-25"},{"lineNumber":267,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-25"},{"lineNumber":268,"author":{"gitId":"sopa301"},"content":"        public static Deadline convertFromString(String str) throws InvalidTaskException {","lastModifiedDate":"2023-08-25"},{"lineNumber":269,"author":{"gitId":"sopa301"},"content":"            if (!str.matches(\"d/[01]/.+/.+\")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":270,"author":{"gitId":"sopa301"},"content":"                throw new InvalidTaskException(\"Could not read Deadline.\");","lastModifiedDate":"2023-08-25"},{"lineNumber":271,"author":{"gitId":"sopa301"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":272,"author":{"gitId":"sopa301"},"content":"            String[] arr \u003d str.split(\"/\");","lastModifiedDate":"2023-08-25"},{"lineNumber":273,"author":{"gitId":"sopa301"},"content":"            return new Deadline(arr[2], arr[1].equals(\"1\"),","lastModifiedDate":"2023-08-25"},{"lineNumber":274,"author":{"gitId":"sopa301"},"content":"                    LocalDate.parse(arr[3], DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")));","lastModifiedDate":"2023-08-25"},{"lineNumber":275,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":276,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":277,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-25"},{"lineNumber":278,"author":{"gitId":"sopa301"},"content":"         * Creates a Deadline object.","lastModifiedDate":"2023-08-25"},{"lineNumber":279,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-25"},{"lineNumber":280,"author":{"gitId":"sopa301"},"content":"         * @param str Raw string to create the Deadline object from.","lastModifiedDate":"2023-08-25"},{"lineNumber":281,"author":{"gitId":"sopa301"},"content":"         * @return Deadline object.","lastModifiedDate":"2023-08-25"},{"lineNumber":282,"author":{"gitId":"sopa301"},"content":"         * @throws InvalidTaskException If a Deadline object cannot be created from the string.","lastModifiedDate":"2023-08-25"},{"lineNumber":283,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-25"},{"lineNumber":284,"author":{"gitId":"sopa301"},"content":"        public static Deadline makeDeadline(String str) throws InvalidTaskException {","lastModifiedDate":"2023-08-25"},{"lineNumber":285,"author":{"gitId":"sopa301"},"content":"            String[] comps \u003d str.split(\"/\");","lastModifiedDate":"2023-08-25"},{"lineNumber":286,"author":{"gitId":"sopa301"},"content":"            if (comps.length !\u003d 2) {","lastModifiedDate":"2023-08-25"},{"lineNumber":287,"author":{"gitId":"sopa301"},"content":"                throw new InvalidTaskException(\"Please make sure the deadline is written in the correct format:\\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":288,"author":{"gitId":"sopa301"},"content":"                        + \"deadline ... /by ...\");","lastModifiedDate":"2023-08-25"},{"lineNumber":289,"author":{"gitId":"sopa301"},"content":"            } else if (comps[0].trim().equals(\"deadline\")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":290,"author":{"gitId":"sopa301"},"content":"                throw new InvalidTaskException(\"Sorry, the deadline description can\u0027t be empty.\");","lastModifiedDate":"2023-08-25"},{"lineNumber":291,"author":{"gitId":"sopa301"},"content":"            } else if (comps[1].trim().equals(\"by\")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":292,"author":{"gitId":"sopa301"},"content":"                throw new InvalidTaskException(\"Sorry, the deadline can\u0027t be empty.\");","lastModifiedDate":"2023-08-25"},{"lineNumber":293,"author":{"gitId":"sopa301"},"content":"            } else if (!comps[1].startsWith(\"by\")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":294,"author":{"gitId":"sopa301"},"content":"                throw new InvalidTaskException(\"Please make sure the deadline is written in the correct format:\\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":295,"author":{"gitId":"sopa301"},"content":"                        + \"deadline ... /by ...\");","lastModifiedDate":"2023-08-25"},{"lineNumber":296,"author":{"gitId":"sopa301"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":297,"author":{"gitId":"sopa301"},"content":"            LocalDate by;","lastModifiedDate":"2023-08-25"},{"lineNumber":298,"author":{"gitId":"sopa301"},"content":"            try {","lastModifiedDate":"2023-08-25"},{"lineNumber":299,"author":{"gitId":"sopa301"},"content":"                by \u003d LocalDate.parse(comps[1].substring(3).trim());","lastModifiedDate":"2023-08-25"},{"lineNumber":300,"author":{"gitId":"sopa301"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":301,"author":{"gitId":"sopa301"},"content":"                throw new InvalidTaskException(\"One or more dates are invalid.\");","lastModifiedDate":"2023-08-25"},{"lineNumber":302,"author":{"gitId":"sopa301"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":303,"author":{"gitId":"sopa301"},"content":"            if (by.isBefore(LocalDate.now())) {","lastModifiedDate":"2023-08-25"},{"lineNumber":304,"author":{"gitId":"sopa301"},"content":"                throw new InvalidTaskException(\"Deadline can\u0027t be before now!\");","lastModifiedDate":"2023-08-25"},{"lineNumber":305,"author":{"gitId":"sopa301"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":306,"author":{"gitId":"sopa301"},"content":"            return new Deadline(comps[0].substring(9).trim(), by);","lastModifiedDate":"2023-08-26"},{"lineNumber":307,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":308,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":309,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-26"},{"lineNumber":310,"author":{"gitId":"sopa301"},"content":"         * String representation of the deadline.","lastModifiedDate":"2023-08-26"},{"lineNumber":311,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-26"},{"lineNumber":312,"author":{"gitId":"sopa301"},"content":"         * @return String representation.","lastModifiedDate":"2023-08-26"},{"lineNumber":313,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-26"},{"lineNumber":314,"author":{"gitId":"sopa301"},"content":"        @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":315,"author":{"gitId":"sopa301"},"content":"        public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":316,"author":{"gitId":"sopa301"},"content":"            return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2023-08-26"},{"lineNumber":317,"author":{"gitId":"sopa301"},"content":"                    + this.getBy().format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-08-26"},{"lineNumber":318,"author":{"gitId":"sopa301"},"content":"                    + \")\";","lastModifiedDate":"2023-08-26"},{"lineNumber":319,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":320,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":321,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-26"},{"lineNumber":322,"author":{"gitId":"sopa301"},"content":"         * Get the deadline time.","lastModifiedDate":"2023-08-26"},{"lineNumber":323,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-26"},{"lineNumber":324,"author":{"gitId":"sopa301"},"content":"         * @return Deadline time.","lastModifiedDate":"2023-08-26"},{"lineNumber":325,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-26"},{"lineNumber":326,"author":{"gitId":"sopa301"},"content":"        protected LocalDate getBy() {","lastModifiedDate":"2023-08-26"},{"lineNumber":327,"author":{"gitId":"sopa301"},"content":"            return this.by;","lastModifiedDate":"2023-08-26"},{"lineNumber":328,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":329,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":330,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-25"},{"lineNumber":331,"author":{"gitId":"sopa301"},"content":"         * Returns data string representation.","lastModifiedDate":"2023-08-25"},{"lineNumber":332,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-25"},{"lineNumber":333,"author":{"gitId":"sopa301"},"content":"         * @return Data string.","lastModifiedDate":"2023-08-25"},{"lineNumber":334,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-25"},{"lineNumber":335,"author":{"gitId":"sopa301"},"content":"        public String convertToDataString() {","lastModifiedDate":"2023-08-25"},{"lineNumber":336,"author":{"gitId":"sopa301"},"content":"            return \"d/\" + (super.isDone() ? \"1\" : \"0\") + \"/\" + super.getName()","lastModifiedDate":"2023-08-25"},{"lineNumber":337,"author":{"gitId":"sopa301"},"content":"                    + \"/\" + this.getBy();","lastModifiedDate":"2023-08-25"},{"lineNumber":338,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":339,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":340,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-26"},{"lineNumber":341,"author":{"gitId":"sopa301"},"content":"         * Checks for sameness. Deadlines are the same if they have the same name and deadline.","lastModifiedDate":"2023-08-26"},{"lineNumber":342,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-26"},{"lineNumber":343,"author":{"gitId":"sopa301"},"content":"         * @param o Object to compare to.","lastModifiedDate":"2023-08-26"},{"lineNumber":344,"author":{"gitId":"sopa301"},"content":"         * @return True if objects are the same, else false.","lastModifiedDate":"2023-08-26"},{"lineNumber":345,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-26"},{"lineNumber":346,"author":{"gitId":"sopa301"},"content":"        @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":347,"author":{"gitId":"sopa301"},"content":"        public boolean equals(Object o) {","lastModifiedDate":"2023-08-26"},{"lineNumber":348,"author":{"gitId":"sopa301"},"content":"            if (this \u003d\u003d o) {","lastModifiedDate":"2023-08-26"},{"lineNumber":349,"author":{"gitId":"sopa301"},"content":"                return true;","lastModifiedDate":"2023-08-26"},{"lineNumber":350,"author":{"gitId":"sopa301"},"content":"            } else if (o instanceof Deadline) {","lastModifiedDate":"2023-08-26"},{"lineNumber":351,"author":{"gitId":"sopa301"},"content":"                return this.getName().equals(((Deadline) o).getName())","lastModifiedDate":"2023-08-26"},{"lineNumber":352,"author":{"gitId":"sopa301"},"content":"                        \u0026\u0026 this.getBy().equals(((Deadline) o).getBy());","lastModifiedDate":"2023-08-26"},{"lineNumber":353,"author":{"gitId":"sopa301"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":354,"author":{"gitId":"sopa301"},"content":"            return false;","lastModifiedDate":"2023-08-26"},{"lineNumber":355,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":356,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":357,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":358,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":359,"author":{"gitId":"sopa301"},"content":"     * Event subclass. Contains a name, event start time and end time.","lastModifiedDate":"2023-08-24"},{"lineNumber":360,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":361,"author":{"gitId":"sopa301"},"content":"    public static class Event extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":362,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-24"},{"lineNumber":363,"author":{"gitId":"sopa301"},"content":"         * Event start time.","lastModifiedDate":"2023-08-24"},{"lineNumber":364,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-24"},{"lineNumber":365,"author":{"gitId":"sopa301"},"content":"        private LocalDate from;","lastModifiedDate":"2023-09-02"},{"lineNumber":366,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-24"},{"lineNumber":367,"author":{"gitId":"sopa301"},"content":"         * Event end time.","lastModifiedDate":"2023-08-24"},{"lineNumber":368,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-24"},{"lineNumber":369,"author":{"gitId":"sopa301"},"content":"        private LocalDate to;","lastModifiedDate":"2023-09-02"},{"lineNumber":370,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":371,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-24"},{"lineNumber":372,"author":{"gitId":"sopa301"},"content":"         * Default constructor.","lastModifiedDate":"2023-08-24"},{"lineNumber":373,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-24"},{"lineNumber":374,"author":{"gitId":"sopa301"},"content":"         * @param name Event name.","lastModifiedDate":"2023-08-24"},{"lineNumber":375,"author":{"gitId":"sopa301"},"content":"         * @param from Event start time.","lastModifiedDate":"2023-08-24"},{"lineNumber":376,"author":{"gitId":"sopa301"},"content":"         * @param to   Event end time.","lastModifiedDate":"2023-08-24"},{"lineNumber":377,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-24"},{"lineNumber":378,"author":{"gitId":"sopa301"},"content":"        public Event(String name, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-08-25"},{"lineNumber":379,"author":{"gitId":"sopa301"},"content":"            super(name);","lastModifiedDate":"2023-08-20"},{"lineNumber":380,"author":{"gitId":"sopa301"},"content":"            this.from \u003d from;","lastModifiedDate":"2023-08-20"},{"lineNumber":381,"author":{"gitId":"sopa301"},"content":"            this.to \u003d to;","lastModifiedDate":"2023-08-20"},{"lineNumber":382,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":383,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":384,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-25"},{"lineNumber":385,"author":{"gitId":"sopa301"},"content":"         * Alternative constructor. Usually used when reading data from a file.","lastModifiedDate":"2023-08-25"},{"lineNumber":386,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-25"},{"lineNumber":387,"author":{"gitId":"sopa301"},"content":"         * @param name   Name of task.","lastModifiedDate":"2023-08-25"},{"lineNumber":388,"author":{"gitId":"sopa301"},"content":"         * @param isDone Completion status of task.","lastModifiedDate":"2023-08-25"},{"lineNumber":389,"author":{"gitId":"sopa301"},"content":"         * @param from   Start time of task.","lastModifiedDate":"2023-08-25"},{"lineNumber":390,"author":{"gitId":"sopa301"},"content":"         * @param to     End time of task.","lastModifiedDate":"2023-08-25"},{"lineNumber":391,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-25"},{"lineNumber":392,"author":{"gitId":"sopa301"},"content":"        protected Event(String name, boolean isDone, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-08-25"},{"lineNumber":393,"author":{"gitId":"sopa301"},"content":"            super(name, isDone);","lastModifiedDate":"2023-08-25"},{"lineNumber":394,"author":{"gitId":"sopa301"},"content":"            this.from \u003d from;","lastModifiedDate":"2023-08-25"},{"lineNumber":395,"author":{"gitId":"sopa301"},"content":"            this.to \u003d to;","lastModifiedDate":"2023-08-25"},{"lineNumber":396,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":397,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":398,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-25"},{"lineNumber":399,"author":{"gitId":"sopa301"},"content":"         * Reads a string of standardised data and constructs an Event object based on the information.","lastModifiedDate":"2023-08-25"},{"lineNumber":400,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-25"},{"lineNumber":401,"author":{"gitId":"sopa301"},"content":"         * @param str Data string.","lastModifiedDate":"2023-08-26"},{"lineNumber":402,"author":{"gitId":"sopa301"},"content":"         * @return Event object.","lastModifiedDate":"2023-08-25"},{"lineNumber":403,"author":{"gitId":"sopa301"},"content":"         * @throws InvalidTaskException If an Event object cannot be created.","lastModifiedDate":"2023-08-25"},{"lineNumber":404,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-25"},{"lineNumber":405,"author":{"gitId":"sopa301"},"content":"        public static Event convertFromString(String str) throws InvalidTaskException {","lastModifiedDate":"2023-08-25"},{"lineNumber":406,"author":{"gitId":"sopa301"},"content":"            if (!str.matches(\"e/[01]/.+/.+/.+\")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":407,"author":{"gitId":"sopa301"},"content":"                throw new InvalidTaskException(\"Could not read Event.\");","lastModifiedDate":"2023-08-25"},{"lineNumber":408,"author":{"gitId":"sopa301"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":409,"author":{"gitId":"sopa301"},"content":"            String[] arr \u003d str.split(\"/\");","lastModifiedDate":"2023-08-25"},{"lineNumber":410,"author":{"gitId":"sopa301"},"content":"            return new Event(arr[2], arr[1].equals(\"1\"), LocalDate.parse(arr[3]), LocalDate.parse(arr[4]));","lastModifiedDate":"2023-08-25"},{"lineNumber":411,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":412,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-25"},{"lineNumber":413,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-25"},{"lineNumber":414,"author":{"gitId":"sopa301"},"content":"         * Creates an Event object.","lastModifiedDate":"2023-08-25"},{"lineNumber":415,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-25"},{"lineNumber":416,"author":{"gitId":"sopa301"},"content":"         * @param str Raw string to create the object from.","lastModifiedDate":"2023-08-25"},{"lineNumber":417,"author":{"gitId":"sopa301"},"content":"         * @return Event object.","lastModifiedDate":"2023-08-25"},{"lineNumber":418,"author":{"gitId":"sopa301"},"content":"         * @throws InvalidTaskException If the input string cannot create the Event object.","lastModifiedDate":"2023-08-25"},{"lineNumber":419,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-25"},{"lineNumber":420,"author":{"gitId":"sopa301"},"content":"        public static Event makeEvent(String str) throws InvalidTaskException {","lastModifiedDate":"2023-08-25"},{"lineNumber":421,"author":{"gitId":"sopa301"},"content":"            String[] comps \u003d str.split(\"/\");","lastModifiedDate":"2023-08-25"},{"lineNumber":422,"author":{"gitId":"sopa301"},"content":"            if (comps.length !\u003d 3) {","lastModifiedDate":"2023-08-25"},{"lineNumber":423,"author":{"gitId":"sopa301"},"content":"                throw new InvalidTaskException(\"Please make sure the event is written in the correct format:\\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":424,"author":{"gitId":"sopa301"},"content":"                        + \"event ... /from ... /to ...\");","lastModifiedDate":"2023-08-25"},{"lineNumber":425,"author":{"gitId":"sopa301"},"content":"            } else if (comps[0].trim().equals(\"event\")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":426,"author":{"gitId":"sopa301"},"content":"                throw new InvalidTaskException(\"Sorry, the event description can\u0027t be empty.\");","lastModifiedDate":"2023-08-25"},{"lineNumber":427,"author":{"gitId":"sopa301"},"content":"            } else if (comps[1].trim().equals(\"from\")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":428,"author":{"gitId":"sopa301"},"content":"                throw new InvalidTaskException(\"Sorry, event start time can\u0027t be empty.\");","lastModifiedDate":"2023-08-25"},{"lineNumber":429,"author":{"gitId":"sopa301"},"content":"            } else if (comps[2].trim().equals(\"to\")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":430,"author":{"gitId":"sopa301"},"content":"                throw new InvalidTaskException(\"Sorry, event end time can\u0027t be empty.\");","lastModifiedDate":"2023-08-25"},{"lineNumber":431,"author":{"gitId":"sopa301"},"content":"            } else if (!comps[1].startsWith(\"from \") || !comps[2].startsWith(\"to \")) {","lastModifiedDate":"2023-08-25"},{"lineNumber":432,"author":{"gitId":"sopa301"},"content":"                throw new InvalidTaskException(\"Please make sure the event is written in the correct format:\\n\"","lastModifiedDate":"2023-08-25"},{"lineNumber":433,"author":{"gitId":"sopa301"},"content":"                        + \"event ... /from ... /to ...\");","lastModifiedDate":"2023-08-25"},{"lineNumber":434,"author":{"gitId":"sopa301"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":435,"author":{"gitId":"sopa301"},"content":"            LocalDate from;","lastModifiedDate":"2023-08-26"},{"lineNumber":436,"author":{"gitId":"sopa301"},"content":"            LocalDate to;","lastModifiedDate":"2023-08-26"},{"lineNumber":437,"author":{"gitId":"sopa301"},"content":"            try {","lastModifiedDate":"2023-08-25"},{"lineNumber":438,"author":{"gitId":"sopa301"},"content":"                from \u003d LocalDate.parse(comps[1].substring(5).trim());","lastModifiedDate":"2023-08-25"},{"lineNumber":439,"author":{"gitId":"sopa301"},"content":"                to \u003d LocalDate.parse(comps[2].substring(3).trim());","lastModifiedDate":"2023-08-25"},{"lineNumber":440,"author":{"gitId":"sopa301"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-25"},{"lineNumber":441,"author":{"gitId":"sopa301"},"content":"                throw new InvalidTaskException(\"One or more dates are invalid.\");","lastModifiedDate":"2023-08-25"},{"lineNumber":442,"author":{"gitId":"sopa301"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":443,"author":{"gitId":"sopa301"},"content":"            if (from.isAfter(to)) {","lastModifiedDate":"2023-08-25"},{"lineNumber":444,"author":{"gitId":"sopa301"},"content":"                throw new InvalidTaskException(\"Event end time can\u0027t be before event start time!\");","lastModifiedDate":"2023-08-25"},{"lineNumber":445,"author":{"gitId":"sopa301"},"content":"            }","lastModifiedDate":"2023-08-25"},{"lineNumber":446,"author":{"gitId":"sopa301"},"content":"            return new Event(comps[0].substring(6).trim(), from, to);","lastModifiedDate":"2023-08-26"},{"lineNumber":447,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-25"},{"lineNumber":448,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":449,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-26"},{"lineNumber":450,"author":{"gitId":"sopa301"},"content":"         * Get event start time.","lastModifiedDate":"2023-08-26"},{"lineNumber":451,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-26"},{"lineNumber":452,"author":{"gitId":"sopa301"},"content":"         * @return Event start time.","lastModifiedDate":"2023-08-26"},{"lineNumber":453,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-26"},{"lineNumber":454,"author":{"gitId":"sopa301"},"content":"        protected LocalDate getFrom() {","lastModifiedDate":"2023-08-26"},{"lineNumber":455,"author":{"gitId":"sopa301"},"content":"            return this.from;","lastModifiedDate":"2023-08-26"},{"lineNumber":456,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":457,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":458,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-26"},{"lineNumber":459,"author":{"gitId":"sopa301"},"content":"         * Get event end time.","lastModifiedDate":"2023-08-26"},{"lineNumber":460,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-26"},{"lineNumber":461,"author":{"gitId":"sopa301"},"content":"         * @return Event end time.","lastModifiedDate":"2023-08-26"},{"lineNumber":462,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-26"},{"lineNumber":463,"author":{"gitId":"sopa301"},"content":"        protected LocalDate getTo() {","lastModifiedDate":"2023-08-26"},{"lineNumber":464,"author":{"gitId":"sopa301"},"content":"            return this.to;","lastModifiedDate":"2023-08-26"},{"lineNumber":465,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":466,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":467,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-26"},{"lineNumber":468,"author":{"gitId":"sopa301"},"content":"         * String representation of the event.","lastModifiedDate":"2023-08-26"},{"lineNumber":469,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-26"},{"lineNumber":470,"author":{"gitId":"sopa301"},"content":"         * @return String representation.","lastModifiedDate":"2023-08-26"},{"lineNumber":471,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-26"},{"lineNumber":472,"author":{"gitId":"sopa301"},"content":"        @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":473,"author":{"gitId":"sopa301"},"content":"        public String toString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":474,"author":{"gitId":"sopa301"},"content":"            return \"[E]\" + super.toString()","lastModifiedDate":"2023-08-26"},{"lineNumber":475,"author":{"gitId":"sopa301"},"content":"                    + \" (from: \"","lastModifiedDate":"2023-08-26"},{"lineNumber":476,"author":{"gitId":"sopa301"},"content":"                    + this.getFrom().format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-08-26"},{"lineNumber":477,"author":{"gitId":"sopa301"},"content":"                    + \" to: \" + this.getTo().format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-08-26"},{"lineNumber":478,"author":{"gitId":"sopa301"},"content":"                    + \")\";","lastModifiedDate":"2023-08-26"},{"lineNumber":479,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":480,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":481,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-26"},{"lineNumber":482,"author":{"gitId":"sopa301"},"content":"         * Returns data string representation.","lastModifiedDate":"2023-08-26"},{"lineNumber":483,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-26"},{"lineNumber":484,"author":{"gitId":"sopa301"},"content":"         * @return Data string.","lastModifiedDate":"2023-08-26"},{"lineNumber":485,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-26"},{"lineNumber":486,"author":{"gitId":"sopa301"},"content":"        public String convertToDataString() {","lastModifiedDate":"2023-08-26"},{"lineNumber":487,"author":{"gitId":"sopa301"},"content":"            return \"e/\" + (super.isDone() ? \"1\" : \"0\") + \"/\" + super.getName()","lastModifiedDate":"2023-08-26"},{"lineNumber":488,"author":{"gitId":"sopa301"},"content":"                    + \"/\" + this.getFrom() + \"/\" + this.getTo();","lastModifiedDate":"2023-08-26"},{"lineNumber":489,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":490,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":491,"author":{"gitId":"sopa301"},"content":"        /**","lastModifiedDate":"2023-08-26"},{"lineNumber":492,"author":{"gitId":"sopa301"},"content":"         * Checks for sameness. Events are the same if they have the same name, start time","lastModifiedDate":"2023-08-26"},{"lineNumber":493,"author":{"gitId":"sopa301"},"content":"         * and end time.","lastModifiedDate":"2023-08-26"},{"lineNumber":494,"author":{"gitId":"sopa301"},"content":"         *","lastModifiedDate":"2023-08-26"},{"lineNumber":495,"author":{"gitId":"sopa301"},"content":"         * @param o Object to compare to.","lastModifiedDate":"2023-08-26"},{"lineNumber":496,"author":{"gitId":"sopa301"},"content":"         * @return True if objects are the same, else false.","lastModifiedDate":"2023-08-26"},{"lineNumber":497,"author":{"gitId":"sopa301"},"content":"         */","lastModifiedDate":"2023-08-26"},{"lineNumber":498,"author":{"gitId":"sopa301"},"content":"        @Override","lastModifiedDate":"2023-08-26"},{"lineNumber":499,"author":{"gitId":"sopa301"},"content":"        public boolean equals(Object o) {","lastModifiedDate":"2023-08-26"},{"lineNumber":500,"author":{"gitId":"sopa301"},"content":"            if (this \u003d\u003d o) {","lastModifiedDate":"2023-08-26"},{"lineNumber":501,"author":{"gitId":"sopa301"},"content":"                return true;","lastModifiedDate":"2023-08-26"},{"lineNumber":502,"author":{"gitId":"sopa301"},"content":"            } else if (o instanceof Event) {","lastModifiedDate":"2023-08-26"},{"lineNumber":503,"author":{"gitId":"sopa301"},"content":"                return this.getName().equals(((Event) o).getName())","lastModifiedDate":"2023-08-26"},{"lineNumber":504,"author":{"gitId":"sopa301"},"content":"                        \u0026\u0026 this.getFrom().equals(((Event) o).getFrom())","lastModifiedDate":"2023-08-26"},{"lineNumber":505,"author":{"gitId":"sopa301"},"content":"                        \u0026\u0026 this.getTo().equals(((Event) o).getTo());","lastModifiedDate":"2023-08-26"},{"lineNumber":506,"author":{"gitId":"sopa301"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":507,"author":{"gitId":"sopa301"},"content":"            return false;","lastModifiedDate":"2023-08-26"},{"lineNumber":508,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":509,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":510,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"sopa301":510}},{"path":"src/main/java/bot/utils/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"package bot.utils;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"import java.util.Collection;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"import java.util.List;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"import bot.exceptions.InvalidIndexException;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":" * Bot.Task list abstraction. Functions like an arraylist but may not contain one.","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":" * Index starts at 1.","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"public class TaskList {","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"     * Data structure to hold list.","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":"    private List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-02"},{"lineNumber":19,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"sopa301"},"content":"     * Default constructor. To be used when an empty list is needed.","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"sopa301"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"sopa301"},"content":"     * Constructor with a list of Task objects.","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"sopa301"},"content":"     * @param list List of Task objects.","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"sopa301"},"content":"    public TaskList(Collection\u003cTask\u003e list) {","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"sopa301"},"content":"        this.list.addAll(list);","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"sopa301"},"content":"     * Adds a task to the end of the list.","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"sopa301"},"content":"     * @param task Bot.Task to add.","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"sopa301"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"sopa301"},"content":"        this.list.add(task);","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"sopa301"},"content":"     * Gets the task at that index of the list.","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"sopa301"},"content":"     * @param index Index of task.","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"sopa301"},"content":"     * @return Bot.Task object.","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"sopa301"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"sopa301"},"content":"        return this.list.get(index - 1);","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"sopa301"},"content":"     * Removes the task at that index from the list.","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"sopa301"},"content":"     * @param index Index of task.","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"sopa301"},"content":"     * @return Task object.","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"sopa301"},"content":"     * @throws InvalidIndexException If index is out of range.","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"sopa301"},"content":"    public Task remove(int index) throws InvalidIndexException {","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"sopa301"},"content":"        if (index \u003c 1 || index \u003e list.size()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"sopa301"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"sopa301"},"content":"        return this.list.remove(index - 1);","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"sopa301"},"content":"     * Gets length of the list.","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"sopa301"},"content":"     * @return Length of list.","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"sopa301"},"content":"    public int size() {","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"sopa301"},"content":"        return this.list.size();","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"sopa301"},"content":"     * Gets an iterator of the tasks in the list.","lastModifiedDate":"2023-08-26"},{"lineNumber":79,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":80,"author":{"gitId":"sopa301"},"content":"     * @return Iterator of Task objects.","lastModifiedDate":"2023-08-26"},{"lineNumber":81,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":82,"author":{"gitId":"sopa301"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"sopa301"},"content":"        return this.list.iterator();","lastModifiedDate":"2023-08-26"},{"lineNumber":84,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":85,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":86,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":87,"author":{"gitId":"sopa301"},"content":"     * Marks the task at the specified index","lastModifiedDate":"2023-08-26"},{"lineNumber":88,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":89,"author":{"gitId":"sopa301"},"content":"     * @param index Index of task.","lastModifiedDate":"2023-08-26"},{"lineNumber":90,"author":{"gitId":"sopa301"},"content":"     * @throws InvalidIndexException If index is out of range.","lastModifiedDate":"2023-08-26"},{"lineNumber":91,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":92,"author":{"gitId":"sopa301"},"content":"    public void mark(int index) throws InvalidIndexException {","lastModifiedDate":"2023-08-26"},{"lineNumber":93,"author":{"gitId":"sopa301"},"content":"        if (index \u003c 1 || index \u003e list.size()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":94,"author":{"gitId":"sopa301"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2023-08-26"},{"lineNumber":95,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":96,"author":{"gitId":"sopa301"},"content":"        this.list.get(index - 1).mark();","lastModifiedDate":"2023-08-26"},{"lineNumber":97,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":98,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":99,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":100,"author":{"gitId":"sopa301"},"content":"     * Unmarks the task at the specified index.","lastModifiedDate":"2023-08-26"},{"lineNumber":101,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":102,"author":{"gitId":"sopa301"},"content":"     * @param index Index of task.","lastModifiedDate":"2023-08-26"},{"lineNumber":103,"author":{"gitId":"sopa301"},"content":"     * @throws InvalidIndexException If index is out of range.","lastModifiedDate":"2023-08-26"},{"lineNumber":104,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":105,"author":{"gitId":"sopa301"},"content":"    public void unmark(int index) throws InvalidIndexException {","lastModifiedDate":"2023-08-26"},{"lineNumber":106,"author":{"gitId":"sopa301"},"content":"        if (index \u003c 1 || index \u003e list.size()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":107,"author":{"gitId":"sopa301"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2023-08-26"},{"lineNumber":108,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":109,"author":{"gitId":"sopa301"},"content":"        this.list.get(index - 1).unmark();","lastModifiedDate":"2023-08-26"},{"lineNumber":110,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":111,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":112,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":113,"author":{"gitId":"sopa301"},"content":"     * Gets all tasks that contain the given string in their names.","lastModifiedDate":"2023-08-26"},{"lineNumber":114,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":115,"author":{"gitId":"sopa301"},"content":"     * @param str Query string.","lastModifiedDate":"2023-08-26"},{"lineNumber":116,"author":{"gitId":"sopa301"},"content":"     * @return TaskList of tasks.","lastModifiedDate":"2023-08-26"},{"lineNumber":117,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":118,"author":{"gitId":"sopa301"},"content":"    public TaskList findAll(String str) {","lastModifiedDate":"2023-08-26"},{"lineNumber":119,"author":{"gitId":"sopa301"},"content":"        Iterator\u003cTask\u003e iter \u003d list.iterator();","lastModifiedDate":"2023-08-26"},{"lineNumber":120,"author":{"gitId":"sopa301"},"content":"        TaskList out \u003d new TaskList();","lastModifiedDate":"2023-08-26"},{"lineNumber":121,"author":{"gitId":"sopa301"},"content":"        while (iter.hasNext()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":122,"author":{"gitId":"sopa301"},"content":"            Task task \u003d iter.next();","lastModifiedDate":"2023-08-26"},{"lineNumber":123,"author":{"gitId":"sopa301"},"content":"            if (task.getName().contains(str)) {","lastModifiedDate":"2023-08-26"},{"lineNumber":124,"author":{"gitId":"sopa301"},"content":"                out.add(task);","lastModifiedDate":"2023-08-26"},{"lineNumber":125,"author":{"gitId":"sopa301"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":126,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":127,"author":{"gitId":"sopa301"},"content":"        return out;","lastModifiedDate":"2023-08-26"},{"lineNumber":128,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":129,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"sopa301":129}},{"path":"src/main/java/bot/utils/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"package bot.utils;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"/**","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":" * User interface class responsible for dealing with interactions with the user.","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":" */","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"public class Ui {","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"     * Default constructor. Creates a Ui object.","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"    public Ui() {","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"     * Formats the input string as an error message for the bot.","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"sopa301"},"content":"     * @param str Input string.","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"sopa301"},"content":"     * @return Input string formatted as an error message.","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"sopa301"},"content":"    public String showError(String str) {","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"sopa301"},"content":"        return println(\"ERROR: \" + str);","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"sopa301"},"content":"     * Formats the input string similar to System.out.println().","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"sopa301"},"content":"     * @param str Input string.","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"sopa301"},"content":"     * @return String with line separator.","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"sopa301"},"content":"    public String println(String str) {","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"sopa301"},"content":"        return str + System.lineSeparator();","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"sopa301"},"content":"     * Gets the bot\u0027s welcome message.","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"sopa301"},"content":"     * @return Welcome message.","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"sopa301"},"content":"    public String showWelcome() {","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"sopa301"},"content":"        return println(\"Hello! I\u0027m the trash gremlin Caelus!\")","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"sopa301"},"content":"                .concat(println(\"What can I do for you?\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"sopa301"},"content":"     * Gets the bot\u0027s farewell message.","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"sopa301"},"content":"     * @return Farewell message.","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"sopa301"},"content":"    public String showGoodbye() {","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"sopa301"},"content":"        return println(\"Bye. I\u0027ll be at the nearest trash can!\");","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"sopa301"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"sopa301"},"content":"     * Gets the inputted task list in a string format for printing to a screen.","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"sopa301"},"content":"     *","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"sopa301"},"content":"     * @param tasks Input task list.","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"sopa301"},"content":"     * @return Task list in string format.","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"sopa301"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"sopa301"},"content":"    public String displayTaskList(TaskList tasks) {","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"sopa301"},"content":"        StringBuilder out \u003d new StringBuilder();","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"sopa301"},"content":"        Iterator\u003cTask\u003e iter \u003d tasks.iterator();","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"sopa301"},"content":"        for (int ctr \u003d 1; iter.hasNext(); ctr++) {","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"sopa301"},"content":"            out.append(ctr).append(\". \")","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"sopa301"},"content":"                    .append(iter.next().toString())","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"sopa301"},"content":"                    .append(System.lineSeparator());","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"sopa301"},"content":"        out.deleteCharAt(out.length() - 1);","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"sopa301"},"content":"        return println(out.toString());","lastModifiedDate":"2023-09-04"},{"lineNumber":71,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"sopa301":72}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"sopa301":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"bot.gui.MainWindow\"\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"sopa301"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"sopa301":19}},{"path":"src/test/java/bot/utils/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"package bot.utils;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"import bot.exceptions.InvalidIndexException;","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"import bot.exceptions.InvalidTaskException;","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"    public void remove_validIndex_success() throws InvalidTaskException, InvalidIndexException {","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":"        Task task \u003d Task.makeTask(\"todo one\");","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"sopa301"},"content":"        arr.add(task);","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"sopa301"},"content":"        TaskList tasks \u003d new TaskList(arr);","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"sopa301"},"content":"        assertEquals(task, tasks.remove(1));","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"sopa301"},"content":"    public void remove_multipleIndex_success() throws InvalidTaskException, InvalidIndexException {","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"sopa301"},"content":"        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"sopa301"},"content":"        Task task1 \u003d Task.makeTask(\"todo one\");","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"sopa301"},"content":"        Task task2 \u003d Task.makeTask(\"todo 2\");","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"sopa301"},"content":"        arr.add(task1);","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"sopa301"},"content":"        arr.add(task2);","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"sopa301"},"content":"        TaskList tasks \u003d new TaskList(arr);","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"sopa301"},"content":"        assertEquals(task2, tasks.remove(2));","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"sopa301"},"content":"        assertEquals(task1, tasks.remove(1));","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"sopa301"},"content":"    public void remove_negativeIndex_throwsException() throws InvalidTaskException {","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"sopa301"},"content":"        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"sopa301"},"content":"        Task task \u003d Task.makeTask(\"todo one\");","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"sopa301"},"content":"        arr.add(task);","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"sopa301"},"content":"        TaskList tasks \u003d new TaskList(arr);","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"sopa301"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"sopa301"},"content":"            tasks.remove(-1);","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"sopa301"},"content":"            fail();","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"sopa301"},"content":"        } catch (InvalidIndexException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"sopa301"},"content":"            assertEquals(\"Sorry, that index doesn\u0027t exist. Please key in a valid index.\",","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"sopa301"},"content":"                    e.getMessage());","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"sopa301"},"content":"    public void remove_bigNumber_throwsException() throws InvalidTaskException {","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"sopa301"},"content":"        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"sopa301"},"content":"        Task task \u003d Task.makeTask(\"todo one\");","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"sopa301"},"content":"        arr.add(task);","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"sopa301"},"content":"        TaskList tasks \u003d new TaskList(arr);","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"sopa301"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"sopa301"},"content":"            tasks.remove(100);","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"sopa301"},"content":"            fail();","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"sopa301"},"content":"        } catch (InvalidIndexException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"sopa301"},"content":"            assertEquals(\"Sorry, that index doesn\u0027t exist. Please key in a valid index.\",","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"sopa301"},"content":"                    e.getMessage());","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"sopa301":68}},{"path":"src/test/java/bot/utils/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"package bot.utils;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-26"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"import bot.exceptions.InvalidTaskException;","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"public class TaskTest {","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"    public void makeTask_validInput_success() throws InvalidTaskException {","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"        assertEquals(new Task.ToDo(\"name1\"), Task.makeTask(\"todo name1\"));","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"        assertEquals(new Task.Deadline(\"name2\", LocalDate.parse(\"2024-08-10\")),","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":"                Task.makeTask(\"deadline name2 /by 2024-08-10\"));","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"sopa301"},"content":"        assertEquals(new Task.Event(\"name3\",","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"sopa301"},"content":"                LocalDate.parse(\"2024-07-01\"),","lastModifiedDate":"2023-08-26"},{"lineNumber":22,"author":{"gitId":"sopa301"},"content":"                LocalDate.parse(\"2024-08-01\")),","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"sopa301"},"content":"                Task.makeTask(\"event name3 /from 2024-07-01 /to 2024-08-01\"));","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":26,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":27,"author":{"gitId":"sopa301"},"content":"    public void makeTask_missingDetailsToDo_throwsException() {","lastModifiedDate":"2023-08-26"},{"lineNumber":28,"author":{"gitId":"sopa301"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":29,"author":{"gitId":"sopa301"},"content":"            Task.makeTask(\"todo\");","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"sopa301"},"content":"            fail();","lastModifiedDate":"2023-08-26"},{"lineNumber":31,"author":{"gitId":"sopa301"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":32,"author":{"gitId":"sopa301"},"content":"            assertEquals(\"Sorry, the todo description can\u0027t be empty.\",","lastModifiedDate":"2023-08-26"},{"lineNumber":33,"author":{"gitId":"sopa301"},"content":"                    e.getMessage());","lastModifiedDate":"2023-08-26"},{"lineNumber":34,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"sopa301"},"content":"    public void makeTask_missingDetailsDeadline_throwsException() {","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"sopa301"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"sopa301"},"content":"            Task.makeTask(\"deadline two\");","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"sopa301"},"content":"            fail();","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"sopa301"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":43,"author":{"gitId":"sopa301"},"content":"            assertEquals(\"Please make sure the deadline \"","lastModifiedDate":"2023-08-26"},{"lineNumber":44,"author":{"gitId":"sopa301"},"content":"                            + \"is written in the correct format:\\n\"","lastModifiedDate":"2023-08-26"},{"lineNumber":45,"author":{"gitId":"sopa301"},"content":"                            + \"deadline ... /by ...\",","lastModifiedDate":"2023-08-26"},{"lineNumber":46,"author":{"gitId":"sopa301"},"content":"                    e.getMessage());","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":48,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":49,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":50,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":51,"author":{"gitId":"sopa301"},"content":"    public void makeTask_missingDetailsEvent_throwsException() {","lastModifiedDate":"2023-08-26"},{"lineNumber":52,"author":{"gitId":"sopa301"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":53,"author":{"gitId":"sopa301"},"content":"            Task.makeTask(\"event /from 2020-10-10 /to 2020-12-10\");","lastModifiedDate":"2023-08-26"},{"lineNumber":54,"author":{"gitId":"sopa301"},"content":"            fail();","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"sopa301"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"sopa301"},"content":"            assertEquals(\"Sorry, the event description can\u0027t be empty.\",","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"sopa301"},"content":"                    e.getMessage());","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"sopa301"},"content":"    @Test","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"sopa301"},"content":"    public void makeTask_invalidDate_throwsException() {","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"sopa301"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"sopa301"},"content":"            Task.makeTask(\"deadline kappa /by 2020-20-20\");","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"sopa301"},"content":"            fail();","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"sopa301"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":67,"author":{"gitId":"sopa301"},"content":"            assertEquals(\"One or more dates are invalid.\",","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"sopa301"},"content":"                    e.getMessage());","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"sopa301"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"sopa301"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"sopa301"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"sopa301"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"sopa301":73}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sopa301"},"content":"hello","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"sopa301"},"content":"list","lastModifiedDate":"2023-08-25"},{"lineNumber":3,"author":{"gitId":"sopa301"},"content":"delete 1","lastModifiedDate":"2023-08-25"},{"lineNumber":4,"author":{"gitId":"sopa301"},"content":"delete 1","lastModifiedDate":"2023-08-25"},{"lineNumber":5,"author":{"gitId":"sopa301"},"content":"todo taskone","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"sopa301"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"sopa301"},"content":"mark 1","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"sopa301"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"sopa301"},"content":"unmark 1","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"sopa301"},"content":"deadline tasktwo /by 2023-11-11","lastModifiedDate":"2023-08-25"},{"lineNumber":12,"author":{"gitId":"sopa301"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"sopa301"},"content":"event taskthree /from 2023-08-25 /to 2023-08-26","lastModifiedDate":"2023-08-25"},{"lineNumber":14,"author":{"gitId":"sopa301"},"content":"event taskfail /from 2020-11-22 /to 2019-11-11","lastModifiedDate":"2023-08-25"},{"lineNumber":15,"author":{"gitId":"sopa301"},"content":"deadline taskfail /by 2020-20-20","lastModifiedDate":"2023-08-25"},{"lineNumber":16,"author":{"gitId":"sopa301"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"sopa301"},"content":"mark 3","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":"delete 3","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"sopa301"},"content":"list","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"sopa301"},"content":"bye","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"sopa301":20}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"sopa301"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\bot\\*.java","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"sopa301"},"content":"java -classpath ..\\bin bot.Bot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sopa301":2,"-":19}}]
