[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"iantsaii"},"content":"    mainClass.set(\"rocket.Rocket\")","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"iantsaii"},"content":"    mainClassName \u003d \u0027rocket.Rocket\u0027","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"iantsaii"},"content":"    archiveBaseName \u003d \"rocket\"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"iantsaii":4,"-":40}},{"path":"src/main/java/rocket/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"package rocket;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"iantsaii"},"content":"public class AddCommand extends Command{","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"iantsaii"},"content":"    private Task task;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"iantsaii"},"content":"    public AddCommand (Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"iantsaii"},"content":"        super(false);","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"iantsaii"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"iantsaii"},"content":"     * Informs the user that task has been added, and tells them how many tasks are in the list","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"iantsaii"},"content":"     * @param tasks Modifies or uses the tasklist if needed.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"iantsaii"},"content":"     * @param ui Displays to the UI if needed.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"iantsaii"},"content":"     * @param storage Stores and retrieves data from the storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"iantsaii"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"iantsaii"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"iantsaii"},"content":"        tasks.add(this.task);","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"iantsaii"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"iantsaii"},"content":"        System.out.println(\"      \" + task);","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"iantsaii"},"content":"        System.out.println(\"    Now you have \" + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"iantsaii"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"iantsaii":23}},{"path":"src/main/java/rocket/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"package rocket;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"iantsaii"},"content":"public class Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"iantsaii"},"content":"    private boolean isExit;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"iantsaii"},"content":"    public Command (boolean isExit) {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"iantsaii"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"iantsaii"},"content":"     * Executes the command.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"iantsaii"},"content":"     * @param tasks Modifies or uses the tasklist if needed.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"iantsaii"},"content":"     * @param ui Displays to the UI if needed.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"iantsaii"},"content":"     * @param storage Stores and retrieves data from the storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"iantsaii"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"iantsaii"},"content":"     * Tells Rocket if the command is an exit command","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"iantsaii"},"content":"     * @return a boolean: true if the command is an exit commnad, false if not","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"iantsaii"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"iantsaii"},"content":"        return isExit;","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"iantsaii"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"iantsaii":27}},{"path":"src/main/java/rocket/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"package rocket;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"iantsaii"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"iantsaii"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"iantsaii"},"content":"//Solution below adapted from: https://nus-cs2103-ay2324s1.github.io/website/schedule/week2/project.html#:~:text\u003dExtension%3A%20A%2D-,Classes,-A%2DClasses","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"iantsaii"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"iantsaii"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"iantsaii"},"content":"     * Make deadline task","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"iantsaii"},"content":"     * @param description task description","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"iantsaii"},"content":"     * @param by task deadline","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"iantsaii"},"content":"    public Deadline(String description, boolean isDone, LocalDateTime by) {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"iantsaii"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"iantsaii"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"iantsaii"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"iantsaii"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"iantsaii"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"iantsaii"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(formatter) + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"iantsaii"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"iantsaii":25}},{"path":"src/main/java/rocket/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"package rocket;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"iantsaii"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"iantsaii"},"content":"public class DeadlineCommand extends AddCommand{","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"iantsaii"},"content":"    private String description;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"iantsaii"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"iantsaii"},"content":"     * Create deadline command.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"iantsaii"},"content":"     * @param description task description.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"iantsaii"},"content":"     * @param isDone whether the task has been done.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"iantsaii"},"content":"     * @param by the deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"iantsaii"},"content":"    public DeadlineCommand (String description, boolean isDone, LocalDateTime by) {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"iantsaii"},"content":"        super(new Deadline(description, isDone, by));","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"iantsaii"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"iantsaii":18}},{"path":"src/main/java/rocket/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"package rocket;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"iantsaii"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"iantsaii"},"content":"    public DeleteCommand() {","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"iantsaii"},"content":"        super(false);","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"iantsaii"},"content":"    private int taskNumber;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"iantsaii"},"content":"     * Creates delete command","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"iantsaii"},"content":"     * @param taskNumber the task number.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"iantsaii"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"iantsaii"},"content":"        super(false);","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"iantsaii"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"iantsaii"},"content":"     * executes delete command","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"iantsaii"},"content":"     * @param tasks Modifies or uses the tasklist if needed.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"iantsaii"},"content":"     * @param ui Displays to the UI if needed.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"iantsaii"},"content":"     * @param storage Stores and retrieves data from the storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"iantsaii"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"iantsaii"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"iantsaii"},"content":"        Task task \u003d tasks.get(taskNumber);","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"iantsaii"},"content":"        tasks.remove(taskNumber);","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"iantsaii"},"content":"        System.out.println(\"    Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"iantsaii"},"content":"        System.out.println(\"      \" + task);","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"iantsaii"},"content":"        System.out.println(\"    Now you have \" + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"iantsaii"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"iantsaii":35}},{"path":"src/main/java/rocket/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"package rocket;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"iantsaii"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"iantsaii"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"iantsaii"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"iantsaii"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"iantsaii"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"iantsaii"},"content":"     * Make an event task","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"iantsaii"},"content":"     * @param description event description","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"iantsaii"},"content":"     * @param from event start","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"iantsaii"},"content":"     * @param to event end","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"iantsaii"},"content":"    public Event(String description, boolean isDone, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"iantsaii"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"iantsaii"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"iantsaii"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"iantsaii"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"iantsaii"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"iantsaii"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"iantsaii"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(formatter) + \" to: \" + to.format(formatter) + \")\";","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"iantsaii"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"iantsaii":27}},{"path":"src/main/java/rocket/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"package rocket;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"iantsaii"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"iantsaii"},"content":"public class EventCommand extends AddCommand{","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"iantsaii"},"content":"    private String description;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"iantsaii"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"iantsaii"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"iantsaii"},"content":"     * Creates event command.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"iantsaii"},"content":"     * @param description event description.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"iantsaii"},"content":"     * @param isDone whether the event is over.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"iantsaii"},"content":"     * @param from start date.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"iantsaii"},"content":"     * @param to end date.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"iantsaii"},"content":"    public EventCommand (String description, boolean isDone, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"iantsaii"},"content":"        super(new Event(description, isDone, from, to));","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"iantsaii"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"iantsaii":21}},{"path":"src/main/java/rocket/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"package rocket;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"iantsaii"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"iantsaii"},"content":"public class ExitCommand extends Command{","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"iantsaii"},"content":"    public ExitCommand () {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"iantsaii"},"content":"        super(true);","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"iantsaii"},"content":"     * Executes Exit command","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"iantsaii"},"content":"     * @param tasks Modifies or uses the tasklist if needed.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"iantsaii"},"content":"     * @param ui Displays to the UI if needed.","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"iantsaii"},"content":"     * @param storage Stores and retrieves data from the storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"iantsaii"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"iantsaii"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"iantsaii"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"iantsaii"},"content":"            storage.saveTaskList(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"iantsaii"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"iantsaii"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"iantsaii"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"iantsaii"},"content":"        System.out.println(\"    Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"iantsaii"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"iantsaii":25}},{"path":"src/main/java/rocket/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"package rocket;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"iantsaii"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"iantsaii"},"content":"    private String stringToFind;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"iantsaii"},"content":"    public FindCommand (String stringToFind) {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"iantsaii"},"content":"        super(false);","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"iantsaii"},"content":"        this.stringToFind  \u003d stringToFind;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"iantsaii"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"iantsaii"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"iantsaii"},"content":"        TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"iantsaii"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"iantsaii"},"content":"            if (String.valueOf(tasks.get(i)).contains(stringToFind)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"iantsaii"},"content":"                matchingTasks.add(tasks.get(i));","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"iantsaii"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"iantsaii"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"iantsaii"},"content":"        System.out.println(\"    Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"iantsaii"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"iantsaii"},"content":"            System.out.println(\"    \" + (i + 1) + \". \" + matchingTasks.get(i));","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"iantsaii"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"iantsaii"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"iantsaii":24}},{"path":"src/main/java/rocket/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"package rocket;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"iantsaii"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"iantsaii"},"content":"    public ListCommand() {","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"iantsaii"},"content":"        super(false);","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"iantsaii"},"content":"     * Execute list command","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"iantsaii"},"content":"     * @param tasks Modifies or uses the tasklist if needed.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"iantsaii"},"content":"     * @param ui Displays to the UI if needed.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"iantsaii"},"content":"     * @param storage Stores and retrieves data from the storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"iantsaii"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"iantsaii"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"iantsaii"},"content":"        ui.showTasks(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"iantsaii"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"iantsaii":19}},{"path":"src/main/java/rocket/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"package rocket;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"iantsaii"},"content":"public class MarkCommand extends Command{","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"iantsaii"},"content":"    private int taskNumber;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"iantsaii"},"content":"     * Creates mark command","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"iantsaii"},"content":"     * @param taskNumber task to be marked.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"iantsaii"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"iantsaii"},"content":"        super(false);","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"iantsaii"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"iantsaii"},"content":"     * Executes mark command.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"iantsaii"},"content":"     * @param tasks Modifies or uses the tasklist if needed.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"iantsaii"},"content":"     * @param ui Displays to the UI if needed.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"iantsaii"},"content":"     * @param storage Stores and retrieves data from the storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"iantsaii"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"iantsaii"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"iantsaii"},"content":"        Task task \u003d tasks.get(taskNumber);","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"iantsaii"},"content":"        task.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"iantsaii"},"content":"        System.out.println(\"    Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"iantsaii"},"content":"        System.out.println(\"      \" + task);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"iantsaii"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"iantsaii":28}},{"path":"src/main/java/rocket/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"package rocket;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"iantsaii"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"iantsaii"},"content":"public class Parser {","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"iantsaii"},"content":"     * Parses the line command that the user types into a Command","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"iantsaii"},"content":"     * @param fullCommand the String of user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"iantsaii"},"content":"     * @return a Command that will be executed.","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"iantsaii"},"content":"     * @throws RocketException if user enters an invalid command.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"iantsaii"},"content":"    public static Command parse(String fullCommand) throws RocketException{","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"iantsaii"},"content":"        String command;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"iantsaii"},"content":"        String arguments;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"iantsaii"},"content":"        int firstWordIndex \u003d fullCommand.indexOf(\u0027 \u0027);","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"iantsaii"},"content":"        if (firstWordIndex \u003d\u003d -1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"iantsaii"},"content":"            command \u003d fullCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"iantsaii"},"content":"            arguments \u003d \"\";","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"iantsaii"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"iantsaii"},"content":"            command \u003d fullCommand.substring(0, firstWordIndex);","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"iantsaii"},"content":"            arguments \u003d fullCommand.substring(firstWordIndex + 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"iantsaii"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"iantsaii"},"content":"        switch (command) {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"iantsaii"},"content":"        case \"bye\": {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"iantsaii"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"iantsaii"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"iantsaii"},"content":"        case \"list\": {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"iantsaii"},"content":"            return new ListCommand();","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"iantsaii"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"iantsaii"},"content":"        case \"find\": {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"iantsaii"},"content":"            return new FindCommand(arguments);","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"iantsaii"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"iantsaii"},"content":"        case \"mark\": {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"iantsaii"},"content":"            return new MarkCommand(Integer.parseInt(arguments) - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"iantsaii"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"iantsaii"},"content":"        case \"unmark\": {","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"iantsaii"},"content":"            return new UnmarkCommand(Integer.parseInt(arguments) - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"iantsaii"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"iantsaii"},"content":"        case \"delete\": {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"iantsaii"},"content":"            return new DeleteCommand(Integer.parseInt(arguments) - 1);","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"iantsaii"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"iantsaii"},"content":"        case \"todo\": {","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"iantsaii"},"content":"            return new TodoCommand(arguments, false);","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"iantsaii"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"iantsaii"},"content":"        case \"deadline\": {","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"iantsaii"},"content":"            int descriptionIndex \u003d arguments.indexOf(\"by\") - 2;","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"iantsaii"},"content":"            String description \u003d arguments.substring(0, descriptionIndex);","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"iantsaii"},"content":"            String deadline \u003d arguments.substring(descriptionIndex + 5)","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"iantsaii"},"content":"                    .replace(\u0027)\u0027, \u0027 \u0027)","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"iantsaii"},"content":"                    .trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"iantsaii"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"iantsaii"},"content":"                throw new RocketIllegalArgumentException(\"The description of a deadline\");","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"iantsaii"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"iantsaii"},"content":"            if (deadline.isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"iantsaii"},"content":"                throw new RocketIllegalArgumentException(\"The deadline of a deadline\");","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"iantsaii"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"iantsaii"},"content":"            LocalDateTime by \u003d LocalDateTime.parse(deadline, Rocket.uglyDateTimeFormatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"iantsaii"},"content":"            return new DeadlineCommand(description, false, by);","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"iantsaii"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"iantsaii"},"content":"        case \"event\": {","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"iantsaii"},"content":"            int descriptionIndex \u003d arguments.indexOf(\"from\") - 2;","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"iantsaii"},"content":"            String description \u003d arguments.substring(0, descriptionIndex);","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"iantsaii"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"iantsaii"},"content":"                throw new RocketIllegalArgumentException(\"The description of an event.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"iantsaii"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"iantsaii"},"content":"            String duration \u003d arguments.substring(descriptionIndex + 7)","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"iantsaii"},"content":"                    .trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"iantsaii"},"content":"            if (duration.isBlank()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"iantsaii"},"content":"                throw new RocketIllegalArgumentException(\"The duration of an event\");","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"iantsaii"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"iantsaii"},"content":"            int fromIndex \u003d duration.indexOf(\"to\") - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"iantsaii"},"content":"            LocalDateTime from \u003d LocalDateTime.parse(","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"iantsaii"},"content":"                    duration.substring(0, fromIndex).trim(),","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"iantsaii"},"content":"                    Rocket.uglyDateTimeFormatter","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"iantsaii"},"content":"            );","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"iantsaii"},"content":"            LocalDateTime to \u003d LocalDateTime.parse(","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"iantsaii"},"content":"                    duration.substring(fromIndex + 4)","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"iantsaii"},"content":"                            .replace(\u0027)\u0027, \u0027 \u0027)","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"iantsaii"},"content":"                            .trim(),","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"iantsaii"},"content":"                    Rocket.uglyDateTimeFormatter","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"iantsaii"},"content":"            );","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"iantsaii"},"content":"            return new EventCommand(description, false, from, to);","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"iantsaii"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"iantsaii"},"content":"        default: {","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"iantsaii"},"content":"            throw new RocketInvalidCommandException();","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"iantsaii"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"iantsaii"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"iantsaii"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"iantsaii":91}},{"path":"src/main/java/rocket/Rocket.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"package rocket;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"iantsaii"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"iantsaii"},"content":"public class Rocket {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"iantsaii"},"content":"    public static final DateTimeFormatter uglyDateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"iantsaii"},"content":"    public static final DateTimeFormatter prettyDateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"iantsaii"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"iantsaii"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"iantsaii"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"iantsaii"},"content":"     * Create new chatbot","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"iantsaii"},"content":"     * @param filePath filePath where saved tasks should be stored.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"iantsaii"},"content":"    public Rocket(String filePath) {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"iantsaii"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"iantsaii"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"iantsaii"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"iantsaii"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"iantsaii"},"content":"        } catch (RocketException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"iantsaii"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"iantsaii"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"iantsaii"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"iantsaii"},"content":"     * Run the chatbot","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"iantsaii"},"content":"    public void run() {","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"iantsaii"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"iantsaii"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"iantsaii"},"content":"        while (!isExit) {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"iantsaii"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"iantsaii"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"iantsaii"},"content":"                ui.showLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"iantsaii"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"iantsaii"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"iantsaii"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"iantsaii"},"content":"            } catch (RocketException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"iantsaii"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"iantsaii"},"content":"            } finally {","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"iantsaii"},"content":"                ui.showLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"iantsaii"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"iantsaii"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"iantsaii"},"content":"     * Run a new chatbot","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"iantsaii"},"content":"     * @param args idk.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"iantsaii"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"iantsaii"},"content":"        new Rocket(\"data/tasks.txt\").run();","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"iantsaii":58,"-":1}},{"path":"src/main/java/rocket/RocketException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"package rocket;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"iantsaii"},"content":"public class RocketException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"iantsaii"},"content":"    public RocketException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"iantsaii"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"iantsaii"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"iantsaii":7}},{"path":"src/main/java/rocket/RocketIllegalArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"package rocket;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"iantsaii"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"iantsaii"},"content":" * Takes the description of the illegal argument and says that it cannot be empty","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"iantsaii"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"iantsaii"},"content":"public class RocketIllegalArgumentException extends RocketException{","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"iantsaii"},"content":"    public RocketIllegalArgumentException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"iantsaii"},"content":"        super(message + \" cannot be empty.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"iantsaii"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"iantsaii":10}},{"path":"src/main/java/rocket/RocketInvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"package rocket;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"iantsaii"},"content":"public class RocketInvalidCommandException extends RocketException {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"iantsaii"},"content":"    public RocketInvalidCommandException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"iantsaii"},"content":"        super(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"iantsaii"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"iantsaii":7}},{"path":"src/main/java/rocket/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"package rocket;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"iantsaii"},"content":"import java.io.File;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"iantsaii"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"iantsaii"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"iantsaii"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"iantsaii"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"iantsaii"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"iantsaii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"iantsaii"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"iantsaii"},"content":"public class Storage {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"iantsaii"},"content":"    private File file;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"iantsaii"},"content":"    private String filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"iantsaii"},"content":"     * Create new storage at the filePath specified","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"iantsaii"},"content":"     * @param filePath path to store the file.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"iantsaii"},"content":"    public Storage (String filePath){","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"iantsaii"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"iantsaii"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"iantsaii"},"content":"        Path parent \u003d path.getParent();","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"iantsaii"},"content":"        String directoryPath \u003d parent.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"iantsaii"},"content":"        // Make new folder if it doesn\u0027t exist","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"iantsaii"},"content":"        File directory \u003d new File(directoryPath);","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"iantsaii"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"iantsaii"},"content":"            directory.mkdirs();","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"iantsaii"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"iantsaii"},"content":"        // Make new file if it doesn\u0027t exist","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"iantsaii"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"iantsaii"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"iantsaii"},"content":"            try {","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"iantsaii"},"content":"                file.createNewFile();","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"iantsaii"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"iantsaii"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"iantsaii"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"iantsaii"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"iantsaii"},"content":"        this.file \u003d file;","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"iantsaii"},"content":"     * Load from the storage","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"iantsaii"},"content":"     * @return a list of strings.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"iantsaii"},"content":"    public ArrayList\u003cString\u003e load() {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"iantsaii"},"content":"        ArrayList\u003cString\u003e stringList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"iantsaii"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"iantsaii"},"content":"            Scanner fileScanner \u003d new Scanner(this.file);","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"iantsaii"},"content":"            while (fileScanner.hasNext()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"iantsaii"},"content":"                String taskString \u003d fileScanner.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"iantsaii"},"content":"                stringList.add(taskString);","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"iantsaii"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"iantsaii"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"iantsaii"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"iantsaii"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"iantsaii"},"content":"        return stringList;","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"iantsaii"},"content":"     * Saves tasklist in to a file","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"iantsaii"},"content":"     * @param tasks the tasklist.","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"iantsaii"},"content":"     * @throws IOException occurs when there are problems writing to the file","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"iantsaii"},"content":"    public void saveTaskList(TaskList tasks) throws IOException{","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"iantsaii"},"content":"        writeToFile(String.valueOf(tasks));","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"iantsaii"},"content":"     * Writes a string to a file","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"iantsaii"},"content":"     * @param textToAdd the text to be added to the file","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"iantsaii"},"content":"     * @throws IOException occurs when there are problems writing to the file","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"iantsaii"},"content":"    private void writeToFile(String textToAdd) throws IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"iantsaii"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"iantsaii"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"iantsaii"},"content":"        fw.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"iantsaii"},"content":"     * Appends a string to a file","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"iantsaii"},"content":"     * @param textToAppend the text to be appended to the file","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"iantsaii"},"content":"     * @throws IOException occurs when there are problems writing to the file","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"iantsaii"},"content":"    private void appendToFile(String textToAppend) throws IOException {","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"iantsaii"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath, true); // create a FileWriter in append mode","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"iantsaii"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"iantsaii"},"content":"        fw.close();","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"iantsaii"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"iantsaii":93}},{"path":"src/main/java/rocket/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"package rocket;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"iantsaii"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"iantsaii"},"content":"    //Solution below adapted from: https://nus-cs2103-ay2324s1.github.io/website/schedule/week2/project.html#:~:text\u003dPartial-,solution,-Duke%20Level%2D4","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"iantsaii"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"iantsaii"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"iantsaii"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"iantsaii"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"iantsaii"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"iantsaii"},"content":"     * Gets status Icon","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"iantsaii"},"content":"     * @return status icon","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"iantsaii"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"iantsaii"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"iantsaii"},"content":"     * Marks task as done","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"iantsaii"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"iantsaii"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"iantsaii"},"content":"     * Marks task as undone","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"iantsaii"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"iantsaii"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"iantsaii"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"iantsaii"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"iantsaii"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"iantsaii"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"iantsaii":39}},{"path":"src/main/java/rocket/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"package rocket;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"iantsaii"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"iantsaii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"iantsaii"},"content":"public class TaskList {","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"iantsaii"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"iantsaii"},"content":"     * Create new task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"iantsaii"},"content":"     * @param stringList list of string representing tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"iantsaii"},"content":"     * @throws RocketIllegalArgumentException if strings can\u0027t be converted into tasks (invalid strings).","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"iantsaii"},"content":"    public TaskList (ArrayList\u003cString\u003e stringList) throws RocketIllegalArgumentException {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"iantsaii"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"iantsaii"},"content":"        for (String s : stringList) {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"iantsaii"},"content":"            this.tasks.add(stringToTask(s));","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"iantsaii"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"iantsaii"},"content":"     * Create empty task list.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"iantsaii"},"content":"    public TaskList () {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"iantsaii"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"iantsaii"},"content":"    private static Task stringToTask(String taskString) throws RocketIllegalArgumentException {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"iantsaii"},"content":"        char taskType \u003d taskString.charAt(1);","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"iantsaii"},"content":"        boolean isDone \u003d taskString.charAt(4) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"iantsaii"},"content":"        if (taskType \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"iantsaii"},"content":"            return new Todo(taskString.substring(7), isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"iantsaii"},"content":"        } else if (taskType \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"iantsaii"},"content":"            String arguments \u003d taskString.substring(7);","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"iantsaii"},"content":"            int descriptionIndex \u003d arguments.indexOf(\"by\") - 2;","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"iantsaii"},"content":"            String description \u003d arguments.substring(0, descriptionIndex);","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"iantsaii"},"content":"            String deadline \u003d arguments.substring(descriptionIndex + 5)","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"iantsaii"},"content":"                    .replace(\u0027)\u0027, \u0027 \u0027)","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"iantsaii"},"content":"                    .trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"iantsaii"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"iantsaii"},"content":"                throw new RocketIllegalArgumentException(\"The description of a deadline\");","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"iantsaii"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"iantsaii"},"content":"            if (deadline.isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"iantsaii"},"content":"                throw new RocketIllegalArgumentException(\"The deadline of a deadline\");","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"iantsaii"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"iantsaii"},"content":"            LocalDateTime by \u003d LocalDateTime.parse(deadline, Rocket.prettyDateTimeFormatter);","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"iantsaii"},"content":"            return new Deadline(description, isDone, by);","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"iantsaii"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"iantsaii"},"content":"            String arguments \u003d taskString.substring(7);","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"iantsaii"},"content":"            int descriptionIndex \u003d arguments.indexOf(\"from\") - 2;","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"iantsaii"},"content":"            String description \u003d arguments.substring(0, descriptionIndex);","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"iantsaii"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"iantsaii"},"content":"                throw new RocketIllegalArgumentException(\"The description of an event.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"iantsaii"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"iantsaii"},"content":"            String duration \u003d arguments.substring(descriptionIndex + 7)","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"iantsaii"},"content":"                    .trim();","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"iantsaii"},"content":"            if (duration.isBlank()) {","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"iantsaii"},"content":"                throw new RocketIllegalArgumentException(\"The duration of an event\");","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"iantsaii"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"iantsaii"},"content":"            int fromIndex \u003d duration.indexOf(\"to\") - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"iantsaii"},"content":"            LocalDateTime from \u003d LocalDateTime.parse(","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"iantsaii"},"content":"                    duration.substring(0, fromIndex).trim(),","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"iantsaii"},"content":"                    Rocket.prettyDateTimeFormatter","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"iantsaii"},"content":"            );","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"iantsaii"},"content":"            LocalDateTime to \u003d LocalDateTime.parse(","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"iantsaii"},"content":"                    duration.substring(fromIndex + 4)","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"iantsaii"},"content":"                            .replace(\u0027)\u0027, \u0027 \u0027)","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"iantsaii"},"content":"                            .trim(),","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"iantsaii"},"content":"                    Rocket.prettyDateTimeFormatter","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"iantsaii"},"content":"            );","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"iantsaii"},"content":"            return new Event(description, isDone, from, to);","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"iantsaii"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"iantsaii"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"iantsaii"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"iantsaii"},"content":"    public int size() {","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"iantsaii"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"iantsaii"},"content":"    public Task get(int i) {","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"iantsaii"},"content":"        return this.tasks.get(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"iantsaii"},"content":"    public void remove(int i) {","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"iantsaii"},"content":"        this.tasks.remove(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"iantsaii"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"iantsaii"},"content":"    public String toString(){","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"iantsaii"},"content":"        StringBuilder tasksString \u003d new StringBuilder();","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"iantsaii"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"iantsaii"},"content":"            tasksString.append(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"iantsaii"},"content":"            tasksString.append(\"\\n\");","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"iantsaii"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"iantsaii"},"content":"        return String.valueOf(tasksString);","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"iantsaii"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"iantsaii":100}},{"path":"src/main/java/rocket/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"package rocket;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"iantsaii"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"iantsaii"},"content":"     * Make new Rocket.Todo","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"iantsaii"},"content":"     * @param description todo description","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"iantsaii"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"iantsaii"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"iantsaii"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"iantsaii"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"iantsaii"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"iantsaii"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"iantsaii":16}},{"path":"src/main/java/rocket/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"package rocket;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"iantsaii"},"content":"public class TodoCommand extends AddCommand {","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"iantsaii"},"content":"    private String description;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"iantsaii"},"content":"     * Creates todo command.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"iantsaii"},"content":"     * @param description the description of the todo.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"iantsaii"},"content":"     * @param isDone whether the todo has been completed.","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"iantsaii"},"content":"    public TodoCommand (String description, boolean isDone) {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"iantsaii"},"content":"        super(new Todo(description, isDone));","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"iantsaii"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"iantsaii":14}},{"path":"src/main/java/rocket/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"package rocket;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"iantsaii"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"iantsaii"},"content":"public class Ui {","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"iantsaii"},"content":"    private static final String LINE \u003d \"    ____________________________________________________________\";","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"iantsaii"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"iantsaii"},"content":"     * Create Ui that interacts with user","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"iantsaii"},"content":"    public Ui() {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"iantsaii"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"iantsaii"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"iantsaii"},"content":"        showError(\"Files were unable to load\");","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"iantsaii"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"iantsaii"},"content":"        showLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"iantsaii"},"content":"        System.out.println(\"    Hello! I\u0027m Rocket\");","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"iantsaii"},"content":"        System.out.println(\"    What can I do for you?\");","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"iantsaii"},"content":"        showLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"iantsaii"},"content":"    public String readCommand() {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"iantsaii"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"iantsaii"},"content":"    public void showLine() {","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"iantsaii"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"iantsaii"},"content":"     * Prints out a nicely-formatted error message","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"iantsaii"},"content":"     * @param message the error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"iantsaii"},"content":"    public void showError(String message) {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"iantsaii"},"content":"        showLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"iantsaii"},"content":"        System.out.println(\"     ☹ OOPS!!! \" + message);","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"iantsaii"},"content":"        showLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"iantsaii"},"content":"    public void showTasks(TaskList tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"iantsaii"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"iantsaii"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"iantsaii"},"content":"            System.out.println(\"    \" + (i + 1) + \".\" + task);","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"iantsaii"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"iantsaii"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"iantsaii":51}},{"path":"src/main/java/rocket/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"package rocket;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"iantsaii"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"iantsaii"},"content":"    private int taskNumber;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"iantsaii"},"content":"     * Create unmark command.","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"iantsaii"},"content":"     * @param taskNumber task to be unmarked.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"iantsaii"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"iantsaii"},"content":"        super(false);","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"iantsaii"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"iantsaii"},"content":"     * executes unmark command.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"iantsaii"},"content":"     * @param tasks Modifies or uses the tasklist if needed.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"iantsaii"},"content":"     * @param ui Displays to the UI if needed.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"iantsaii"},"content":"     * @param storage Stores and retrieves data from the storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"iantsaii"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"iantsaii"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"iantsaii"},"content":"        Task task \u003d tasks.get(taskNumber);","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"iantsaii"},"content":"        task.markAsUndone();","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"iantsaii"},"content":"        System.out.println(\"    OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"iantsaii"},"content":"        System.out.println(\"      \" + task);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"iantsaii"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"iantsaii":28}},{"path":"src/test/java/rocket/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"package rocket;  //same package as the class being tested","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"iantsaii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"iantsaii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"iantsaii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"iantsaii"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"iantsaii"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"iantsaii"},"content":"    public void toString_todoDeadlineEvent_success(){","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"iantsaii"},"content":"        ArrayList\u003cString\u003e stringList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"iantsaii"},"content":"        stringList.add(\"[T][ ] borrow book\");","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"iantsaii"},"content":"        stringList.add(\"[D][ ] return book (by: Oct 15 2023, 7:45 PM)\");","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"iantsaii"},"content":"        stringList.add(\"[E][ ] project meeting (from: Oct 16 2023, 2:00 PM to: Oct 16 2023, 4:00 PM)\");","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"iantsaii"},"content":"        TaskList tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"iantsaii"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"iantsaii"},"content":"            tasks \u003d new TaskList(stringList);","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"iantsaii"},"content":"        } catch (RocketIllegalArgumentException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"iantsaii"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"iantsaii"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"iantsaii"},"content":"        assertEquals(\"[T][ ] borrow book\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"iantsaii"},"content":"                \"[D][ ] return book (by: Oct 15 2023, 7:45 PM)\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"iantsaii"},"content":"                \"[E][ ] project meeting (from: Oct 16 2023, 2:00 PM to: Oct 16 2023, 4:00 PM)\\n\",","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"iantsaii"},"content":"                String.valueOf(tasks));","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"iantsaii"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"iantsaii":28}},{"path":"src/test/java/rocket/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"package rocket;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"iantsaii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"iantsaii"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"iantsaii"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"iantsaii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"iantsaii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"iantsaii"},"content":"public class UiTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"iantsaii"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"iantsaii"},"content":"    public void showTasks_sampleTasks_success(){","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"iantsaii"},"content":"        ArrayList\u003cString\u003e stringList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"iantsaii"},"content":"        stringList.add(\"[T][ ] borrow book\");","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"iantsaii"},"content":"        stringList.add(\"[D][ ] return book (by: Oct 15 2023, 7:45 PM)\");","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"iantsaii"},"content":"        stringList.add(\"[E][ ] project meeting (from: Oct 16 2023, 2:00 PM to: Oct 16 2023, 4:00 PM)\");","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"iantsaii"},"content":"        TaskList tasks;","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"iantsaii"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"iantsaii"},"content":"            tasks \u003d new TaskList(stringList);","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"iantsaii"},"content":"        } catch (RocketIllegalArgumentException e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"iantsaii"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"iantsaii"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"iantsaii"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"iantsaii"},"content":"        ui.showTasks(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"iantsaii"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"iantsaii"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"iantsaii"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"iantsaii"},"content":"        ui.showTasks(tasks);","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"iantsaii"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"iantsaii"},"content":"        String printedOutput \u003d outputStream.toString();","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"iantsaii"},"content":"        String expectedOutput \u003d \"    1.[T][ ] borrow book\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"iantsaii"},"content":"                \"    2.[D][ ] return book (by: Oct 15 2023, 7:45 PM)\\n\" +","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"iantsaii"},"content":"                \"    3.[E][ ] project meeting (from: Oct 16 2023, 2:00 PM to: Oct 16 2023, 4:00 PM)\\n\";","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"iantsaii"},"content":"        assertEquals(expectedOutput, printedOutput);","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"iantsaii"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"iantsaii":47}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"iantsaii"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"iantsaii"},"content":"deadline return book /by 15-10-2023 19:45","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"iantsaii"},"content":"event project meeting /from 16-10-2023 14:00 /to 16-10-2023 16:00","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"iantsaii"},"content":"mark 1","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"iantsaii"},"content":"unmark 1","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"iantsaii"},"content":"delete 1","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"iantsaii"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"iantsaii":8}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"iantsaii"},"content":"java -classpath ../bin Rocket \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"iantsaii":1,"-":37}}]
