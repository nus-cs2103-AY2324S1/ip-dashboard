[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"//Solution below adapted from: https://nus-cs2103-ay2324s1.github.io/website/schedule/week2/project.html#:~:text\u003dExtension%3A%20A%2D-,Classes,-A%2DClasses","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"iantsaii"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"iantsaii"},"content":"    protected String by;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"iantsaii"},"content":"     * Make deadline task","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"iantsaii"},"content":"     * @param description task description","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"iantsaii"},"content":"     * @param by task deadline","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"iantsaii"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"iantsaii"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"iantsaii"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"iantsaii"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"iantsaii"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"iantsaii"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"iantsaii"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"iantsaii":19}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"public class Event extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"iantsaii"},"content":"    protected String from;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"iantsaii"},"content":"    protected String to;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"iantsaii"},"content":"     * Make an event task","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"iantsaii"},"content":"     * @param description event description","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"iantsaii"},"content":"     * @param from event start","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"iantsaii"},"content":"     * @param to event end","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"iantsaii"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"iantsaii"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"iantsaii"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"iantsaii"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"iantsaii"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"iantsaii"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"iantsaii"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"iantsaii"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"iantsaii":21}},{"path":"src/main/java/Rocket.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"iantsaii"},"content":"import java.util.List;","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"iantsaii"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"iantsaii"},"content":"public class Rocket {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"iantsaii"},"content":"    private static final String LINE \u003d \"    ____________________________________________________________\";","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"iantsaii"},"content":"        String input;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"iantsaii"},"content":"        // Create list","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"iantsaii"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"iantsaii"},"content":"        // Create scanner to read user input","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"iantsaii"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"iantsaii"},"content":"        System.out.println(LINE + \"\\n    Hello! I\u0027m Rocket\\n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"iantsaii"},"content":"                \"    What can I do for you?\\n\" + LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"iantsaii"},"content":"        input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"iantsaii"},"content":"        while (true) {","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"iantsaii"},"content":"            // Split string to get command and arguments","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"iantsaii"},"content":"            int firstWordIndex \u003d input.indexOf(\u0027 \u0027);","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"iantsaii"},"content":"            String command;","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"iantsaii"},"content":"            String arguments \u003d \"\";","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"iantsaii"},"content":"            if (firstWordIndex \u003d\u003d -1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"iantsaii"},"content":"                command \u003d input;","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"iantsaii"},"content":"            } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"iantsaii"},"content":"                command \u003d input.substring(0, firstWordIndex);","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"iantsaii"},"content":"                arguments \u003d input.substring(firstWordIndex + 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"iantsaii"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"iantsaii"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"iantsaii"},"content":"                switch (command) {","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"iantsaii"},"content":"                case \"bye\": {","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"iantsaii"},"content":"                    handleBye();","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"iantsaii"},"content":"                    return;","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"iantsaii"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"iantsaii"},"content":"                case \"list\": {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"iantsaii"},"content":"                    handleList(taskList);","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"iantsaii"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"iantsaii"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"iantsaii"},"content":"                case \"mark\": {","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"iantsaii"},"content":"                    handleMark(taskList, arguments);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"iantsaii"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":44,"author":{"gitId":"iantsaii"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"iantsaii"},"content":"                case \"unmark\": {","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"iantsaii"},"content":"                    handleUnmark(taskList, arguments);","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"iantsaii"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"iantsaii"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"iantsaii"},"content":"                case \"delete\": {","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"iantsaii"},"content":"                    handleDelete(taskList, arguments);","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"iantsaii"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"iantsaii"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"iantsaii"},"content":"                case \"deadline\": {","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"iantsaii"},"content":"                    handleDeadline(taskList, arguments);","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"iantsaii"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"iantsaii"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"iantsaii"},"content":"                case \"todo\": {","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"iantsaii"},"content":"                    handleTodo(taskList, arguments);","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"iantsaii"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"iantsaii"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"iantsaii"},"content":"                case \"event\": {","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"iantsaii"},"content":"                    handleEvent(taskList, arguments);","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"iantsaii"},"content":"                    break;","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"iantsaii"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"iantsaii"},"content":"                default: {","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"iantsaii"},"content":"                    throw new RocketInvalidCommandException();","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"iantsaii"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"iantsaii"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"iantsaii"},"content":"            } catch (RocketException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"iantsaii"},"content":"                System.out.println(LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"iantsaii"},"content":"                System.out.println(\"     ☹ OOPS!!! \" + e.getMessage());","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"iantsaii"},"content":"                System.out.println(LINE);","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"iantsaii"},"content":"            } finally {","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"iantsaii"},"content":"                if (!input.equals(\"bye\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"iantsaii"},"content":"                    input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":76,"author":{"gitId":"iantsaii"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":77,"author":{"gitId":"iantsaii"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"iantsaii"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":80,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"iantsaii"},"content":"     * Extracts deadline from input.","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"iantsaii"},"content":"     * @param arguments information about task.","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"iantsaii"},"content":"     * @return a deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"iantsaii"},"content":"     * @throws RocketIllegalArgumentException because of illegal argument.","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"iantsaii"},"content":"    private static Deadline getDeadline(String arguments) throws RocketIllegalArgumentException {","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"iantsaii"},"content":"        int descriptionIndex \u003d arguments.indexOf(\" /by\");","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"iantsaii"},"content":"        String description \u003d arguments.substring(0, descriptionIndex);","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"iantsaii"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"iantsaii"},"content":"            throw new RocketIllegalArgumentException(\"The description of a deadline\");","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"iantsaii"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"iantsaii"},"content":"        String by \u003d arguments.substring(descriptionIndex + 5);","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"iantsaii"},"content":"        if (by.isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"iantsaii"},"content":"            throw new RocketIllegalArgumentException(\"The deadline of a deadline\");","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"iantsaii"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"iantsaii"},"content":"        return new Deadline(description, by);","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"iantsaii"},"content":"     * Extracts event from input.","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"iantsaii"},"content":"     * @param arguments information about event.","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"iantsaii"},"content":"     * @return an event.","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"iantsaii"},"content":"     * @throws RocketIllegalArgumentException because of Illegal Argument.","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"iantsaii"},"content":"    private static Event getEvent(String arguments) throws RocketIllegalArgumentException{","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"iantsaii"},"content":"        int descriptionIndex \u003d arguments.indexOf(\" /from\");","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"iantsaii"},"content":"        String description \u003d arguments.substring(0, descriptionIndex);","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"iantsaii"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"iantsaii"},"content":"            throw new RocketIllegalArgumentException(\"The description of an event.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"iantsaii"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"iantsaii"},"content":"        String duration \u003d arguments.substring(descriptionIndex + 7);","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"iantsaii"},"content":"        if (duration.isBlank()) {","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"iantsaii"},"content":"            throw new RocketIllegalArgumentException(\"The duration of an event\");","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"iantsaii"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"iantsaii"},"content":"        int fromIndex \u003d duration.indexOf(\" /to\");","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"iantsaii"},"content":"        String from \u003d duration.substring(0, fromIndex);","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"iantsaii"},"content":"        String to \u003d duration.substring(fromIndex + 5);","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"iantsaii"},"content":"        return new Event(description, from, to);","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"iantsaii"},"content":"     * handles bye command","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"iantsaii"},"content":"    private static void handleBye() {","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"iantsaii"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"iantsaii"},"content":"        System.out.println(\"    Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"iantsaii"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"iantsaii"},"content":"     * handles List command","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"iantsaii"},"content":"     * @param taskList the ArrayList that represents the tasklist","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"iantsaii"},"content":"    private static void handleList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"iantsaii"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"iantsaii"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"iantsaii"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"iantsaii"},"content":"            System.out.println(\"    \" + (i + 1) + \".\" + task);","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"iantsaii"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"iantsaii"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"iantsaii"},"content":"     * handle Mark command","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"iantsaii"},"content":"     * @param taskList the ArrayList that represents the tasklist","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"iantsaii"},"content":"     * @param arguments the command line arguments","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"iantsaii"},"content":"    private static void handleMark(List\u003cTask\u003e taskList, String arguments) {","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"iantsaii"},"content":"        int taskNumber \u003d Integer.parseInt(arguments) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"iantsaii"},"content":"        Task task \u003d taskList.get(taskNumber);","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"iantsaii"},"content":"        task.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"iantsaii"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"iantsaii"},"content":"        System.out.println(\"    Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"iantsaii"},"content":"        System.out.println(\"      \" + task);","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"iantsaii"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"iantsaii"},"content":"     * handle Unmark command","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"iantsaii"},"content":"     * @param taskList the ArrayList that represents the tasklist","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"iantsaii"},"content":"     * @param arguments the command line arguments","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"iantsaii"},"content":"    private static void handleUnmark(List\u003cTask\u003e taskList, String arguments) {","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"iantsaii"},"content":"        int taskNumber \u003d Integer.parseInt(arguments) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"iantsaii"},"content":"        Task task \u003d taskList.get(taskNumber);","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"iantsaii"},"content":"        task.markAsUndone();","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"iantsaii"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"iantsaii"},"content":"        System.out.println(\"    OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"iantsaii"},"content":"        System.out.println(\"      \" + task);","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"iantsaii"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"iantsaii"},"content":"     * handle Delete command","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"iantsaii"},"content":"     * @param taskList the ArrayList that represents the tasklist","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"iantsaii"},"content":"     * @param arguments the command line arguments","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"iantsaii"},"content":"    private static void handleDelete(List\u003cTask\u003e taskList, String arguments) {","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"iantsaii"},"content":"        int taskNumber \u003d Integer.parseInt(arguments) - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":181,"author":{"gitId":"iantsaii"},"content":"        Task task \u003d taskList.get(taskNumber);","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"iantsaii"},"content":"        taskList.remove(taskNumber);","lastModifiedDate":"2023-08-31"},{"lineNumber":183,"author":{"gitId":"iantsaii"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":184,"author":{"gitId":"iantsaii"},"content":"        System.out.println(\"    Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":185,"author":{"gitId":"iantsaii"},"content":"        System.out.println(\"      \" + task);","lastModifiedDate":"2023-08-31"},{"lineNumber":186,"author":{"gitId":"iantsaii"},"content":"        System.out.println(\"    Now you have \" + taskList.size() + \" tasks in the list\");","lastModifiedDate":"2023-08-31"},{"lineNumber":187,"author":{"gitId":"iantsaii"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":188,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":189,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":190,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":191,"author":{"gitId":"iantsaii"},"content":"     * handle Deadline command","lastModifiedDate":"2023-08-31"},{"lineNumber":192,"author":{"gitId":"iantsaii"},"content":"     * @param taskList the ArrayList that represents the list of tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":193,"author":{"gitId":"iantsaii"},"content":"     * @param arguments the command line arguments","lastModifiedDate":"2023-08-31"},{"lineNumber":194,"author":{"gitId":"iantsaii"},"content":"     * @throws RocketIllegalArgumentException throws illegal argument exception if there is no","lastModifiedDate":"2023-08-31"},{"lineNumber":195,"author":{"gitId":"iantsaii"},"content":"     *         description or deadline provided","lastModifiedDate":"2023-08-31"},{"lineNumber":196,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":197,"author":{"gitId":"iantsaii"},"content":"    private static void handleDeadline(List\u003cTask\u003e taskList, String arguments) throws RocketIllegalArgumentException {","lastModifiedDate":"2023-08-31"},{"lineNumber":198,"author":{"gitId":"iantsaii"},"content":"        if (arguments.isBlank()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":199,"author":{"gitId":"iantsaii"},"content":"            throw new RocketIllegalArgumentException(\"The description of a Deadline\");","lastModifiedDate":"2023-08-31"},{"lineNumber":200,"author":{"gitId":"iantsaii"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":201,"author":{"gitId":"iantsaii"},"content":"        Deadline deadline \u003d getDeadline(arguments);","lastModifiedDate":"2023-08-31"},{"lineNumber":202,"author":{"gitId":"iantsaii"},"content":"        taskList.add(deadline);","lastModifiedDate":"2023-08-31"},{"lineNumber":203,"author":{"gitId":"iantsaii"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":204,"author":{"gitId":"iantsaii"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":205,"author":{"gitId":"iantsaii"},"content":"        System.out.println(\"      \" + deadline);","lastModifiedDate":"2023-08-31"},{"lineNumber":206,"author":{"gitId":"iantsaii"},"content":"        System.out.println(\"    Now you have \" + taskList.size() + \" tasks in the list\");","lastModifiedDate":"2023-08-31"},{"lineNumber":207,"author":{"gitId":"iantsaii"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":208,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":209,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":210,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":211,"author":{"gitId":"iantsaii"},"content":"     * handle Todo command","lastModifiedDate":"2023-08-31"},{"lineNumber":212,"author":{"gitId":"iantsaii"},"content":"     * @param taskList the ArrayList that represents the list of tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":213,"author":{"gitId":"iantsaii"},"content":"     * @param arguments the command line arguments","lastModifiedDate":"2023-08-31"},{"lineNumber":214,"author":{"gitId":"iantsaii"},"content":"     * @throws RocketIllegalArgumentException throws illegal argument exception if there is no description provided","lastModifiedDate":"2023-08-31"},{"lineNumber":215,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":216,"author":{"gitId":"iantsaii"},"content":"    private static void handleTodo(List\u003cTask\u003e taskList, String arguments) throws RocketIllegalArgumentException {","lastModifiedDate":"2023-08-31"},{"lineNumber":217,"author":{"gitId":"iantsaii"},"content":"        if (arguments.isBlank()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":218,"author":{"gitId":"iantsaii"},"content":"            throw new RocketIllegalArgumentException(\"The description of a Todo\");","lastModifiedDate":"2023-08-31"},{"lineNumber":219,"author":{"gitId":"iantsaii"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":220,"author":{"gitId":"iantsaii"},"content":"        Todo todo \u003d new Todo(arguments);","lastModifiedDate":"2023-08-31"},{"lineNumber":221,"author":{"gitId":"iantsaii"},"content":"        taskList.add(todo);","lastModifiedDate":"2023-08-31"},{"lineNumber":222,"author":{"gitId":"iantsaii"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":223,"author":{"gitId":"iantsaii"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":224,"author":{"gitId":"iantsaii"},"content":"        System.out.println(\"      \" + todo);","lastModifiedDate":"2023-08-31"},{"lineNumber":225,"author":{"gitId":"iantsaii"},"content":"        System.out.println(\"    Now you have \" + taskList.size() + \" tasks in the list\");","lastModifiedDate":"2023-08-31"},{"lineNumber":226,"author":{"gitId":"iantsaii"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":227,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":228,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":229,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":230,"author":{"gitId":"iantsaii"},"content":"     * handle Event command","lastModifiedDate":"2023-08-31"},{"lineNumber":231,"author":{"gitId":"iantsaii"},"content":"     * @param taskList the ArrayList that represents the list of tasks","lastModifiedDate":"2023-08-31"},{"lineNumber":232,"author":{"gitId":"iantsaii"},"content":"     * @param arguments the command line arguments","lastModifiedDate":"2023-08-31"},{"lineNumber":233,"author":{"gitId":"iantsaii"},"content":"     * @throws RocketIllegalArgumentException throws illegal argument exception if there is no","lastModifiedDate":"2023-08-31"},{"lineNumber":234,"author":{"gitId":"iantsaii"},"content":"     *         description or duration provided","lastModifiedDate":"2023-08-31"},{"lineNumber":235,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":236,"author":{"gitId":"iantsaii"},"content":"    private static void handleEvent(List\u003cTask\u003e taskList, String arguments) throws RocketIllegalArgumentException {","lastModifiedDate":"2023-08-31"},{"lineNumber":237,"author":{"gitId":"iantsaii"},"content":"        if (arguments.isBlank()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":238,"author":{"gitId":"iantsaii"},"content":"            throw new RocketIllegalArgumentException(\"The description of an Event\");","lastModifiedDate":"2023-08-31"},{"lineNumber":239,"author":{"gitId":"iantsaii"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":240,"author":{"gitId":"iantsaii"},"content":"        Event event \u003d getEvent(arguments);","lastModifiedDate":"2023-08-31"},{"lineNumber":241,"author":{"gitId":"iantsaii"},"content":"        taskList.add(event);","lastModifiedDate":"2023-08-31"},{"lineNumber":242,"author":{"gitId":"iantsaii"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":243,"author":{"gitId":"iantsaii"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":244,"author":{"gitId":"iantsaii"},"content":"        System.out.println(\"      \" + event);","lastModifiedDate":"2023-08-31"},{"lineNumber":245,"author":{"gitId":"iantsaii"},"content":"        System.out.println(\"    Now you have \" + taskList.size() + \" tasks in the list\");","lastModifiedDate":"2023-08-31"},{"lineNumber":246,"author":{"gitId":"iantsaii"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-08-31"},{"lineNumber":247,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":248,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"iantsaii":246,"-":3}},{"path":"src/main/java/RocketException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"public class RocketException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"iantsaii"},"content":"    public RocketException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"iantsaii"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"iantsaii"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"iantsaii":5}},{"path":"src/main/java/RocketIllegalArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"iantsaii"},"content":" * Takes the description of the illegal argument and says that it cannot be empty","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"iantsaii"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"iantsaii"},"content":"public class RocketIllegalArgumentException extends RocketException{","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"iantsaii"},"content":"    public RocketIllegalArgumentException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"iantsaii"},"content":"        super(message + \" cannot be empty.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"iantsaii"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"iantsaii":8}},{"path":"src/main/java/RocketInvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"public class RocketInvalidCommandException extends RocketException {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"iantsaii"},"content":"    public RocketInvalidCommandException() {","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"iantsaii"},"content":"        super(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"iantsaii"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"iantsaii":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"iantsaii"},"content":"    //Solution below adapted from: https://nus-cs2103-ay2324s1.github.io/website/schedule/week2/project.html#:~:text\u003dPartial-,solution,-Duke%20Level%2D4","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"iantsaii"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"iantsaii"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"iantsaii"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"iantsaii"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"iantsaii"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"iantsaii"},"content":"     * Gets status Icon","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"iantsaii"},"content":"     * @return status icon","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"iantsaii"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"iantsaii"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"iantsaii"},"content":"     * Marks task as done","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"iantsaii"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"iantsaii"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"iantsaii"},"content":"     * Marks task as undone","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"iantsaii"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"iantsaii"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"iantsaii"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"iantsaii"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"iantsaii"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"iantsaii"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"iantsaii":37}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"iantsaii"},"content":"    /**","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"iantsaii"},"content":"     * Make new Todo","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"iantsaii"},"content":"     * @param description todo description","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"iantsaii"},"content":"     */","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"iantsaii"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"iantsaii"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"iantsaii"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"iantsaii"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"iantsaii"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"iantsaii"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"iantsaii"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"iantsaii"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"iantsaii":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"iantsaii"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"iantsaii"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"iantsaii"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"iantsaii"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"iantsaii"},"content":"mark 1","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"iantsaii"},"content":"unmark 1","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"iantsaii"},"content":"delete 1","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"iantsaii"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"iantsaii":8}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"iantsaii"},"content":"java -classpath ../bin Rocket \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"iantsaii":1,"-":37}}]
