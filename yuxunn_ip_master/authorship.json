[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yuxunn"},"content":"4","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"yuxunn"},"content":"T | 0 | eat","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"yuxunn"},"content":"T | 0 | eat","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"yuxunn"},"content":"T | 0 | sleep","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"yuxunn"},"content":"D | 1 | return book | null","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"yuxunn":5}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yuxunn"},"content":"4","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"yuxunn"},"content":"T | 0 | eat","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"yuxunn"},"content":"T | 0 | eat","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"yuxunn"},"content":"T | 0 | sleep","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"yuxunn"},"content":"D | 0 | return book | null","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"yuxunn":5}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuxunn"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"yuxunn"},"content":"//import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"yuxunn"},"content":"//import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"yuxunn"},"content":"//import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"yuxunn"},"content":"//import java.io.FileReader;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"yuxunn"},"content":"//import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"yuxunn"},"content":"//import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"yuxunn"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"yuxunn"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"yuxunn"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"yuxunn"},"content":"    public Duke(String fileDir) {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"yuxunn"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"yuxunn"},"content":"        storage \u003d new Storage(fileDir);","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"yuxunn"},"content":"        String[] actions \u003d storage.loadActions();","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"yuxunn"},"content":"        boolean[] isDone \u003d storage.loadIsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"yuxunn"},"content":"        String[] types \u003d storage.loadTypes();","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"yuxunn"},"content":"        int counter \u003d storage.load(\"./data/duke.txt\", actions, types, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"yuxunn"},"content":"        if (actions !\u003d null \u0026\u0026 isDone !\u003d null \u0026\u0026 types !\u003d null \u0026\u0026 counter \u003e\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"yuxunn"},"content":"            taskList \u003d new TaskList(actions, isDone, types, counter);","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"yuxunn"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"yuxunn"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"yuxunn"},"content":"            String[] actions2 \u003d new String[100];","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"yuxunn"},"content":"            boolean[] isDone2 \u003d new boolean[100];","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"yuxunn"},"content":"            String[] types2 \u003d new String[100];","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"yuxunn"},"content":"            taskList \u003d new TaskList(actions2, isDone2, types2, 0);","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"yuxunn"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"yuxunn"},"content":"    public void run() {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"yuxunn"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"yuxunn"},"content":"        boolean exit \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"yuxunn"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"yuxunn"},"content":"        while (exit !\u003d true) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"yuxunn"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"yuxunn"},"content":"            exit \u003d Parser.inputType(input, taskList, storage);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"yuxunn"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"yuxunn"},"content":"        Storage.save(\"./data/duke.txt\", TaskList.actions, TaskList.type, TaskList.isDone, TaskList.dueString, TaskList.startTime, TaskList.endTime, TaskList.counter);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"yuxunn"},"content":"        new Duke(\"./data/duke.txt\").run();","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"yuxunn"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"yuxunn":46,"-":4}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuxunn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"yuxunn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"yuxunn"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"yuxunn"},"content":"    public static boolean inputType(String input, TaskList taskList, Storage storage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"yuxunn"},"content":"        if (input.startsWith(\"bye\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"yuxunn"},"content":"            System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"yuxunn"},"content":"            return true;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"yuxunn"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"yuxunn"},"content":"            int num3 \u003d Integer.parseInt(input.substring(7).trim());","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"yuxunn"},"content":"            String action2 \u003d TaskList.helper(TaskList.actions[num3 - 1], TaskList.type[num3 - 1], TaskList.isDone[num3 - 1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"yuxunn"},"content":"            for (int j \u003d num3 - 1; j \u003c TaskList.counter - 1; j++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"yuxunn"},"content":"                TaskList.actions[j] \u003d TaskList.actions[j + 1];","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"yuxunn"},"content":"                TaskList.type[j] \u003d TaskList.type[j + 1];","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"yuxunn"},"content":"                TaskList.isDone[j] \u003d TaskList.isDone[j + 1];","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"yuxunn"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"yuxunn"},"content":"            TaskList.counter \u003d TaskList.counter - 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"yuxunn"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + action2);","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"yuxunn"},"content":"            System.out.println(\"Now you have \" + TaskList.counter + \" tasks in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"yuxunn"},"content":"            Storage.save(\"data/tasks.txt\", TaskList.actions, TaskList.type, TaskList.isDone, TaskList.dueString, TaskList.startTime, TaskList.endTime, TaskList.counter);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"yuxunn"},"content":"            return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"yuxunn"},"content":"        } else if (input.startsWith(\"list\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"yuxunn"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"yuxunn"},"content":"            for (int i \u003d 0; i \u003c TaskList.counter; i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"yuxunn"},"content":"                String DMYString \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"yuxunn"},"content":"                if (TaskList.type[i].equals(\"D\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"yuxunn"},"content":"                    DMYString \u003d \"by \" + TaskList.dueString[i];","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"yuxunn"},"content":"                } else if (TaskList.type[i].equals(\"E\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"yuxunn"},"content":"                    LocalDateTime startTime \u003d TaskList.startTime[i];","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"yuxunn"},"content":"                    LocalDateTime endTime \u003d TaskList.endTime[i];","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"yuxunn"},"content":"                    DMYString \u003d \"from \" + TaskList.startTime[i]","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"yuxunn"},"content":"                            + \" to \" + TaskList.endTime[i];","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"yuxunn"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"yuxunn"},"content":"                System.out.println((i + 1) + \".\" + TaskList.helper(TaskList.actions[i], TaskList.type[i], TaskList.isDone[i]) + \" \" + DMYString);","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"yuxunn"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"yuxunn"},"content":"            return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"yuxunn"},"content":"        }else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"yuxunn"},"content":"            if (input.length() \u003c\u003d 4) {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"yuxunn"},"content":"                System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"yuxunn"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"yuxunn"},"content":"                String action \u003d input.substring(5).trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"yuxunn"},"content":"                TaskList.todo(action);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"yuxunn"},"content":"                return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"yuxunn"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"yuxunn"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"yuxunn"},"content":"            String action \u003d input.substring(9, input.indexOf(\"/by\")).trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"yuxunn"},"content":"           // System.out.println(action + \"action\");","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"yuxunn"},"content":"            String by \u003d input.substring(input.indexOf(\"/by\") + 4).trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"yuxunn"},"content":"            LocalDateTime timeDeadline \u003d dateTask(by);","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"yuxunn"},"content":"            //  System.out.println(by);","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"yuxunn"},"content":"            TaskList.deadline(action, by, timeDeadline);","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"yuxunn"},"content":"            return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"yuxunn"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"yuxunn"},"content":"            String action \u003d input.substring(6, input.indexOf(\"/from\")).trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"yuxunn"},"content":"            String from \u003d input.substring(input.indexOf(\"/from\") + 6, input.indexOf(\"/to\")).trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"yuxunn"},"content":"            String to \u003d input.substring(input.indexOf(\"/to\") + 4).trim();;","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"yuxunn"},"content":"            TaskList.event(action, from, to);","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"yuxunn"},"content":"            return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"yuxunn"},"content":"        } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"yuxunn"},"content":"            int num \u003d Integer.parseInt(input.substring(5).trim());","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"yuxunn"},"content":"            if (num - 1 \u003c TaskList.counter) {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"yuxunn"},"content":"                TaskList.isDone[num - 1] \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"yuxunn"},"content":"                return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"yuxunn"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"yuxunn"},"content":"        } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"yuxunn"},"content":"            int num2 \u003d Integer.parseInt(input.substring(7).trim());","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"yuxunn"},"content":"            if (num2 - 1 \u003c TaskList.counter) {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"yuxunn"},"content":"                TaskList.isDone[num2 - 1] \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"yuxunn"},"content":"                System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"yuxunn"},"content":"                System.out.println(\"  \" + TaskList.helper(TaskList.actions[num2 - 1], TaskList.type[num2 - 1], TaskList.isDone[num2 - 1]));","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"yuxunn"},"content":"                return false;","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"yuxunn"},"content":"            } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"yuxunn"},"content":"                System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"yuxunn"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"yuxunn"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"yuxunn"},"content":"        return true;","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"yuxunn"},"content":"    private static LocalDateTime dateTask(String dateTimeStr) {","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"yuxunn"},"content":"        DateTimeFormatter DMYhelper \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"yuxunn"},"content":"        // HHmm for the hour and minutes","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"yuxunn"},"content":"        return LocalDateTime.parse(dateTimeStr, DMYhelper);","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"yuxunn"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"yuxunn":85}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuxunn"},"content":"import java.io.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"yuxunn"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"yuxunn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"yuxunn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"yuxunn"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"yuxunn"},"content":"    private String fileDir;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"yuxunn"},"content":"    public Storage(String fileDir) {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"yuxunn"},"content":"        this.fileDir \u003d fileDir;","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"yuxunn"},"content":"    public static void save(String fileName, String[] actions, String[] type, boolean[] isDone, String[] dueStrings, LocalDateTime[] startTimes, LocalDateTime[] endTimes, int counter) {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"yuxunn"},"content":"        try (FileWriter writer \u003d new FileWriter(fileName)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"yuxunn"},"content":"            writer.write(counter + \"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"yuxunn"},"content":"            for (int i \u003d 0; i \u003c counter; i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"yuxunn"},"content":"                int isDoneNum \u003d isDone[i] ? 1 : 0;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"yuxunn"},"content":"                writer.write(type[i] + \" | \" + isDoneNum + \" | \" + actions[i]);","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"yuxunn"},"content":"                if (type[i].equals(\"D\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"yuxunn"},"content":"                    writer.write(\" | \" + dueStrings[i]);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"yuxunn"},"content":"                } else if (type[i].equals(\"E\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"yuxunn"},"content":"                    writer.write(\" | \" + startTimes[i].format(DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"))","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"yuxunn"},"content":"                            + \" | \" + endTimes[i].format(DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\")));","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"yuxunn"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"yuxunn"},"content":"                writer.write(\"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"yuxunn"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"yuxunn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"yuxunn"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"yuxunn"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"yuxunn"},"content":"    public static int load(String fileName, String[] actions, String[] type, boolean[] isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"yuxunn"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"yuxunn"},"content":"        try (FileReader fileReader \u003d new FileReader(fileName)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"yuxunn"},"content":"            Scanner scanner \u003d new Scanner(fileReader);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"yuxunn"},"content":"            while (scanner.hasNextLine() \u0026\u0026 count \u003c actions.length) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"yuxunn"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"yuxunn"},"content":"                String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"yuxunn"},"content":"                // to split the line read into the different parts action num and done","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"yuxunn"},"content":"                if (parts.length \u003e\u003d 3) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"yuxunn"},"content":"                    type[count] \u003d parts[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"yuxunn"},"content":"                    isDone[count] \u003d parts[1].equals(\"1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"yuxunn"},"content":"                    actions[count] \u003d parts[2];","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"yuxunn"},"content":"                    count++;","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"yuxunn"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"yuxunn"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"yuxunn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"yuxunn"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"yuxunn"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"yuxunn"},"content":"        return count;","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"yuxunn"},"content":"    public boolean[] loadIsDone() {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"yuxunn"},"content":"        boolean[] isDone \u003d new boolean[100];","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"yuxunn"},"content":"        try (FileReader fileReader \u003d new FileReader(fileDir)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"yuxunn"},"content":"            Scanner scanner \u003d new Scanner(fileReader);","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"yuxunn"},"content":"            int count \u003d 0;","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"yuxunn"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"yuxunn"},"content":"                if (isDone.length \u003e count) {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"yuxunn"},"content":"                    String line \u003d scanner.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"yuxunn"},"content":"                    String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"yuxunn"},"content":"                    if (parts.length \u003e\u003d 3) {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"yuxunn"},"content":"                        isDone[count] \u003d parts[1].equals(\"1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"yuxunn"},"content":"                        count++;","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"yuxunn"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"yuxunn"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"yuxunn"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"yuxunn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"yuxunn"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"yuxunn"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"yuxunn"},"content":"        return isDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"yuxunn"},"content":"    public String[] loadTypes() {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"yuxunn"},"content":"        String[] type \u003d new String[100];","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"yuxunn"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"yuxunn"},"content":"        try (FileReader fileReader \u003d new FileReader(fileDir)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"yuxunn"},"content":"            Scanner scanner \u003d new Scanner(fileReader);","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"yuxunn"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"yuxunn"},"content":"                if (type.length \u003e count) {","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"yuxunn"},"content":"                    count \u003d 0;","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"yuxunn"},"content":"                    String line \u003d scanner.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"yuxunn"},"content":"                    String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"yuxunn"},"content":"                    if (parts.length \u003e\u003d 3) {","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"yuxunn"},"content":"                        type[count] \u003d parts[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"yuxunn"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"yuxunn"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"yuxunn"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"yuxunn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"yuxunn"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"yuxunn"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"yuxunn"},"content":"        return type;","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"yuxunn"},"content":"    public String[] loadActions() {","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"yuxunn"},"content":"        String[] actions \u003d new String[100];","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"yuxunn"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"yuxunn"},"content":"        try (FileReader fileReader \u003d new FileReader(fileDir)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"yuxunn"},"content":"            Scanner scanner \u003d new Scanner(fileReader);","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"yuxunn"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"yuxunn"},"content":"                if (actions.length \u003e count) {","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"yuxunn"},"content":"                    count \u003d 0;","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"yuxunn"},"content":"                    String line \u003d scanner.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"yuxunn"},"content":"                    String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"yuxunn"},"content":"                    if (parts.length \u003e\u003d 3) {","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"yuxunn"},"content":"                        actions[count] \u003d parts[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"yuxunn"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"yuxunn"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"yuxunn"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"yuxunn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"yuxunn"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"yuxunn"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"yuxunn"},"content":"        return actions;","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"yuxunn":120}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuxunn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"yuxunn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"yuxunn"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"yuxunn"},"content":"    public static String[] actions;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"yuxunn"},"content":"    public static boolean[] isDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"yuxunn"},"content":"    public static String[] type;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"yuxunn"},"content":"    public static int counter;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"yuxunn"},"content":"    public static String[] dueString \u003d new String[100];","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"yuxunn"},"content":"    public static LocalDateTime[] startTime \u003d new LocalDateTime[100];","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"yuxunn"},"content":"    public  static LocalDateTime[] endTime\u003d new LocalDateTime[100];","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"yuxunn"},"content":"    public TaskList(String[] actions, boolean[] isDone, String[] type, int counter){","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"yuxunn"},"content":"        TaskList.actions \u003d actions;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"yuxunn"},"content":"        TaskList.isDone \u003d isDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"yuxunn"},"content":"        TaskList.type \u003d type;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"yuxunn"},"content":"        TaskList.counter \u003d counter;","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"yuxunn"},"content":"    public static void todo(String action) {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"yuxunn"},"content":"            isDone[counter] \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"yuxunn"},"content":"            actions[counter] \u003d action;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"yuxunn"},"content":"            type[counter] \u003d \"T\";","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"yuxunn"},"content":"            counter\u003d counter + 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"yuxunn"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\\n\" + helper(action, \"T\", false));","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"yuxunn"},"content":"            System.out.println(\"Now you have \" + counter + \" tasks in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"yuxunn"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"yuxunn"},"content":"    public static String helper(String task, String taskType, boolean isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"yuxunn"},"content":"        String taskIcon;","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"yuxunn"},"content":"        if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"yuxunn"},"content":"            taskIcon \u003d \"[T]\";","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"yuxunn"},"content":"        } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"yuxunn"},"content":"            taskIcon \u003d \"[D]\";","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"yuxunn"},"content":"        } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"yuxunn"},"content":"            taskIcon \u003d \"[E]\";","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"yuxunn"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"yuxunn"},"content":"            taskIcon \u003d \"[ ]\";","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"yuxunn"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"yuxunn"},"content":"        return taskIcon + \"[\" + (isDone ? \"X\" : \" \") + \"] \" + task;","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"yuxunn"},"content":"    public static void deadline(String action, String due, LocalDateTime by) {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"yuxunn"},"content":"        String byString \u003d due.trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"yuxunn"},"content":"        dueString[counter] \u003d byString;","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"yuxunn"},"content":"        actions[counter] \u003d action;","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"yuxunn"},"content":"       // System.out.println(action + \"hello\");","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"yuxunn"},"content":"        type[counter] \u003d \"D\";","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"yuxunn"},"content":"        isDone[counter] \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"yuxunn"},"content":"        counter \u003d counter + 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"yuxunn"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \\n\" + helper(action, \"D\", false) + \" (by\" + \" \" + byString + \")\");","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"yuxunn"},"content":"        System.out.println(\"Now you have \" + counter + \" tasks in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"yuxunn"},"content":"    public static void event(String action, String start, String end) {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"yuxunn"},"content":"        String from \u003d start.trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"yuxunn"},"content":"        String to \u003d end.trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"yuxunn"},"content":"        LocalDateTime startTimeEvent \u003d helper2(from);","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"yuxunn"},"content":"        LocalDateTime endTimeEvent \u003d helper2(to);","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"yuxunn"},"content":"        startTime[counter] \u003d startTimeEvent;","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"yuxunn"},"content":"        endTime[counter] \u003d endTimeEvent;","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"yuxunn"},"content":"        actions[counter] \u003d action;","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"yuxunn"},"content":"        isDone[counter] \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"yuxunn"},"content":"        type[counter] \u003d \"E\";","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"yuxunn"},"content":"        counter \u003d counter + 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"yuxunn"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + helper(action, \"E\", false) + \" (from: \" + from + \" to: \" + to + \")\");","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"yuxunn"},"content":"        System.out.println(\"Now you have \" + counter + \" tasks in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"yuxunn"},"content":"    private static LocalDateTime helper2 (String dateTimeStr) {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"yuxunn"},"content":"        DateTimeFormatter DMYhelper \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"yuxunn"},"content":"        // HHmm for the hour and minutes","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"yuxunn"},"content":"        return LocalDateTime.parse(dateTimeStr, DMYhelper);","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"yuxunn"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"yuxunn":80}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuxunn"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"yuxunn"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"yuxunn"},"content":"        System.out.println(\"Hello! I\u0027m Bob\\nWhat can I do for you?\");","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"yuxunn"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"yuxunn"},"content":"            System.out.println(\"Error\");","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"yuxunn"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"yuxunn":9}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yuxunn"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"yuxunn"},"content":"todo sleep","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"yuxunn"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"yuxunn"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"yuxunn"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"yuxunn":5}}]
