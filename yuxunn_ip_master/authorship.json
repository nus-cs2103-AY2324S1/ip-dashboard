[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yuxunn"},"content":"4","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"yuxunn"},"content":"T | 0 | eat","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"yuxunn"},"content":"T | 0 | eat","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"yuxunn"},"content":"T | 0 | sleep","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"yuxunn"},"content":"D | 0 | return book","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"yuxunn":5}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuxunn"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"yuxunn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"yuxunn"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"yuxunn"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"yuxunn"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"yuxunn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"yuxunn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"yuxunn"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"yuxunn"},"content":"        int counter \u003d 0;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"yuxunn"},"content":"        String[] actions \u003d new String[100];","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"yuxunn"},"content":"        boolean[] isDone \u003d new boolean[100];","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"yuxunn"},"content":"        String[] type \u003d new String[100];","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"yuxunn"},"content":"        String logo \u003d \"Hello! I\u0027m bob\\nWhat can I do for you?\";","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"yuxunn"},"content":"        System.out.println(logo);","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"yuxunn"},"content":"        File file \u003d new File(\"./data\");","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"yuxunn"},"content":"        //Save data.txt to file","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"yuxunn"},"content":"        counter \u003d load(\"./data/duke.txt\", actions, type, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"yuxunn"},"content":"        while (true) {","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"yuxunn"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"yuxunn"},"content":"            if (input.startsWith(\"bye\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"yuxunn"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"yuxunn"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"yuxunn"},"content":"            } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"yuxunn"},"content":"                int num3 \u003d Integer.parseInt(input.substring(7).trim());","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"yuxunn"},"content":"                String action2 \u003d helper(actions[num3 - 1], type[num3 - 1], isDone[num3 - 1]);","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"yuxunn"},"content":"                for (int j \u003d num3 - 1; j \u003c counter - 1; j++) {","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"yuxunn"},"content":"                    actions[j] \u003d actions[j + 1];","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"yuxunn"},"content":"                    type[j] \u003d type[j + 1];","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"yuxunn"},"content":"                    isDone[j] \u003d isDone[j + 1];","lastModifiedDate":"2023-08-24"},{"lineNumber":33,"author":{"gitId":"yuxunn"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"yuxunn"},"content":"                counter \u003d counter - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"yuxunn"},"content":"                System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + action2);","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"yuxunn"},"content":"                System.out.println(\"Now you have \" + counter + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"yuxunn"},"content":"            } else if (input.startsWith(\"list\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"yuxunn"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"yuxunn"},"content":"                String DMYString \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"yuxunn"},"content":"//                for (int i \u003d 0; i \u003c counter; i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"yuxunn"},"content":"//                    System.out.println((i + 1) + \".\" + helper(actions[i], type[i], isDone[i]));","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"yuxunn"},"content":"                for (int i \u003d 0; i \u003c counter; i++) {","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"yuxunn"},"content":"                    if (type[i].equals(\"D\") || type[i].equals(\"E\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"yuxunn"},"content":"                        LocalDateTime DMY \u003d LocalDateTime.parse(actions[i], DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"yuxunn"},"content":"                        DMYString \u003d DMY.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"yuxunn"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"yuxunn"},"content":"                    System.out.println((i + 1) + \".\" + helper(actions[i], type[i], isDone[i]) + \" \" + DMYString);","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"yuxunn"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"yuxunn"},"content":"            } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"yuxunn"},"content":"                if (input.length() \u003c\u003d 4) {","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"yuxunn"},"content":"                    System.out.println(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"yuxunn"},"content":"                } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"yuxunn"},"content":"                    String action \u003d input.substring(5).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"yuxunn"},"content":"                    isDone[counter] \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"yuxunn"},"content":"                    actions[counter] \u003d action;","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"yuxunn"},"content":"                    type[counter] \u003d \"T\";","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"yuxunn"},"content":"                    counter++;","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"yuxunn"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\\n\" + helper(action, \"T\", false));","lastModifiedDate":"2023-08-24"},{"lineNumber":59,"author":{"gitId":"yuxunn"},"content":"                    System.out.println(\"Now you have \" + counter + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"yuxunn"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"yuxunn"},"content":"            } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"yuxunn"},"content":"            String action \u003d input.substring(9, input.indexOf(\"/by\")).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"yuxunn"},"content":"            String by \u003d input.substring(input.indexOf(\"/by\") + 4).trim(); // Adjusted index","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"yuxunn"},"content":"            LocalDateTime timeDeadline \u003d dateTask(by);","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"yuxunn"},"content":"            actions[counter] \u003d action;","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"yuxunn"},"content":"            type[counter] \u003d \"D\";","lastModifiedDate":"2023-08-24"},{"lineNumber":67,"author":{"gitId":"yuxunn"},"content":"            isDone[counter] \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":68,"author":{"gitId":"yuxunn"},"content":"            counter++;","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"yuxunn"},"content":"            System.out.println(\"Got it. I\u0027ve added this task: \\n\" + helper(action, \"D\", false) + \" (by: \" + timeDeadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\");","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"yuxunn"},"content":"            System.out.println(\"Now you have \" + counter + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"yuxunn"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"yuxunn"},"content":"                String action \u003d input.substring(6, input.indexOf(\"/from\")).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"yuxunn"},"content":"                String from \u003d input.substring(input.indexOf(\"/from\") + 6, input.indexOf(\"/to\")).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"yuxunn"},"content":"                String to \u003d input.substring(input.indexOf(\"/to\") + 4).trim();","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"yuxunn"},"content":"                LocalDateTime startTimeEvent \u003d dateTask(from);","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"yuxunn"},"content":"                LocalDateTime endTimeEvent \u003d dateTask(to);","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"yuxunn"},"content":"                actions[counter] \u003d action;","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"yuxunn"},"content":"                isDone[counter] \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"yuxunn"},"content":"                type[counter] \u003d \"E\";","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"yuxunn"},"content":"                counter++;","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"yuxunn"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\\n\" + helper(action, \"E\", false) + \" (from: \" + from + \" to: \" + to + \")\");","lastModifiedDate":"2023-08-24"},{"lineNumber":82,"author":{"gitId":"yuxunn"},"content":"                System.out.println(\"Now you have \" + counter + \" tasks in the list.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":83,"author":{"gitId":"yuxunn"},"content":"            } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"yuxunn"},"content":"                int num \u003d Integer.parseInt(input.substring(5).trim());","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"yuxunn"},"content":"                if (num - 1 \u003c counter) {","lastModifiedDate":"2023-08-24"},{"lineNumber":86,"author":{"gitId":"yuxunn"},"content":"                    isDone[num - 1] \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"yuxunn"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":88,"author":{"gitId":"yuxunn"},"content":"                    System.out.println(\"  \" + helper(actions[num - 1], type[num - 1], isDone[num - 1]));","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"yuxunn"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"yuxunn"},"content":"            } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":91,"author":{"gitId":"yuxunn"},"content":"                int num2 \u003d Integer.parseInt(input.substring(7).trim());","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"yuxunn"},"content":"                if (num2 - 1 \u003c counter) {","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"yuxunn"},"content":"                    isDone[num2 - 1] \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"yuxunn"},"content":"                    System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"yuxunn"},"content":"                    System.out.println(\"  \" + helper(actions[num2 - 1], type[num2 - 1], isDone[num2 - 1]));","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"yuxunn"},"content":"                } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"yuxunn"},"content":"                    System.out.println(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"yuxunn"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-07-29"},{"lineNumber":101,"author":{"gitId":"yuxunn"},"content":"            save(\"./data/duke.txt\", actions, type, isDone, counter);","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":103,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":104,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"yuxunn"},"content":"    private static String helper(String task, String taskType, boolean isDone) {","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"yuxunn"},"content":"        String taskIcon;","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"yuxunn"},"content":"        if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"yuxunn"},"content":"            taskIcon \u003d \"[T]\";","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"yuxunn"},"content":"        } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"yuxunn"},"content":"            taskIcon \u003d \"[D]\";","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"yuxunn"},"content":"        } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"yuxunn"},"content":"            taskIcon \u003d \"[E]\";","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"yuxunn"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"yuxunn"},"content":"            taskIcon \u003d \"[ ]\";","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"yuxunn"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"yuxunn"},"content":"        return taskIcon + \"[\" + (isDone ? \"X\" : \" \") + \"] \" + task;","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"yuxunn"},"content":"    public static void save(String fileName, String[] actions, String[] type, boolean[] isDone, int counter) {","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"yuxunn"},"content":"        try (FileWriter writer \u003d new FileWriter(fileName)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"yuxunn"},"content":"            writer.write(counter + \"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"yuxunn"},"content":"            for (int i \u003d 0; i \u003c counter; i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"yuxunn"},"content":"                int isDoneNum \u003d isDone[i]","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"yuxunn"},"content":"                        ? 1","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"yuxunn"},"content":"                        : 0;","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"yuxunn"},"content":"                writer.write(type[i] + \" | \" + isDoneNum + \" | \" + actions[i] + \"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"yuxunn"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"yuxunn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"yuxunn"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"yuxunn"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"yuxunn"},"content":"    public static int load(String fileName, String[] actions, String[] type, boolean[] isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"yuxunn"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"yuxunn"},"content":"        try (FileReader fileReader \u003d new FileReader(fileName)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"yuxunn"},"content":"            Scanner scanner \u003d new Scanner(fileReader);","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"yuxunn"},"content":"            while (scanner.hasNextLine() \u0026\u0026 count \u003c actions.length) {","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"yuxunn"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"yuxunn"},"content":"                String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"yuxunn"},"content":"                // to split the line read into the different parts action num and done","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"yuxunn"},"content":"                if (parts.length \u003e\u003d 3) {","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"yuxunn"},"content":"                    type[count] \u003d parts[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"yuxunn"},"content":"                    isDone[count] \u003d parts[1].equals(\"1\");","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"yuxunn"},"content":"                    actions[count] \u003d parts[2];","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"yuxunn"},"content":"                    count++;","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"yuxunn"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":148,"author":{"gitId":"yuxunn"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"yuxunn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"yuxunn"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"yuxunn"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"yuxunn"},"content":"        return count;","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"yuxunn"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"yuxunn"},"content":"    private static LocalDateTime dateTask (String dateTimeStr) {","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"yuxunn"},"content":"        DateTimeFormatter DMYhelper \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"yuxunn"},"content":"        // HHmm for the hour and minutes","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"yuxunn"},"content":"        return LocalDateTime.parse(dateTimeStr, DMYhelper);","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"yuxunn"},"content":"","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"yuxunn":157,"-":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yuxunn"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"yuxunn"},"content":"todo sleep","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"yuxunn"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"yuxunn"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"yuxunn"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"yuxunn":5}}]
