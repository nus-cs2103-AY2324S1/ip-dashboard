[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"sheryew"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"sheryew"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"sheryew"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"sheryew"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"sheryew"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"sheryew"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"sheryew"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"sheryew"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"sheryew"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"sheryew"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"sheryew"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"sheryew"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"sheryew"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"sheryew"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"sheryew"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sheryew":16,"-":38}},{"path":"src/main/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sheryew"},"content":"T|0|sleep","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"sheryew"},"content":"T|1|sleep","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"sheryew"},"content":"T|0|sleep","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"sheryew"},"content":"T|0|sleep","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"sheryew"},"content":"T|0|sleep","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"sheryew"},"content":"T|0|sleep","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"sheryew":6}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheryew"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"sheryew"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"sheryew"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"sheryew"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"sheryew"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"sheryew"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"sheryew"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"sheryew"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"sheryew"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"sheryew"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"sheryew"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"sheryew"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"sheryew"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"sheryew"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"sheryew"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"sheryew"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"sheryew"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"sheryew"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"sheryew"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"sheryew"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"sheryew"},"content":"    private TextArea dialog;","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"sheryew"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"sheryew"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"sheryew"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"sheryew"},"content":"     * Instantiates a DialogBox object that will be displayed either when the user prompts or when Duke replies","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"sheryew"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"sheryew"},"content":"     * @param text String Object. Either user\u0027s prompt or DUKE\u0027s response.","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"sheryew"},"content":"     * @param img Image Object that is generated from providing a reference link to the /resources/Images folder","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"sheryew"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"sheryew"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"sheryew"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"sheryew"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"sheryew"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"sheryew"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"sheryew"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"sheryew"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"sheryew"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"sheryew"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"sheryew"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"sheryew"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"sheryew"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"sheryew"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"sheryew"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"sheryew"},"content":"    private void flip() {","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"sheryew"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"sheryew"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"sheryew"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"sheryew"},"content":"        TextArea dialogTextArea \u003d (TextArea) tmp.get(1);","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"sheryew"},"content":"        dialogTextArea.setPadding(new Insets(0, 0, 0, 10));","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"sheryew"},"content":"        dialogTextArea.setStyle(\"-fx-control-inner-background: lightblue;\");","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"sheryew"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"sheryew"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"sheryew"},"content":"     * Generates a default DialogBox GUI whenever user\u0027s prompts DUKE","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"sheryew"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"sheryew"},"content":"     * @param text String Object. User\u0027s prompt to the DUKE chatbot.","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"sheryew"},"content":"     * @param img Image Object. User\u0027s default picture.","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"sheryew"},"content":"     * @return DialogBox Object.","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"sheryew"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"sheryew"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"sheryew"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"sheryew"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"sheryew"},"content":"     * Generates a default DialogBox GUI whenever DUKE replies the user\u0027s prompt.","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"sheryew"},"content":"     * Compared to the user\u0027s DialogBox, DUKE\u0027s DialogBox is flipped to showcase contrast in response.","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"sheryew"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"sheryew"},"content":"     * @param text String Object. DUKE\u0027s response.","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"sheryew"},"content":"     * @param img Image Object. Duke\u0027s default picture.","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"sheryew"},"content":"     * @return ialogBox Object.","lastModifiedDate":"2023-09-06"},{"lineNumber":78,"author":{"gitId":"sheryew"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"sheryew"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-06"},{"lineNumber":80,"author":{"gitId":"sheryew"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"sheryew"},"content":"        db.flip();","lastModifiedDate":"2023-09-06"},{"lineNumber":82,"author":{"gitId":"sheryew"},"content":"        return db;","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":84,"author":{"gitId":"sheryew"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"sheryew":84}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheryew"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"sheryew"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"sheryew"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"sheryew"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"sheryew"},"content":"public class Launcher {","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"sheryew"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"sheryew"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"sheryew"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"sheryew":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheryew"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"sheryew"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"sheryew"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"sheryew"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"sheryew"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"sheryew"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"sheryew"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"sheryew"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"sheryew"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"sheryew"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"sheryew"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"sheryew"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"sheryew"},"content":"    public Main() throws IOException {","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"sheryew"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"sheryew"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"sheryew"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"sheryew"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"sheryew"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"sheryew"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"sheryew"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"sheryew"},"content":"            stage.setResizable(false);","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"sheryew"},"content":"            stage.setTitle(\"The War Room\");","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"sheryew"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"sheryew"},"content":"            stage.show();","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"sheryew"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"sheryew"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"sheryew"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"sheryew"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"sheryew":34}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheryew"},"content":"import duke.Duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"sheryew"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"sheryew"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"sheryew"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"sheryew"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"sheryew"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"sheryew"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"sheryew"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"sheryew"},"content":"/**","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"sheryew"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"sheryew"},"content":" */","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"sheryew"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"sheryew"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"sheryew"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"sheryew"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"sheryew"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"sheryew"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"sheryew"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"sheryew"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"sheryew"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"sheryew"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"sheryew"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/Images/DaUser.png\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"sheryew"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/Images/war_room.jpeg\"));","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"sheryew"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"sheryew"},"content":"     * Returns two DialogBox GUI objects during the initialisation of DUKE interface.","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"sheryew"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"sheryew"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"sheryew"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-06"},{"lineNumber":32,"author":{"gitId":"sheryew"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"sheryew"},"content":"                DialogBox.getDukeDialog(\"Hello! I\u0027m War Room.\", dukeImage),","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"sheryew"},"content":"                DialogBox.getDukeDialog(\"What can I do for you?\", dukeImage)","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"sheryew"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"sheryew"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"sheryew"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"sheryew"},"content":"     * Initialise duke object with an instance of a DUKE object","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"sheryew"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"sheryew"},"content":"     * @param d Duke object that is passed from Main.java","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"sheryew"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"sheryew"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"sheryew"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"sheryew"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"sheryew"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"sheryew"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"sheryew"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"sheryew"},"content":"    @FXML","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"sheryew"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"sheryew"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"sheryew"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"sheryew"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"sheryew"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"sheryew"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"sheryew"},"content":"        );","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"sheryew"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"sheryew"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"sheryew":62}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheryew"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"sheryew"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"sheryew"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"sheryew"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"sheryew"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"sheryew"},"content":"import java.time.temporal.Temporal;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"sheryew"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"sheryew"},"content":"    protected Temporal by;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"sheryew"},"content":"    protected String deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"sheryew"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"sheryew"},"content":"     * Returns a Deadline object if provided with description (String) and the appropriate string format for deadline.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"sheryew"},"content":"     * If the deadline provided is not of (YYYY-MM-DD or YYYY-MM-DD HHMM) format, Object will not be created.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"sheryew"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"sheryew"},"content":"     * @param description description of task","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"sheryew"},"content":"     * @param deadline due date for tasks. Has to be represented in yyyy-mm-dd or yyyy-mm-dd hhmm format","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"sheryew"},"content":"     * @throws DukeException if format is provided wrongly, Deadline Object cannot be instantiated.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"sheryew"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"sheryew"},"content":"    public Deadline(String description, String deadline) throws DukeException {","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"sheryew"},"content":"        super(description, \"D\");","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"sheryew"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"sheryew"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"sheryew"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"sheryew"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"sheryew"},"content":"            if (deadline.contains(\" \")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"sheryew"},"content":"                this.by \u003d LocalDateTime.parse(deadline, dateTimeFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"sheryew"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"sheryew"},"content":"                this.by \u003d LocalDate.parse(deadline, dateFormatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"sheryew"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"sheryew"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"sheryew"},"content":"            throw new DukeException(\"Please check that the dates/times you provided are correct!\");","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"sheryew"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":35,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"sheryew"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"sheryew"},"content":"        return this.deadline;","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":40,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":41,"author":{"gitId":"sheryew"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"sheryew"},"content":"     * Returns MMM-D-YYYY representation for the deadline assuming the deadline provided is of LocalDate/LocalDateTime Object.","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"sheryew"},"content":"     * If the deadline isn\u0027t of LocalDate/LocalDateTime, it throws an UnsupportedOperationException.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"sheryew"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"sheryew"},"content":"     * @return MMM-D-YYYY representation from LocalDate or LocalDateTime object","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"sheryew"},"content":"     * @throws UnsupportedOperationException If object is not of LocalDate or LocalDateTime","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"sheryew"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"sheryew"},"content":"    public String generateNewDateString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"sheryew"},"content":"        if (this.by instanceof LocalDate) {","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"sheryew"},"content":"            return ((LocalDate) this.by).format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"sheryew"},"content":"        } else if (this.by instanceof LocalDateTime) {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"sheryew"},"content":"            return ((LocalDateTime) this.by).format(DateTimeFormatter.ofPattern(\"MMM d yyyy, ha\"));","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"sheryew"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"sheryew"},"content":"        throw new UnsupportedOperationException(\"Unsupported Temporal type\");","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"sheryew"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":58,"author":{"gitId":"sheryew"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":59,"author":{"gitId":"sheryew"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.generateNewDateString() + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":61,"author":{"gitId":"sheryew"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"sheryew":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheryew"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"sheryew"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"sheryew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"sheryew"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"sheryew"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"sheryew"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"sheryew"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"sheryew"},"content":"    private String filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"sheryew"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"sheryew"},"content":"     * Returns a Duke Object which contains essential information for the functionality of this chatbot.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"sheryew"},"content":"     * TaskList Object is instantiated to keep account of current tasks available for user (ArrayList)","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"sheryew"},"content":"     * Ui Object is instantiated to return appropriate UI prompts back to user","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"sheryew"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"sheryew"},"content":"     * @param filePath File Path for Duke.txt","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"sheryew"},"content":"     * @throws IOException If file is not located or not available","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"sheryew"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"sheryew"},"content":"    public Duke(String filePath) throws IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"sheryew"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"sheryew"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"sheryew"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"sheryew"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"sheryew"},"content":"            tasks \u003d new TaskList(storage.load(storage.filePath));","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"sheryew"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"sheryew"},"content":"            tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"sheryew"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"sheryew"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"sheryew"},"content":"     * Instantiates a Duke Object which contains essential information for the functionality of the chatbot","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"sheryew"},"content":"     * Generates a TaskList object based on the file located at \"src/main/data/duke.txt\"","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"sheryew"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"sheryew"},"content":"     * @throws IOException If file is not located or not available","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"sheryew"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"sheryew"},"content":"    public Duke() throws IOException {","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"sheryew"},"content":"        storage \u003d new Storage(\"src/main/data/duke.txt\");","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"sheryew"},"content":"        this.filePath \u003d storage.filePath;","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"sheryew"},"content":"        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"sheryew"},"content":"            tasks \u003d new TaskList(storage.load(storage.filePath));","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"sheryew"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"sheryew"},"content":"            tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"sheryew"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"sheryew"},"content":"//    public void run() {","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"sheryew"},"content":"//        ui.textGenerator(\"Hello! I\u0027m War Room.\");","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"sheryew"},"content":"//        ui.textGenerator(\"What can I do for you?\");","lastModifiedDate":"2023-09-06"},{"lineNumber":51,"author":{"gitId":"sheryew"},"content":"//        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-06"},{"lineNumber":52,"author":{"gitId":"sheryew"},"content":"//        try {","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"sheryew"},"content":"//            while (true) {","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"sheryew"},"content":"//                String user_input \u003d scanner.nextLine();","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"sheryew"},"content":"//                Parser parser \u003d new Parser(user_input);","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"sheryew"},"content":"//                parser.validateParser(tasks);","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"sheryew"},"content":"//                storage.save(filePath, tasks.userData);","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"sheryew"},"content":"//            }","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"sheryew"},"content":"//        } catch (Exception e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"sheryew"},"content":"//            scanner.close();","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"sheryew"},"content":"//        }","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"sheryew"},"content":"//    }","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"sheryew"},"content":"//    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"sheryew"},"content":"//        new Duke(\"src/main/data/duke.txt\").run();","lastModifiedDate":"2023-09-06"},{"lineNumber":66,"author":{"gitId":"sheryew"},"content":"//    }","lastModifiedDate":"2023-09-06"},{"lineNumber":67,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"sheryew"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"sheryew"},"content":"     * Returns a String object based on user\u0027s command to the DUKE chatbot","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"sheryew"},"content":"     * Instantiates a Parser object that is responsible for the handling of user\u0027s command","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"sheryew"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"sheryew"},"content":"     * @param user_input String Object that is from what the user\u0027s types","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"sheryew"},"content":"     * @return String Object AKA DUKE\u0027s response","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"sheryew"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"sheryew"},"content":"    public String getResponse(String user_input) {","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"sheryew"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"sheryew"},"content":"            Parser parser \u003d new Parser(user_input);","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"sheryew"},"content":"            String answer \u003d parser.validateParser(tasks);","lastModifiedDate":"2023-09-06"},{"lineNumber":79,"author":{"gitId":"sheryew"},"content":"            storage.save(filePath, tasks.userData);","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"sheryew"},"content":"            return answer;","lastModifiedDate":"2023-09-06"},{"lineNumber":81,"author":{"gitId":"sheryew"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"sheryew"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"sheryew"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"sheryew":83,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheryew"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"sheryew"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"sheryew"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"sheryew"},"content":"        super(message);","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"sheryew"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"sheryew":7}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheryew"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"sheryew"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"sheryew"},"content":"    protected String from;","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"sheryew"},"content":"    protected String to;","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"sheryew"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"sheryew"},"content":"     * Returns an Event Task Object","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"sheryew"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"sheryew"},"content":"     * @param description Task Description (String)","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"sheryew"},"content":"     * @param from User specifications on when the Event Task begins (String)","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"sheryew"},"content":"     * @param to User specifications on when the Event Task ends (String)","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"sheryew"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"sheryew"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"sheryew"},"content":"        super(description, \"E\");","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"sheryew"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"sheryew"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"sheryew"},"content":"    public String getFrom() {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"sheryew"},"content":"        return this.from;","lastModifiedDate":"2023-08-29"},{"lineNumber":22,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"sheryew"},"content":"    public String getTo() {","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"sheryew"},"content":"        return this.to;","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"sheryew"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"sheryew"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"sheryew"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"sheryew"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"sheryew":32}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheryew"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"sheryew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"sheryew"},"content":"import java.util.Objects;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"sheryew"},"content":"public class Parser {","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"sheryew"},"content":"    protected String[] words;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"sheryew"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"sheryew"},"content":"    public Parser(String command) {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"sheryew"},"content":"        this.words \u003d command.split(\" \");","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"sheryew"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":14,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"sheryew"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"sheryew"},"content":"     * Analyses user\u0027s commands and performs the appropriate actions.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"sheryew"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"sheryew"},"content":"     * @param tasks TaskList object consisting of user\u0027s existing tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"sheryew"},"content":"     * @return String generated from the UI class. Aids in generation of DialogBox.","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"sheryew"},"content":"     * @throws Exception if the command is Bye","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"sheryew"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"sheryew"},"content":"    public String validateParser(TaskList tasks) throws Exception {","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"sheryew"},"content":"        String action \u003d this.words[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":24,"author":{"gitId":"sheryew"},"content":"        String taskDescription \u003d getTaskDescription(this.words);","lastModifiedDate":"2023-08-29"},{"lineNumber":25,"author":{"gitId":"sheryew"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"sheryew"},"content":"            if (Objects.equals(action, \"todo\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"sheryew"},"content":"                if (isValidToDoCommand(this.words)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"sheryew"},"content":"                    Task newTask \u003d new Todo(taskDescription);","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"sheryew"},"content":"                    tasks.addTask(newTask);","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"sheryew"},"content":"                    return ui.addTaskText(newTask, tasks.userData.size());","lastModifiedDate":"2023-09-06"},{"lineNumber":31,"author":{"gitId":"sheryew"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"sheryew"},"content":"            } else if (Objects.equals(action, \"deadline\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"sheryew"},"content":"                if (isValidDeadlineCommand(this.words)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"sheryew"},"content":"                    Task newTask \u003d new Deadline(taskDescription, searchDeadline(this.words, \"/by\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"sheryew"},"content":"                    tasks.addTask(newTask);","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"sheryew"},"content":"                    return ui.addTaskText(newTask, tasks.userData.size());","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"sheryew"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"sheryew"},"content":"            } else if (Objects.equals(action, \"event\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"sheryew"},"content":"                String[] fromTo \u003d searchFromTo(this.words, \"/from\", \"/to\");","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"sheryew"},"content":"                if (isValidEventCommand(this.words)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"sheryew"},"content":"                    Task newTask \u003d new Event(taskDescription, fromTo[0], fromTo[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"sheryew"},"content":"                    tasks.addTask(newTask);","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"sheryew"},"content":"                    return ui.addTaskText(newTask, tasks.userData.size());","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"sheryew"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"sheryew"},"content":"            } else if (Objects.equals(action, \"bye\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"sheryew"},"content":"                throw new Exception(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"sheryew"},"content":"            } else if (Objects.equals(action, \"list\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"sheryew"},"content":"                assert(this.words.length \u003d\u003d 1);","lastModifiedDate":"2023-09-11"},{"lineNumber":49,"author":{"gitId":"sheryew"},"content":"                StringBuilder taskDetails \u003d new StringBuilder();","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"sheryew"},"content":"                for (int i \u003d 0; i \u003c tasks.userData.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"sheryew"},"content":"                    Task currentTask \u003d tasks.userData.get(i);","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"sheryew"},"content":"                    taskDetails.append(ui.displayTaskInList(i, currentTask)).append(\"\\n\");","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"sheryew"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"sheryew"},"content":"                return taskDetails.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"sheryew"},"content":"            } else if (Objects.equals(action, \"mark\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"sheryew"},"content":"                if (validOthers(this.words, tasks)) {","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"sheryew"},"content":"                    int index \u003d Integer.parseInt(this.words[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"sheryew"},"content":"                    Task currentTask \u003d tasks.userData.get(index - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"sheryew"},"content":"                    currentTask.isDone \u003d true;","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"sheryew"},"content":"                    return ui.markTaskText(currentTask);","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"sheryew"},"content":"                }","lastModifiedDate":"2023-09-06"},{"lineNumber":62,"author":{"gitId":"sheryew"},"content":"            } else if (Objects.equals(action, \"unmark\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"sheryew"},"content":"                if (validOthers(this.words, tasks)) {","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"sheryew"},"content":"                    int index \u003d Integer.parseInt(this.words[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"sheryew"},"content":"                    Task currentTask \u003d tasks.userData.get(index - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"sheryew"},"content":"                    currentTask.isDone \u003d false;","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"sheryew"},"content":"                    return ui.unmarkTaskText(currentTask);","lastModifiedDate":"2023-09-06"},{"lineNumber":68,"author":{"gitId":"sheryew"},"content":"                }","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"sheryew"},"content":"            } else if (Objects.equals(action, \"delete\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"sheryew"},"content":"                if (validOthers(this.words, tasks)) {","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"sheryew"},"content":"                    int index \u003d Integer.parseInt(this.words[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"sheryew"},"content":"                    Task deletedTask \u003d tasks.userData.get(index - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"sheryew"},"content":"                    tasks.deleteTask(index - 1);","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"sheryew"},"content":"                    return ui.deleteTaskText(deletedTask, tasks.userData.size());","lastModifiedDate":"2023-09-06"},{"lineNumber":75,"author":{"gitId":"sheryew"},"content":"                }","lastModifiedDate":"2023-09-06"},{"lineNumber":76,"author":{"gitId":"sheryew"},"content":"            } else if (Objects.equals(action, \"find\"))  {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"sheryew"},"content":"                String keyword \u003d taskDescription;","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"sheryew"},"content":"                assert(!Objects.equals(keyword, \"\"));","lastModifiedDate":"2023-09-11"},{"lineNumber":79,"author":{"gitId":"sheryew"},"content":"                ArrayList\u003cTask\u003e filteredTasks \u003d tasks.filter(keyword);","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"sheryew"},"content":"                for (int i \u003d 0; i \u003c filteredTasks.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"sheryew"},"content":"                    Task currentTask \u003d filteredTasks.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"sheryew"},"content":"                    return ui.displayTaskInList(i, currentTask);","lastModifiedDate":"2023-09-06"},{"lineNumber":83,"author":{"gitId":"sheryew"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"sheryew"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":85,"author":{"gitId":"sheryew"},"content":"                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-29"},{"lineNumber":86,"author":{"gitId":"sheryew"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":87,"author":{"gitId":"sheryew"},"content":"        } catch (DukeException DE) {","lastModifiedDate":"2023-08-29"},{"lineNumber":88,"author":{"gitId":"sheryew"},"content":"            return DE.getMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":89,"author":{"gitId":"sheryew"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":90,"author":{"gitId":"sheryew"},"content":"        return \"Something went wrong!\";","lastModifiedDate":"2023-09-06"},{"lineNumber":91,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":92,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"sheryew"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"sheryew"},"content":"     * Returns task description for various Task types (Todo/Deadline/Event)","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"sheryew"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"sheryew"},"content":"     * @param arrUserCommand Array of the particular user\u0027s command split by \" \"","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"sheryew"},"content":"     * @return Task description for a particular Task (String)","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"sheryew"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"sheryew"},"content":"    public String getTaskDescription(String[] arrUserCommand) {","lastModifiedDate":"2023-08-29"},{"lineNumber":100,"author":{"gitId":"sheryew"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-08-29"},{"lineNumber":101,"author":{"gitId":"sheryew"},"content":"        for (int i \u003d 1; i \u003c arrUserCommand.length; i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":102,"author":{"gitId":"sheryew"},"content":"            if (\"/by\".equals(arrUserCommand[i]) || \"/from\".equals(arrUserCommand[i])) {","lastModifiedDate":"2023-08-29"},{"lineNumber":103,"author":{"gitId":"sheryew"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":104,"author":{"gitId":"sheryew"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":105,"author":{"gitId":"sheryew"},"content":"            result.append(\" \").append(arrUserCommand[i]);","lastModifiedDate":"2023-08-29"},{"lineNumber":106,"author":{"gitId":"sheryew"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":107,"author":{"gitId":"sheryew"},"content":"        return result.toString().trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":108,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":109,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":110,"author":{"gitId":"sheryew"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"sheryew"},"content":"     * Returns True if the user\u0027s command for a Todo event is valid. I.e. has to contain \u003e\u003d 1 words","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"sheryew"},"content":"     * Throws DukeException if the user\u0027s command contains only 1 word (No Task Description)","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"sheryew"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"sheryew"},"content":"     * @param userCommand Array of the particular user\u0027s command split by \" \"","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"sheryew"},"content":"     * @return True if appropriate Todo command","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"sheryew"},"content":"     * @throws DukeException If the command is only one word. I.e. no task description","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"sheryew"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"sheryew"},"content":"    public boolean isValidToDoCommand(String[] userCommand) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"sheryew"},"content":"        if (userCommand.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":120,"author":{"gitId":"sheryew"},"content":"            String error \u003d String.format(\"OOPS!!! The description of a %s cannot be empty.\", userCommand[0]);","lastModifiedDate":"2023-08-29"},{"lineNumber":121,"author":{"gitId":"sheryew"},"content":"            throw new DukeException(error);","lastModifiedDate":"2023-08-29"},{"lineNumber":122,"author":{"gitId":"sheryew"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":123,"author":{"gitId":"sheryew"},"content":"            return true;","lastModifiedDate":"2023-08-29"},{"lineNumber":124,"author":{"gitId":"sheryew"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":125,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":126,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":127,"author":{"gitId":"sheryew"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"sheryew"},"content":"     * Returns string from delimiter to end of array. Array is from user commands.","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"sheryew"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"sheryew"},"content":"     * @param userCommand Array of the particular user\u0027s command split by \" \"","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"sheryew"},"content":"     * @param delimiter Use-case would be \"/by\" for a deadline task","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"sheryew"},"content":"     * @return In Deadline task context, it should return the due date that the user has input. (String)","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"sheryew"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"sheryew"},"content":"    public String searchDeadline(String[] userCommand, String delimiter) {","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"sheryew"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2023-08-29"},{"lineNumber":136,"author":{"gitId":"sheryew"},"content":"        int index \u003d -1;","lastModifiedDate":"2023-08-29"},{"lineNumber":137,"author":{"gitId":"sheryew"},"content":"        for (int i \u003d 0; i \u003c userCommand.length; i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":138,"author":{"gitId":"sheryew"},"content":"            if (delimiter.equals(userCommand[i])) {","lastModifiedDate":"2023-08-29"},{"lineNumber":139,"author":{"gitId":"sheryew"},"content":"                index \u003d i;","lastModifiedDate":"2023-08-29"},{"lineNumber":140,"author":{"gitId":"sheryew"},"content":"                break;","lastModifiedDate":"2023-08-29"},{"lineNumber":141,"author":{"gitId":"sheryew"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":142,"author":{"gitId":"sheryew"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":143,"author":{"gitId":"sheryew"},"content":"        if (index !\u003d -1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":144,"author":{"gitId":"sheryew"},"content":"            for (int i \u003d index + 1; i \u003c userCommand.length; i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":145,"author":{"gitId":"sheryew"},"content":"                result.append(userCommand[i]).append(\" \");","lastModifiedDate":"2023-08-29"},{"lineNumber":146,"author":{"gitId":"sheryew"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":147,"author":{"gitId":"sheryew"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":148,"author":{"gitId":"sheryew"},"content":"        return result.toString().trim();","lastModifiedDate":"2023-08-29"},{"lineNumber":149,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":150,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":151,"author":{"gitId":"sheryew"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"sheryew"},"content":"     * Returns an Array of length 2 where the first index is the \"/from\" specification and the second index is the \"/to\" specification for Event Task","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"sheryew"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"sheryew"},"content":"     * @param userCommand Array of the particular user\u0027s command split by \" \"","lastModifiedDate":"2023-08-31"},{"lineNumber":155,"author":{"gitId":"sheryew"},"content":"     * @param delimiter Use-case would be \"/from\" for an \"Event\" task","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"sheryew"},"content":"     * @param delimiter_2 Use-case would be \"/to\" for an \"Event\" task","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"sheryew"},"content":"     * @return In Event task context, it should return an array where array[0] is \"/from\" specs and array[1] is \"/to\" specs.","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"sheryew"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"sheryew"},"content":"    public String[] searchFromTo(String[] userCommand, String delimiter, String delimiter_2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"sheryew"},"content":"        StringBuilder firstResult \u003d new StringBuilder();","lastModifiedDate":"2023-08-29"},{"lineNumber":161,"author":{"gitId":"sheryew"},"content":"        StringBuilder secondResult \u003d new StringBuilder();","lastModifiedDate":"2023-08-29"},{"lineNumber":162,"author":{"gitId":"sheryew"},"content":"        int index \u003d -1;","lastModifiedDate":"2023-08-29"},{"lineNumber":163,"author":{"gitId":"sheryew"},"content":"        int index_2 \u003d -1;","lastModifiedDate":"2023-08-29"},{"lineNumber":164,"author":{"gitId":"sheryew"},"content":"        for (int i \u003d 0; i \u003c userCommand.length; i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":165,"author":{"gitId":"sheryew"},"content":"            if (delimiter.equals(userCommand[i])) {","lastModifiedDate":"2023-08-29"},{"lineNumber":166,"author":{"gitId":"sheryew"},"content":"                index \u003d i;","lastModifiedDate":"2023-08-29"},{"lineNumber":167,"author":{"gitId":"sheryew"},"content":"            } else if (delimiter_2.equals(userCommand[i])) {","lastModifiedDate":"2023-08-29"},{"lineNumber":168,"author":{"gitId":"sheryew"},"content":"                index_2 \u003d i;","lastModifiedDate":"2023-08-29"},{"lineNumber":169,"author":{"gitId":"sheryew"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":170,"author":{"gitId":"sheryew"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":171,"author":{"gitId":"sheryew"},"content":"        if (index !\u003d -1 \u0026\u0026 index_2 !\u003d -1 \u0026\u0026 index \u003c index_2) {","lastModifiedDate":"2023-08-29"},{"lineNumber":172,"author":{"gitId":"sheryew"},"content":"            for (int i \u003d index + 1; i \u003c index_2; i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":173,"author":{"gitId":"sheryew"},"content":"                firstResult.append(userCommand[i]).append(\" \");","lastModifiedDate":"2023-08-29"},{"lineNumber":174,"author":{"gitId":"sheryew"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":175,"author":{"gitId":"sheryew"},"content":"            for (int i \u003d index_2 + 1; i \u003c userCommand.length; i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":176,"author":{"gitId":"sheryew"},"content":"                secondResult.append(userCommand[i]).append(\" \");","lastModifiedDate":"2023-08-29"},{"lineNumber":177,"author":{"gitId":"sheryew"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":178,"author":{"gitId":"sheryew"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":179,"author":{"gitId":"sheryew"},"content":"        return new String[]{ firstResult.toString().trim(), secondResult.toString().trim() };","lastModifiedDate":"2023-08-29"},{"lineNumber":180,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":181,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":182,"author":{"gitId":"sheryew"},"content":"    public boolean isValidDeadlineCommand(String[] userCommand) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":183,"author":{"gitId":"sheryew"},"content":"        if (userCommand.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":184,"author":{"gitId":"sheryew"},"content":"            throw new DukeException(String.format(\"OOPS!!! The description of a %s cannot be empty.\", userCommand[0]));","lastModifiedDate":"2023-08-29"},{"lineNumber":185,"author":{"gitId":"sheryew"},"content":"        } else if (userCommand.length \u003c\u003d 2){","lastModifiedDate":"2023-08-29"},{"lineNumber":186,"author":{"gitId":"sheryew"},"content":"            throw new DukeException(\"For deadlines, please give a gauge of when it is due\");","lastModifiedDate":"2023-08-29"},{"lineNumber":187,"author":{"gitId":"sheryew"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":188,"author":{"gitId":"sheryew"},"content":"            String result \u003d searchDeadline(userCommand, \"/by\");","lastModifiedDate":"2023-08-31"},{"lineNumber":189,"author":{"gitId":"sheryew"},"content":"            if (Objects.equals(result, \"\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":190,"author":{"gitId":"sheryew"},"content":"                throw new DukeException(\"For deadlines, please give a gauge of when it is due\");","lastModifiedDate":"2023-08-29"},{"lineNumber":191,"author":{"gitId":"sheryew"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":192,"author":{"gitId":"sheryew"},"content":"                String datePattern \u003d \"\\\\d{4}-\\\\d{2}-\\\\d{2}\";","lastModifiedDate":"2023-08-29"},{"lineNumber":193,"author":{"gitId":"sheryew"},"content":"                String dateTimePattern \u003d \"\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{4}\";","lastModifiedDate":"2023-08-29"},{"lineNumber":194,"author":{"gitId":"sheryew"},"content":"                if (!result.matches(datePattern) \u0026\u0026 !result.matches(dateTimePattern)) {","lastModifiedDate":"2023-08-29"},{"lineNumber":195,"author":{"gitId":"sheryew"},"content":"                    throw new DukeException(\"Please specify the deadline in the format \u0027yyyy-MM-dd\u0027 or \u0027yyyy-MM-dd HHmm\u0027.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":196,"author":{"gitId":"sheryew"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":197,"author":{"gitId":"sheryew"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":198,"author":{"gitId":"sheryew"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":199,"author":{"gitId":"sheryew"},"content":"        return true;","lastModifiedDate":"2023-08-29"},{"lineNumber":200,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":201,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":202,"author":{"gitId":"sheryew"},"content":"    public boolean isValidEventCommand(String[] userCommand) throws DukeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":203,"author":{"gitId":"sheryew"},"content":"        if (userCommand.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-29"},{"lineNumber":204,"author":{"gitId":"sheryew"},"content":"            throw new DukeException(String.format(\"OOPS!!! The description of a %s cannot be empty.\", userCommand[0]));","lastModifiedDate":"2023-08-29"},{"lineNumber":205,"author":{"gitId":"sheryew"},"content":"        } else if (userCommand.length \u003c\u003d 2){","lastModifiedDate":"2023-08-29"},{"lineNumber":206,"author":{"gitId":"sheryew"},"content":"            throw new DukeException(\"For Events, please provide a valid FROM/TO timeframe.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":207,"author":{"gitId":"sheryew"},"content":"        } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":208,"author":{"gitId":"sheryew"},"content":"            String[] result \u003d searchFromTo(userCommand, \"/from\", \"/to\");","lastModifiedDate":"2023-08-31"},{"lineNumber":209,"author":{"gitId":"sheryew"},"content":"            if (result[0].equals(\"\") || result[1].equals(\"\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":210,"author":{"gitId":"sheryew"},"content":"                throw new DukeException(\"For Events, please provide a valid FROM/TO timeframe.\");","lastModifiedDate":"2023-08-29"},{"lineNumber":211,"author":{"gitId":"sheryew"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":212,"author":{"gitId":"sheryew"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":213,"author":{"gitId":"sheryew"},"content":"        return true;","lastModifiedDate":"2023-08-29"},{"lineNumber":214,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":215,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":216,"author":{"gitId":"sheryew"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":217,"author":{"gitId":"sheryew"},"content":"     * Returns a boolean on whether the user input for \"Mark\"/\"Unmark\"/\"Delete\" is appropriate","lastModifiedDate":"2023-09-06"},{"lineNumber":218,"author":{"gitId":"sheryew"},"content":"     * I.e. a digit has to be provided and the digit has to be within the bounds of the length of list","lastModifiedDate":"2023-09-06"},{"lineNumber":219,"author":{"gitId":"sheryew"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":220,"author":{"gitId":"sheryew"},"content":"     * @param userCommand Array of the particular user\u0027s command split by \" \"","lastModifiedDate":"2023-09-06"},{"lineNumber":221,"author":{"gitId":"sheryew"},"content":"     * @param tasks TaskList object consisting of user\u0027s existing tasks","lastModifiedDate":"2023-09-06"},{"lineNumber":222,"author":{"gitId":"sheryew"},"content":"     * @return Boolean. True if provided with appropriate command that follows the guidelines else False.","lastModifiedDate":"2023-09-06"},{"lineNumber":223,"author":{"gitId":"sheryew"},"content":"     * @throws DukeException","lastModifiedDate":"2023-09-06"},{"lineNumber":224,"author":{"gitId":"sheryew"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":225,"author":{"gitId":"sheryew"},"content":"    public boolean validOthers(String[] userCommand, TaskList tasks) throws DukeException {","lastModifiedDate":"2023-09-06"},{"lineNumber":226,"author":{"gitId":"sheryew"},"content":"        if (userCommand.length \u003c\u003d 1) {","lastModifiedDate":"2023-09-06"},{"lineNumber":227,"author":{"gitId":"sheryew"},"content":"            throw new DukeException(String.format(\"OOPS!!! Please provide an integer for a %s event.\", userCommand[0]));","lastModifiedDate":"2023-09-06"},{"lineNumber":228,"author":{"gitId":"sheryew"},"content":"        } else if (userCommand.length \u003e 2) {","lastModifiedDate":"2023-09-06"},{"lineNumber":229,"author":{"gitId":"sheryew"},"content":"            throw new DukeException(\"OOPS!!! Please only provide one digit!\");","lastModifiedDate":"2023-09-06"},{"lineNumber":230,"author":{"gitId":"sheryew"},"content":"        } else {","lastModifiedDate":"2023-09-06"},{"lineNumber":231,"author":{"gitId":"sheryew"},"content":"            try {","lastModifiedDate":"2023-09-11"},{"lineNumber":232,"author":{"gitId":"sheryew"},"content":"                int digit \u003d Integer.parseInt(userCommand[1]);","lastModifiedDate":"2023-09-06"},{"lineNumber":233,"author":{"gitId":"sheryew"},"content":"                if (digit \u003c\u003d 0 || digit \u003e tasks.userData.size()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":234,"author":{"gitId":"sheryew"},"content":"                    throw new DukeException(\"The digit you provided is out of bounds!\");","lastModifiedDate":"2023-09-06"},{"lineNumber":235,"author":{"gitId":"sheryew"},"content":"                }","lastModifiedDate":"2023-09-06"},{"lineNumber":236,"author":{"gitId":"sheryew"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-11"},{"lineNumber":237,"author":{"gitId":"sheryew"},"content":"                throw new DukeException(\"Please enter a valid number.\");","lastModifiedDate":"2023-09-11"},{"lineNumber":238,"author":{"gitId":"sheryew"},"content":"            }","lastModifiedDate":"2023-09-11"},{"lineNumber":239,"author":{"gitId":"sheryew"},"content":"        }","lastModifiedDate":"2023-09-06"},{"lineNumber":240,"author":{"gitId":"sheryew"},"content":"        return true;","lastModifiedDate":"2023-09-06"},{"lineNumber":241,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":242,"author":{"gitId":"sheryew"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"sheryew":242}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheryew"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"sheryew"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"sheryew"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"sheryew"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"sheryew"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"sheryew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"sheryew"},"content":"import java.util.Objects;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"sheryew"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"sheryew"},"content":"public class Storage {","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"sheryew"},"content":"    protected String filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"sheryew"},"content":"    protected ArrayList\u003cTask\u003e fileData;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"sheryew"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"sheryew"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"sheryew"},"content":"        this.fileData \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"sheryew"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"sheryew"},"content":"     * Returns an ArrayList\u003cTask\u003e based on data represented in the Duke.txt file.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"sheryew"},"content":"     * If the file does not exist, it creates a new directory and new file.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"sheryew"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"sheryew"},"content":"     * @param filePath File Path for Duke.txt","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"sheryew"},"content":"     * @return ArrayList\u003cTask\u003e based on data parsed from the Duke.txt","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"sheryew"},"content":"     * @throws DukeException If Deadline object is not instantiated properly","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"sheryew"},"content":"     * @throws IOException If file is not located or not available","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"sheryew"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"sheryew"},"content":"    public ArrayList\u003cTask\u003e load(String filePath) throws DukeException, IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"sheryew"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"sheryew"},"content":"        if (!f.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"sheryew"},"content":"            f.getParentFile().mkdirs();","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"sheryew"},"content":"            f.createNewFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"sheryew"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"sheryew"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"sheryew"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"sheryew"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"sheryew"},"content":"                String[] parts \u003d s.nextLine().split(\"\\\\|\");","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"sheryew"},"content":"                String event \u003d parts[0];","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"sheryew"},"content":"                int mark \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"sheryew"},"content":"                String description \u003d parts[2];","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"sheryew"},"content":"                if (Objects.equals(event, \"T\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"sheryew"},"content":"                    Task newTask \u003d new Todo(description);","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"sheryew"},"content":"                    newTask.isDone \u003d mark \u003d\u003d 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"sheryew"},"content":"                    fileData.add(newTask);","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"sheryew"},"content":"                } else if (Objects.equals(event, \"D\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"sheryew"},"content":"                    Task newTask \u003d new Deadline(description, parts[3]);","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"sheryew"},"content":"                    newTask.isDone \u003d mark \u003d\u003d 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"sheryew"},"content":"                    fileData.add(newTask);","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"sheryew"},"content":"                } else if (Objects.equals(event, \"E\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"sheryew"},"content":"                    Task newTask \u003d new Event(description, parts[3], parts[4]);","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"sheryew"},"content":"                    newTask.isDone \u003d mark \u003d\u003d 1;","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"sheryew"},"content":"                    fileData.add(newTask);","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"sheryew"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"sheryew"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"sheryew"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":57,"author":{"gitId":"sheryew"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"sheryew"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"sheryew"},"content":"        return fileData;","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"sheryew"},"content":"    public void save(String filePath, ArrayList\u003cTask\u003e newTasks) throws IOException {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"sheryew"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"sheryew"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"sheryew"},"content":"            for (int i \u003d 0; i \u003c newTasks.size(); i++) {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"sheryew"},"content":"                Task newTask \u003d newTasks.get(i);","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"sheryew"},"content":"                int isDoneValue \u003d newTask.isDone ? 1 : 0;","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"sheryew"},"content":"                if (Objects.equals(newTask.tag, \"T\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"sheryew"},"content":"                    fw.write(String.format(\"%s|%d|%s%n\", newTask.getTag(), isDoneValue, newTask.getDescription()));","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"sheryew"},"content":"                } else if (Objects.equals(newTask.tag, \"D\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"sheryew"},"content":"                    Deadline deadlineTask \u003d (Deadline) newTask;","lastModifiedDate":"2023-08-29"},{"lineNumber":72,"author":{"gitId":"sheryew"},"content":"                    fw.write(String.format(\"%s|%d|%s|%s%n\", deadlineTask.getTag(), isDoneValue, deadlineTask.getDescription(), deadlineTask.getDeadline()));","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"sheryew"},"content":"                } else if (Objects.equals(newTask.tag, \"E\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"sheryew"},"content":"                    Event eventTask \u003d (Event) newTask;","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"sheryew"},"content":"                    fw.write(String.format(\"%s|%d|%s|%s|%s%n\", eventTask.getTag(), isDoneValue, eventTask.getDescription(), eventTask.getFrom(), eventTask.getTo()));","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"sheryew"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"sheryew"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"sheryew"},"content":"            fw.close();","lastModifiedDate":"2023-08-29"},{"lineNumber":79,"author":{"gitId":"sheryew"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":80,"author":{"gitId":"sheryew"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-08-29"},{"lineNumber":81,"author":{"gitId":"sheryew"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"sheryew"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"sheryew":83}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheryew"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"sheryew"},"content":"public class Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"sheryew"},"content":"    protected String description;","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"sheryew"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"sheryew"},"content":"    protected String tag;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"sheryew"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"sheryew"},"content":"     * Returns a Task object if provided with task description and associated tag (\"T\"/\"D\"/\"E\")","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"sheryew"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"sheryew"},"content":"     * @param description Task description (String)","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"sheryew"},"content":"     * @param tag \"E\" for Event, \"T\" for Todo, \"D\" for Deadline","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"sheryew"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"sheryew"},"content":"    public Task(String description, String tag) {","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"sheryew"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-29"},{"lineNumber":16,"author":{"gitId":"sheryew"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-29"},{"lineNumber":17,"author":{"gitId":"sheryew"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":19,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"sheryew"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"sheryew"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"sheryew"},"content":"    public String getTag() {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"sheryew"},"content":"        return this.tag;","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":28,"author":{"gitId":"sheryew"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-22"},{"lineNumber":29,"author":{"gitId":"sheryew"},"content":"        return this.description;","lastModifiedDate":"2023-08-22"},{"lineNumber":30,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":31,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"sheryew"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":33,"author":{"gitId":"sheryew"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2023-08-22"},{"lineNumber":34,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":35,"author":{"gitId":"sheryew"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"sheryew":35}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheryew"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"sheryew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"sheryew"},"content":"public class TaskList {","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"sheryew"},"content":"    public ArrayList\u003cTask\u003e userData;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"sheryew"},"content":"    public TaskList(ArrayList\u003cTask\u003e userData) {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"sheryew"},"content":"        this.userData \u003d userData;","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"sheryew"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"sheryew"},"content":"     * Appends newly created Task to the current ArrayList\u003cTask\u003e of the user","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"sheryew"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"sheryew"},"content":"     * @param newTask Task Object. Could be Todo, Deadline or Event","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"sheryew"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"sheryew"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2023-08-29"},{"lineNumber":18,"author":{"gitId":"sheryew"},"content":"        this.userData.add(newTask);","lastModifiedDate":"2023-08-29"},{"lineNumber":19,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"sheryew"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"sheryew"},"content":"     * Deletes a particular Task from the current ArrayList\u003cTask\u003e based on given index","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"sheryew"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"sheryew"},"content":"     * @param referenceIndex position of the Task within the ArrayList","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"sheryew"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"sheryew"},"content":"    public void deleteTask(int referenceIndex) {","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"sheryew"},"content":"        this.userData.remove(referenceIndex);","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"sheryew"},"content":"    public ArrayList\u003cTask\u003e filter(String keyword) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"sheryew"},"content":"        ArrayList\u003cTask\u003e filteredTask \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"sheryew"},"content":"        for (int i \u003d 0; i \u003c userData.size(); i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"sheryew"},"content":"            Task task \u003d userData.get(i);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"sheryew"},"content":"            String taskDescription \u003d task.getDescription();","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"sheryew"},"content":"            if (taskDescription.contains(keyword)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"sheryew"},"content":"                filteredTask.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"sheryew"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"sheryew"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"sheryew"},"content":"        return filteredTask;","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"sheryew"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"sheryew":41}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheryew"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"sheryew"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"sheryew"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"sheryew"},"content":"     * Returns an Todo Task Object","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"sheryew"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"sheryew"},"content":"     * @param description Task Description (String)","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"sheryew"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"sheryew"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-22"},{"lineNumber":10,"author":{"gitId":"sheryew"},"content":"        super(description, \"T\");","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"sheryew"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"sheryew"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":15,"author":{"gitId":"sheryew"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"sheryew"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"sheryew":17}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheryew"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"sheryew"},"content":"public class Ui {","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"sheryew"},"content":"    public Ui() {};","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"sheryew"},"content":"    public String textGenerator(String answer) {","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"sheryew"},"content":"        return answer;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"sheryew"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"sheryew"},"content":"     * Returns a default response when user attempts to add a new Task.","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"sheryew"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"sheryew"},"content":"     * @param newT Task Object.","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"sheryew"},"content":"     * @param len Integer Object representing how many existing tasks the user has (including the newly added task)","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"sheryew"},"content":"     * @return String Object.","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"sheryew"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"sheryew"},"content":"    public String addTaskText(Task newT, int len) {","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"sheryew"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + newT.toString() + \"\\n\"  + \"Now you have \" + len + \" tasks in the list.\";","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"sheryew"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"sheryew"},"content":"     * Returns a default response when user wants to see all the existing tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"sheryew"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"sheryew"},"content":"     * @param digit Integer Object. Index of the task in the ArrayList","lastModifiedDate":"2023-09-06"},{"lineNumber":25,"author":{"gitId":"sheryew"},"content":"     * @param newT Task Object.","lastModifiedDate":"2023-09-06"},{"lineNumber":26,"author":{"gitId":"sheryew"},"content":"     * @return String Object.","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"sheryew"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"sheryew"},"content":"    public String displayTaskInList(int digit, Task newT) {","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"sheryew"},"content":"        return digit + 1 + \".\" + newT.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"sheryew"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":33,"author":{"gitId":"sheryew"},"content":"     * Returns a default response when user wants to mark a particular task.","lastModifiedDate":"2023-09-06"},{"lineNumber":34,"author":{"gitId":"sheryew"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"sheryew"},"content":"     * @param newT Task Object. A task that user wants to mark.","lastModifiedDate":"2023-09-06"},{"lineNumber":36,"author":{"gitId":"sheryew"},"content":"     * @return String Object.","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"sheryew"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"sheryew"},"content":"    public String markTaskText(Task newT) {","lastModifiedDate":"2023-09-06"},{"lineNumber":39,"author":{"gitId":"sheryew"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + newT.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":41,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"sheryew"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"sheryew"},"content":"     * Returns a default response when user wants to unmark a particular task.","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"sheryew"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"sheryew"},"content":"     * @param newT Task Object. A task that user wants to unmark.","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"sheryew"},"content":"     * @return String Object.","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"sheryew"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"sheryew"},"content":"    public String unmarkTaskText(Task newT) {","lastModifiedDate":"2023-09-06"},{"lineNumber":49,"author":{"gitId":"sheryew"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + newT.toString();","lastModifiedDate":"2023-09-06"},{"lineNumber":50,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"sheryew"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":53,"author":{"gitId":"sheryew"},"content":"     * Returns a default response when user wants to delete a particular task.","lastModifiedDate":"2023-09-06"},{"lineNumber":54,"author":{"gitId":"sheryew"},"content":"     *","lastModifiedDate":"2023-09-06"},{"lineNumber":55,"author":{"gitId":"sheryew"},"content":"     * @param newT Task Object. A task that user wants to unmark.","lastModifiedDate":"2023-09-06"},{"lineNumber":56,"author":{"gitId":"sheryew"},"content":"     * @param digit Integer Object. Represents the number of user\u0027s existing tasks.","lastModifiedDate":"2023-09-06"},{"lineNumber":57,"author":{"gitId":"sheryew"},"content":"     * @return String Object.","lastModifiedDate":"2023-09-06"},{"lineNumber":58,"author":{"gitId":"sheryew"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":59,"author":{"gitId":"sheryew"},"content":"    public String deleteTaskText(Task newT, int digit) {","lastModifiedDate":"2023-09-06"},{"lineNumber":60,"author":{"gitId":"sheryew"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + newT.toString() + \"\\n\" + \"Now you have \" + digit + \" tasks in the list.\";","lastModifiedDate":"2023-09-06"},{"lineNumber":61,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"sheryew"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"sheryew":62}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"sheryew"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"sheryew"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"sheryew"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"sheryew"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"sheryew"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"sheryew"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"sheryew"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"sheryew"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"sheryew"},"content":"        \u003cTextArea fx:id\u003d\"dialog\" text\u003d\"Your Text Here\" wrapText\u003d\"true\" editable\u003d\"false\" focusTraversable\u003d\"false\" style\u003d\"-fx-text-fill: black; -fx-control-inner-background: lightgreen;\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"sheryew"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"sheryew"},"content":"                \u003cInsets right\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"sheryew"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"sheryew"},"content":"            \u003cfont\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"sheryew"},"content":"                \u003cFont name\u003d\"Georgia\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"sheryew"},"content":"            \u003c/font\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"sheryew"},"content":"        \u003c/TextArea\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"sheryew"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"sheryew"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"sheryew"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":22,"author":{"gitId":"sheryew"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":23,"author":{"gitId":"sheryew"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":24,"author":{"gitId":"sheryew"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"sheryew":24}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"sheryew"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"sheryew"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"sheryew"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"sheryew"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"sheryew"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"sheryew"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"sheryew"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"sheryew"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"sheryew"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"sheryew"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"sheryew"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"sheryew"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"sheryew"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"sheryew"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"sheryew"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":18,"author":{"gitId":"sheryew"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"sheryew"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"sheryew":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheryew"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"sheryew"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"sheryew"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"sheryew"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"sheryew"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"sheryew"},"content":"    public void parserTDTest() {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"sheryew"},"content":"        assertEquals(\"Watch Youtube\", new Parser(\"\").getTaskDescription(new String[]{\"todo\", \"Watch\", \"Youtube\"}));","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"sheryew"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"sheryew"},"content":"    public void parserSearcherTest() {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"sheryew"},"content":"        assertEquals(\"\", new Parser(\"\").searcher(new String[]{\"hello\", \"world\", \"-\"}, \"/to\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"sheryew"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"sheryew":17}},{"path":"src/test/java/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sheryew"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"sheryew"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"sheryew"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"sheryew"},"content":"public class TaskTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"sheryew"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"sheryew"},"content":"    public void taskStatus() {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"sheryew"},"content":"        assertEquals(\" \", new Todo(\"eat\").getStatusIcon());","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"sheryew"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"sheryew"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"sheryew"},"content":"    public void taskRepresentation() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"sheryew"},"content":"        assertEquals( \"[D][ ] return books (by: Aug 8 2023)\", new Deadline(\"return books\", \"2023-08-08\").toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"sheryew"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"sheryew"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"sheryew":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sheryew"},"content":"todo borrow book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"sheryew"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"sheryew"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"sheryew"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"sheryew"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"sheryew":5}},{"path":"text-ui-test/output.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sheryew"},"content":"todo hello","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"sheryew"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"sheryew":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"sheryew"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"sheryew":1,"-":20}}]
