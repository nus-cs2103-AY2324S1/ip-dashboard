[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"CelestineTan03"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"CelestineTan03"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"CelestineTan03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"CelestineTan03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"CelestineTan03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"CelestineTan03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"CelestineTan03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"CelestineTan03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"CelestineTan03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"CelestineTan03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"CelestineTan03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"CelestineTan03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"CelestineTan03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"CelestineTan03"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"CelestineTan03"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"CelestineTan03"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"CelestineTan03"},"content":"checkstyle {","lastModifiedDate":"2023-09-04"},{"lineNumber":62,"author":{"gitId":"CelestineTan03"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-04"},{"lineNumber":63,"author":{"gitId":"CelestineTan03"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"CelestineTan03":22,"-":41}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CelestineTan03"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"CelestineTan03"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"CelestineTan03"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"CelestineTan03"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"CelestineTan03"},"content":" * Represents a task of type Deadline","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"CelestineTan03"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"CelestineTan03"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"CelestineTan03"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"CelestineTan03"},"content":"    private final DateTimeFormatter formatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"CelestineTan03"},"content":"     * A constructor for a task of type Deadline","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"CelestineTan03"},"content":"     * @param description the task details","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"CelestineTan03"},"content":"     * @param by the deadline for the task","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"CelestineTan03"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-08-29"},{"lineNumber":21,"author":{"gitId":"CelestineTan03"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"CelestineTan03"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"CelestineTan03"},"content":"        this.formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\");","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"CelestineTan03"},"content":"     * Return the string representation of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"CelestineTan03"},"content":"     * @return the string representation","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"CelestineTan03"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"CelestineTan03"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"CelestineTan03"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(formatter) + \")\";","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"CelestineTan03"},"content":"     * Return the string representation of the task in file format.","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"CelestineTan03"},"content":"     * @return the string representation in file format","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"CelestineTan03"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"CelestineTan03"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-08-28"},{"lineNumber":43,"author":{"gitId":"CelestineTan03"},"content":"        return \"D | \" + this.isDone + \" | \" + this.description + \" | \" + this.by.format(formatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"CelestineTan03"},"content":"     * Return the task type.","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"CelestineTan03"},"content":"     * @return the task type","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"CelestineTan03"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"CelestineTan03"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"CelestineTan03"},"content":"        return \"deadline\";","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"CelestineTan03"},"content":"}","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"CelestineTan03":56}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CelestineTan03"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"CelestineTan03"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"CelestineTan03"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"CelestineTan03"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"CelestineTan03"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"CelestineTan03"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"CelestineTan03"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"CelestineTan03"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"CelestineTan03"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"CelestineTan03"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"CelestineTan03"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"CelestineTan03"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"CelestineTan03"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"CelestineTan03"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"CelestineTan03"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"CelestineTan03"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"CelestineTan03"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"CelestineTan03"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"CelestineTan03"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"CelestineTan03"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"CelestineTan03"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"CelestineTan03"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"CelestineTan03"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"CelestineTan03"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"CelestineTan03"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"CelestineTan03"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"CelestineTan03"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"CelestineTan03"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"CelestineTan03"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"CelestineTan03"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"CelestineTan03"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"CelestineTan03"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"CelestineTan03"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"CelestineTan03"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"CelestineTan03"},"content":"    private void flip() {","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"CelestineTan03"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"CelestineTan03"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"CelestineTan03"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"CelestineTan03"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"CelestineTan03"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"CelestineTan03"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"CelestineTan03"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"CelestineTan03"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"CelestineTan03"},"content":"        db.flip();","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"CelestineTan03"},"content":"        return db;","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"CelestineTan03"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"CelestineTan03":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CelestineTan03"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"CelestineTan03"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"CelestineTan03"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"CelestineTan03"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"CelestineTan03"},"content":" * A chatbot that provides a to-do list function","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"CelestineTan03"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"CelestineTan03"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"CelestineTan03"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"CelestineTan03"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"CelestineTan03"},"content":"     * A constructor for the chatbot","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"CelestineTan03"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"CelestineTan03"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"CelestineTan03"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"CelestineTan03"},"content":"        try {","lastModifiedDate":"2023-08-28"},{"lineNumber":22,"author":{"gitId":"CelestineTan03"},"content":"            tasks \u003d new TaskList(this.storage.load());","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"CelestineTan03"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"CelestineTan03"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":26,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"CelestineTan03"},"content":"     * Returns a reply to the user input.","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"CelestineTan03"},"content":"     * @param input the user input","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"CelestineTan03"},"content":"     * @return the reply to the user input","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"CelestineTan03"},"content":"    public String reply(String input, Stage stage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"CelestineTan03"},"content":"        Parser parser \u003d new Parser(input);","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"CelestineTan03"},"content":"        String firstWord \u003d parser.getCommand();","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"CelestineTan03"},"content":"        switch (firstWord) {","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"CelestineTan03"},"content":"        case \"bye\":","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"CelestineTan03"},"content":"            try {","lastModifiedDate":"2023-08-28"},{"lineNumber":41,"author":{"gitId":"CelestineTan03"},"content":"                this.storage.saveTasks(this.tasks.getTasks());","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"CelestineTan03"},"content":"                return this.ui.printFarewell();","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"CelestineTan03"},"content":"            } catch (IOException exception) {","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"CelestineTan03"},"content":"                return exception.getMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"CelestineTan03"},"content":"            } finally {","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"CelestineTan03"},"content":"                stage.close();","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"CelestineTan03"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"CelestineTan03"},"content":"        // Display the stored commands","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"CelestineTan03"},"content":"        case \"list\":","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"CelestineTan03"},"content":"            if (this.tasks.getNumberOfTasks() \u003d\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"CelestineTan03"},"content":"                return \"You do not have any tasks in the list.\";","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"CelestineTan03"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":53,"author":{"gitId":"CelestineTan03"},"content":"            StringBuilder list \u003d new StringBuilder();","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"CelestineTan03"},"content":"            list.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"CelestineTan03"},"content":"            for (int i \u003d 0; i \u003c this.tasks.getNumberOfTasks(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"CelestineTan03"},"content":"                list.append(i + 1);","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"CelestineTan03"},"content":"                list.append(\".\");","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"CelestineTan03"},"content":"                list.append(this.tasks.getTasks().get(i).toString());","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"CelestineTan03"},"content":"                list.append(\"\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"CelestineTan03"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"CelestineTan03"},"content":"            return list.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"CelestineTan03"},"content":"        // Add task","lastModifiedDate":"2023-08-21"},{"lineNumber":63,"author":{"gitId":"CelestineTan03"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-21"},{"lineNumber":64,"author":{"gitId":"CelestineTan03"},"content":"            try {","lastModifiedDate":"2023-08-23"},{"lineNumber":65,"author":{"gitId":"CelestineTan03"},"content":"                return this.tasks.addTask(parser.getTodoTask(), \"todo\");","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"CelestineTan03"},"content":"            } catch (DukeException exception) {","lastModifiedDate":"2023-08-23"},{"lineNumber":67,"author":{"gitId":"CelestineTan03"},"content":"                return exception.getMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"CelestineTan03"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":69,"author":{"gitId":"CelestineTan03"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-21"},{"lineNumber":70,"author":{"gitId":"CelestineTan03"},"content":"            try {","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"CelestineTan03"},"content":"                return this.tasks.addTask(parser.getDeadlineTask(), \"deadline\");","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"CelestineTan03"},"content":"            } catch (DukeException exception) {","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"CelestineTan03"},"content":"                return exception.getMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"CelestineTan03"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":75,"author":{"gitId":"CelestineTan03"},"content":"        case \"event\":","lastModifiedDate":"2023-08-21"},{"lineNumber":76,"author":{"gitId":"CelestineTan03"},"content":"            try {","lastModifiedDate":"2023-08-23"},{"lineNumber":77,"author":{"gitId":"CelestineTan03"},"content":"                return this.tasks.addTask(parser.getEventTask(), \"event\");","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"CelestineTan03"},"content":"            } catch (DukeException exception) {","lastModifiedDate":"2023-08-23"},{"lineNumber":79,"author":{"gitId":"CelestineTan03"},"content":"                return exception.getMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"CelestineTan03"},"content":"            }","lastModifiedDate":"2023-08-23"},{"lineNumber":81,"author":{"gitId":"CelestineTan03"},"content":"        // Mark task as done","lastModifiedDate":"2023-08-21"},{"lineNumber":82,"author":{"gitId":"CelestineTan03"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-21"},{"lineNumber":83,"author":{"gitId":"CelestineTan03"},"content":"            try {","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"CelestineTan03"},"content":"                return this.tasks.markTask(parser.getTaskNumber(), \"mark\");","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"CelestineTan03"},"content":"            } catch (DukeException exception) {","lastModifiedDate":"2023-08-23"},{"lineNumber":86,"author":{"gitId":"CelestineTan03"},"content":"                return exception.getMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"CelestineTan03"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":88,"author":{"gitId":"CelestineTan03"},"content":"        // Mark task as not done","lastModifiedDate":"2023-08-21"},{"lineNumber":89,"author":{"gitId":"CelestineTan03"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-21"},{"lineNumber":90,"author":{"gitId":"CelestineTan03"},"content":"            try {","lastModifiedDate":"2023-08-23"},{"lineNumber":91,"author":{"gitId":"CelestineTan03"},"content":"                return this.tasks.markTask(parser.getTaskNumber(), \"unmark\");","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"CelestineTan03"},"content":"            } catch (DukeException exception) {","lastModifiedDate":"2023-08-23"},{"lineNumber":93,"author":{"gitId":"CelestineTan03"},"content":"                return exception.getMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"CelestineTan03"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":95,"author":{"gitId":"CelestineTan03"},"content":"        // Remove task","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"CelestineTan03"},"content":"        case \"delete\":","lastModifiedDate":"2023-08-22"},{"lineNumber":97,"author":{"gitId":"CelestineTan03"},"content":"            try {","lastModifiedDate":"2023-08-23"},{"lineNumber":98,"author":{"gitId":"CelestineTan03"},"content":"                return this.tasks.removeTask(parser.getTaskNumber());","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"CelestineTan03"},"content":"            } catch (DukeException exception) {","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"CelestineTan03"},"content":"                return exception.getMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"CelestineTan03"},"content":"            }","lastModifiedDate":"2023-08-22"},{"lineNumber":102,"author":{"gitId":"CelestineTan03"},"content":"        // Find task","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"CelestineTan03"},"content":"        case \"find\":","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"CelestineTan03"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"CelestineTan03"},"content":"                return this.tasks.findTask(parser.getSearchKeyword());","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"CelestineTan03"},"content":"            } catch (DukeException exception) {","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"CelestineTan03"},"content":"                return exception.getMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"CelestineTan03"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"CelestineTan03"},"content":"        // Invalid command","lastModifiedDate":"2023-08-21"},{"lineNumber":110,"author":{"gitId":"CelestineTan03"},"content":"        default:","lastModifiedDate":"2023-08-21"},{"lineNumber":111,"author":{"gitId":"CelestineTan03"},"content":"            return this.ui.printAllCommands();","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":114,"author":{"gitId":"CelestineTan03"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"CelestineTan03":111,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CelestineTan03"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"CelestineTan03"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"CelestineTan03"},"content":" * Represents a DukeException","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"CelestineTan03"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"CelestineTan03"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"CelestineTan03"},"content":"     * A constructor for DukeException","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"CelestineTan03"},"content":"     * @param exception the type of exception","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"CelestineTan03"},"content":"    public DukeException(ExceptionTypes exception) {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"CelestineTan03"},"content":"        super(exception.getErrormessage());","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"CelestineTan03"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"CelestineTan03":15}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CelestineTan03"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"CelestineTan03"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"CelestineTan03"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"CelestineTan03"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"CelestineTan03"},"content":" * Represents a task of type Event","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"CelestineTan03"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"CelestineTan03"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"CelestineTan03"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"CelestineTan03"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"CelestineTan03"},"content":"    private final DateTimeFormatter formatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"CelestineTan03"},"content":"     * A constructor for task of type Event","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"CelestineTan03"},"content":"     * @param description the task details","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"CelestineTan03"},"content":"     * @param from the start date/time for the task","lastModifiedDate":"2023-08-28"},{"lineNumber":20,"author":{"gitId":"CelestineTan03"},"content":"     * @param to the end date/time for the task","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"CelestineTan03"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-29"},{"lineNumber":23,"author":{"gitId":"CelestineTan03"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"CelestineTan03"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"CelestineTan03"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"CelestineTan03"},"content":"        this.formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\");","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"CelestineTan03"},"content":"     * Return the string representation of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"CelestineTan03"},"content":"     * @return the string representation","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"CelestineTan03"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"CelestineTan03"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":36,"author":{"gitId":"CelestineTan03"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from.format(formatter) + \" to: \"","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"CelestineTan03"},"content":"                + this.to.format(formatter) + \")\";","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":40,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"CelestineTan03"},"content":"     * Return the string representation of the task in file format.","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"CelestineTan03"},"content":"     * @return the string representation in file format","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"CelestineTan03"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":46,"author":{"gitId":"CelestineTan03"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"CelestineTan03"},"content":"        return \"E | \" + this.isDone + \" | \" + this.description + \" | \" + this.from.format(formatter)","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"CelestineTan03"},"content":"                + \" | \" + this.to.format(formatter);","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"CelestineTan03"},"content":"     * Return the task type.","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"CelestineTan03"},"content":"     * @return the task type","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"CelestineTan03"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"CelestineTan03"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"CelestineTan03"},"content":"        return \"event\";","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"CelestineTan03"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"CelestineTan03":60}},{"path":"src/main/java/duke/ExceptionTypes.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CelestineTan03"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"CelestineTan03"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"CelestineTan03"},"content":" * Represents the types of exceptions","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"CelestineTan03"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"CelestineTan03"},"content":"public enum ExceptionTypes {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"CelestineTan03"},"content":"    INVALIDCOMMANDEVENT(\"OOPS!!! Invalid command. The command for an event should be:\\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"CelestineTan03"},"content":"            + \"event \u003ctask\u003e /from yyyy-mm-dd hh:mm /to yyyy-mm-dd hh:mm\"),","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"CelestineTan03"},"content":"    INCOMPLETECOMMANDEVENT(\"OOPS!!! The description of an event cannot be empty and \"","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"CelestineTan03"},"content":"            + \"the start and end time/date cannot be empty.\"),","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"CelestineTan03"},"content":"    INVALIDCOMMANDDEADLINE(\"OOPS!!! Invalid command. The command for a deadline should be:\\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"CelestineTan03"},"content":"            + \"deadline \u003ctask\u003e /by yyyy-mm-dd hh:mm\"),","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"CelestineTan03"},"content":"    INCOMPLETECOMMANDDEADLINE(\"OOPS!!! The description of a deadline cannot be empty \"","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"CelestineTan03"},"content":"            + \"and the deadline for the deadline cannot be empty.\"),","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"CelestineTan03"},"content":"    INCOMPLETECOMMANDTODO(\"OOPS!!! The description of a todo cannot be empty.\"),","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"CelestineTan03"},"content":"    INVALIDTASKNUMBER(\"OOPS!! Invalid task number. The task number has to be from\"","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"CelestineTan03"},"content":"            + \" one to the number of tasks in the list.\"),","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"CelestineTan03"},"content":"    INCOMPLETETASKNUMBER(\"OOPS!! Task number cannot empty. Please indicate a task number\"","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"CelestineTan03"},"content":"            + \" from one to the number of tasks in the list.\"),","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"CelestineTan03"},"content":"    MARKEMPTYLIST(\"Add task to start marking task as done!\"),","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"CelestineTan03"},"content":"    UNMARKEMPTYLIST(\"Add task to start marking task as not done!\"),","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"CelestineTan03"},"content":"    DELETEEMPTYLIST(\"Add task to start deleting!\"),","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"CelestineTan03"},"content":"    INVALIDCOMMAND(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"),","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"CelestineTan03"},"content":"    EMPTYKEYWORD(\"OOPS!!! Please enter something to search.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"CelestineTan03"},"content":"    private final String errormessage;","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"CelestineTan03"},"content":"    ExceptionTypes(String errormessage) {","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"CelestineTan03"},"content":"        this.errormessage \u003d errormessage;","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"CelestineTan03"},"content":"    // A method to get the error message of the exception","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"CelestineTan03"},"content":"    public String getErrormessage() {","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"CelestineTan03"},"content":"        return this.errormessage;","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"CelestineTan03"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"CelestineTan03":37}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CelestineTan03"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"CelestineTan03"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"CelestineTan03"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"CelestineTan03"},"content":" * Represents the launcher for the application","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"CelestineTan03"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"CelestineTan03"},"content":"public class Launcher {","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"CelestineTan03"},"content":"     * Launch the application","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"CelestineTan03"},"content":"     * @param args the arguments","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"CelestineTan03"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"CelestineTan03"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"CelestineTan03"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"CelestineTan03":17}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CelestineTan03"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"CelestineTan03"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"CelestineTan03"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"CelestineTan03"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"CelestineTan03"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"CelestineTan03"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"CelestineTan03"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"CelestineTan03"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"CelestineTan03"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"CelestineTan03"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"CelestineTan03"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"CelestineTan03"},"content":"    private Duke duke \u003d new Duke(\"./duke.txt\");","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"CelestineTan03"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"CelestineTan03"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"CelestineTan03"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"CelestineTan03"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"CelestineTan03"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"CelestineTan03"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"CelestineTan03"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"CelestineTan03"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke, stage);","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"CelestineTan03"},"content":"            stage.show();","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"CelestineTan03"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"CelestineTan03"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"CelestineTan03"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"CelestineTan03":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CelestineTan03"},"content":"package duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"CelestineTan03"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"CelestineTan03"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"CelestineTan03"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"CelestineTan03"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"CelestineTan03"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"CelestineTan03"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"CelestineTan03"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"CelestineTan03"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"CelestineTan03"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"CelestineTan03"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"CelestineTan03"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"CelestineTan03"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"CelestineTan03"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"CelestineTan03"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"CelestineTan03"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"CelestineTan03"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"CelestineTan03"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"CelestineTan03"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"CelestineTan03"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"CelestineTan03"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"CelestineTan03"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"CelestineTan03"},"content":"    private Stage stage;","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"CelestineTan03"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"CelestineTan03"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"CelestineTan03"},"content":"     * Initializes the main window.","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"CelestineTan03"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"CelestineTan03"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"CelestineTan03"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"CelestineTan03"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"CelestineTan03"},"content":"                DialogBox.getDukeDialog(\"Hello! I\u0027m Botty!\\nWhat can I do for you?\", dukeImage)","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"CelestineTan03"},"content":"        );","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"CelestineTan03"},"content":"     * Sets the duke and stage for the main window.","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"CelestineTan03"},"content":"     * @param d the duke","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"CelestineTan03"},"content":"     * @param stage the stage","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"CelestineTan03"},"content":"    public void setDuke(Duke d, Stage stage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"CelestineTan03"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"CelestineTan03"},"content":"        this.duke \u003d d;","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"CelestineTan03"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"CelestineTan03"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"CelestineTan03"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"CelestineTan03"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"CelestineTan03"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"CelestineTan03"},"content":"        String response \u003d getResponse(input);","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"CelestineTan03"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"CelestineTan03"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"CelestineTan03"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"CelestineTan03"},"content":"        );","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"CelestineTan03"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"CelestineTan03"},"content":"     * Returns the response from duke.","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"CelestineTan03"},"content":"     * @param input the user input","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"CelestineTan03"},"content":"     * @return the response from duke","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"CelestineTan03"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"CelestineTan03"},"content":"        return duke.reply(input, stage);","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"CelestineTan03"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"CelestineTan03":77}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CelestineTan03"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"CelestineTan03"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"CelestineTan03"},"content":" * Represents a parser that parses the user input","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"CelestineTan03"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"CelestineTan03"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"CelestineTan03"},"content":"    private String[] words;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"CelestineTan03"},"content":"     * A constructor for a parser","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"CelestineTan03"},"content":"     * @param input the user input","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"CelestineTan03"},"content":"    public Parser(String input) {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"CelestineTan03"},"content":"        // Split string into first word and remaining words","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"CelestineTan03"},"content":"        this.words \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"CelestineTan03"},"content":"     * Return the command word of the user input","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"CelestineTan03"},"content":"     * @return the command word","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"CelestineTan03"},"content":"    public String getCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"CelestineTan03"},"content":"        return this.words[0];","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"CelestineTan03"},"content":"    public String[] getTodoTask() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"CelestineTan03"},"content":"        if (this.words.length \u003d\u003d 1 || this.words[1].isBlank()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"CelestineTan03"},"content":"            throw new DukeException(ExceptionTypes.INCOMPLETECOMMANDTODO);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"CelestineTan03"},"content":"        return this.words;","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"CelestineTan03"},"content":"     * Return the description of the deadline task","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"CelestineTan03"},"content":"     * @return the description of the deadline task","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"CelestineTan03"},"content":"     * @throws DukeException if the user input is invalid","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"CelestineTan03"},"content":"    public String[] getDeadlineTask() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"CelestineTan03"},"content":"        if (this.words.length \u003d\u003d 1 || this.words[1].isBlank()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"CelestineTan03"},"content":"            throw new DukeException(ExceptionTypes.INCOMPLETECOMMANDDEADLINE);","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"CelestineTan03"},"content":"        } else if (this.words[1].contains(\"/by\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"CelestineTan03"},"content":"            String[] description \u003d this.words[1].split(\" /by \");","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"CelestineTan03"},"content":"            if (description.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"CelestineTan03"},"content":"                throw new DukeException(ExceptionTypes.INVALIDCOMMANDDEADLINE);","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"CelestineTan03"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"CelestineTan03"},"content":"            return description;","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"CelestineTan03"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"CelestineTan03"},"content":"            throw new DukeException(ExceptionTypes.INVALIDCOMMANDDEADLINE);","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"CelestineTan03"},"content":"     * Return the description of the event task","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"CelestineTan03"},"content":"     * @return the description of the event task","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"CelestineTan03"},"content":"     * @throws DukeException if the user input is invalid","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"CelestineTan03"},"content":"    public String[] getEventTask() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"CelestineTan03"},"content":"        if (this.words.length \u003d\u003d 1 || this.words[1].isBlank()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"CelestineTan03"},"content":"            throw new DukeException(ExceptionTypes.INCOMPLETECOMMANDEVENT);","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"CelestineTan03"},"content":"        } else if (this.words[1].contains(\"/from\") \u0026\u0026 this.words[1].contains(\"/to\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"CelestineTan03"},"content":"            String[] description \u003d this.words[1].split(\" /from \");","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"CelestineTan03"},"content":"            if (description.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"CelestineTan03"},"content":"                throw new DukeException(ExceptionTypes.INCOMPLETECOMMANDEVENT);","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"CelestineTan03"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"CelestineTan03"},"content":"            String[] interval \u003d description[1].split(\" /to \");","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"CelestineTan03"},"content":"            if (interval.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"CelestineTan03"},"content":"                throw new DukeException(ExceptionTypes.INVALIDCOMMANDDEADLINE);","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"CelestineTan03"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"CelestineTan03"},"content":"            return new String[]{description[0], interval[0], interval[1]};","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"CelestineTan03"},"content":"        } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"CelestineTan03"},"content":"            throw new DukeException(ExceptionTypes.INVALIDCOMMANDEVENT);","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"CelestineTan03"},"content":"     * Return the task number of the task to be marked as done or deleted","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"CelestineTan03"},"content":"     * @return the task number","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"CelestineTan03"},"content":"     * @throws DukeException if the user input is invalid","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"CelestineTan03"},"content":"    public int getTaskNumber() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"CelestineTan03"},"content":"        if (this.words.length \u003d\u003d 1 || this.words[1].isBlank()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"CelestineTan03"},"content":"            throw new DukeException(ExceptionTypes.INCOMPLETETASKNUMBER);","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"CelestineTan03"},"content":"        return Integer.parseInt(words[1]);","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"CelestineTan03"},"content":"    public String getSearchKeyword() throws DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"CelestineTan03"},"content":"        if (this.words.length \u003d\u003d 1 || this.words[1].isBlank()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"CelestineTan03"},"content":"            throw new DukeException(ExceptionTypes.EMPTYKEYWORD);","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"CelestineTan03"},"content":"        return this.words[1];","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"CelestineTan03"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"CelestineTan03":98}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CelestineTan03"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"CelestineTan03"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"CelestineTan03"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"CelestineTan03"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"CelestineTan03"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"CelestineTan03"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"CelestineTan03"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"CelestineTan03"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"CelestineTan03"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"CelestineTan03"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"CelestineTan03"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"CelestineTan03"},"content":" * Represents a storage for the chatbot","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"CelestineTan03"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"CelestineTan03"},"content":"public class Storage {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"CelestineTan03"},"content":"    private final String path;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"CelestineTan03"},"content":"    private final DateTimeFormatter outputFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"CelestineTan03"},"content":"     * A constructor for the storage","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"CelestineTan03"},"content":"     * @param filePath the path to the file","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"CelestineTan03"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"CelestineTan03"},"content":"        this.path \u003d filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"CelestineTan03"},"content":"        this.outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\");","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"CelestineTan03"},"content":"        // Create file if file does not exist","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"CelestineTan03"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"CelestineTan03"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"CelestineTan03"},"content":"            if (!file.createNewFile()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"CelestineTan03"},"content":"                this.load();","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"CelestineTan03"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"CelestineTan03"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"CelestineTan03"},"content":"            System.out.println(exception.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"CelestineTan03"},"content":"     * Save the tasks to the file","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"CelestineTan03"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"CelestineTan03"},"content":"     * @throws IOException if there is an error writing to the file","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"CelestineTan03"},"content":"    public void saveTasks(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"CelestineTan03"},"content":"        FileWriter writer \u003d new FileWriter(this.path);","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"CelestineTan03"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"CelestineTan03"},"content":"            writer.write(task.toFileFormat() + \"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"CelestineTan03"},"content":"        writer.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"CelestineTan03"},"content":"     * Load the tasks from the file","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"CelestineTan03"},"content":"     * @return the list of tasks","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"CelestineTan03"},"content":"     * @throws IOException if there is an error reading from the file","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"CelestineTan03"},"content":"    public List\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"CelestineTan03"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"CelestineTan03"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(this.path));","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"CelestineTan03"},"content":"        String nextTask \u003d reader.readLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"CelestineTan03"},"content":"        while (nextTask !\u003d null) {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"CelestineTan03"},"content":"            String[] taskDescription \u003d nextTask.split(\"\\\\|\");","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"CelestineTan03"},"content":"            String isDone \u003d taskDescription[1].strip();","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"CelestineTan03"},"content":"            String description \u003d taskDescription[2].strip();","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"CelestineTan03"},"content":"            switch (taskDescription[0].strip()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"CelestineTan03"},"content":"            case \"T\":","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"CelestineTan03"},"content":"                tasks.add(new Todo(description));","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"CelestineTan03"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"CelestineTan03"},"content":"            case \"D\":","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"CelestineTan03"},"content":"                tasks.add(new Deadline(description,","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"CelestineTan03"},"content":"                        LocalDateTime.parse(taskDescription[3].strip(), this.outputFormatter)));","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"CelestineTan03"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"CelestineTan03"},"content":"            case \"E\":","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"CelestineTan03"},"content":"                tasks.add(new Event(description, LocalDateTime.parse(taskDescription[3].strip(),","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"CelestineTan03"},"content":"                        this.outputFormatter), LocalDateTime.parse(taskDescription[4].strip(), this.outputFormatter)));","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"CelestineTan03"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"CelestineTan03"},"content":"            default:","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"CelestineTan03"},"content":"                break;","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"CelestineTan03"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"CelestineTan03"},"content":"            if (isDone.equals(\"true\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"CelestineTan03"},"content":"                int index \u003d tasks.size() - 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"CelestineTan03"},"content":"                tasks.get(index).markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"CelestineTan03"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"CelestineTan03"},"content":"            nextTask \u003d reader.readLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"CelestineTan03"},"content":"        reader.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"CelestineTan03"},"content":"        return tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"CelestineTan03"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"CelestineTan03":92}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CelestineTan03"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"CelestineTan03"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"CelestineTan03"},"content":" * Represents a task","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"CelestineTan03"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"CelestineTan03"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"CelestineTan03"},"content":"    protected String description;","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"CelestineTan03"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":10,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"CelestineTan03"},"content":"     * A constructor for a task","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"CelestineTan03"},"content":"     * @param description the task details","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"CelestineTan03"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"CelestineTan03"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"CelestineTan03"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":18,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"CelestineTan03"},"content":"     * Check if the task has been completed and","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"CelestineTan03"},"content":"     * return the status icon of the task.","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"CelestineTan03"},"content":"     * @return the status icon of the task","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"CelestineTan03"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-21"},{"lineNumber":27,"author":{"gitId":"CelestineTan03"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-21"},{"lineNumber":28,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"CelestineTan03"},"content":"    // Mark a task as done","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"CelestineTan03"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"CelestineTan03"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":35,"author":{"gitId":"CelestineTan03"},"content":"    // Mark a task as not done","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"CelestineTan03"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-08-21"},{"lineNumber":37,"author":{"gitId":"CelestineTan03"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"CelestineTan03"},"content":"     * Return the string representation of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"CelestineTan03"},"content":"     * @return the string representation","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"CelestineTan03"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"CelestineTan03"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"CelestineTan03"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"CelestineTan03"},"content":"     * Return the string representation of the task in file format.","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"CelestineTan03"},"content":"     * @return the string representation in file format","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"CelestineTan03"},"content":"    abstract String toFileFormat();","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"CelestineTan03"},"content":"     * Return the type of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"CelestineTan03"},"content":"     * @return the type of the task","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"CelestineTan03"},"content":"    abstract String getTaskType();","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"CelestineTan03"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"CelestineTan03":63}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CelestineTan03"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"CelestineTan03"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"CelestineTan03"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"CelestineTan03"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"CelestineTan03"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"CelestineTan03"},"content":"import java.util.List;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"CelestineTan03"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"CelestineTan03"},"content":" * Represents a list of tasks.","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"CelestineTan03"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"CelestineTan03"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"CelestineTan03"},"content":"    // The list of tasks","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"CelestineTan03"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"CelestineTan03"},"content":"    // The formatter for the date and time","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"CelestineTan03"},"content":"    private final DateTimeFormatter inputFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"CelestineTan03"},"content":"     * A constructor for the task list if an initial list exist","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"CelestineTan03"},"content":"     * @param tasks the list of tasks","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"CelestineTan03"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"CelestineTan03"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"CelestineTan03"},"content":"        this.inputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"CelestineTan03"},"content":"     * A constructor for the task list if an initial list does not exist","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"CelestineTan03"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"CelestineTan03"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"CelestineTan03"},"content":"        this.inputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"CelestineTan03"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"CelestineTan03"},"content":"     * @return the number of tasks","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"CelestineTan03"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"CelestineTan03"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"CelestineTan03"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"CelestineTan03"},"content":"     * @return the list of tasks","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"CelestineTan03"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"CelestineTan03"},"content":"        return this.tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"CelestineTan03"},"content":"     * Returns a success message when a task has been successfully added.","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"CelestineTan03"},"content":"     * @return the success message","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"CelestineTan03"},"content":"    public String printAddTaskSuccessMessage() {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"CelestineTan03"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"CelestineTan03"},"content":"        message.append(\"Got it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"CelestineTan03"},"content":"        message.append(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"CelestineTan03"},"content":"        message.append(this.tasks.get(this.tasks.size() - 1).toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"CelestineTan03"},"content":"        message.append(\"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"CelestineTan03"},"content":"        message.append(\"Now you have \");","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"CelestineTan03"},"content":"        message.append(this.tasks.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"CelestineTan03"},"content":"        message.append(\" task(s) in the list.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"CelestineTan03"},"content":"        return message.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"CelestineTan03"},"content":"     * Returns a success message when a task has been successfully deleted.","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"CelestineTan03"},"content":"     * @return the success message","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"CelestineTan03"},"content":"    public String printRemoveTaskSuccessMessage(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"CelestineTan03"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"CelestineTan03"},"content":"        message.append(\"Noted. I\u0027ve removed this task:\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"CelestineTan03"},"content":"        message.append(\" \");","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"CelestineTan03"},"content":"        message.append(task.toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"CelestineTan03"},"content":"        message.append(\"\\n\");","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"CelestineTan03"},"content":"        message.append(\"Now you have \");","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"CelestineTan03"},"content":"        message.append(this.tasks.size());","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"CelestineTan03"},"content":"        message.append(\" task(s) in the list.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"CelestineTan03"},"content":"        return message.toString();","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"CelestineTan03"},"content":"     * Takes in the task details and add the task to the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"CelestineTan03"},"content":"     * @param task the task description","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"CelestineTan03"},"content":"     * @param typeOfTask the type of the task to be added","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"CelestineTan03"},"content":"     * @throws DukeException if invalid or incorrect command","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"CelestineTan03"},"content":"    public String addTask(String[] task, String typeOfTask) throws DukeException {","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"CelestineTan03"},"content":"        switch (typeOfTask) {","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"CelestineTan03"},"content":"        case \"event\":","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"CelestineTan03"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"CelestineTan03"},"content":"                this.tasks.add(new Event(task[0], LocalDateTime.parse(task[1], this.inputFormatter),","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"CelestineTan03"},"content":"                        LocalDateTime.parse(task[2], this.inputFormatter)));","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"CelestineTan03"},"content":"            } catch (DateTimeParseException exception) {","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"CelestineTan03"},"content":"                return \"Invalid start and end date/time. The format should be yyyy-mm-dd hh:mm\";","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"CelestineTan03"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"CelestineTan03"},"content":"            return printAddTaskSuccessMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"CelestineTan03"},"content":"        case \"todo\":","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"CelestineTan03"},"content":"            this.tasks.add(new Todo(task[1]));","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"CelestineTan03"},"content":"            return printAddTaskSuccessMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"CelestineTan03"},"content":"        case \"deadline\":","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"CelestineTan03"},"content":"            try {","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"CelestineTan03"},"content":"                this.tasks.add(new Deadline(task[0], LocalDateTime.parse(task[1], this.inputFormatter)));","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"CelestineTan03"},"content":"            } catch (DateTimeParseException exception) {","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"CelestineTan03"},"content":"                return \"Invalid start and end date/time. The format should be yyyy-mm-dd hh:mm\";","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"CelestineTan03"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"CelestineTan03"},"content":"            return printAddTaskSuccessMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"CelestineTan03"},"content":"        default:","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"CelestineTan03"},"content":"            throw new DukeException(ExceptionTypes.INVALIDCOMMAND);","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"CelestineTan03"},"content":"     * Takes in the command to delete a task","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"CelestineTan03"},"content":"     * and remove the task from the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"CelestineTan03"},"content":"     * @param taskNumber the task number of the task","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"CelestineTan03"},"content":"     * @throws DukeException if invalid or incorrect command","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"CelestineTan03"},"content":"    public String removeTask(int taskNumber) throws DukeException {","lastModifiedDate":"2023-09-05"},{"lineNumber":128,"author":{"gitId":"CelestineTan03"},"content":"        if (this.tasks.isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"CelestineTan03"},"content":"            throw new DukeException(ExceptionTypes.DELETEEMPTYLIST);","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"CelestineTan03"},"content":"        if (taskNumber \u003e this.tasks.size() || taskNumber \u003c\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"CelestineTan03"},"content":"            throw new DukeException(ExceptionTypes.INVALIDTASKNUMBER);","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"CelestineTan03"},"content":"        Task task \u003d this.tasks.get(taskNumber - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"CelestineTan03"},"content":"        this.tasks.remove(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"CelestineTan03"},"content":"        return printRemoveTaskSuccessMessage(task);","lastModifiedDate":"2023-09-05"},{"lineNumber":137,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"CelestineTan03"},"content":"     * Takes in the task command to mark or unmark","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"CelestineTan03"},"content":"     * a task and mark the task as done or mark a task as","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"CelestineTan03"},"content":"     * not done","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"CelestineTan03"},"content":"     * @param taskNumber the task number of the task","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"CelestineTan03"},"content":"     * @param action to mark or unmark the task","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"CelestineTan03"},"content":"     * @throws DukeException if invalid or incorrect command","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"CelestineTan03"},"content":"    public String markTask(int taskNumber, String action) throws DukeException {","lastModifiedDate":"2023-09-05"},{"lineNumber":149,"author":{"gitId":"CelestineTan03"},"content":"        switch(action) {","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"CelestineTan03"},"content":"        case \"mark\":","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"CelestineTan03"},"content":"            if (this.tasks.isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"CelestineTan03"},"content":"                throw new DukeException(ExceptionTypes.MARKEMPTYLIST);","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"CelestineTan03"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"CelestineTan03"},"content":"            if (taskNumber \u003e this.tasks.size() || taskNumber \u003c\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"CelestineTan03"},"content":"                throw new DukeException(ExceptionTypes.INVALIDTASKNUMBER);","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"CelestineTan03"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"CelestineTan03"},"content":"            StringBuilder markedMessage \u003d new StringBuilder();","lastModifiedDate":"2023-09-05"},{"lineNumber":158,"author":{"gitId":"CelestineTan03"},"content":"            markedMessage.append(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-09-05"},{"lineNumber":159,"author":{"gitId":"CelestineTan03"},"content":"            Task markTask \u003d this.tasks.get(taskNumber - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"CelestineTan03"},"content":"            markTask.markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"CelestineTan03"},"content":"            markedMessage.append(markTask.toString());","lastModifiedDate":"2023-09-05"},{"lineNumber":162,"author":{"gitId":"CelestineTan03"},"content":"            return markedMessage.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":163,"author":{"gitId":"CelestineTan03"},"content":"        case \"unmark\":","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"CelestineTan03"},"content":"            if (this.tasks.isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"CelestineTan03"},"content":"                throw new DukeException(ExceptionTypes.UNMARKEMPTYLIST);","lastModifiedDate":"2023-08-30"},{"lineNumber":166,"author":{"gitId":"CelestineTan03"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"CelestineTan03"},"content":"            if (taskNumber \u003e this.tasks.size() || taskNumber \u003c\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":168,"author":{"gitId":"CelestineTan03"},"content":"                throw new DukeException(ExceptionTypes.INVALIDTASKNUMBER);","lastModifiedDate":"2023-08-30"},{"lineNumber":169,"author":{"gitId":"CelestineTan03"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":170,"author":{"gitId":"CelestineTan03"},"content":"            StringBuilder unmarkedMessage \u003d new StringBuilder();","lastModifiedDate":"2023-09-05"},{"lineNumber":171,"author":{"gitId":"CelestineTan03"},"content":"            unmarkedMessage.append(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-09-05"},{"lineNumber":172,"author":{"gitId":"CelestineTan03"},"content":"            Task unmarkTask \u003d this.tasks.get(taskNumber - 1);","lastModifiedDate":"2023-08-30"},{"lineNumber":173,"author":{"gitId":"CelestineTan03"},"content":"            unmarkTask.markAsNotDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":174,"author":{"gitId":"CelestineTan03"},"content":"            unmarkedMessage.append(unmarkTask.toString());","lastModifiedDate":"2023-09-05"},{"lineNumber":175,"author":{"gitId":"CelestineTan03"},"content":"            return unmarkedMessage.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":176,"author":{"gitId":"CelestineTan03"},"content":"        default:","lastModifiedDate":"2023-08-30"},{"lineNumber":177,"author":{"gitId":"CelestineTan03"},"content":"            throw new DukeException(ExceptionTypes.INVALIDCOMMAND);","lastModifiedDate":"2023-08-30"},{"lineNumber":178,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":179,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":180,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":181,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":182,"author":{"gitId":"CelestineTan03"},"content":"     * Takes in the keyword and find the tasks that","lastModifiedDate":"2023-09-04"},{"lineNumber":183,"author":{"gitId":"CelestineTan03"},"content":"     * contains the keyword and print the tasks","lastModifiedDate":"2023-09-04"},{"lineNumber":184,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-09-04"},{"lineNumber":185,"author":{"gitId":"CelestineTan03"},"content":"     * @param keyword the keyword to be searched","lastModifiedDate":"2023-09-04"},{"lineNumber":186,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":187,"author":{"gitId":"CelestineTan03"},"content":"    public String findTask(String keyword) {","lastModifiedDate":"2023-09-05"},{"lineNumber":188,"author":{"gitId":"CelestineTan03"},"content":"        if (this.tasks.isEmpty()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":189,"author":{"gitId":"CelestineTan03"},"content":"            return \"There are no matching tasks in the list.\";","lastModifiedDate":"2023-09-05"},{"lineNumber":190,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":191,"author":{"gitId":"CelestineTan03"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-08-30"},{"lineNumber":192,"author":{"gitId":"CelestineTan03"},"content":"        StringBuilder list \u003d new StringBuilder();","lastModifiedDate":"2023-09-05"},{"lineNumber":193,"author":{"gitId":"CelestineTan03"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2023-08-30"},{"lineNumber":194,"author":{"gitId":"CelestineTan03"},"content":"            if (task.toString().contains(keyword) || task.getTaskType().contains(keyword)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":195,"author":{"gitId":"CelestineTan03"},"content":"                if (count \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":196,"author":{"gitId":"CelestineTan03"},"content":"                    list.append(\"Here are the matching task(s) in your list:\");","lastModifiedDate":"2023-09-05"},{"lineNumber":197,"author":{"gitId":"CelestineTan03"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":198,"author":{"gitId":"CelestineTan03"},"content":"                list.append(count);","lastModifiedDate":"2023-09-05"},{"lineNumber":199,"author":{"gitId":"CelestineTan03"},"content":"                list.append(\". \");","lastModifiedDate":"2023-09-05"},{"lineNumber":200,"author":{"gitId":"CelestineTan03"},"content":"                list.append(task.toString());","lastModifiedDate":"2023-09-05"},{"lineNumber":201,"author":{"gitId":"CelestineTan03"},"content":"                count++;","lastModifiedDate":"2023-08-30"},{"lineNumber":202,"author":{"gitId":"CelestineTan03"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":203,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":204,"author":{"gitId":"CelestineTan03"},"content":"        if (count \u003d\u003d 1) {","lastModifiedDate":"2023-08-30"},{"lineNumber":205,"author":{"gitId":"CelestineTan03"},"content":"            return \"There are no matching tasks in the list.\";","lastModifiedDate":"2023-09-05"},{"lineNumber":206,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":207,"author":{"gitId":"CelestineTan03"},"content":"        return list.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":208,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":209,"author":{"gitId":"CelestineTan03"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"CelestineTan03":209}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CelestineTan03"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"CelestineTan03"},"content":"/**","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"CelestineTan03"},"content":" * Represents a task of type todo","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"CelestineTan03"},"content":" */","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"CelestineTan03"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"CelestineTan03"},"content":"     * A constructor for a task of type todo","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"CelestineTan03"},"content":"     * @param description the task details","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"CelestineTan03"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-21"},{"lineNumber":14,"author":{"gitId":"CelestineTan03"},"content":"        super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":17,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"CelestineTan03"},"content":"     * Return the string representation of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"CelestineTan03"},"content":"     * @return the string representation","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"CelestineTan03"},"content":"    @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"CelestineTan03"},"content":"    public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"CelestineTan03"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-21"},{"lineNumber":25,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":26,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"CelestineTan03"},"content":"     * Return the string representation of the task in file format.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"CelestineTan03"},"content":"     * @return the string representation in file format","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"CelestineTan03"},"content":"    @Override","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"CelestineTan03"},"content":"    public String toFileFormat() {","lastModifiedDate":"2023-08-28"},{"lineNumber":34,"author":{"gitId":"CelestineTan03"},"content":"        return \"T | \" + this.isDone + \" | \" + this.description;","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"CelestineTan03"},"content":"     * Return the task type.","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"CelestineTan03"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"CelestineTan03"},"content":"     * @return the task type","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"CelestineTan03"},"content":"    @Override","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"CelestineTan03"},"content":"    public String getTaskType() {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"CelestineTan03"},"content":"        return \"todo\";","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"CelestineTan03"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"CelestineTan03":46}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CelestineTan03"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"CelestineTan03"},"content":"/**","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"CelestineTan03"},"content":" * Represents the user interface of the chatbot","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"CelestineTan03"},"content":" */","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"CelestineTan03"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"CelestineTan03"},"content":"    // Print the farewell message","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"CelestineTan03"},"content":"    public String printFarewell() {","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"CelestineTan03"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"CelestineTan03"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"CelestineTan03"},"content":"     * Print all the available commands","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"CelestineTan03"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"CelestineTan03"},"content":"    public String printAllCommands() {","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"CelestineTan03"},"content":"        StringBuilder commands \u003d new StringBuilder();","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"CelestineTan03"},"content":"        commands.append(\"OOPS!!! Invalid command. Try the following commands instead:\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"CelestineTan03"},"content":"        commands.append(\"\u003e todo \u003ctask\u003e\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"CelestineTan03"},"content":"        commands.append(\"\u003e deadline \u003ctask\u003e /by yyyy-mm-dd hh:mm\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"CelestineTan03"},"content":"        commands.append(\"\u003e event \u003ctask\u003e /from yyyy-mm-dd hh:mm /to yyyy-mm-dd hh:mm\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"CelestineTan03"},"content":"        commands.append(\"\u003e list\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"CelestineTan03"},"content":"        commands.append(\"\u003e mark \u003ctask number\u003e\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"CelestineTan03"},"content":"        commands.append(\"\u003e unmark \u003ctask number\u003e\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"CelestineTan03"},"content":"        commands.append(\"\u003e delete \u003ctask number\u003e\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"CelestineTan03"},"content":"        commands.append(\"\u003e find \u003ckeyword\u003e\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"CelestineTan03"},"content":"        commands.append(\"\u003e bye\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"CelestineTan03"},"content":"        return commands.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"CelestineTan03"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"CelestineTan03":30}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"CelestineTan03"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"CelestineTan03"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"CelestineTan03"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"CelestineTan03"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"CelestineTan03"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"CelestineTan03"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"CelestineTan03"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"CelestineTan03"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"CelestineTan03"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"CelestineTan03"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"CelestineTan03"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"CelestineTan03"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"CelestineTan03"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"CelestineTan03"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"CelestineTan03":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"CelestineTan03"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"CelestineTan03"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"CelestineTan03"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"CelestineTan03"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"CelestineTan03"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"CelestineTan03"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"CelestineTan03"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"CelestineTan03"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"CelestineTan03"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"CelestineTan03"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"CelestineTan03"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"CelestineTan03"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"CelestineTan03"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"CelestineTan03"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"CelestineTan03"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"CelestineTan03"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"CelestineTan03"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"CelestineTan03":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CelestineTan03"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"CelestineTan03"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"CelestineTan03"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"CelestineTan03"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"CelestineTan03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"CelestineTan03"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"CelestineTan03"},"content":" * Represents a test for Parser class","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"CelestineTan03"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"CelestineTan03"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"CelestineTan03"},"content":"    public void testGetCommand() {","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"CelestineTan03"},"content":"        assertEquals(\"todo\", new Parser(\"todo sleep\").getCommand());","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"CelestineTan03"},"content":"    public void testGetTodoTask() {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"CelestineTan03"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"CelestineTan03"},"content":"            assertArrayEquals(new String[] {\"todo\"}, new Parser(\"todo\").getTodoTask());","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"CelestineTan03"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"CelestineTan03"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"CelestineTan03"},"content":"            assertEquals(\"OOPS!!! The description of a todo cannot be empty.\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"CelestineTan03"},"content":"    public void testIncompleteCommandDeadline() {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"CelestineTan03"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"CelestineTan03"},"content":"            assertArrayEquals(new String[] {\"deadline\"}, new Parser(\"deadline\").getDeadlineTask());","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"CelestineTan03"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"CelestineTan03"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"CelestineTan03"},"content":"            assertEquals(\"OOPS!!! The description of a deadline cannot be empty and\"","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"CelestineTan03"},"content":"                    + \" the deadline for the deadline cannot be empty.\", e.getMessage());","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"CelestineTan03"},"content":"    public void testInvalidCommandDeadline() {","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"CelestineTan03"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"CelestineTan03"},"content":"            assertArrayEquals(new String[] {\"deadline\", \"sleep\"}, new Parser(\"deadline sleep /by\").getDeadlineTask());","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"CelestineTan03"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"CelestineTan03"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"CelestineTan03"},"content":"            assertEquals(\"OOPS!!! Invalid command. The command for a deadline should be:\\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"CelestineTan03"},"content":"                    + \"deadline \u003ctask\u003e /by yyyy-mm-dd hh:mm\", e.getMessage());","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"CelestineTan03"},"content":"    public void testIncompleteCommandEvent() {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"CelestineTan03"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"CelestineTan03"},"content":"            assertArrayEquals(new String[] {\"event\"}, new Parser(\"event\").getEventTask());","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"CelestineTan03"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"CelestineTan03"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"CelestineTan03"},"content":"            assertEquals(\"OOPS!!! The description of an event cannot be empty and the start\"","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"CelestineTan03"},"content":"                    + \" and end time/date cannot be empty.\", e.getMessage());","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"CelestineTan03"},"content":"    public void testInvalidCommandEvent() {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"CelestineTan03"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"CelestineTan03"},"content":"            assertArrayEquals(new String[] {\"event\", \"sleep\"}, new Parser(\"event sleep /from\").getEventTask());","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"CelestineTan03"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"CelestineTan03"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"CelestineTan03"},"content":"            assertEquals(\"OOPS!!! Invalid command. The command for an event should be:\\n\"","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"CelestineTan03"},"content":"                    + \"event \u003ctask\u003e /from yyyy-mm-dd hh:mm /to yyyy-mm-dd hh:mm\", e.getMessage());","lastModifiedDate":"2023-09-04"},{"lineNumber":69,"author":{"gitId":"CelestineTan03"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"CelestineTan03"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"CelestineTan03":71}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CelestineTan03"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"CelestineTan03"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"CelestineTan03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"CelestineTan03"},"content":"/**","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"CelestineTan03"},"content":" * Represents a test for Todo class","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"CelestineTan03"},"content":" */","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"CelestineTan03"},"content":"public class TodoTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"CelestineTan03"},"content":"    public void testToStringConversion() {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"CelestineTan03"},"content":"        assertEquals(\"[T][ ] sleep\", new Todo(\"sleep\").toString());","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"CelestineTan03"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"CelestineTan03"},"content":"    public void testToFileFormat() {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"CelestineTan03"},"content":"        assertEquals(\"T | false | sleep\", new Todo(\"sleep\").toFileFormat());","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"CelestineTan03"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"CelestineTan03"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"CelestineTan03":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"CelestineTan03"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":2,"author":{"gitId":"CelestineTan03"},"content":"mark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":3,"author":{"gitId":"CelestineTan03"},"content":"unmark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":4,"author":{"gitId":"CelestineTan03"},"content":"delete 1","lastModifiedDate":"2023-08-22"},{"lineNumber":5,"author":{"gitId":"CelestineTan03"},"content":"todo","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"CelestineTan03"},"content":"todo sleep","lastModifiedDate":"2023-08-22"},{"lineNumber":7,"author":{"gitId":"CelestineTan03"},"content":"event","lastModifiedDate":"2023-08-22"},{"lineNumber":8,"author":{"gitId":"CelestineTan03"},"content":"event meeting /from 2pm /to 4pm","lastModifiedDate":"2023-08-22"},{"lineNumber":9,"author":{"gitId":"CelestineTan03"},"content":"event meeting /from 2023-10-10 14:00 /to 2023-10-10 16:00","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"CelestineTan03"},"content":"deadline","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"CelestineTan03"},"content":"deadline lecture quiz /by 9pm","lastModifiedDate":"2023-08-22"},{"lineNumber":12,"author":{"gitId":"CelestineTan03"},"content":"deadline lecture quiz /by 2023-10-05 23:59","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"CelestineTan03"},"content":"list","lastModifiedDate":"2023-08-22"},{"lineNumber":14,"author":{"gitId":"CelestineTan03"},"content":"find","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"CelestineTan03"},"content":"find sleep","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"CelestineTan03"},"content":"mark","lastModifiedDate":"2023-08-22"},{"lineNumber":17,"author":{"gitId":"CelestineTan03"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"CelestineTan03"},"content":"mark -2","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"CelestineTan03"},"content":"unmark 1","lastModifiedDate":"2023-08-22"},{"lineNumber":20,"author":{"gitId":"CelestineTan03"},"content":"unmark 10","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"CelestineTan03"},"content":"unmark","lastModifiedDate":"2023-08-22"},{"lineNumber":22,"author":{"gitId":"CelestineTan03"},"content":"delete -4","lastModifiedDate":"2023-08-22"},{"lineNumber":23,"author":{"gitId":"CelestineTan03"},"content":"delete","lastModifiedDate":"2023-08-22"},{"lineNumber":24,"author":{"gitId":"CelestineTan03"},"content":"delete 1","lastModifiedDate":"2023-08-22"},{"lineNumber":25,"author":{"gitId":"CelestineTan03"},"content":"add task","lastModifiedDate":"2023-08-22"},{"lineNumber":26,"author":{"gitId":"CelestineTan03"},"content":"bye","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"CelestineTan03":26}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"CelestineTan03"},"content":"# delete stored data from previous run","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"CelestineTan03"},"content":"if [ -e \"./duke.txt\" ]","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"CelestineTan03"},"content":"then","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"CelestineTan03"},"content":"    rm ./duke.txt","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"CelestineTan03"},"content":"fi","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"CelestineTan03"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"CelestineTan03"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"CelestineTan03"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"CelestineTan03":8,"-":36}}]
