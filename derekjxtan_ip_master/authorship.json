[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"# duke.Duke project template","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"derekjxtan":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"derekjxtan"},"content":"checkstyle {","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"derekjxtan":21,"-":41}},{"path":"data/state.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"todo / 1 / read book","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"deadline / 0 / return book / 2023-06-06 1200","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"event / 0 / project meeting / 2023-08-06 1400 / 2023-08-06 1600","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"todo / 1 / join sports club","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"event / 0 / tutorial / 2023-08-27 1200 / 2023-08-27 1400","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"deadline / 0 / chem homework / 2023-08-06 1600","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"todo / 1 / run","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"deadline / 1 / math homework / 2023-09-13 1800","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"deadline / 1 / mathhomework / 2023-09-10 1900","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"deadline / 0 / mathhomework / 2023-09-09 2000","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"deadline / 0 / mathhomework / 2023-09-06 1400","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"deadline / 1 / mathhomework / 2023-09-05 1500","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"event / 0 / marathon / 2023-09-20 1400 / 2023-09-20 1600","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"derekjxtan":13}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"# User Guide for _Duke_","lastModifiedDate":"2023-09-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"### Add Event: ```event```","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"Adds an Event to the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"### Add Deadline: ```deadline```","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"Adds a Deadline to the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"### Add Todo: ```todo```","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"Adds a Todo to the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"### Delete: ```delete```","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"Deletes a task from the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"### Mark: ```mark```","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"Marks a task in the list as done.","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"### Unmark: ```unmark```","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"Unmarks a task in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"### List: ```list```","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"Lists all tasks in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"### On: ```on```","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"Lists all tasks in the list on a given date.","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"### Find: ```find```","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"Lists all tasks in the list that contains a given keyword.","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"### Get statistics: ```stats```","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"Gets key statistics about the tasks in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"### Exit: ```bye```","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"Exits from the application.","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"### `event` - Adds a event to the list","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"Format: ```event EVENT_NAME /from EVENT_START /to EVENT_END```","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"* EVENT_START and EVENT_END should be in the form \"YYYY-MM-DD HHmm\"","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"Examples","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"* ```event award ceremony /from 2023-09-20 1400 /to 2023-09-20 1600```","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"* ```event marathon /from 2023-09-20 2300 /to 2023-09-21 0300```","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"Expected output:","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"derekjxtan"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"derekjxtan"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"derekjxtan"},"content":"[E][] EVENT_NAME (from: EVENT_START to: EVENT_END)","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"derekjxtan"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"derekjxtan"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"derekjxtan"},"content":"### `deadline` - Adds a deadline to the list","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"derekjxtan"},"content":"Format: ```deadline DEADLINE_NAME /by DEADLINE_BY```","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"derekjxtan"},"content":"* DEADLINE_BY should be in the form \"YYYY-MM-DD HHmm\"","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"derekjxtan"},"content":"Examples","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"derekjxtan"},"content":"* ```deadline math homwork /by 2023-09-20 1600```","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"derekjxtan"},"content":"* ```deadline report /by 2023-09-20 2200```","lastModifiedDate":"2023-09-20"},{"lineNumber":77,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"derekjxtan"},"content":"Expected output:","lastModifiedDate":"2023-09-20"},{"lineNumber":79,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"derekjxtan"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":81,"author":{"gitId":"derekjxtan"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"derekjxtan"},"content":"[D][] DEADLINE_NAME (by: DEADLINE_BY)","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"derekjxtan"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"derekjxtan"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":85,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"derekjxtan"},"content":"### `todo` - Adds a todo to the list","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"derekjxtan"},"content":"Format: ```todo TODO_NAME```","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"derekjxtan"},"content":"Examples","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"derekjxtan"},"content":"* ```todo run```","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"derekjxtan"},"content":"* ```todo math homework```","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"derekjxtan"},"content":"Expected output:","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"derekjxtan"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"derekjxtan"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"derekjxtan"},"content":"[T][] TODO_NAME","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"derekjxtan"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"derekjxtan"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"derekjxtan"},"content":"### `delete` - Deletes a task from the list","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"derekjxtan"},"content":"Format: ```delete TASK_NUMBER```","lastModifiedDate":"2023-09-20"},{"lineNumber":105,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":106,"author":{"gitId":"derekjxtan"},"content":"Examples","lastModifiedDate":"2023-09-20"},{"lineNumber":107,"author":{"gitId":"derekjxtan"},"content":"* ```delete 1```","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":109,"author":{"gitId":"derekjxtan"},"content":"Expected output:","lastModifiedDate":"2023-09-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":111,"author":{"gitId":"derekjxtan"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"derekjxtan"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"derekjxtan"},"content":"[T][] TODO_NAME","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"derekjxtan"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"derekjxtan"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"derekjxtan"},"content":"### `mark` - Marks a task in the list as done","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":119,"author":{"gitId":"derekjxtan"},"content":"Format: ```mark TASK_NUMBER```","lastModifiedDate":"2023-09-20"},{"lineNumber":120,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":121,"author":{"gitId":"derekjxtan"},"content":"Examples","lastModifiedDate":"2023-09-20"},{"lineNumber":122,"author":{"gitId":"derekjxtan"},"content":"* ```mark 1```","lastModifiedDate":"2023-09-20"},{"lineNumber":123,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":124,"author":{"gitId":"derekjxtan"},"content":"Expected output:","lastModifiedDate":"2023-09-20"},{"lineNumber":125,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":126,"author":{"gitId":"derekjxtan"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":127,"author":{"gitId":"derekjxtan"},"content":"Nice!. I\u0027ve marked this task as done:","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"derekjxtan"},"content":"[T][X] TODO_NAME","lastModifiedDate":"2023-09-20"},{"lineNumber":129,"author":{"gitId":"derekjxtan"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":130,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":131,"author":{"gitId":"derekjxtan"},"content":"### `unmark` - Unmarks a task in the list","lastModifiedDate":"2023-09-20"},{"lineNumber":132,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":133,"author":{"gitId":"derekjxtan"},"content":"Format: ```unmark TASK_NUMBER```","lastModifiedDate":"2023-09-20"},{"lineNumber":134,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":135,"author":{"gitId":"derekjxtan"},"content":"Examples","lastModifiedDate":"2023-09-20"},{"lineNumber":136,"author":{"gitId":"derekjxtan"},"content":"* ```unmark 1```","lastModifiedDate":"2023-09-20"},{"lineNumber":137,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":138,"author":{"gitId":"derekjxtan"},"content":"Expected output:","lastModifiedDate":"2023-09-20"},{"lineNumber":139,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":140,"author":{"gitId":"derekjxtan"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":141,"author":{"gitId":"derekjxtan"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-09-20"},{"lineNumber":142,"author":{"gitId":"derekjxtan"},"content":"[T][] TODO_NAME","lastModifiedDate":"2023-09-20"},{"lineNumber":143,"author":{"gitId":"derekjxtan"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":144,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":145,"author":{"gitId":"derekjxtan"},"content":"### `list` - Lists all tasks in the list","lastModifiedDate":"2023-09-20"},{"lineNumber":146,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":147,"author":{"gitId":"derekjxtan"},"content":"Format: ```list```","lastModifiedDate":"2023-09-20"},{"lineNumber":148,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":149,"author":{"gitId":"derekjxtan"},"content":"Examples","lastModifiedDate":"2023-09-20"},{"lineNumber":150,"author":{"gitId":"derekjxtan"},"content":"* ```list```","lastModifiedDate":"2023-09-20"},{"lineNumber":151,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":152,"author":{"gitId":"derekjxtan"},"content":"Expected output:","lastModifiedDate":"2023-09-20"},{"lineNumber":153,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":154,"author":{"gitId":"derekjxtan"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":155,"author":{"gitId":"derekjxtan"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-09-20"},{"lineNumber":156,"author":{"gitId":"derekjxtan"},"content":"1. [T][] TODO_NAME","lastModifiedDate":"2023-09-20"},{"lineNumber":157,"author":{"gitId":"derekjxtan"},"content":"2. [D][] DEADLINE_NAME (by: DEADLINE_BY)","lastModifiedDate":"2023-09-20"},{"lineNumber":158,"author":{"gitId":"derekjxtan"},"content":"3. [E][] EVENT_NAME (from: EVENT_FROM to: EVENT_TO)","lastModifiedDate":"2023-09-20"},{"lineNumber":159,"author":{"gitId":"derekjxtan"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":160,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":161,"author":{"gitId":"derekjxtan"},"content":"### `on` - Lists all tasks in the list on a given date","lastModifiedDate":"2023-09-20"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":163,"author":{"gitId":"derekjxtan"},"content":"Format: ```on DATE```","lastModifiedDate":"2023-09-20"},{"lineNumber":164,"author":{"gitId":"derekjxtan"},"content":"* DATE should be in the form \"YYYY-MM-DD HHmm\"","lastModifiedDate":"2023-09-20"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":166,"author":{"gitId":"derekjxtan"},"content":"Examples","lastModifiedDate":"2023-09-20"},{"lineNumber":167,"author":{"gitId":"derekjxtan"},"content":"* ```on 2023-09-20```","lastModifiedDate":"2023-09-20"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":169,"author":{"gitId":"derekjxtan"},"content":"Expected output:","lastModifiedDate":"2023-09-20"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":171,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":172,"author":{"gitId":"derekjxtan"},"content":"1. [T][] TODO_NAME","lastModifiedDate":"2023-09-20"},{"lineNumber":173,"author":{"gitId":"derekjxtan"},"content":"2. [D][] DEADLINE_NAME (by: DEADLINE_BY)","lastModifiedDate":"2023-09-20"},{"lineNumber":174,"author":{"gitId":"derekjxtan"},"content":"3. [E][] EVENT_NAME (from: EVENT_FROM to: EVENT_TO)","lastModifiedDate":"2023-09-20"},{"lineNumber":175,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":176,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":177,"author":{"gitId":"derekjxtan"},"content":"### `find` - Lists all tasks in the list with a keyword","lastModifiedDate":"2023-09-20"},{"lineNumber":178,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":179,"author":{"gitId":"derekjxtan"},"content":"Format: ```find KEYWORD```","lastModifiedDate":"2023-09-20"},{"lineNumber":180,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":181,"author":{"gitId":"derekjxtan"},"content":"Examples","lastModifiedDate":"2023-09-20"},{"lineNumber":182,"author":{"gitId":"derekjxtan"},"content":"* ```find homework```","lastModifiedDate":"2023-09-20"},{"lineNumber":183,"author":{"gitId":"derekjxtan"},"content":"* ```find math homework```","lastModifiedDate":"2023-09-20"},{"lineNumber":184,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":185,"author":{"gitId":"derekjxtan"},"content":"Expected output:","lastModifiedDate":"2023-09-20"},{"lineNumber":186,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":187,"author":{"gitId":"derekjxtan"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":188,"author":{"gitId":"derekjxtan"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-09-20"},{"lineNumber":189,"author":{"gitId":"derekjxtan"},"content":"1. [T][] TODO_NAME","lastModifiedDate":"2023-09-20"},{"lineNumber":190,"author":{"gitId":"derekjxtan"},"content":"2. [D][] DEADLINE_NAME (by: DEADLINE_BY)","lastModifiedDate":"2023-09-20"},{"lineNumber":191,"author":{"gitId":"derekjxtan"},"content":"3. [E][] EVENT_NAME (from: EVENT_FROM to: EVENT_TO)","lastModifiedDate":"2023-09-20"},{"lineNumber":192,"author":{"gitId":"derekjxtan"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":193,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":194,"author":{"gitId":"derekjxtan"},"content":"### `stats` - Lists key statistics regarding the list","lastModifiedDate":"2023-09-20"},{"lineNumber":195,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":196,"author":{"gitId":"derekjxtan"},"content":"Format: ```stats```","lastModifiedDate":"2023-09-20"},{"lineNumber":197,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":198,"author":{"gitId":"derekjxtan"},"content":"Examples","lastModifiedDate":"2023-09-20"},{"lineNumber":199,"author":{"gitId":"derekjxtan"},"content":"* ```stats```","lastModifiedDate":"2023-09-20"},{"lineNumber":200,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":201,"author":{"gitId":"derekjxtan"},"content":"Expected output:","lastModifiedDate":"2023-09-20"},{"lineNumber":202,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":203,"author":{"gitId":"derekjxtan"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":204,"author":{"gitId":"derekjxtan"},"content":"Tasks completed in the past 1 day is: 0","lastModifiedDate":"2023-09-20"},{"lineNumber":205,"author":{"gitId":"derekjxtan"},"content":"Tasks completed in the past 3 day is: 2","lastModifiedDate":"2023-09-20"},{"lineNumber":206,"author":{"gitId":"derekjxtan"},"content":"Tasks completed in the past 4 day is: 5","lastModifiedDate":"2023-09-20"},{"lineNumber":207,"author":{"gitId":"derekjxtan"},"content":"```","lastModifiedDate":"2023-09-20"},{"lineNumber":208,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":209,"author":{"gitId":"derekjxtan"},"content":"### `bye` - Exits the application","lastModifiedDate":"2023-09-20"},{"lineNumber":210,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":211,"author":{"gitId":"derekjxtan"},"content":"Format: ```bye```","lastModifiedDate":"2023-09-20"},{"lineNumber":212,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":213,"author":{"gitId":"derekjxtan"},"content":"Examples","lastModifiedDate":"2023-09-20"},{"lineNumber":214,"author":{"gitId":"derekjxtan"},"content":"* ```bye```","lastModifiedDate":"2023-09-20"},{"lineNumber":215,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":216,"author":{"gitId":"derekjxtan"},"content":"Expected output:","lastModifiedDate":"2023-09-20"},{"lineNumber":217,"author":{"gitId":"derekjxtan"},"content":"No output, user interface closes.","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"derekjxtan":200,"-":17}},{"path":"src/main/java/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import duke.Deadline;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import duke.Event;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"import duke.StorageException;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"import duke.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"import duke.ToDo;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"import duke.UI;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":" * A command to add either a Todo, Deadline or Event.","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"     * Command to add a todo.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"    public static final String COMMAND_ADD_TODO \u003d \"todo\";","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"     * Command to add a deadline.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"    public static final String COMMAND_ADD_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"     * Command to add an event.","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"    public static final String COMMAND_ADD_EVENT \u003d \"event\";","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"     * Format of input.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"    private static final String DATETIME_INPUT_FORMAT \u003d \"yyyy-MM-dd HHmm\";","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"     * Formatter object to format user datetime inputs.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"    public static final DateTimeFormatter DATE_TIME_INPUT_FORMATTER \u003d","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"            DateTimeFormatter.ofPattern(DATETIME_INPUT_FORMAT);","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"     * Constructor for the Add Command class.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"     * @param params Parsed user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"    public AddCommand(ArrayList\u003cString\u003e params) throws InvalidCommandException {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"        super(params);","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"        if (params.get(0).equals(COMMAND_ADD_TODO)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"            if (params.size() !\u003d 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"                throw new InvalidCommandException(\"Add todo command format is wrong\");","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"        if (params.get(0).equals(COMMAND_ADD_DEADLINE)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"            if (params.size() !\u003d 3) {","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"                throw new InvalidCommandException(\"Add deadline command format is wrong\");","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"        if (params.get(0).equals(COMMAND_ADD_EVENT)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"derekjxtan"},"content":"            if (params.size() !\u003d 4) {","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"derekjxtan"},"content":"                throw new InvalidCommandException(\"Add event command format is wrong\");","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"derekjxtan"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"derekjxtan"},"content":"     * Executes the command.","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"derekjxtan"},"content":"     * @param tasks   List of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"derekjxtan"},"content":"     * @param ui      UI of the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"derekjxtan"},"content":"     * @param storage Object to handle data storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"derekjxtan"},"content":"     * @return Message to be shown to the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"derekjxtan"},"content":"     * @throws DukeException If error encountered when saving data.","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"derekjxtan"},"content":"    public String execute(TaskList tasks, UI ui, Storage storage) throws StorageException {","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"derekjxtan"},"content":"        switch (super.params.get(0)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"derekjxtan"},"content":"        case AddCommand.COMMAND_ADD_TODO:","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"derekjxtan"},"content":"            ToDo newTodo \u003d new ToDo(params.get(1));","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"derekjxtan"},"content":"            Task task \u003d tasks.add(newTodo);","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"derekjxtan"},"content":"            tasks.saveState(storage);","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"derekjxtan"},"content":"            return ui.getTaskAddedMessage(task, tasks.getTaskCount());","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"derekjxtan"},"content":"        case AddCommand.COMMAND_ADD_DEADLINE:","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"derekjxtan"},"content":"            Deadline newDeadline \u003d new Deadline(params.get(1),","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"derekjxtan"},"content":"                    LocalDateTime.parse(params.get(2), DATE_TIME_INPUT_FORMATTER));","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"derekjxtan"},"content":"            task \u003d tasks.add(newDeadline);","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"derekjxtan"},"content":"            tasks.saveState(storage);","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"derekjxtan"},"content":"            return ui.getTaskAddedMessage(task, tasks.getTaskCount());","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"derekjxtan"},"content":"        default:","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"derekjxtan"},"content":"            Event newEvent \u003d new Event(params.get(1),","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"derekjxtan"},"content":"                    LocalDateTime.parse(params.get(2), DATE_TIME_INPUT_FORMATTER),","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"derekjxtan"},"content":"                    LocalDateTime.parse(params.get(3), DATE_TIME_INPUT_FORMATTER));","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"derekjxtan"},"content":"            task \u003d tasks.add(newEvent);","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"derekjxtan"},"content":"            tasks.saveState(storage);","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"derekjxtan"},"content":"            return ui.getTaskAddedMessage(task, tasks.getTaskCount());","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"derekjxtan"},"content":"     * Returns a boolean representing whether the command requires the application to exit.","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"derekjxtan"},"content":"     * @return Boolean representing whether the command exits the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"derekjxtan"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":108,"author":{"gitId":"derekjxtan"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"derekjxtan":110}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"import duke.UI;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":" * A abstract class for all types of commands to inherit from.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"public abstract class Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"     * Parsed form of user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"    protected ArrayList\u003cString\u003e params;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"     * Constructor for the Command class.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"     * @param params Parsed user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"    public Command(ArrayList\u003cString\u003e params) {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"        this.params \u003d params;","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"     * Executes the command.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"     * @param tasks   List of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"     * @param ui      UI of the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"     * @param storage Object to handle data storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"     * @return Message to be shown to the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"     * @throws DukeException If error is encountered during execution","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"    public abstract String execute(TaskList tasks, UI ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"     * Returns a boolean representing whether the command requires the application to exit.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"     * @return Boolean representing whether the command exits the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"        if (!(o instanceof Command)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"            return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"        return params.equals(((Command) o).params);","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"derekjxtan":53}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import duke.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import duke.UI;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":" * A command to delete a task from a list of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"     * Command to delete a task.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"    public static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"     * Constructor for the DeleteCommand class.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"     * @param params Parsed user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"    public DeleteCommand(ArrayList\u003cString\u003e params) throws InvalidCommandException {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"        super(params);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"        if (params.size() !\u003d 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"            throw new InvalidCommandException(\"Add todo command format is wrong\");","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"     * Executes the command.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"     * @param tasks   List of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"     * @param ui      UI of the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"     * @param storage Object to handle data storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"     * @return Message to be shown to the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"     * @throws DukeException If index is out of range.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"    public String execute(TaskList tasks, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"        int index \u003d Integer.parseInt(params.get(1)) - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"        Task task \u003d tasks.remove(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"        tasks.saveState(storage);","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"        return ui.getTaskDeletedMessage(task, tasks.getTaskCount());","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"     * Returns a boolean representing whether the command requires the application to exit.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"     * @return Boolean representing whether the command exits the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"derekjxtan":58}},{"path":"src/main/java/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import duke.UI;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":" * A command to exit the chatbot.","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"     * Command to exit the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"    public static final String COMMAND_EXIT \u003d \"bye\";","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"     * Constructor for the ExitCommand class.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"     * @param params Parsed user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"    public ExitCommand(ArrayList\u003cString\u003e params) throws InvalidCommandException {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"        super(params);","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"        if (params.size() !\u003d 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"            throw new InvalidCommandException(\"Add todo command format is wrong\");","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"     * Executes the command.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"     * @param tasks   List of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"     * @param ui      UI of the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"     * @param storage Object to handle data storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"     * @return","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"    public String execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"        return ui.getGoodbyeMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"     * Returns a boolean representing whether the command requires the application to exit.","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"     * @return Boolean representing whether the command exits the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"        return true;","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"derekjxtan":52}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import duke.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"import duke.UI;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":" * A command to find tasks with a keyword.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"     * Command to fina tasks by keywords.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"    public static final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"     * Constructor for the FindCommand class.","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"     * @param params Parsed user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"    public FindCommand(ArrayList\u003cString\u003e params) throws InvalidCommandException {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"        super(params);","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"        if (params.size() !\u003d 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"            throw new InvalidCommandException(\"Add todo command format is wrong\");","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"     * Executes the command.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"     * @param tasks   List of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"     * @param ui      UI of the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"     * @param storage Object to handle data storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"     * @return","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"    public String execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"        ArrayList\u003cTask\u003e tasksContainingKeyword \u003d tasks.getTasksContainingKeyword(params.get(1));","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"        return ui.getTasksMatching(tasksContainingKeyword);","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"     * Returns a boolean representing whether the command requires the application to exit.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"     * @return Boolean representing whether the command exits the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"derekjxtan":54}},{"path":"src/main/java/command/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":" * Signals the input from the user is not recognised as a valid command.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"    public InvalidCommandException(String msg) {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"        super(msg);","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"derekjxtan":12}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import duke.UI;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":" * A command to list all tasks that are currently saved in the chatbot.","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"     * Command to list all tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"    public static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"     * Constructor for the ListCommand class.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"     * @param params Parsed user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"    public ListCommand(ArrayList\u003cString\u003e params) throws InvalidCommandException {","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"        super(params);","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"        if (params.size() !\u003d 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"            throw new InvalidCommandException(\"List command format is wrong\");","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"     * Executes the command.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"     * @param tasks   List of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"     * @param ui      UI of the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"     * @param storage Object to handle data storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"     * @return","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"    public String execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"        return ui.getAllTasksMessage(tasks);","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"     * Returns a boolean representing whether the command requires the application to exit.","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"     * @return Boolean representing whether the command exits the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"derekjxtan":52}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import duke.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import duke.UI;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":" * A command to mark a task.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"     * Command to mark a task.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"    public static final String COMMAND_MARK \u003d \"mark\";","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"     * Constructor for the MarkCommand class.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"     * @param params Parsed user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"    public MarkCommand(ArrayList\u003cString\u003e params) throws InvalidCommandException {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"        super(params);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"        if (params.size() !\u003d 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"            throw new InvalidCommandException(\"Add todo command format is wrong\");","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"     * Executes the command.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"     * @param tasks   List of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"     * @param ui      UI of the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"     * @param storage Object to handle data storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"     * @return Message to be shown to the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"     * @throws DukeException If error encountered when saving data.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"    public String execute(TaskList tasks, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"        int index \u003d Integer.parseInt(params.get(1)) - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"        Task task \u003d tasks.mark(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"        tasks.saveState(storage);","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"        return ui.getTaskMarkedMessage(task);","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"     * Returns a boolean representing whether the command requires the application to exit.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"     * @return Boolean representing whether the command exits the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"derekjxtan":58}},{"path":"src/main/java/command/OnCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import duke.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import duke.UI;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":" * A command to get tasks on a given date.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"public class OnCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"     * Command to search for tasks on a date.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"    public static final String COMMAND_ON \u003d \"on\";","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"     * Constructor for the OnCommand class.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"     * @param params Parsed user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"    public OnCommand(ArrayList\u003cString\u003e params) throws InvalidCommandException {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"        super(params);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"        if (params.size() !\u003d 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"            throw new InvalidCommandException(\"Add todo command format is wrong\");","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"     * Executes the command.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"     * @param tasks   List of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"     * @param ui      UI of the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"     * @param storage Object to handle data storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"     * @return","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"    public String execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"        LocalDate date \u003d LocalDate.parse(params.get(1));","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"        ArrayList\u003cTask\u003e tasksOnDate \u003d tasks.getTasksOn(date);","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"        return ui.getTasksOn(tasksOnDate);","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"     * Returns a boolean representing whether the command requires the application to exit.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"     * @return Boolean representing whether the command exits the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"derekjxtan":56}},{"path":"src/main/java/command/StatisticsCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package command;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"import duke.UI;","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":" * A command to generate statistics on the tasks.","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"public class StatisticsCommand extends Command {","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"     * Command to get statistics on tasks.","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"    public static final String COMMAND_STATISTICS \u003d \"stats\";","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"     * Constructor for the StatisticsCommand class.","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"     * @param params Parsed user input.","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"    public StatisticsCommand(ArrayList\u003cString\u003e params) throws InvalidCommandException {","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"        super(params);","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"        if (params.size() !\u003d 1) {","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"            throw new InvalidCommandException(\"Statistics command format is wrong\");","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"    public String execute(TaskList tasks, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"        return ui.getStatisticsMessage(tasks);","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"        return false;","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"derekjxtan":40}},{"path":"src/main/java/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package command;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"import duke.DukeException;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import duke.Storage;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import duke.Task;","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"import duke.TaskList;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import duke.UI;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":" * A command to unmark a task.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"     * Command to unmark a task.","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"    public static final String COMMAND_UNMARK \u003d \"unmark\";","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"     * Constructor for the UnmarkCommand class.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"     * @param params Parsed user input.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"    public UnmarkCommand(ArrayList\u003cString\u003e params) throws InvalidCommandException {","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"        super(params);","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"        if (params.size() !\u003d 2) {","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"            throw new InvalidCommandException(\"Add todo command format is wrong\");","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"     * Executes the command.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"     * @param tasks   List of tasks.","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"     * @param ui      UI of the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"     * @param storage Object to handle data storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"     * @return Message to be shown to the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"     * @throws DukeException If error encountered when saving data.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"    public String execute(TaskList tasks, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"        int index \u003d Integer.parseInt(params.get(1)) - 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"        Task task \u003d tasks.unmark(index);","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"        tasks.saveState(storage);","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"        return ui.getTaskUnmarkedMessage(task);","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"     * Returns a boolean representing whether the command requires the application to exit.","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"     * @return Boolean representing whether the command exits the application.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"        return false;","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"derekjxtan":58}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":" * A Deadline type task that can be handled by the chatbot.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"     * Date and time that the deadline must be done by","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"     * Constructor for the Deadline class.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"     * @param name Name of the Deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"     * @param by DateTime that the deadline must be completed by.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"    public Deadline(String name, LocalDateTime by) {","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"        super(name);","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"        assert this.by !\u003d null : \"by of Deadline should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"     * @return A string representing the deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(DATE_TIME_OUTPUT_FORMATTER) + \")\";","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"     * Returns a string representation of the task to be saved.","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"     * @return A string representing the deadline to be saved.","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"    public String formatStringToSave() {","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"        String[] state \u003d new String[]{ \"deadline\", this.getDone() ? \"1\" : \"0\", this.getTaskName(),","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"                this.by.format(Duke.DATE_TIME_INPUT_FORMATTER) };","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"        return String.join(\" / \", state);","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"     * Returns whether the event is on a date.","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"     * @return A boolean representation of whether the event is on a given date.","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"    public boolean isOnDate(LocalDate date) {","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"        return date.isEqual(this.by.toLocalDate());","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"derekjxtan"},"content":"    public boolean isBetween(LocalDate left, LocalDate right) {","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"        LocalDate deadlineDate \u003d this.by.toLocalDate();","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"derekjxtan"},"content":"        return this.getDone() \u0026\u0026 (deadlineDate.isEqual(left) || deadlineDate.isEqual(right)","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"derekjxtan"},"content":"                || (deadlineDate.isAfter(left) \u0026\u0026 deadlineDate.isBefore(right)));","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"derekjxtan":65}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package duke;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":" * Controller for DialogBox.","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"    private Label dialog \u003d new Label();","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"    private ImageView displayPicture \u003d new ImageView();","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"    private DialogBox(Label label, ImageView img) {","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"        dialog.setText(label.getText());","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"        displayPicture.setImage(img.getImage());","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"    private void flip() {","lastModifiedDate":"2023-09-04"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-04"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-04"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-04"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-04"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"        db.flip();","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"        return db;","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"derekjxtan":58}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import command.Command;","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":" * A chatbot. Able to read user input and perform a series of tasks.","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"public class Duke {","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"    private static final String NAME \u003d \"DEREK\";","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"    private static final String DATETIME_INPUT_FORMAT \u003d \"yyyy-MM-dd HHmm\";","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"    public static final DateTimeFormatter DATE_TIME_INPUT_FORMATTER \u003d","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"            DateTimeFormatter.ofPattern(DATETIME_INPUT_FORMAT);","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"    private UI ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"     * Constructor for Duke class.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"     * @param filePath Relative path of file where data is to be stored.","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"        this.ui \u003d new UI(NAME);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"            this.tasks \u003d new TaskList(storage.loadData());","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"            ui.getLoadingErrorMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"     * Constructor for Duke class.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"    public Duke() {","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"        this.storage \u003d new Storage(\"./data/state.txt\");","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"        this.ui \u003d new UI(NAME);","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"        try {","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"            this.tasks \u003d new TaskList(storage.loadData());","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"            ui.getLoadingErrorMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2023-09-03"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"        assert this.storage !\u003d null : \"storage of Duke should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"        assert this.ui !\u003d null : \"ui of Duke should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"        assert this.tasks !\u003d null : \"taskList of Duke should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"    String getResponse(String input) {","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"            Command command \u003d Parser.parseUserInput(input);","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"            assert command !\u003d null : \"Command returned from parsing user input should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"            String response \u003d command.execute(tasks, ui, storage);","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"derekjxtan"},"content":"            assert response !\u003d null : \"Response returned from executing command should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"derekjxtan"},"content":"            if (command.isExit()) {","lastModifiedDate":"2023-09-06"},{"lineNumber":63,"author":{"gitId":"derekjxtan"},"content":"                javafx.application.Platform.exit();","lastModifiedDate":"2023-09-06"},{"lineNumber":64,"author":{"gitId":"derekjxtan"},"content":"            }","lastModifiedDate":"2023-09-06"},{"lineNumber":65,"author":{"gitId":"derekjxtan"},"content":"            return response;","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"derekjxtan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"derekjxtan"},"content":"            return e.getMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":70,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"derekjxtan"},"content":"    String getWelcomeMessage() {","lastModifiedDate":"2023-09-06"},{"lineNumber":72,"author":{"gitId":"derekjxtan"},"content":"        return ui.getWelcomeMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":73,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"derekjxtan":73,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":" * Signals an exception caused by functions in this project.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"        super(msg);","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"derekjxtan":10}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":" * A Event type task that can be handled by the chatbot.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"     * Date and time that the event starts.","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"     * Date and time that the event ends.","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"     * Constructor for the Deadline class.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"     * @param name Name of the Deadline.","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"     * @param from DateTime that the event starts.","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"     * @param from DateTime that the event ends.","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"    public Event(String name, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"        super(name);","lastModifiedDate":"2023-08-23"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-08-23"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"        assert this.from !\u003d null : \"from of Event should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"        assert this.to !\u003d null : \"to of Event should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"     * Returns a string representation of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"     * @return A string representing the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from.format(DATE_TIME_OUTPUT_FORMATTER)","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"                + \" to: \" + this.to.format(DATE_TIME_OUTPUT_FORMATTER) + \")\";","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"     * Returns a string representation of the event.","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"     * @return A string representing the event to be saved.","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"    public String formatStringToSave() {","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"        String[] state \u003d new String[]{ \"event\", this.getDone() ? \"1\" : \"0\", this.getTaskName(),","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"                this.from.format(Duke.DATE_TIME_INPUT_FORMATTER), this.to.format(Duke.DATE_TIME_INPUT_FORMATTER) };","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"        return String.join(\" / \", state);","lastModifiedDate":"2023-08-27"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"    public boolean isOnDate(LocalDate date) {","lastModifiedDate":"2023-08-27"},{"lineNumber":60,"author":{"gitId":"derekjxtan"},"content":"        return date.isEqual(this.from.toLocalDate()) || date.isEqual(this.to.toLocalDate())","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"                || (date.isAfter(this.from.toLocalDate()) \u0026\u0026 date.isBefore(this.to.toLocalDate()));","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"derekjxtan"},"content":"    public boolean isBetween(LocalDate left, LocalDate right) {","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"derekjxtan"},"content":"        LocalDate toDate \u003d this.to.toLocalDate();","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"derekjxtan"},"content":"        return this.getDone() \u0026\u0026 (toDate.isEqual(left) || toDate.isEqual(right)","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"derekjxtan"},"content":"                || (toDate.isAfter(left) \u0026\u0026 toDate.isBefore(right)));","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"derekjxtan":70}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package duke;","lastModifiedDate":"2023-09-03"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":" * A class to handle launching the GUI.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"public class Launcher {","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"derekjxtan":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package duke;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":" * Main class to drive the application.","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"        try {","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().addWelcomeMessage();","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"            stage.show();","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"derekjxtan":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package duke;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":" * Controller for MainWindow.","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"public class MainWindow {","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"    private Duke duke;","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-04"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-04"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"        duke \u003d d;","lastModifiedDate":"2023-09-04"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"     * Adds the welcome message to screen.","lastModifiedDate":"2023-09-06"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-06"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"    public void addWelcomeMessage() {","lastModifiedDate":"2023-09-06"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"        Label welcomeLabel \u003d new Label(duke.getWelcomeMessage());","lastModifiedDate":"2023-09-06"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(welcomeLabel, new ImageView(dukeImage)));","lastModifiedDate":"2023-09-06"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-04"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-04"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-04"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-04"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"    @FXML","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"        Label input \u003d new Label(userInput.getText());","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"        Label response \u003d new Label(duke.getResponse(userInput.getText()));","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"                DialogBox.getUserDialog(input, new ImageView(userImage)),","lastModifiedDate":"2023-09-04"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"                DialogBox.getDukeDialog(response, new ImageView(dukeImage))","lastModifiedDate":"2023-09-04"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"        );","lastModifiedDate":"2023-09-04"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-04"},{"lineNumber":60,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-04"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"derekjxtan":61}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import command.AddCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"import command.Command;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import command.DeleteCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"import command.ExitCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"import command.FindCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"import command.InvalidCommandException;","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"import command.ListCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"import command.MarkCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"import command.OnCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"import command.StatisticsCommand;","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"import command.UnmarkCommand;","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":" * A class to handle parsing of inputs.","lastModifiedDate":"2023-09-03"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"public class Parser {","lastModifiedDate":"2023-08-28"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"     * Delimiter between words.","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"    private static final String DELIMITER_COMMAND \u003d \" \";","lastModifiedDate":"2023-08-28"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"     * Delimiter between dates in user input.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"    private static final String DELIMITER_DATE \u003d \" /\";","lastModifiedDate":"2023-08-28"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"     * Delimiter between sections in file input.","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"    private static final String DELIMITER_INPUT \u003d \" / \";","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"     * Returns parsed input from the user.","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"     * @param input Input from user.","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"     * @throws InvalidCommandException If the input is not of the recognised form.","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"    public static Command parseUserInput(String input) throws InvalidCommandException {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"        ArrayList\u003cString\u003e parsedInput \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"        String[] splitInputByDateDelimiter \u003d input.split(DELIMITER_DATE);","lastModifiedDate":"2023-08-28"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"        for (int i \u003d 1; i \u003c splitInputByDateDelimiter.length; i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"            String[] split \u003d splitInputByDateDelimiter[i].split(DELIMITER_COMMAND);","lastModifiedDate":"2023-08-28"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"            if (split.length \u003c\u003d 1) {","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"                throw new InvalidCommandException(\"Invalid input for date\");","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"            splitInputByDateDelimiter[i] \u003d String.join(\" \", Arrays.copyOfRange(split, 1, split.length));","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"        String commandString \u003d splitInputByDateDelimiter[0];","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"        String[] splitCommandStringByCommandDelimiter \u003d commandString.split(DELIMITER_COMMAND);","lastModifiedDate":"2023-08-28"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"        String command \u003d splitCommandStringByCommandDelimiter[0];","lastModifiedDate":"2023-08-28"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"        parsedInput.add(command);","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"        if (splitCommandStringByCommandDelimiter.length \u003e 1) {","lastModifiedDate":"2023-08-28"},{"lineNumber":62,"author":{"gitId":"derekjxtan"},"content":"            String commandInput \u003d String.join(\" \", Arrays.copyOfRange(splitCommandStringByCommandDelimiter,","lastModifiedDate":"2023-08-28"},{"lineNumber":63,"author":{"gitId":"derekjxtan"},"content":"                    1, splitCommandStringByCommandDelimiter.length));","lastModifiedDate":"2023-08-28"},{"lineNumber":64,"author":{"gitId":"derekjxtan"},"content":"            parsedInput.add(commandInput);","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"derekjxtan"},"content":"        Collections.addAll(parsedInput, Arrays.copyOfRange(splitInputByDateDelimiter, 1,","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"derekjxtan"},"content":"                splitInputByDateDelimiter.length));","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"derekjxtan"},"content":"        return parsedInputToCommand(parsedInput);","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"derekjxtan"},"content":"    private static Command parsedInputToCommand(ArrayList\u003cString\u003e parsedInput) throws InvalidCommandException {","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"derekjxtan"},"content":"        if (parsedInput.size() \u003c 1) {","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"derekjxtan"},"content":"            throw new InvalidCommandException(\"Command cannot be empty\");","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"derekjxtan"},"content":"        Command command;","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"derekjxtan"},"content":"        switch(parsedInput.get(0)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"derekjxtan"},"content":"        case MarkCommand.COMMAND_MARK:","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"derekjxtan"},"content":"            command \u003d new MarkCommand(parsedInput);","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"derekjxtan"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":84,"author":{"gitId":"derekjxtan"},"content":"        case UnmarkCommand.COMMAND_UNMARK:","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"derekjxtan"},"content":"            command \u003d new UnmarkCommand(parsedInput);","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"derekjxtan"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"derekjxtan"},"content":"        case ListCommand.COMMAND_LIST:","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"derekjxtan"},"content":"            command \u003d new ListCommand(parsedInput);","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"derekjxtan"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"derekjxtan"},"content":"        case ExitCommand.COMMAND_EXIT:","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"derekjxtan"},"content":"            command \u003d new ExitCommand(parsedInput);","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"derekjxtan"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"derekjxtan"},"content":"        case DeleteCommand.COMMAND_DELETE:","lastModifiedDate":"2023-09-01"},{"lineNumber":94,"author":{"gitId":"derekjxtan"},"content":"            command \u003d new DeleteCommand(parsedInput);","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"derekjxtan"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"derekjxtan"},"content":"        case OnCommand.COMMAND_ON:","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"derekjxtan"},"content":"            command \u003d new OnCommand(parsedInput);","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"derekjxtan"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"derekjxtan"},"content":"        case FindCommand.COMMAND_FIND:","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"derekjxtan"},"content":"            command \u003d new FindCommand(parsedInput);","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"derekjxtan"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"derekjxtan"},"content":"        case AddCommand.COMMAND_ADD_TODO:","lastModifiedDate":"2023-09-01"},{"lineNumber":103,"author":{"gitId":"derekjxtan"},"content":"        case AddCommand.COMMAND_ADD_DEADLINE:","lastModifiedDate":"2023-09-01"},{"lineNumber":104,"author":{"gitId":"derekjxtan"},"content":"        case AddCommand.COMMAND_ADD_EVENT:","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"derekjxtan"},"content":"            command \u003d new AddCommand(parsedInput);","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"derekjxtan"},"content":"            break;","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"derekjxtan"},"content":"        case StatisticsCommand.COMMAND_STATISTICS:","lastModifiedDate":"2023-09-13"},{"lineNumber":108,"author":{"gitId":"derekjxtan"},"content":"            command \u003d new StatisticsCommand(parsedInput);","lastModifiedDate":"2023-09-13"},{"lineNumber":109,"author":{"gitId":"derekjxtan"},"content":"            break;","lastModifiedDate":"2023-09-13"},{"lineNumber":110,"author":{"gitId":"derekjxtan"},"content":"        default:","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"derekjxtan"},"content":"            throw new InvalidCommandException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"derekjxtan"},"content":"        return command;","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"derekjxtan":116}},{"path":"src/main/java/duke/Savable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package duke;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":" * An interface for objects that can be saved to file.","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"public interface Savable {","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"    String formatStringToSave();","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"derekjxtan":8}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import java.io.File;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-28"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":" * A class to handle loading data from and saving data to a file.","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"public class Storage {","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"    /** Relative path of the location of the file that stores the data **/","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"    private String filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"     * Constructor for the Storage class.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"     * @param filePath Relative path of the file that stores the data.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"        assert this.filePath !\u003d null : \"filePath of Storage should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"     * Saves data to the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"     * @param data ArrayList of the string representation of the data to be stored.","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"     * @throws IOException If the named file exists but is a directory rather than a regular file, does not exist","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"     *      but cannot be created, or cannot be opened for any other reason","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"    public void saveData(ArrayList\u003c? extends Savable\u003e data) throws StorageException {","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"        assert data !\u003d null : \"data to be saved to file should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"            String[] splitFilePath \u003d filePath.split(\"/\");","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"            String directories \u003d String.join(\"/\", Arrays.copyOfRange(splitFilePath, 0,","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"                    splitFilePath.length - 1));","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"            File dir \u003d new File(directories);","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"            if (!dir.exists()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"                if (!dir.mkdirs()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"                    throw new StorageException(\"Error Saving data\");","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-08-28"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"            for (int i \u003d 0; i \u003c data.size(); i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"                fw.write(data.get(i).formatStringToSave() + \"\\n\");","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"            fw.close();","lastModifiedDate":"2023-08-28"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"            throw new StorageException(\"Error Saving data\");","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":60,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"     * Returns the data stored in the file.","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"derekjxtan"},"content":"     * @returns Stored Data","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"derekjxtan"},"content":"     * @throws FileNotFoundException If the named file does not exist","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"derekjxtan"},"content":"    public ArrayList\u003cString\u003e loadData() throws FileNotFoundException {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"derekjxtan"},"content":"        ArrayList\u003cString\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"derekjxtan"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-08-28"},{"lineNumber":69,"author":{"gitId":"derekjxtan"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-08-28"},{"lineNumber":70,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"derekjxtan"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"derekjxtan"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2023-08-28"},{"lineNumber":73,"author":{"gitId":"derekjxtan"},"content":"            data.add(line);","lastModifiedDate":"2023-08-28"},{"lineNumber":74,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":75,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":76,"author":{"gitId":"derekjxtan"},"content":"        return data;","lastModifiedDate":"2023-08-28"},{"lineNumber":77,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":78,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"derekjxtan":78}},{"path":"src/main/java/duke/StorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":" * Signals that an error has occured while saving or loading data from a file.","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"public class StorageException extends DukeException {","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"    public StorageException(String msg) {","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"        super(msg);","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"derekjxtan":10}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":" * Abstract class that different types of Tasks inherit from.","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"public abstract class Task implements Savable {","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"     * format of output.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"    private static final String DATETIME_OUTPUT_FORMAT \u003d \"dd-MM-yyyy HH:mm\";","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"     * Formatter object to format output.","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"    public static final DateTimeFormatter DATE_TIME_OUTPUT_FORMATTER \u003d","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"            DateTimeFormatter.ofPattern(DATETIME_OUTPUT_FORMAT);","lastModifiedDate":"2023-09-03"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"     * Name of task.","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"    private String taskName;","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"     * Boolean to track whether the task has been marked as done.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"    private boolean isDone;","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-22"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"     * Constructor for the task class.","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"     * Tasks are initialised as not done.","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"     * @param name Name of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-22"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"    public Task(String name) {","lastModifiedDate":"2023-08-22"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"        this.taskName \u003d name;","lastModifiedDate":"2023-08-22"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"        assert this.taskName !\u003d null : \"taskName of Task should not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"     * Marks the task as undone.","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-22"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-22"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"derekjxtan"},"content":"     * @return A string representing the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-08-22"},{"lineNumber":63,"author":{"gitId":"derekjxtan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-22"},{"lineNumber":64,"author":{"gitId":"derekjxtan"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"derekjxtan"},"content":"            return \"[X] \" + taskName;","lastModifiedDate":"2023-08-22"},{"lineNumber":66,"author":{"gitId":"derekjxtan"},"content":"        } else {","lastModifiedDate":"2023-08-22"},{"lineNumber":67,"author":{"gitId":"derekjxtan"},"content":"            return \"[ ] \" + taskName;","lastModifiedDate":"2023-08-22"},{"lineNumber":68,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-08-22"},{"lineNumber":69,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-22"},{"lineNumber":70,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":71,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"derekjxtan"},"content":"     * Returns the done state of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"derekjxtan"},"content":"     * @return A boolean representation of whether the task is done.","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"derekjxtan"},"content":"    public boolean getDone() {","lastModifiedDate":"2023-08-27"},{"lineNumber":77,"author":{"gitId":"derekjxtan"},"content":"        return this.isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":79,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":80,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"derekjxtan"},"content":"     * Returns the name of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"derekjxtan"},"content":"     * @return The name of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"derekjxtan"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-08-27"},{"lineNumber":86,"author":{"gitId":"derekjxtan"},"content":"        return this.taskName;","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":88,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":89,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"derekjxtan"},"content":"     * Returns whether the task contains a keyword.","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"derekjxtan"},"content":"     * @return A boolean representation of whether the task contains a keyword.","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"derekjxtan"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"derekjxtan"},"content":"        if (this.taskName.contains(keyword)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"derekjxtan"},"content":"            return true;","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"derekjxtan"},"content":"        return false;","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":100,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"derekjxtan"},"content":"     * Returns whether the task is on a date.","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"derekjxtan"},"content":"     * @return A boolean representation of whether the task is on a given date.","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"derekjxtan"},"content":"    public abstract boolean isOnDate(LocalDate date);","lastModifiedDate":"2023-08-27"},{"lineNumber":107,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":108,"author":{"gitId":"derekjxtan"},"content":"    public abstract boolean isBetween(LocalDate left, LocalDate right);","lastModifiedDate":"2023-09-13"},{"lineNumber":109,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-08-22"}],"authorContributionMap":{"derekjxtan":109}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-28"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-28"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-28"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-28"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"import command.InvalidCommandException;","lastModifiedDate":"2023-09-03"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":" * A class to handle the tasks in added to the chatbot.","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"public class TaskList {","lastModifiedDate":"2023-08-28"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"    private static final String DATETIME_INPUT_FORMAT \u003d \"yyyy-MM-dd HHmm\";","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"    private static final DateTimeFormatter DATE_TIME_INPUT_FORMATTER \u003d","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"            DateTimeFormatter.ofPattern(DATETIME_INPUT_FORMAT);","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-03"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"     * Constructor for the TaskList class.","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"     * @param storedData Data stored in a file.","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"    public TaskList(ArrayList\u003cString\u003e storedData) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"        loadState(storedData);","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"     * Constructor for the TaskList class.","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-28"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"     * Returns the total number of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"     * @return Total number of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"    public int getTaskCount() {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"     * Adds a task to the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"     * @return Task added to the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"    public Task add(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"        assert task !\u003d null : \"Task to be added must not be null\";","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-08-28"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"        return task;","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"     * Removes a task to the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"     * @param index Index of the task to remove.","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"derekjxtan"},"content":"     * @return Task removed from the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"     * @throws InvalidCommandException If the provided index is out of range.","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"derekjxtan"},"content":"    public Task remove(int index) throws InvalidCommandException {","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"derekjxtan"},"content":"        if (!isTaskValid(index)) {","lastModifiedDate":"2023-08-28"},{"lineNumber":65,"author":{"gitId":"derekjxtan"},"content":"            throw new InvalidCommandException(\"☹ OOPS!!! The task index in invalid\");","lastModifiedDate":"2023-08-28"},{"lineNumber":66,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":67,"author":{"gitId":"derekjxtan"},"content":"        Task task \u003d this.tasks.remove(index);","lastModifiedDate":"2023-08-28"},{"lineNumber":68,"author":{"gitId":"derekjxtan"},"content":"        assert task !\u003d null : \"Task to be removed cannot be found\";","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"derekjxtan"},"content":"        return task;","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":71,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":72,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"derekjxtan"},"content":"     * Returns a list tasks on a given date.","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"derekjxtan"},"content":"     * @param date Date of interest to search for.","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"derekjxtan"},"content":"     * @return List of tasks on the given date.","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"derekjxtan"},"content":"    public ArrayList\u003cTask\u003e getTasksOn(LocalDate date) {","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"derekjxtan"},"content":"        ArrayList\u003cTask\u003e tasksOn \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"derekjxtan"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":81,"author":{"gitId":"derekjxtan"},"content":"            if (this.tasks.get(i).isOnDate(date)) {","lastModifiedDate":"2023-08-28"},{"lineNumber":82,"author":{"gitId":"derekjxtan"},"content":"                tasksOn.add(this.tasks.get(i));","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"derekjxtan"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":84,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":85,"author":{"gitId":"derekjxtan"},"content":"        return tasksOn;","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":87,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":88,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"derekjxtan"},"content":"     * Returns a list tasks on a given date.","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"derekjxtan"},"content":"     * @param keyword The keyword to match with in the task name.","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"derekjxtan"},"content":"     * @return List of tasks on the given date.","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"derekjxtan"},"content":"    public ArrayList\u003cTask\u003e getTasksContainingKeyword(String keyword) {","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"derekjxtan"},"content":"        ArrayList\u003cTask\u003e tasksOn \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"derekjxtan"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"derekjxtan"},"content":"            if (this.tasks.get(i).containsKeyword(keyword)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"derekjxtan"},"content":"                tasksOn.add(this.tasks.get(i));","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"derekjxtan"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":100,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":101,"author":{"gitId":"derekjxtan"},"content":"        return tasksOn;","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":103,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":104,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"derekjxtan"},"content":"     * Marks a task to in the list as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"derekjxtan"},"content":"     * @param index Index of the task to mark.","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"derekjxtan"},"content":"     * @return Task marked in the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"derekjxtan"},"content":"     * @throws InvalidCommandException If the provided index is out of range.","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"derekjxtan"},"content":"    public Task mark(int index) throws InvalidCommandException {","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"derekjxtan"},"content":"        if (!isTaskValid(index)) {","lastModifiedDate":"2023-08-28"},{"lineNumber":113,"author":{"gitId":"derekjxtan"},"content":"            throw new InvalidCommandException(\"☹ OOPS!!! The task index in invalid\");","lastModifiedDate":"2023-08-28"},{"lineNumber":114,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":115,"author":{"gitId":"derekjxtan"},"content":"        Task task \u003d this.tasks.get(index);","lastModifiedDate":"2023-08-28"},{"lineNumber":116,"author":{"gitId":"derekjxtan"},"content":"        assert task !\u003d null : \"Task to be marked cannot be found\";","lastModifiedDate":"2023-09-13"},{"lineNumber":117,"author":{"gitId":"derekjxtan"},"content":"        task.markAsDone();","lastModifiedDate":"2023-08-28"},{"lineNumber":118,"author":{"gitId":"derekjxtan"},"content":"        return task;","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":120,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":121,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"derekjxtan"},"content":"     * Unmarks a task to in the list as done.","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"derekjxtan"},"content":"     * @param index Index of the task to unmark.","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"derekjxtan"},"content":"     * @return Task unmarked in the list.","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"derekjxtan"},"content":"     * @throws InvalidCommandException If the provided index is out of range.","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"derekjxtan"},"content":"    public Task unmark(int index) throws InvalidCommandException {","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"derekjxtan"},"content":"        if (!isTaskValid(index)) {","lastModifiedDate":"2023-08-28"},{"lineNumber":130,"author":{"gitId":"derekjxtan"},"content":"            throw new InvalidCommandException(\"☹ OOPS!!! The task index in invalid\");","lastModifiedDate":"2023-08-28"},{"lineNumber":131,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":132,"author":{"gitId":"derekjxtan"},"content":"        Task task \u003d this.tasks.get(index);","lastModifiedDate":"2023-08-28"},{"lineNumber":133,"author":{"gitId":"derekjxtan"},"content":"        assert task !\u003d null : \"Task to be unmarked cannot be found\";","lastModifiedDate":"2023-09-13"},{"lineNumber":134,"author":{"gitId":"derekjxtan"},"content":"        task.markAsUndone();","lastModifiedDate":"2023-08-28"},{"lineNumber":135,"author":{"gitId":"derekjxtan"},"content":"        return task;","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":137,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":138,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"derekjxtan"},"content":"     * Saves the tasks to a file.","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"derekjxtan"},"content":"     * @param storage storage object to save the tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"derekjxtan"},"content":"    public void saveState(Storage storage) throws StorageException {","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"derekjxtan"},"content":"        storage.saveData(this.tasks);","lastModifiedDate":"2023-09-13"},{"lineNumber":145,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":146,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":147,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":148,"author":{"gitId":"derekjxtan"},"content":"    public String toString() {","lastModifiedDate":"2023-09-05"},{"lineNumber":149,"author":{"gitId":"derekjxtan"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-05"},{"lineNumber":150,"author":{"gitId":"derekjxtan"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-09-05"},{"lineNumber":151,"author":{"gitId":"derekjxtan"},"content":"            sb.append((i + 1) + \".\" + this.tasks.get(i) + \"\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":152,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":153,"author":{"gitId":"derekjxtan"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":154,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":155,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":156,"author":{"gitId":"derekjxtan"},"content":"    public int getCompletedCount(int days) {","lastModifiedDate":"2023-09-13"},{"lineNumber":157,"author":{"gitId":"derekjxtan"},"content":"        if (days \u003c\u003d 0) {","lastModifiedDate":"2023-09-13"},{"lineNumber":158,"author":{"gitId":"derekjxtan"},"content":"            return this.getTaskCount();","lastModifiedDate":"2023-09-13"},{"lineNumber":159,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":160,"author":{"gitId":"derekjxtan"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2023-09-13"},{"lineNumber":161,"author":{"gitId":"derekjxtan"},"content":"        LocalDate today \u003d now.toLocalDate();","lastModifiedDate":"2023-09-13"},{"lineNumber":162,"author":{"gitId":"derekjxtan"},"content":"        LocalDate leftBound \u003d today.minusDays(days - 1);","lastModifiedDate":"2023-09-13"},{"lineNumber":163,"author":{"gitId":"derekjxtan"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-09-13"},{"lineNumber":164,"author":{"gitId":"derekjxtan"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2023-09-13"},{"lineNumber":165,"author":{"gitId":"derekjxtan"},"content":"            if (task.isBetween(leftBound, today)) {","lastModifiedDate":"2023-09-13"},{"lineNumber":166,"author":{"gitId":"derekjxtan"},"content":"                count++;","lastModifiedDate":"2023-09-13"},{"lineNumber":167,"author":{"gitId":"derekjxtan"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":168,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":169,"author":{"gitId":"derekjxtan"},"content":"        return count;","lastModifiedDate":"2023-09-13"},{"lineNumber":170,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":171,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":172,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":173,"author":{"gitId":"derekjxtan"},"content":"     * Loads the tasks from a file.","lastModifiedDate":"2023-08-30"},{"lineNumber":174,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":175,"author":{"gitId":"derekjxtan"},"content":"     * @param storedData data stored in a file.","lastModifiedDate":"2023-08-30"},{"lineNumber":176,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":177,"author":{"gitId":"derekjxtan"},"content":"    private void loadState(ArrayList\u003cString\u003e storedData) {","lastModifiedDate":"2023-08-30"},{"lineNumber":178,"author":{"gitId":"derekjxtan"},"content":"        for (int i \u003d 0; i \u003c storedData.size(); i++) {","lastModifiedDate":"2023-08-28"},{"lineNumber":179,"author":{"gitId":"derekjxtan"},"content":"            String[] taskArray \u003d storedData.get(i).split(\" / \");","lastModifiedDate":"2023-08-28"},{"lineNumber":180,"author":{"gitId":"derekjxtan"},"content":"            Task task;","lastModifiedDate":"2023-08-28"},{"lineNumber":181,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":182,"author":{"gitId":"derekjxtan"},"content":"            if (taskArray[0].equals(\"todo\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":183,"author":{"gitId":"derekjxtan"},"content":"                task \u003d new ToDo(taskArray[2]);","lastModifiedDate":"2023-08-28"},{"lineNumber":184,"author":{"gitId":"derekjxtan"},"content":"            } else if (taskArray[0].equals(\"deadline\")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":185,"author":{"gitId":"derekjxtan"},"content":"                task \u003d new Deadline(taskArray[2], LocalDateTime.parse(taskArray[3], DATE_TIME_INPUT_FORMATTER));","lastModifiedDate":"2023-09-03"},{"lineNumber":186,"author":{"gitId":"derekjxtan"},"content":"            } else {","lastModifiedDate":"2023-08-28"},{"lineNumber":187,"author":{"gitId":"derekjxtan"},"content":"                task \u003d new Event(taskArray[2], LocalDateTime.parse(taskArray[3], DATE_TIME_INPUT_FORMATTER),","lastModifiedDate":"2023-09-03"},{"lineNumber":188,"author":{"gitId":"derekjxtan"},"content":"                        LocalDateTime.parse(taskArray[4], DATE_TIME_INPUT_FORMATTER));","lastModifiedDate":"2023-09-03"},{"lineNumber":189,"author":{"gitId":"derekjxtan"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":190,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":191,"author":{"gitId":"derekjxtan"},"content":"            if (taskArray[1].equals(\"1\")) {","lastModifiedDate":"2023-08-28"},{"lineNumber":192,"author":{"gitId":"derekjxtan"},"content":"                task.markAsDone();","lastModifiedDate":"2023-08-28"},{"lineNumber":193,"author":{"gitId":"derekjxtan"},"content":"            }","lastModifiedDate":"2023-08-28"},{"lineNumber":194,"author":{"gitId":"derekjxtan"},"content":"            this.tasks.add(task);","lastModifiedDate":"2023-08-28"},{"lineNumber":195,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-08-28"},{"lineNumber":196,"author":{"gitId":"derekjxtan"},"content":"        System.out.println(\"Successfully loaded saved state\");","lastModifiedDate":"2023-08-28"},{"lineNumber":197,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":198,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-28"},{"lineNumber":199,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":200,"author":{"gitId":"derekjxtan"},"content":"     * Checks if a index is valid.","lastModifiedDate":"2023-08-30"},{"lineNumber":201,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":202,"author":{"gitId":"derekjxtan"},"content":"     * @param index Index of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":203,"author":{"gitId":"derekjxtan"},"content":"     * @return A boolean representation of whether the index is valid.","lastModifiedDate":"2023-08-30"},{"lineNumber":204,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":205,"author":{"gitId":"derekjxtan"},"content":"    private boolean isTaskValid(int index) {","lastModifiedDate":"2023-08-28"},{"lineNumber":206,"author":{"gitId":"derekjxtan"},"content":"        return index \u003e\u003d 0 \u0026\u0026 index \u003c this.tasks.size();","lastModifiedDate":"2023-08-28"},{"lineNumber":207,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":208,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"derekjxtan":208}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-27"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":" * A Todo type task that can be handled by the chatbot.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"     * Constructor for the ToDo class.","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"     * @param name Name of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"    public ToDo(String name) {","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"        super(name);","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"     * @return A string representing the todo.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"     * Returns a string representation of the task to be saved.","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"     * @return A string representing the todo to be saved.","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"    public String formatStringToSave() {","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"        String[] state \u003d new String[]{ \"todo\", this.getDone() ? \"1\" : \"0\", this.getTaskName() };","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"        return String.join(\" / \", state);","lastModifiedDate":"2023-08-27"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"     * Returns whether the task is on a date.","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"     * @return A boolean representation of whether the task is on a given date.","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"    public boolean isOnDate(LocalDate date) {","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"        return false;","lastModifiedDate":"2023-08-27"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"    @Override","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"    public boolean isBetween(LocalDate left, LocalDate right) {","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"        return false;","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"derekjxtan":53}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"/**","lastModifiedDate":"2023-09-03"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":" * A class to handle interactions with the user.","lastModifiedDate":"2023-09-03"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":" */","lastModifiedDate":"2023-09-03"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"public class UI {","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"    private String name;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"     * Constructor for the UI class.","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"     * @param name Name of the chatbot.","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"    public UI(String name) {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"     * Prints a welcome message.","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"    public String getWelcomeMessage() {","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"        sb.append(\"Hello! I\u0027m \" + this.name + \"\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"        sb.append(\"What can I do for you?\");","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"     * Prints a goodbye message.","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"    public String getGoodbyeMessage() {","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"     * Prints a task added message.","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"     * @param task      Task added.","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"     * @param taskCount Total number of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"     * @return","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"    public String getTaskAddedMessage(Task task, int taskCount) {","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"        sb.append(\"Got it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"        sb.append(task + \"\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"        sb.append(this.printTaskCount(taskCount));","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"     * Prints a task deleted message.","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"     * @param task      Task deleted.","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"     * @param taskCount Total number of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"     * @return","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"    public String getTaskDeletedMessage(Task task, int taskCount) {","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"derekjxtan"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"        sb.append(\"Noted. I\u0027ve removed this task:\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"derekjxtan"},"content":"        sb.append(task + \"\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"derekjxtan"},"content":"        sb.append(this.printTaskCount(taskCount));","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"derekjxtan"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"derekjxtan"},"content":"     * Prints a task marked message.","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"derekjxtan"},"content":"     * @param task Task marked.","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"derekjxtan"},"content":"     * @return","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"derekjxtan"},"content":"    public String getTaskMarkedMessage(Task task) {","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"derekjxtan"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"derekjxtan"},"content":"        sb.append(\"Nice! I\u0027ve marked this task as done:\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"derekjxtan"},"content":"        sb.append(task);","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"derekjxtan"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"derekjxtan"},"content":"     * Prints a task unmarked message.","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"derekjxtan"},"content":"     * @param task Task unmarked.","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"derekjxtan"},"content":"     * @return","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"derekjxtan"},"content":"    public String getTaskUnmarkedMessage(Task task) {","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"derekjxtan"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"derekjxtan"},"content":"        sb.append(\"OK, I\u0027ve marked this task as not done yet:\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"derekjxtan"},"content":"        sb.append(task + \"\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"derekjxtan"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"derekjxtan"},"content":"     * Prints the tasks on a date.","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"derekjxtan"},"content":"     * @param tasks List of tasks on a date","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"derekjxtan"},"content":"     * @return","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"derekjxtan"},"content":"    public String getTasksOn(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"derekjxtan"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"derekjxtan"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"derekjxtan"},"content":"            sb.append((i + 1) + \".\" + tasks.get(i) + \"\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"derekjxtan"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"derekjxtan"},"content":"     * Prints the tasks matching a keyword.","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"derekjxtan"},"content":"     * @param tasks List of tasks matching a keyword","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"derekjxtan"},"content":"     * @return","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"derekjxtan"},"content":"    public String getTasksMatching(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-05"},{"lineNumber":114,"author":{"gitId":"derekjxtan"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"derekjxtan"},"content":"        sb.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"derekjxtan"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"derekjxtan"},"content":"            sb.append((i + 1) + \".\" + tasks.get(i) + \"\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"derekjxtan"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"derekjxtan"},"content":"    public String getAllTasksMessage(TaskList tasks) {","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"derekjxtan"},"content":"        return \"Here are the tasks in your list:\\n\" + tasks.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"derekjxtan"},"content":"     * Prints a loading error message.","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":129,"author":{"gitId":"derekjxtan"},"content":"     * @return","lastModifiedDate":"2023-09-05"},{"lineNumber":130,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"derekjxtan"},"content":"    public String getLoadingErrorMessage() {","lastModifiedDate":"2023-09-05"},{"lineNumber":132,"author":{"gitId":"derekjxtan"},"content":"        return \"Stored data could not be loaded\";","lastModifiedDate":"2023-09-05"},{"lineNumber":133,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"derekjxtan"},"content":"    public String getStatisticsMessage(TaskList tasks) {","lastModifiedDate":"2023-09-13"},{"lineNumber":136,"author":{"gitId":"derekjxtan"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-09-13"},{"lineNumber":137,"author":{"gitId":"derekjxtan"},"content":"        sb.append(getCompletedTaskMessage(tasks, 1));","lastModifiedDate":"2023-09-13"},{"lineNumber":138,"author":{"gitId":"derekjxtan"},"content":"        sb.append(getCompletedTaskMessage(tasks, 3));","lastModifiedDate":"2023-09-13"},{"lineNumber":139,"author":{"gitId":"derekjxtan"},"content":"        sb.append(getCompletedTaskMessage(tasks, 7));","lastModifiedDate":"2023-09-13"},{"lineNumber":140,"author":{"gitId":"derekjxtan"},"content":"        return sb.toString();","lastModifiedDate":"2023-09-13"},{"lineNumber":141,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":142,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":143,"author":{"gitId":"derekjxtan"},"content":"    /**","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"derekjxtan"},"content":"     * Prints a task count message.","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"derekjxtan"},"content":"     *","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"derekjxtan"},"content":"     * @param taskCount Total number of tasks.","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"derekjxtan"},"content":"     */","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"derekjxtan"},"content":"    private String printTaskCount(int taskCount) {","lastModifiedDate":"2023-09-05"},{"lineNumber":149,"author":{"gitId":"derekjxtan"},"content":"        return \"Now you have \" + taskCount + (taskCount \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":150,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":152,"author":{"gitId":"derekjxtan"},"content":"    private String getCompletedTaskMessage(TaskList tasks, int days) {","lastModifiedDate":"2023-09-13"},{"lineNumber":153,"author":{"gitId":"derekjxtan"},"content":"        return \"Tasks completed in the past \" + days + \" days is: \" + tasks.getCompletedCount(days) + \"\\n\";","lastModifiedDate":"2023-09-13"},{"lineNumber":154,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":155,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"derekjxtan":155}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"someotherlable\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"derekjxtan":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-06"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-04"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-04"}],"authorContributionMap":{"derekjxtan":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"import command.AddCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"import command.DeleteCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"import command.InvalidCommandException;","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"import command.MarkCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"import command.OnCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"import command.UnmarkCommand;","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"public class ParserTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"    public void parseUserInput_validInput_success() throws Exception {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"        ArrayList\u003cString\u003e params \u003d new ArrayList\u003c\u003e(Arrays.asList(\"list\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(new AddCommand(params),","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"                Parser.parseUserInput(\"list\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"        params \u003d new ArrayList\u003c\u003e(Arrays.asList(\"mark\", \"2\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(new MarkCommand(params),","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"                Parser.parseUserInput(\"mark 2\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"        params \u003d new ArrayList\u003c\u003e(Arrays.asList(\"unmark\", \"3\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(new UnmarkCommand(params),","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"                Parser.parseUserInput(\"unmark 3\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"        params \u003d new ArrayList\u003c\u003e(Arrays.asList(\"todo\", \"run\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(new AddCommand(params),","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"                Parser.parseUserInput(\"todo run\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"        params \u003d new ArrayList\u003c\u003e(Arrays.asList(\"deadline\", \"chemistry homework\", \"2023-10-26 15:30\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(new AddCommand(params),","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"                Parser.parseUserInput(\"deadline chemistry homework /by 2023-10-26 15:30\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"        params \u003d new ArrayList\u003c\u003e(Arrays.asList(\"event\", \"movie screening\", \"2023-11-16 18:00\", \"2023-11-16 20:00\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(new AddCommand(params),","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"                Parser.parseUserInput(\"event movie screening /from 2023-11-16 18:00 /to 2023-11-16 20:00\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"        params \u003d new ArrayList\u003c\u003e(Arrays.asList(\"on\", \"2023-08-30\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(new OnCommand(params),","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"                Parser.parseUserInput(\"on 2023-08-30\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"        params \u003d new ArrayList\u003c\u003e(new ArrayList\u003c\u003e(Arrays.asList(\"delete\", \"1\")));","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(new DeleteCommand(params),","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"                Parser.parseUserInput(\"delete 1\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"    public void parseUserInput_invalidDate_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"            ArrayList\u003cString\u003e params \u003d new ArrayList\u003c\u003e(Arrays.asList(\"event\", \"movie screening\", \"2023-11-16\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"            assertEquals(new AddCommand(params),","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"                    Parser.parseUserInput(\"event movie screening /from /to 2023-11-16\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"derekjxtan"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"derekjxtan"},"content":"            assertEquals(\"Add event command format is wrong\", e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"derekjxtan"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"derekjxtan"},"content":"            ArrayList\u003cString\u003e params \u003d new ArrayList\u003c\u003e(Arrays.asList(\"event\", \"movie screening\", \"2023-11-16\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"derekjxtan"},"content":"            assertEquals(new AddCommand(params),","lastModifiedDate":"2023-09-01"},{"lineNumber":69,"author":{"gitId":"derekjxtan"},"content":"                    Parser.parseUserInput(\"event movie screening /from 2023-11-16 /to\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"derekjxtan"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"derekjxtan"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"derekjxtan"},"content":"            assertEquals(\"Add event command format is wrong\", e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"derekjxtan":76}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"package duke;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-03"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-09-03"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"import command.InvalidCommandException;","lastModifiedDate":"2023-09-03"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"    private static final String DATETIME_INPUT_FORMAT \u003d \"yyyy-MM-dd HH:mm\";","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"    public static final DateTimeFormatter DATE_TIME_INPUT_FORMATTER \u003d","lastModifiedDate":"2023-09-03"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"            DateTimeFormatter.ofPattern(DATETIME_INPUT_FORMAT);","lastModifiedDate":"2023-09-03"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"    public void remove_indexWithinRange_success() throws Exception {","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"        Deadline deadline \u003d new Deadline(\"chemistry homework\",","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"                LocalDateTime.parse(\"2023-08-15 18:00\", DATE_TIME_INPUT_FORMATTER));","lastModifiedDate":"2023-09-03"},{"lineNumber":23,"author":{"gitId":"derekjxtan"},"content":"        ToDo todo \u003d new ToDo(\"read book\");","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"derekjxtan"},"content":"        Event event \u003d new Event(\"marathon\", LocalDateTime.parse(\"2023-08-16 05:00\", DATE_TIME_INPUT_FORMATTER),","lastModifiedDate":"2023-09-03"},{"lineNumber":25,"author":{"gitId":"derekjxtan"},"content":"                LocalDateTime.parse(\"2023-08-16 07:00\", DATE_TIME_INPUT_FORMATTER));","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"derekjxtan"},"content":"        tasks.add(deadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"derekjxtan"},"content":"        tasks.add(todo);","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"derekjxtan"},"content":"        tasks.add(event);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(todo, tasks.remove(1));","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(deadline, tasks.remove(0));","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"derekjxtan"},"content":"        assertEquals(event, tasks.remove(0));","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"derekjxtan"},"content":"    @Test","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"derekjxtan"},"content":"    public void remove_indexOutOfRange_exceptionThrown() {","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"derekjxtan"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"derekjxtan"},"content":"        Deadline deadline \u003d new Deadline(\"chemistry homework\",","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"derekjxtan"},"content":"                LocalDateTime.parse(\"2023-08-15 18:00\", DATE_TIME_INPUT_FORMATTER));","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"derekjxtan"},"content":"        ToDo todo \u003d new ToDo(\"read book\");","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"derekjxtan"},"content":"        Event event \u003d new Event(\"marathon\", LocalDateTime.parse(\"2023-08-16 05:00\", DATE_TIME_INPUT_FORMATTER),","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"derekjxtan"},"content":"                LocalDateTime.parse(\"2023-08-16 07:00\", DATE_TIME_INPUT_FORMATTER));","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"derekjxtan"},"content":"        tasks.add(deadline);","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"derekjxtan"},"content":"        tasks.add(todo);","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"derekjxtan"},"content":"        tasks.add(event);","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"derekjxtan"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"derekjxtan"},"content":"            assertEquals(todo, tasks.remove(5));","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"derekjxtan"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"derekjxtan"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"derekjxtan"},"content":"            assertEquals(\"☹ OOPS!!! The task index in invalid\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"derekjxtan"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"derekjxtan"},"content":"            assertEquals(todo, tasks.remove(3));","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"derekjxtan"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"derekjxtan"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"derekjxtan"},"content":"            assertEquals(\"☹ OOPS!!! The task index in invalid\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"derekjxtan"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"derekjxtan"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"derekjxtan"},"content":"            assertEquals(todo, tasks.remove(-1));","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"derekjxtan"},"content":"            fail();","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"derekjxtan"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"derekjxtan"},"content":"            assertEquals(\"☹ OOPS!!! The task index in invalid\", e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"derekjxtan"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"derekjxtan"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"derekjxtan"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"derekjxtan":73}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"derekjxtan"},"content":"todo borrow book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"derekjxtan"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"derekjxtan"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"derekjxtan"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"derekjxtan"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"derekjxtan"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"derekjxtan"},"content":"unmark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"derekjxtan"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"derekjxtan"},"content":"todo","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"derekjxtan"},"content":"deadline","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"derekjxtan"},"content":"deadline math homework","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"derekjxtan"},"content":"deadline /by Jan 2nd","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"derekjxtan"},"content":"event","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"derekjxtan"},"content":"event marathon","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"derekjxtan"},"content":"event marathon /from: 3pm","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"derekjxtan"},"content":"event /from: 3pm /to: 7pm","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"derekjxtan"},"content":"blah","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"delete 3","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"derekjxtan"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":20,"author":{"gitId":"derekjxtan"},"content":"mark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"derekjxtan"},"content":"delete 3","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"derekjxtan"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"derekjxtan":22}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"derekjxtan"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"derekjxtan":1,"-":20}}]
