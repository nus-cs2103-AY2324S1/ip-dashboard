[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"tohpinren"},"content":"    mainClass.set(\"anto.Launcher\")","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"tohpinren"},"content":"    archiveBaseName \u003d \"anto\"","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tohpinren":18,"-":40}},{"path":"data/anto.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"D | 1 | Return book | 18-05-2023 18:00","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"E | 1 | Book Review Meeting | 18-05-2023 18:00 | 18-05-2023 20:00","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"D | 1 | Borrow book | 01-09-2023 23:59","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"D | 0 | Book trip | 20-05-2023 18:00","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"E | 0 | Meeting | 01-09-2023 18:00 | 01-09-2023 20:00","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"T | 0 | CS2103T iP","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"T | 0 | Borrow book","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"D | 0 | Return book | 15-05-2023 18:00","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"E | 0 | Book Review Meeting | 20-06-2023 18:00 | 20-06-2023 20:00","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"T | 0 | Read books","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"E | 0 | Lunch | 20-06-2023 12:00 | 20-06-2023 14:00","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"tohpinren":13}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"Anto is a desktop chatbot app for managing tasks via a Graphical User Interface (GUI). Anto includes features such as","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"adding to do tasks, deadlines and events, viewing schedules for the day and finding certain tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"- [Quick start](#quick-start)","lastModifiedDate":"2023-09-20"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"- [Features](#features)","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"  - [Listing all tasks: list](#listing-all-tasks--list)","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"  - [Adding a todo task: todo](#adding-a-todo-task--todo)","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"  - [Adding a deadline task: deadline](#adding-a-deadline-task--deadline)","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"  - [Adding an event task: event](#adding-an-event-task--event)","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"  - [Marking a task: mark](#marking-a-task--mark)","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"  - [Unmarking a task: unmark](#unmarking-a-task--unark)","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"  - [Deleting a task: delete](#deleting-a-task--delete)","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"  - [Locating tasks by name: find](#locating-tasks-by-name--find)","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"  - [View schedule on a date: view schedule](#view-schedule-on-a-date--view-schedule)","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"  - [Exiting the program: bye](#exiting-the-program--bye)","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"  - [Saving the data](#saving-the-data)","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"  - [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"- [FAQ](#faq)","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"- [Command summary](#command-summary)","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"## Quick start","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"1. Ensure you have `Java 11` or above installed in your Computer.","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"2. Download the latest `anto.jar`.","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"3. Copy the file to the folder you want to use as the home folder for your Anto.","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar anto.jar` command to run the application.","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"   ![Screenshot of a starting screen of Anto.](SavedFile.png)","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing `list` and pressing Enter will show a list of all tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"Some example commands you can try:","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"   - `list`: Lists all tasks.","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"   - `todo New Task`: Adds a task named New Task to the Anto list.","lastModifiedDate":"2023-09-20"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"   - `delete 3`: Deletes the 3rd task shown in the current list.","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"   - `bye` : Exits the app.","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"6. Refer to the Features below for details of each command.","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"tohpinren"},"content":"\u003e [!NOTE]","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"tohpinren"},"content":"\u003e Notes about the command format:","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"tohpinren"},"content":"\u003e - Words in UPPER_CASE are the parameters to be supplied by the user.","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"tohpinren"},"content":"e.g. in todo NAME, NAME is a parameter which can be used as todo Task.","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"tohpinren"},"content":"\u003e - If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"tohpinren"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"tohpinren"},"content":"Shows a list of all tasks, deadlines and events in the Anto chatbot.","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"tohpinren"},"content":"Format: `list`","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"tohpinren"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"tohpinren"},"content":"`list`","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"tohpinren"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"tohpinren"},"content":"A list of all tasks is shown.","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"tohpinren"},"content":"![Screenshot of result after entering list.](list.png)","lastModifiedDate":"2023-09-20"},{"lineNumber":60,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"tohpinren"},"content":"### Adding a todo task: `todo`","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"tohpinren"},"content":"Adds a todo task to the Anto chatbot.","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"tohpinren"},"content":"Format: `todo NAME`","lastModifiedDate":"2023-09-20"},{"lineNumber":66,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":67,"author":{"gitId":"tohpinren"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":68,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":69,"author":{"gitId":"tohpinren"},"content":"`todo Borrow book`","lastModifiedDate":"2023-09-20"},{"lineNumber":70,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":71,"author":{"gitId":"tohpinren"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":72,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":73,"author":{"gitId":"tohpinren"},"content":"New todo task is added to the Anto chatbot. Confirmation message showing task and total number of tasks is shown.","lastModifiedDate":"2023-09-20"},{"lineNumber":74,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":75,"author":{"gitId":"tohpinren"},"content":"![Screenshot of result after entering todo.](todo.png)","lastModifiedDate":"2023-09-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":77,"author":{"gitId":"tohpinren"},"content":"### Adding a deadline task: `deadline`","lastModifiedDate":"2023-09-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":79,"author":{"gitId":"tohpinren"},"content":"Adds a deadline task to the Anto chatbot.","lastModifiedDate":"2023-09-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":81,"author":{"gitId":"tohpinren"},"content":"Format: `deadline NAME /by DATETIME`","lastModifiedDate":"2023-09-20"},{"lineNumber":82,"author":{"gitId":"tohpinren"},"content":"\u003e [!NOTE]","lastModifiedDate":"2023-09-20"},{"lineNumber":83,"author":{"gitId":"tohpinren"},"content":"\u003e DATETIME entered must be in `dd-MM-yyyy HH:mm` format e.g. `15-05-2023 18:00` represents 15 May 2023 6pm.","lastModifiedDate":"2023-09-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":85,"author":{"gitId":"tohpinren"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":87,"author":{"gitId":"tohpinren"},"content":"`deadline Return book /by 15-05-2023 18:00`","lastModifiedDate":"2023-09-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":89,"author":{"gitId":"tohpinren"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":90,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":91,"author":{"gitId":"tohpinren"},"content":"New deadline task is added to the Anto chatbot. Confirmation message showing task and total number of tasks is shown.","lastModifiedDate":"2023-09-20"},{"lineNumber":92,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":93,"author":{"gitId":"tohpinren"},"content":"![Screenshot of result after entering deadline.](deadline.png)","lastModifiedDate":"2023-09-20"},{"lineNumber":94,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":95,"author":{"gitId":"tohpinren"},"content":"### Adding an event task: `event`","lastModifiedDate":"2023-09-20"},{"lineNumber":96,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":97,"author":{"gitId":"tohpinren"},"content":"Adds an event task to the Anto chatbot.","lastModifiedDate":"2023-09-20"},{"lineNumber":98,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":99,"author":{"gitId":"tohpinren"},"content":"Format: `event NAME /from DATETIME /to DATETIME`","lastModifiedDate":"2023-09-20"},{"lineNumber":100,"author":{"gitId":"tohpinren"},"content":"\u003e [!NOTE]","lastModifiedDate":"2023-09-20"},{"lineNumber":101,"author":{"gitId":"tohpinren"},"content":"\u003e DATETIME entered must be in `dd-MM-yyyy HH:mm` format e.g. `15-05-2023 18:00` represents 15 May 2023 6pm.","lastModifiedDate":"2023-09-20"},{"lineNumber":102,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":103,"author":{"gitId":"tohpinren"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":105,"author":{"gitId":"tohpinren"},"content":"`event Book Review Meeting /from 20-06-2023 18:00 /to 20-06-2023 20:00`","lastModifiedDate":"2023-09-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":107,"author":{"gitId":"tohpinren"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":109,"author":{"gitId":"tohpinren"},"content":"New event task is added to the Anto chatbot. Confirmation message showing task and total number of tasks is shown.","lastModifiedDate":"2023-09-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":111,"author":{"gitId":"tohpinren"},"content":"![Screenshot of result after entering event.](event.png)","lastModifiedDate":"2023-09-20"},{"lineNumber":112,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":113,"author":{"gitId":"tohpinren"},"content":"### Marking a task: `mark`","lastModifiedDate":"2023-09-20"},{"lineNumber":114,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":115,"author":{"gitId":"tohpinren"},"content":"Marks the task at the specified index as done in the Anto chatbot.","lastModifiedDate":"2023-09-20"},{"lineNumber":116,"author":{"gitId":"tohpinren"},"content":"- The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":117,"author":{"gitId":"tohpinren"},"content":"- The index must be a positive integer 1, 2, 3, ... and within the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":118,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":119,"author":{"gitId":"tohpinren"},"content":"Format: `mark INDEX`","lastModifiedDate":"2023-09-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":123,"author":{"gitId":"tohpinren"},"content":"`mark 4`","lastModifiedDate":"2023-09-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":127,"author":{"gitId":"tohpinren"},"content":"Task at index is marked as done. Confirmation message showing task is shown.","lastModifiedDate":"2023-09-20"},{"lineNumber":128,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":129,"author":{"gitId":"tohpinren"},"content":"![Screenshot of result after marking.](mark.png)","lastModifiedDate":"2023-09-20"},{"lineNumber":130,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":131,"author":{"gitId":"tohpinren"},"content":"### Unmarking a task: `unark`","lastModifiedDate":"2023-09-20"},{"lineNumber":132,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":133,"author":{"gitId":"tohpinren"},"content":"Unmarks the task at the specified index in the Anto chatbot.","lastModifiedDate":"2023-09-20"},{"lineNumber":134,"author":{"gitId":"tohpinren"},"content":"- The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":135,"author":{"gitId":"tohpinren"},"content":"- The index must be a positive integer 1, 2, 3, ... and within the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":136,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":137,"author":{"gitId":"tohpinren"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2023-09-20"},{"lineNumber":138,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":139,"author":{"gitId":"tohpinren"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":140,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":141,"author":{"gitId":"tohpinren"},"content":"`unmark 4`","lastModifiedDate":"2023-09-20"},{"lineNumber":142,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":143,"author":{"gitId":"tohpinren"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":144,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":145,"author":{"gitId":"tohpinren"},"content":"Task at index is unmarked. Confirmation message showing task is shown.","lastModifiedDate":"2023-09-20"},{"lineNumber":146,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":147,"author":{"gitId":"tohpinren"},"content":"![Screenshot of result after unmarking.](unmark.png)","lastModifiedDate":"2023-09-20"},{"lineNumber":148,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":149,"author":{"gitId":"tohpinren"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2023-09-20"},{"lineNumber":150,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":151,"author":{"gitId":"tohpinren"},"content":"Deletes the task at the specified index from the Anto chatbot.","lastModifiedDate":"2023-09-20"},{"lineNumber":152,"author":{"gitId":"tohpinren"},"content":"- The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2023-09-20"},{"lineNumber":153,"author":{"gitId":"tohpinren"},"content":"- The index must be a positive integer 1, 2, 3, ... and within the list.","lastModifiedDate":"2023-09-20"},{"lineNumber":154,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":155,"author":{"gitId":"tohpinren"},"content":"Format: `delete INDEX`","lastModifiedDate":"2023-09-20"},{"lineNumber":156,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":157,"author":{"gitId":"tohpinren"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":158,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":159,"author":{"gitId":"tohpinren"},"content":"`delete 4`","lastModifiedDate":"2023-09-20"},{"lineNumber":160,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":161,"author":{"gitId":"tohpinren"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":162,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":163,"author":{"gitId":"tohpinren"},"content":"Task at index is deleted. Confirmation message showing task and remaining number of tasks is shown.","lastModifiedDate":"2023-09-20"},{"lineNumber":164,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":165,"author":{"gitId":"tohpinren"},"content":"![Screenshot of result after deleting.](delete.png)","lastModifiedDate":"2023-09-20"},{"lineNumber":166,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":167,"author":{"gitId":"tohpinren"},"content":"### Locating tasks by name: `find`","lastModifiedDate":"2023-09-20"},{"lineNumber":168,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":169,"author":{"gitId":"tohpinren"},"content":"Find tasks with names that contain the given keywords in the Anto chatbot.","lastModifiedDate":"2023-09-20"},{"lineNumber":170,"author":{"gitId":"tohpinren"},"content":"- The search is case-sensitive. e.g books will NOT match Books","lastModifiedDate":"2023-09-20"},{"lineNumber":171,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":172,"author":{"gitId":"tohpinren"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2023-09-20"},{"lineNumber":173,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":174,"author":{"gitId":"tohpinren"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":175,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":176,"author":{"gitId":"tohpinren"},"content":"`find books`","lastModifiedDate":"2023-09-20"},{"lineNumber":177,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":178,"author":{"gitId":"tohpinren"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":179,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":180,"author":{"gitId":"tohpinren"},"content":"Tasks that contains given keywords in their names will be shown.","lastModifiedDate":"2023-09-20"},{"lineNumber":181,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":182,"author":{"gitId":"tohpinren"},"content":"![Screenshot of result after finding.](find.png)","lastModifiedDate":"2023-09-20"},{"lineNumber":183,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":184,"author":{"gitId":"tohpinren"},"content":"### View schedule on a date: `view schedule`","lastModifiedDate":"2023-09-20"},{"lineNumber":185,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":186,"author":{"gitId":"tohpinren"},"content":"Find and list event tasks on specified date in the Anto chatbot.","lastModifiedDate":"2023-09-20"},{"lineNumber":187,"author":{"gitId":"tohpinren"},"content":"\u003e [!NOTE]","lastModifiedDate":"2023-09-20"},{"lineNumber":188,"author":{"gitId":"tohpinren"},"content":"\u003e DATE entered must be in `dd-MM-yyyy` format e.g. `15-05-2023` represents 15 May 2023.","lastModifiedDate":"2023-09-20"},{"lineNumber":189,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":190,"author":{"gitId":"tohpinren"},"content":"Format: `view schedule DATE`","lastModifiedDate":"2023-09-20"},{"lineNumber":191,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":192,"author":{"gitId":"tohpinren"},"content":"Example of usage:","lastModifiedDate":"2023-09-20"},{"lineNumber":193,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":194,"author":{"gitId":"tohpinren"},"content":"`view schedule 20-06-2023`","lastModifiedDate":"2023-09-20"},{"lineNumber":195,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":196,"author":{"gitId":"tohpinren"},"content":"Expected outcome:","lastModifiedDate":"2023-09-20"},{"lineNumber":197,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":198,"author":{"gitId":"tohpinren"},"content":"Event tasks on the specified date will be shown.","lastModifiedDate":"2023-09-20"},{"lineNumber":199,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":200,"author":{"gitId":"tohpinren"},"content":"![Screenshot of result after viewing schedule.](viewschedule.png)","lastModifiedDate":"2023-09-20"},{"lineNumber":201,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":202,"author":{"gitId":"tohpinren"},"content":"### Exiting the program: `bye`","lastModifiedDate":"2023-09-20"},{"lineNumber":203,"author":{"gitId":"tohpinren"},"content":"Exits the program.","lastModifiedDate":"2023-09-20"},{"lineNumber":204,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":205,"author":{"gitId":"tohpinren"},"content":"Format: `bye`","lastModifiedDate":"2023-09-20"},{"lineNumber":206,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":207,"author":{"gitId":"tohpinren"},"content":"### Saving the data","lastModifiedDate":"2023-09-20"},{"lineNumber":208,"author":{"gitId":"tohpinren"},"content":"Anto data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-09-20"},{"lineNumber":209,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":210,"author":{"gitId":"tohpinren"},"content":"### Editing the data file","lastModifiedDate":"2023-09-20"},{"lineNumber":211,"author":{"gitId":"tohpinren"},"content":"Anto data are saved automatically as a txt file `[JAR file location]/data/anto.txt`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-09-20"},{"lineNumber":212,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":213,"author":{"gitId":"tohpinren"},"content":"\u003e [!WARNING]","lastModifiedDate":"2023-09-20"},{"lineNumber":214,"author":{"gitId":"tohpinren"},"content":"\u003e Caution: If your changes to the data file makes its format invalid, Anto will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-09-20"},{"lineNumber":215,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":216,"author":{"gitId":"tohpinren"},"content":"## FAQ","lastModifiedDate":"2023-09-20"},{"lineNumber":217,"author":{"gitId":"tohpinren"},"content":"**Q**: How do I transfer my data to another Computer?","lastModifiedDate":"2023-09-20"},{"lineNumber":218,"author":{"gitId":"tohpinren"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Anto home folder.","lastModifiedDate":"2023-09-20"},{"lineNumber":219,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":220,"author":{"gitId":"tohpinren"},"content":"## Command summary","lastModifiedDate":"2023-09-20"},{"lineNumber":221,"author":{"gitId":"tohpinren"},"content":"| Action        | Format                                 | Example                                |","lastModifiedDate":"2023-09-20"},{"lineNumber":222,"author":{"gitId":"tohpinren"},"content":"|---------------|----------------------------------------|----------------------------------------|","lastModifiedDate":"2023-09-20"},{"lineNumber":223,"author":{"gitId":"tohpinren"},"content":"| list          | list                                   | list                                   |","lastModifiedDate":"2023-09-20"},{"lineNumber":224,"author":{"gitId":"tohpinren"},"content":"| todo          | todo NAME                              | todo Borrow book                       |","lastModifiedDate":"2023-09-20"},{"lineNumber":225,"author":{"gitId":"tohpinren"},"content":"| deadline      | deadline NAME /by DATETIME             | deadline Return book /by 15-05-2023 18:00 |","lastModifiedDate":"2023-09-20"},{"lineNumber":226,"author":{"gitId":"tohpinren"},"content":"| event         | event NAME /from DATETIME /to DATETIME | event Book Review Meeting /from 20-06-2023 18:00 /to 20-06-2023 20:00 |    ","lastModifiedDate":"2023-09-20"},{"lineNumber":227,"author":{"gitId":"tohpinren"},"content":"| mark          | mark INDEX                             | mark 3 |","lastModifiedDate":"2023-09-20"},{"lineNumber":228,"author":{"gitId":"tohpinren"},"content":"| unmark        | unmark INDEX                           | unmark 3|","lastModifiedDate":"2023-09-20"},{"lineNumber":229,"author":{"gitId":"tohpinren"},"content":"| delete        | delete INDEX                           | delete 4 |","lastModifiedDate":"2023-09-20"},{"lineNumber":230,"author":{"gitId":"tohpinren"},"content":"| find          | find KEYWORDS                          | find book |","lastModifiedDate":"2023-09-20"},{"lineNumber":231,"author":{"gitId":"tohpinren"},"content":"| view schedule | view schedule DATE                     | view schedule 20-09-2023 |","lastModifiedDate":"2023-09-20"},{"lineNumber":232,"author":{"gitId":"tohpinren"},"content":"| bye           | bye                                    | bye |","lastModifiedDate":"2023-09-20"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"tohpinren":212,"-":21}},{"path":"src/main/java/anto/Anto.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package anto;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":" * Anto class represents a command line chatbot named Anto.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":" *","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":" * @author Toh Pin Ren","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"public class Anto {","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"    private Parser parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"    private Calendar calendar;","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"     * Creates an Anto chatbot with default filePath.","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"    public Anto() {","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"        String filePath \u003d System.getProperty(\"user.dir\") + \"/data/anto.txt\";","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"        calendar \u003d new Calendar();","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"        storage \u003d new Storage(ui, filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"            tasks \u003d new TaskList(storage.loadSave(calendar), storage);","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"            ui.setTaskList(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"        } catch (AntoException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"            ui.printError(e);","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"            tasks \u003d new TaskList(new ArrayList\u003c\u003e(), storage);","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"            ui.setTaskList(tasks);","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"            calendar \u003d new Calendar();","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"        parser \u003d new Parser(ui, tasks, calendar);","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"tohpinren"},"content":"     * Creates an Anto chatbot with the specified filePath.","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"tohpinren"},"content":"     * @param filePath The relative file path to the location of anto.txt file.","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"tohpinren"},"content":"    public Anto(String filePath) {","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"tohpinren"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"tohpinren"},"content":"        calendar \u003d new Calendar();","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"tohpinren"},"content":"        storage \u003d new Storage(ui, filePath);","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"tohpinren"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"tohpinren"},"content":"            tasks \u003d new TaskList(storage.loadSave(calendar), storage);","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"tohpinren"},"content":"            ui.setTaskList(tasks);","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"tohpinren"},"content":"        } catch (AntoException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"tohpinren"},"content":"            ui.printError(e);","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"tohpinren"},"content":"            tasks \u003d new TaskList(new ArrayList\u003c\u003e(), storage);","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"tohpinren"},"content":"            ui.setTaskList(tasks);","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"tohpinren"},"content":"            calendar \u003d new Calendar();","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"tohpinren"},"content":"     * Returns response based on input given by user.","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"tohpinren"},"content":"     * @param input User input.","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"tohpinren"},"content":"     * @return String with response from Chatbot.","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"tohpinren"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"tohpinren"},"content":"        assert this.parser !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"tohpinren"},"content":"        return this.parser.readInput(input);","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"tohpinren"},"content":"     * Checks if Anto task list has no tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"tohpinren"},"content":"     * @return Whether task list has no tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":75,"author":{"gitId":"tohpinren"},"content":"    public Boolean hasNoTasks() {","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"tohpinren"},"content":"        assert this.tasks !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":77,"author":{"gitId":"tohpinren"},"content":"        return this.tasks.hasNoTasks();","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"tohpinren"},"content":"     * Returns Anto\u0027s TaskList.","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"tohpinren"},"content":"     * @return TaskList for Anto.","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"tohpinren"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"tohpinren"},"content":"        return this.tasks;","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"tohpinren"},"content":"     * Returns Anto\u0027s Ui.","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"tohpinren"},"content":"     * @return Ui for Anto.","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"tohpinren"},"content":"    public Ui getUi() {","lastModifiedDate":"2023-09-05"},{"lineNumber":95,"author":{"gitId":"tohpinren"},"content":"        return this.ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":97,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"tohpinren":97}},{"path":"src/main/java/anto/AntoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package anto;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":" * Class represents an Exception in the Anto chatbot.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"public class AntoException extends Exception {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"     * Creates a Anto Exception with the specified error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"     * @param errorMessage Error message for Anto exception.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"    public AntoException(String errorMessage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"tohpinren":16}},{"path":"src/main/java/anto/Calendar.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package anto;","lastModifiedDate":"2023-09-13"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-13"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-13"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-09-13"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":" * Class encapsulates a Calendar storing schedule of events.","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"public class Calendar {","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"    private HashMap\u003cLocalDate, ArrayList\u003cEvent\u003e\u003e timeToEventsMap;","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"     * Creates a calendar class and instantiates a hashmap.","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"    public Calendar() {","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"        this.timeToEventsMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"     * Add event to Calendar.","lastModifiedDate":"2023-09-13"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"     * @param event Event to add to Calendar.","lastModifiedDate":"2023-09-13"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"    public void addToCalendar(Event event) {","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"        LocalDateTime from \u003d event.getFromDateTime();","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"        LocalDate date \u003d from.toLocalDate();","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"        assert this.timeToEventsMap !\u003d null;","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"        if (!this.timeToEventsMap.containsKey(date)) {","lastModifiedDate":"2023-09-13"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"            this.timeToEventsMap.put(date, new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-13"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"        ArrayList\u003cEvent\u003e eventsOnDate \u003d this.timeToEventsMap.get(date);","lastModifiedDate":"2023-09-13"},{"lineNumber":37,"author":{"gitId":"tohpinren"},"content":"        eventsOnDate.add(event);","lastModifiedDate":"2023-09-13"},{"lineNumber":38,"author":{"gitId":"tohpinren"},"content":"        eventsOnDate.sort(Comparator.comparing(Event::getFromDateTime));","lastModifiedDate":"2023-09-13"},{"lineNumber":39,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":40,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":41,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"tohpinren"},"content":"     * Remove event from calendar.","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"tohpinren"},"content":"     * @param event Event to remove from Calendar.","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"tohpinren"},"content":"    public void removeFromCalendar(Event event) {","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"tohpinren"},"content":"        LocalDateTime from \u003d event.getFromDateTime();","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"tohpinren"},"content":"        LocalDate date \u003d from.toLocalDate();","lastModifiedDate":"2023-09-13"},{"lineNumber":50,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":51,"author":{"gitId":"tohpinren"},"content":"        assert this.timeToEventsMap !\u003d null;","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"tohpinren"},"content":"        ArrayList\u003cEvent\u003e eventsOnDate \u003d this.timeToEventsMap.get(date);","lastModifiedDate":"2023-09-13"},{"lineNumber":53,"author":{"gitId":"tohpinren"},"content":"        eventsOnDate.remove(event);","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"tohpinren"},"content":"     * Get events on the corresponding date.","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"tohpinren"},"content":"     * @param date Date to check for events.","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"tohpinren"},"content":"     * @return ArrayList of events on the date given.","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"tohpinren"},"content":"    public ArrayList\u003cEvent\u003e getEventsOnDate(LocalDate date) {","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"tohpinren"},"content":"        assert this.timeToEventsMap !\u003d null;","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"tohpinren"},"content":"        if (!this.timeToEventsMap.containsKey(date)) {","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"tohpinren"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"tohpinren"},"content":"        return this.timeToEventsMap.get(date);","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-09-13"}],"authorContributionMap":{"tohpinren":69}},{"path":"src/main/java/anto/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package anto;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":" * Deadline class represents a Deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"     * DateTime that the Task must be completed by.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"     * Creates a Deadline task with specified description and by date.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"     * @param by String with DateTime format that represents when deadline task","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"     *           must be completed by.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"     * @throws AntoException Exception thrown if by is not in valid DateTime format.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"    public Deadline(String description, String by) throws AntoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"        if (!Parser.isValidDate(by, formatter)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"            throw new InvalidDateTimeException(\"OOPS!!! The datetime has to be in this format: dd-MM-yyyy HH:mm.\");","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"        this.by \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"     * Return string for writing to storage.","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"tohpinren"},"content":"     * @return Task in storage format.","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"tohpinren"},"content":"    public String getStoreFormat() {","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"tohpinren"},"content":"        assert this.description !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"tohpinren"},"content":"        assert this.by !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"tohpinren"},"content":"        return String.format(\"\\nD | %s | %s | %s\",","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"tohpinren"},"content":"                this.isDone ? \"1\" : \"0\",","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"tohpinren"},"content":"                this.description,","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"tohpinren"},"content":"                this.by.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\")));","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"tohpinren"},"content":"     * Overridden toString method to represent deadline task in a new format.","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"tohpinren"},"content":"     * @return String representing deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"tohpinren"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"tohpinren"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"tohpinren"},"content":"        assert this.getStatusIcon() !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"tohpinren"},"content":"        assert this.by !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"tohpinren"},"content":"        return String.format(\"[D] [%s] %s (by: %s)\",","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"tohpinren"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"tohpinren"},"content":"                super.toString(),","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"tohpinren"},"content":"                this.by.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\")));","lastModifiedDate":"2023-08-29"},{"lineNumber":63,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":64,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"tohpinren":64}},{"path":"src/main/java/anto/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package anto;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"tohpinren"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"tohpinren"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"tohpinren"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"tohpinren"},"content":"    private void flip() {","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"tohpinren"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"tohpinren"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"tohpinren"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"tohpinren"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"tohpinren"},"content":"     * Creates a DialogBox for user for frontend.","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"tohpinren"},"content":"     * @param text Dialog text.","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"tohpinren"},"content":"     * @param img Dialog user image.","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"tohpinren"},"content":"     * @return Dialog box with text and user image for frontend.","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"tohpinren"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"tohpinren"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"tohpinren"},"content":"     * Creates a DialogBox for Anto for frontend.","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"tohpinren"},"content":"     * @param text Dialog text.","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"tohpinren"},"content":"     * @param img Dialog Anto image.","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"tohpinren"},"content":"     * @return Dialog box with text and Anto image for frontend.","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"tohpinren"},"content":"    public static DialogBox getAntoDialog(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"tohpinren"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"tohpinren"},"content":"        db.flip();","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"tohpinren"},"content":"        return db;","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"tohpinren":74}},{"path":"src/main/java/anto/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package anto;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":" * Event class represents an event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"     * DateTime representing start of Event.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"     * DateTime representing end of Event.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"     * Creates an Event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"     * @param description Description of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"     * @param from String representing start of event.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"     * @param to String representing end of event.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"     * @throws AntoException Throws Anto Exception if String given is not in","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"     *                       DateTime format.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"    public Event(String description, String from, String to) throws AntoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"        if (!Parser.isValidDate(from, formatter) || !Parser.isValidDate(to, formatter)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"            throw new InvalidDateTimeException(\"OOPS!!! The datetime has to be in this format: dd-MM-yyyy HH:mm.\");","lastModifiedDate":"2023-09-13"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"tohpinren"},"content":"        this.from \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"tohpinren"},"content":"        this.to \u003d LocalDateTime.parse(to, formatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"tohpinren"},"content":"     * Return string for writing to storage.","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"tohpinren"},"content":"     * @return Task in storage format.","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"tohpinren"},"content":"    public String getStoreFormat() {","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"tohpinren"},"content":"        assert this.description !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"tohpinren"},"content":"        assert this.from !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"tohpinren"},"content":"        assert this.to !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"tohpinren"},"content":"        return String.format(\"\\nE | %s | %s | %s | %s\",","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"tohpinren"},"content":"                this.isDone ? \"1\" : \"0\",","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"tohpinren"},"content":"                this.description,","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"tohpinren"},"content":"                this.from.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\")),","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"tohpinren"},"content":"                this.to.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\")));","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"tohpinren"},"content":"     * Getter function for From DateTime.","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"tohpinren"},"content":"     * @return from DateTime of the event.","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"tohpinren"},"content":"    public LocalDateTime getFromDateTime() {","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"tohpinren"},"content":"        return this.from;","lastModifiedDate":"2023-09-13"},{"lineNumber":65,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":66,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":67,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"tohpinren"},"content":"     * Overridden toString method to represent Event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"tohpinren"},"content":"     * @return String representing Event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"tohpinren"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":73,"author":{"gitId":"tohpinren"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":74,"author":{"gitId":"tohpinren"},"content":"        assert this.getStatusIcon() !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"tohpinren"},"content":"        assert this.from !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"tohpinren"},"content":"        assert this.to !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":77,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"tohpinren"},"content":"        return String.format(\"[E] [%s] %s (from: %s to: %s)\",","lastModifiedDate":"2023-08-24"},{"lineNumber":79,"author":{"gitId":"tohpinren"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"tohpinren"},"content":"                super.toString(),","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"tohpinren"},"content":"                this.from.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\")),","lastModifiedDate":"2023-08-29"},{"lineNumber":82,"author":{"gitId":"tohpinren"},"content":"                this.to.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\")));","lastModifiedDate":"2023-08-29"},{"lineNumber":83,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":84,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"tohpinren":84}},{"path":"src/main/java/anto/InvalidDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package anto;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":" * Anto Exception where String given is not in the correct DateTime format.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"public class InvalidDateTimeException extends AntoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"     * Creates an Invalid DateTime Exception.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"     * @param msg Message of InvalidDateTimeException.","lastModifiedDate":"2023-09-13"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"    public InvalidDateTimeException(String msg) {","lastModifiedDate":"2023-09-13"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"        super(\"InvalidDateException: \" + msg);","lastModifiedDate":"2023-09-13"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"tohpinren":15}},{"path":"src/main/java/anto/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package anto;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":" * Anto Exception where Index given is invalid.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"public class InvalidIndexException extends AntoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"     * Creates an invalid index exception with error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"     * @param errorMessage String with description of exception.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"    public InvalidIndexException(String errorMessage) {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"        super(\"anto.InvalidIndexException: \" + errorMessage);","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"tohpinren":15}},{"path":"src/main/java/anto/InvalidParametersException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package anto;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":" * Anto exception where the parameters given are invalid.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"public class InvalidParametersException extends AntoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"     * Creates an invalid parameters exception.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"     * @param errorMessage String with description of exception.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"    public InvalidParametersException(String errorMessage) {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"        super(\"anto.InvalidParametersException: \" + errorMessage);","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"tohpinren":15}},{"path":"src/main/java/anto/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package anto;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"public class Launcher {","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"     * Main method to run launcher.","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"     * @param args String input.","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"tohpinren":17}},{"path":"src/main/java/anto/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package anto;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"    private Anto anto \u003d new Anto();","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"     * Overriden start method to start Anto and GUI.","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"     * @param stage the primary stage for this application, onto which the application scene can be set.","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setAnto(anto);","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"            stage.show();","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"tohpinren":36}},{"path":"src/main/java/anto/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package anto;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"    private Anto anto;","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/student.png\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/anto.jpg\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"     * Initialises controller for MainWindow.","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"tohpinren"},"content":"     * Set Anto to the one given and print hello message and load file message.","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"tohpinren"},"content":"     * @param a Anto class to set to.","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"tohpinren"},"content":"    public void setAnto(Anto a) {","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"tohpinren"},"content":"        anto \u003d a;","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"tohpinren"},"content":"        assert anto.getUi() !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"tohpinren"},"content":"        assert anto.getTaskList() !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"tohpinren"},"content":"        assert anto.getTaskList().getTaskArrayList() !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"tohpinren"},"content":"        assert dukeImage !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"tohpinren"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"tohpinren"},"content":"                DialogBox.getAntoDialog(this.anto.getUi().greet(), dukeImage)","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"tohpinren"},"content":"        );","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"tohpinren"},"content":"        if (a.hasNoTasks()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"tohpinren"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"tohpinren"},"content":"                    DialogBox.getAntoDialog(this.anto.getUi().printNoSavedFile(), dukeImage)","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"tohpinren"},"content":"            );","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"tohpinren"},"content":"        } else {","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"tohpinren"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"tohpinren"},"content":"                    DialogBox.getAntoDialog(this.anto.getUi().printSavedFileFound(","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"tohpinren"},"content":"                            anto.getTaskList().getTaskArrayList()),","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"tohpinren"},"content":"                            dukeImage)","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"tohpinren"},"content":"            );","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"tohpinren"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Anto\u0027s reply and then appends them to","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"tohpinren"},"content":"     * the dialog container. Clears the user input after processing. Ends if Anto response is bye message.","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"tohpinren"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"tohpinren"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"tohpinren"},"content":"        assert userInput !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"tohpinren"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"tohpinren"},"content":"        assert anto !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"tohpinren"},"content":"        String response \u003d anto.getResponse(input);","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"tohpinren"},"content":"        assert userImage !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"tohpinren"},"content":"        assert dukeImage !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":80,"author":{"gitId":"tohpinren"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"tohpinren"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"tohpinren"},"content":"                DialogBox.getAntoDialog(response, dukeImage)","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"tohpinren"},"content":"        );","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"tohpinren"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"tohpinren"},"content":"        assert this.anto.getUi() !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":87,"author":{"gitId":"tohpinren"},"content":"        if (response.equals(this.anto.getUi().sayBye())) {","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"tohpinren"},"content":"            System.exit(0);","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"tohpinren":91}},{"path":"src/main/java/anto/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package anto;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-09-13"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":" * Parser class handles all reading of inputs.","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"    private Calendar calendar;","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"     * Creates a Parser class.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"     * @param ui Ui class that handles printing to command line.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"     * @param taskList TaskList with all the current tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"    public Parser(Ui ui, TaskList taskList, Calendar calendar) {","lastModifiedDate":"2023-09-13"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"        this.calendar \u003d calendar;","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"     * Reads inputs from argument and decide what actions to take.","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"     * @param input Input from user.","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"     * @return Returns String response to user.","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"    public String readInput(String input) {","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"tohpinren"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"tohpinren"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"tohpinren"},"content":"                return this.byeCommand();","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"tohpinren"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"tohpinren"},"content":"                return this.listCommand();","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"tohpinren"},"content":"            } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"tohpinren"},"content":"                return this.markCommand(input);","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"tohpinren"},"content":"            } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"tohpinren"},"content":"                return this.unmarkCommand(input);","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"tohpinren"},"content":"            } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"tohpinren"},"content":"                return this.todoCommand(input);","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"tohpinren"},"content":"            } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"tohpinren"},"content":"                return this.deadlineCommand(input);","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"tohpinren"},"content":"            } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"tohpinren"},"content":"                return this.eventCommand(input);","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"tohpinren"},"content":"            } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"tohpinren"},"content":"                return this.deleteCommand(input);","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"tohpinren"},"content":"            } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"tohpinren"},"content":"                return this.findCommand(input);","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"tohpinren"},"content":"            } else if (input.startsWith(\"view schedule\")) {","lastModifiedDate":"2023-09-20"},{"lineNumber":57,"author":{"gitId":"tohpinren"},"content":"                return this.viewScheduleCommand(input);","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"tohpinren"},"content":"            } else {","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"tohpinren"},"content":"                throw new AntoException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :(\");","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"tohpinren"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"tohpinren"},"content":"        } catch (AntoException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"tohpinren"},"content":"            return this.ui.printError(e);","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"tohpinren"},"content":"    private String byeCommand() {","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"tohpinren"},"content":"        assert this.ui !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"tohpinren"},"content":"        return this.ui.sayBye();","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":70,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":71,"author":{"gitId":"tohpinren"},"content":"    private String listCommand() {","lastModifiedDate":"2023-09-12"},{"lineNumber":72,"author":{"gitId":"tohpinren"},"content":"        assert this.taskList !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"tohpinren"},"content":"        assert this.ui !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"tohpinren"},"content":"        if (this.taskList.getLength() \u003d\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"tohpinren"},"content":"            return this.ui.printNoTasks();","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"tohpinren"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"tohpinren"},"content":"            return this.ui.printList();","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"tohpinren"},"content":"    private String markCommand(String input) throws AntoException {","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"tohpinren"},"content":"        // Throw error if there is no index","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"tohpinren"},"content":"        if (input.length() \u003c 6 || input.split(\" \", 2).length \u003c 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":85,"author":{"gitId":"tohpinren"},"content":"            throw new InvalidIndexException(\"OOPS!!! You need to include an index to mark task.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":87,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"tohpinren"},"content":"        String strIndex \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"tohpinren"},"content":"        // Throw error if index given is not an int","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"tohpinren"},"content":"        if (!Parser.isInt(strIndex)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"tohpinren"},"content":"            throw new InvalidIndexException(\"OOPS!!! You need to include an index to mark task.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"tohpinren"},"content":"        int index \u003d Integer.parseInt(strIndex) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"tohpinren"},"content":"        assert this.taskList !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"tohpinren"},"content":"        // Throw error if there is no task at index","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"tohpinren"},"content":"        if (index \u003e\u003d this.taskList.getLength()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"tohpinren"},"content":"            throw new InvalidIndexException(\"OOPS!!! There is no task at that index.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"tohpinren"},"content":"        assert this.ui !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":103,"author":{"gitId":"tohpinren"},"content":"        this.taskList.markTaskAsDone(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":105,"author":{"gitId":"tohpinren"},"content":"        return this.ui.printMarkAsDone(index);","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":107,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":108,"author":{"gitId":"tohpinren"},"content":"    private String unmarkCommand(String input) throws AntoException {","lastModifiedDate":"2023-09-12"},{"lineNumber":109,"author":{"gitId":"tohpinren"},"content":"        // Throw error if there is no index","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"tohpinren"},"content":"        if (input.length() \u003c 8 || input.split(\" \", 2).length \u003c 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"tohpinren"},"content":"            throw new InvalidIndexException(\"OOPS!!! You need to include an index to unmark task.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"tohpinren"},"content":"        String strIndex \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"tohpinren"},"content":"        // Throw error if index given is not an int","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"tohpinren"},"content":"        if (!Parser.isInt(strIndex)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"tohpinren"},"content":"            throw new InvalidIndexException(\"OOPS!!! You need to include an index to unmark task.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"tohpinren"},"content":"        int index \u003d Integer.parseInt(strIndex) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":121,"author":{"gitId":"tohpinren"},"content":"        // Throw error if there is no task at index","lastModifiedDate":"2023-08-24"},{"lineNumber":122,"author":{"gitId":"tohpinren"},"content":"        if (index \u003e\u003d this.taskList.getLength()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"tohpinren"},"content":"            throw new InvalidIndexException(\"OOPS!!! There is no task at that index.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":125,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":127,"author":{"gitId":"tohpinren"},"content":"        assert this.taskList !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":128,"author":{"gitId":"tohpinren"},"content":"        this.taskList.unmarkTask(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":130,"author":{"gitId":"tohpinren"},"content":"        assert this.ui !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":131,"author":{"gitId":"tohpinren"},"content":"        return this.ui.printUnmark(index);","lastModifiedDate":"2023-09-05"},{"lineNumber":132,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"tohpinren"},"content":"    private String todoCommand(String input) throws AntoException {","lastModifiedDate":"2023-09-12"},{"lineNumber":135,"author":{"gitId":"tohpinren"},"content":"        // Throw error if there is no description","lastModifiedDate":"2023-08-24"},{"lineNumber":136,"author":{"gitId":"tohpinren"},"content":"        if (input.length() \u003c 6) {","lastModifiedDate":"2023-08-24"},{"lineNumber":137,"author":{"gitId":"tohpinren"},"content":"            throw new InvalidParametersException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":139,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"tohpinren"},"content":"        String[] arr \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":141,"author":{"gitId":"tohpinren"},"content":"        Task newTask \u003d new Todo(arr[1]);","lastModifiedDate":"2023-08-23"},{"lineNumber":142,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":143,"author":{"gitId":"tohpinren"},"content":"        assert this.taskList !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":144,"author":{"gitId":"tohpinren"},"content":"        this.taskList.addToList(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"tohpinren"},"content":"        assert this.ui !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":147,"author":{"gitId":"tohpinren"},"content":"        return this.ui.printAdded(newTask);","lastModifiedDate":"2023-09-05"},{"lineNumber":148,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":149,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"tohpinren"},"content":"    private String deadlineCommand(String input) throws AntoException {","lastModifiedDate":"2023-09-12"},{"lineNumber":151,"author":{"gitId":"tohpinren"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":152,"author":{"gitId":"tohpinren"},"content":"            String[] arr \u003d input.split(\" /by \");","lastModifiedDate":"2023-08-23"},{"lineNumber":153,"author":{"gitId":"tohpinren"},"content":"            String taskDesc \u003d arr[0].substring(9);","lastModifiedDate":"2023-08-24"},{"lineNumber":154,"author":{"gitId":"tohpinren"},"content":"            String by \u003d arr[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":155,"author":{"gitId":"tohpinren"},"content":"            Task newTask \u003d new Deadline(taskDesc, by);","lastModifiedDate":"2023-08-23"},{"lineNumber":156,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":157,"author":{"gitId":"tohpinren"},"content":"            assert this.taskList !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":158,"author":{"gitId":"tohpinren"},"content":"            this.taskList.addToList(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":160,"author":{"gitId":"tohpinren"},"content":"            assert this.ui !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":161,"author":{"gitId":"tohpinren"},"content":"            return this.ui.printAdded(newTask);","lastModifiedDate":"2023-09-05"},{"lineNumber":162,"author":{"gitId":"tohpinren"},"content":"        } catch (StringIndexOutOfBoundsException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":163,"author":{"gitId":"tohpinren"},"content":"            throw new InvalidParametersException(\"OOPS!!! The description and by of a deadline\"","lastModifiedDate":"2023-09-12"},{"lineNumber":164,"author":{"gitId":"tohpinren"},"content":"                    + \" must be valid.\");","lastModifiedDate":"2023-09-12"},{"lineNumber":165,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":166,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":167,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"tohpinren"},"content":"    private String eventCommand(String input) throws AntoException {","lastModifiedDate":"2023-09-12"},{"lineNumber":169,"author":{"gitId":"tohpinren"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":170,"author":{"gitId":"tohpinren"},"content":"            String[] arr \u003d input.split(\" /from \");","lastModifiedDate":"2023-08-23"},{"lineNumber":171,"author":{"gitId":"tohpinren"},"content":"            String taskDesc \u003d arr[0].substring(6);","lastModifiedDate":"2023-08-24"},{"lineNumber":172,"author":{"gitId":"tohpinren"},"content":"            String[] arrBack \u003d arr[1].split(\" /to \");","lastModifiedDate":"2023-08-23"},{"lineNumber":173,"author":{"gitId":"tohpinren"},"content":"            String from \u003d arrBack[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":174,"author":{"gitId":"tohpinren"},"content":"            String to \u003d arrBack[1];","lastModifiedDate":"2023-08-23"},{"lineNumber":175,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":176,"author":{"gitId":"tohpinren"},"content":"            Event newTask \u003d new Event(taskDesc, from, to);","lastModifiedDate":"2023-09-13"},{"lineNumber":177,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":178,"author":{"gitId":"tohpinren"},"content":"            assert this.taskList !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":179,"author":{"gitId":"tohpinren"},"content":"            this.taskList.addToList(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":181,"author":{"gitId":"tohpinren"},"content":"            // Add event to calendar","lastModifiedDate":"2023-09-13"},{"lineNumber":182,"author":{"gitId":"tohpinren"},"content":"            this.calendar.addToCalendar(newTask);","lastModifiedDate":"2023-09-13"},{"lineNumber":183,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":184,"author":{"gitId":"tohpinren"},"content":"            assert this.ui !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":185,"author":{"gitId":"tohpinren"},"content":"            return this.ui.printAdded(newTask);","lastModifiedDate":"2023-09-05"},{"lineNumber":186,"author":{"gitId":"tohpinren"},"content":"        } catch (StringIndexOutOfBoundsException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":187,"author":{"gitId":"tohpinren"},"content":"            throw new InvalidParametersException(\"OOPS!!! The description and from and to of an event\"","lastModifiedDate":"2023-09-12"},{"lineNumber":188,"author":{"gitId":"tohpinren"},"content":"                    + \" must be valid.\");","lastModifiedDate":"2023-09-12"},{"lineNumber":189,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":191,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":192,"author":{"gitId":"tohpinren"},"content":"    private String deleteCommand(String input) throws AntoException {","lastModifiedDate":"2023-09-12"},{"lineNumber":193,"author":{"gitId":"tohpinren"},"content":"        // Throw error if there is no index","lastModifiedDate":"2023-08-24"},{"lineNumber":194,"author":{"gitId":"tohpinren"},"content":"        if (input.length() \u003c 8 || input.split(\" \", 2).length \u003c 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":195,"author":{"gitId":"tohpinren"},"content":"            throw new InvalidIndexException(\"OOPS!!! You need to include an index to delete task.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":196,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":197,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":198,"author":{"gitId":"tohpinren"},"content":"        String strIndex \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":199,"author":{"gitId":"tohpinren"},"content":"        // Throw error if index given is not an int","lastModifiedDate":"2023-08-24"},{"lineNumber":200,"author":{"gitId":"tohpinren"},"content":"        if (!Parser.isInt(strIndex)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":201,"author":{"gitId":"tohpinren"},"content":"            throw new InvalidIndexException(\"OOPS!!! You need to include an index to delete task.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":202,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":203,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":204,"author":{"gitId":"tohpinren"},"content":"        int index \u003d Integer.parseInt(strIndex) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":205,"author":{"gitId":"tohpinren"},"content":"        // Throw error if there is no task at index","lastModifiedDate":"2023-08-24"},{"lineNumber":206,"author":{"gitId":"tohpinren"},"content":"        if (index \u003e\u003d this.taskList.getLength()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":207,"author":{"gitId":"tohpinren"},"content":"            throw new InvalidIndexException(\"OOPS!!! There is no task at that index.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":208,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":209,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":210,"author":{"gitId":"tohpinren"},"content":"        assert this.taskList !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":211,"author":{"gitId":"tohpinren"},"content":"        Task removedTask \u003d this.taskList.deleteTask(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":212,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":213,"author":{"gitId":"tohpinren"},"content":"        // Delete task from Calendar if task is event","lastModifiedDate":"2023-09-13"},{"lineNumber":214,"author":{"gitId":"tohpinren"},"content":"        if (removedTask instanceof Event) {","lastModifiedDate":"2023-09-13"},{"lineNumber":215,"author":{"gitId":"tohpinren"},"content":"            // It is safe to type cast because the type of removedTask is checked beforehand","lastModifiedDate":"2023-09-13"},{"lineNumber":216,"author":{"gitId":"tohpinren"},"content":"            this.calendar.removeFromCalendar((Event) removedTask);","lastModifiedDate":"2023-09-13"},{"lineNumber":217,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":218,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":219,"author":{"gitId":"tohpinren"},"content":"        assert this.ui !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":220,"author":{"gitId":"tohpinren"},"content":"        return this.ui.printDelete(removedTask);","lastModifiedDate":"2023-09-05"},{"lineNumber":221,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"tohpinren"},"content":"    private String findCommand(String input) throws InvalidIndexException {","lastModifiedDate":"2023-09-12"},{"lineNumber":224,"author":{"gitId":"tohpinren"},"content":"        // Throw error if there is no keyword","lastModifiedDate":"2023-08-31"},{"lineNumber":225,"author":{"gitId":"tohpinren"},"content":"        if (input.length() \u003c 6 || input.split(\" \", 2).length \u003c 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":226,"author":{"gitId":"tohpinren"},"content":"            throw new InvalidIndexException(\"OOPS!!! You need to include a keyword to find tasks.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":227,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":228,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":229,"author":{"gitId":"tohpinren"},"content":"        String keyword \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":230,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":231,"author":{"gitId":"tohpinren"},"content":"        assert this.taskList !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":232,"author":{"gitId":"tohpinren"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d this.taskList.findTask(keyword);","lastModifiedDate":"2023-08-31"},{"lineNumber":233,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":234,"author":{"gitId":"tohpinren"},"content":"        assert this.ui !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":235,"author":{"gitId":"tohpinren"},"content":"        return this.ui.printFoundTasks(foundTasks);","lastModifiedDate":"2023-09-05"},{"lineNumber":236,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":237,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":238,"author":{"gitId":"tohpinren"},"content":"    private String viewScheduleCommand(String input) throws InvalidParametersException, InvalidDateTimeException {","lastModifiedDate":"2023-09-13"},{"lineNumber":239,"author":{"gitId":"tohpinren"},"content":"        try {","lastModifiedDate":"2023-09-13"},{"lineNumber":240,"author":{"gitId":"tohpinren"},"content":"            String[] arr \u003d input.split(\" \");","lastModifiedDate":"2023-09-13"},{"lineNumber":241,"author":{"gitId":"tohpinren"},"content":"            String dateStr \u003d arr[2];","lastModifiedDate":"2023-09-13"},{"lineNumber":242,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":243,"author":{"gitId":"tohpinren"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2023-09-13"},{"lineNumber":244,"author":{"gitId":"tohpinren"},"content":"            //convert String to LocalDate","lastModifiedDate":"2023-09-13"},{"lineNumber":245,"author":{"gitId":"tohpinren"},"content":"            LocalDate localDate \u003d LocalDate.parse(dateStr, formatter);","lastModifiedDate":"2023-09-13"},{"lineNumber":246,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":247,"author":{"gitId":"tohpinren"},"content":"            assert this.calendar !\u003d null;","lastModifiedDate":"2023-09-13"},{"lineNumber":248,"author":{"gitId":"tohpinren"},"content":"            ArrayList\u003cEvent\u003e eventsOnDate \u003d this.calendar.getEventsOnDate(localDate);","lastModifiedDate":"2023-09-13"},{"lineNumber":249,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":250,"author":{"gitId":"tohpinren"},"content":"            assert this.ui !\u003d null;","lastModifiedDate":"2023-09-13"},{"lineNumber":251,"author":{"gitId":"tohpinren"},"content":"            return this.ui.printEventsOnDate(eventsOnDate, dateStr);","lastModifiedDate":"2023-09-13"},{"lineNumber":252,"author":{"gitId":"tohpinren"},"content":"        } catch (StringIndexOutOfBoundsException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":253,"author":{"gitId":"tohpinren"},"content":"            throw new InvalidParametersException(\"OOPS!!! The date given must be valid.\");","lastModifiedDate":"2023-09-13"},{"lineNumber":254,"author":{"gitId":"tohpinren"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":255,"author":{"gitId":"tohpinren"},"content":"            throw new InvalidDateTimeException(\"OOPS!!! The datetime has to be in this format: dd-MM-yyyy.\");","lastModifiedDate":"2023-09-13"},{"lineNumber":256,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":257,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":258,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":259,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":260,"author":{"gitId":"tohpinren"},"content":"     * Return boolean whether String represents an integer.","lastModifiedDate":"2023-08-31"},{"lineNumber":261,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":262,"author":{"gitId":"tohpinren"},"content":"     * @param strInt String to check.","lastModifiedDate":"2023-08-31"},{"lineNumber":263,"author":{"gitId":"tohpinren"},"content":"     * @return True if string represents an integer.","lastModifiedDate":"2023-08-31"},{"lineNumber":264,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":265,"author":{"gitId":"tohpinren"},"content":"    public static boolean isInt(String strInt) {","lastModifiedDate":"2023-08-24"},{"lineNumber":266,"author":{"gitId":"tohpinren"},"content":"        if (strInt \u003d\u003d null) {","lastModifiedDate":"2023-08-24"},{"lineNumber":267,"author":{"gitId":"tohpinren"},"content":"            return false;","lastModifiedDate":"2023-08-24"},{"lineNumber":268,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":269,"author":{"gitId":"tohpinren"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":270,"author":{"gitId":"tohpinren"},"content":"            int i \u003d Integer.parseInt(strInt);","lastModifiedDate":"2023-08-24"},{"lineNumber":271,"author":{"gitId":"tohpinren"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-08-24"},{"lineNumber":272,"author":{"gitId":"tohpinren"},"content":"            return false;","lastModifiedDate":"2023-08-24"},{"lineNumber":273,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":274,"author":{"gitId":"tohpinren"},"content":"        return true;","lastModifiedDate":"2023-08-24"},{"lineNumber":275,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":276,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":277,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":278,"author":{"gitId":"tohpinren"},"content":"     * Check if String given is in correct datetime format.","lastModifiedDate":"2023-08-31"},{"lineNumber":279,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":280,"author":{"gitId":"tohpinren"},"content":"     * @param dateStr String to be checked.","lastModifiedDate":"2023-08-31"},{"lineNumber":281,"author":{"gitId":"tohpinren"},"content":"     * @param formatter Format of DateTime to check with.","lastModifiedDate":"2023-08-31"},{"lineNumber":282,"author":{"gitId":"tohpinren"},"content":"     * @return True if string is in correct DateTime format.","lastModifiedDate":"2023-08-31"},{"lineNumber":283,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":284,"author":{"gitId":"tohpinren"},"content":"    public static boolean isValidDate(String dateStr, DateTimeFormatter formatter) {","lastModifiedDate":"2023-08-29"},{"lineNumber":285,"author":{"gitId":"tohpinren"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":286,"author":{"gitId":"tohpinren"},"content":"            LocalDateTime.parse(dateStr, formatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":287,"author":{"gitId":"tohpinren"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":288,"author":{"gitId":"tohpinren"},"content":"            return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":289,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":290,"author":{"gitId":"tohpinren"},"content":"        return true;","lastModifiedDate":"2023-08-29"},{"lineNumber":291,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":292,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"tohpinren":292}},{"path":"src/main/java/anto/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package anto;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":" * Storage class handles all storing and loading of data.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"public class Storage {","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"    private String relativePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"    private Path absolutePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"    private File antoFile;","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"     * Creates a Storage class.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"     * @param ui Ui that handles all printing to the command line.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"     * @param filePath Relative file path of file to load data from.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"    public Storage(Ui ui, String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"        this.relativePath \u003d filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"        this.absolutePath \u003d Paths.get(relativePath).toAbsolutePath();","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"        this.antoFile \u003d absolutePath.toFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"     * Checks file at file path and loads data if it is there, else create a new file.","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"tohpinren"},"content":"     * @return ArrayList of Tasks representing data.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"tohpinren"},"content":"     * @throws AntoException Throws exception if there is an IO Exception.","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"tohpinren"},"content":"    public ArrayList\u003cTask\u003e loadSave(Calendar calendar) throws AntoException {","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"tohpinren"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"tohpinren"},"content":"            assert this.ui !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"tohpinren"},"content":"            assert this.antoFile !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"tohpinren"},"content":"            // If file doesn\u0027t exist","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"tohpinren"},"content":"            ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"tohpinren"},"content":"            if (!antoFile.exists()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"tohpinren"},"content":"                antoFile.createNewFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"tohpinren"},"content":"                taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"tohpinren"},"content":"                this.ui.printNoSavedFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"tohpinren"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"tohpinren"},"content":"                taskList \u003d this.loadFileIntoArrayList(calendar);","lastModifiedDate":"2023-09-13"},{"lineNumber":54,"author":{"gitId":"tohpinren"},"content":"                this.ui.printSavedFileFound(taskList);","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"tohpinren"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"tohpinren"},"content":"            return taskList;","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"tohpinren"},"content":"        } catch (java.io.IOException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"tohpinren"},"content":"            throw new AntoException(\"OOPS!!! IOException\");","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"tohpinren"},"content":"    private ArrayList\u003cTask\u003e loadFileIntoArrayList(Calendar calendar) throws FileNotFoundException, AntoException {","lastModifiedDate":"2023-09-13"},{"lineNumber":64,"author":{"gitId":"tohpinren"},"content":"        assert antoFile !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"tohpinren"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"tohpinren"},"content":"        Scanner sc \u003d new Scanner(antoFile);","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"tohpinren"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":69,"author":{"gitId":"tohpinren"},"content":"            String currLine \u003d sc.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"tohpinren"},"content":"            if (currLine.isEmpty()) {","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"tohpinren"},"content":"                continue;","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"tohpinren"},"content":"            }","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"tohpinren"},"content":"            String[] currLineArr \u003d currLine.split(Pattern.quote(\" | \"));","lastModifiedDate":"2023-08-29"},{"lineNumber":74,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"tohpinren"},"content":"            Task newTask;","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"tohpinren"},"content":"            switch (currLineArr[0]) {","lastModifiedDate":"2023-09-12"},{"lineNumber":77,"author":{"gitId":"tohpinren"},"content":"            case \"T\":","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"tohpinren"},"content":"                newTask \u003d new Todo(currLineArr[2]);","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"tohpinren"},"content":"                break;","lastModifiedDate":"2023-09-12"},{"lineNumber":80,"author":{"gitId":"tohpinren"},"content":"            case \"D\":","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"tohpinren"},"content":"                newTask \u003d new Deadline(currLineArr[2], currLineArr[3]);","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"tohpinren"},"content":"                break;","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"tohpinren"},"content":"            case \"E\":","lastModifiedDate":"2023-09-12"},{"lineNumber":84,"author":{"gitId":"tohpinren"},"content":"                newTask \u003d new Event(currLineArr[2], currLineArr[3], currLineArr[4]);","lastModifiedDate":"2023-09-12"},{"lineNumber":85,"author":{"gitId":"tohpinren"},"content":"                // It is safe to typecast to Event because newTask is created as an Event here","lastModifiedDate":"2023-09-13"},{"lineNumber":86,"author":{"gitId":"tohpinren"},"content":"                calendar.addToCalendar((Event) newTask);","lastModifiedDate":"2023-09-13"},{"lineNumber":87,"author":{"gitId":"tohpinren"},"content":"                break;","lastModifiedDate":"2023-09-12"},{"lineNumber":88,"author":{"gitId":"tohpinren"},"content":"            default:","lastModifiedDate":"2023-09-12"},{"lineNumber":89,"author":{"gitId":"tohpinren"},"content":"                throw new AntoException(\"OOPS!!! File text is in wrong format\");","lastModifiedDate":"2023-09-12"},{"lineNumber":90,"author":{"gitId":"tohpinren"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":91,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"tohpinren"},"content":"            if (currLineArr[1].equals(\"1\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":93,"author":{"gitId":"tohpinren"},"content":"                newTask.markAsDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":94,"author":{"gitId":"tohpinren"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":95,"author":{"gitId":"tohpinren"},"content":"            taskList.add(newTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":97,"author":{"gitId":"tohpinren"},"content":"        return taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":99,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"tohpinren"},"content":"     * Adds task to Anto file.","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"tohpinren"},"content":"     * @param task Task to be added.","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"tohpinren"},"content":"     * @throws AntoException Throws AntoException when there is an IOException.","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"tohpinren"},"content":"    public void addTaskToStorage(Task task) throws AntoException {","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"tohpinren"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"tohpinren"},"content":"            FileWriter writer \u003d new FileWriter(antoFile, true);","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"tohpinren"},"content":"            if (task instanceof Todo) {","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"tohpinren"},"content":"                // It is safe to type cast because the type is checked before","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"tohpinren"},"content":"                Todo todo \u003d (Todo) task;","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"tohpinren"},"content":"                writer.write(todo.getStoreFormat());","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"tohpinren"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2023-09-05"},{"lineNumber":114,"author":{"gitId":"tohpinren"},"content":"                // It is safe to type cast because the type is checked before","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"tohpinren"},"content":"                Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"tohpinren"},"content":"                writer.write(deadline.getStoreFormat());","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"tohpinren"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"tohpinren"},"content":"                // It is safe to type cast because the type is checked before","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"tohpinren"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"tohpinren"},"content":"                writer.write(event.getStoreFormat());","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"tohpinren"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"tohpinren"},"content":"            writer.close();","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"tohpinren"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"tohpinren"},"content":"            throw new AntoException(\"OOPS!!! IOException\");","lastModifiedDate":"2023-09-05"},{"lineNumber":125,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":126,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":127,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":128,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":129,"author":{"gitId":"tohpinren"},"content":"     * Mark task as done in storage file.","lastModifiedDate":"2023-09-05"},{"lineNumber":130,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":131,"author":{"gitId":"tohpinren"},"content":"     * @param index Index of task to mark.","lastModifiedDate":"2023-09-05"},{"lineNumber":132,"author":{"gitId":"tohpinren"},"content":"     * @throws AntoException Throws AntoException if there is an IOException","lastModifiedDate":"2023-09-05"},{"lineNumber":133,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":134,"author":{"gitId":"tohpinren"},"content":"    public void markTaskAsDone(int index) throws AntoException {","lastModifiedDate":"2023-09-05"},{"lineNumber":135,"author":{"gitId":"tohpinren"},"content":"        String tempRelativePath \u003d \"data/tempFile.txt\";","lastModifiedDate":"2023-09-05"},{"lineNumber":136,"author":{"gitId":"tohpinren"},"content":"        Path tempAbsolutePath \u003d Paths.get(tempRelativePath).toAbsolutePath();","lastModifiedDate":"2023-09-05"},{"lineNumber":137,"author":{"gitId":"tohpinren"},"content":"        File tempFile \u003d tempAbsolutePath.toFile();","lastModifiedDate":"2023-09-05"},{"lineNumber":138,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":139,"author":{"gitId":"tohpinren"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":140,"author":{"gitId":"tohpinren"},"content":"            Scanner sc \u003d new Scanner(antoFile);","lastModifiedDate":"2023-09-05"},{"lineNumber":141,"author":{"gitId":"tohpinren"},"content":"            FileWriter writer \u003d new FileWriter(tempFile);","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":143,"author":{"gitId":"tohpinren"},"content":"            int line \u003d 0;","lastModifiedDate":"2023-09-05"},{"lineNumber":144,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":145,"author":{"gitId":"tohpinren"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":146,"author":{"gitId":"tohpinren"},"content":"                String currLine \u003d sc.nextLine();","lastModifiedDate":"2023-09-05"},{"lineNumber":147,"author":{"gitId":"tohpinren"},"content":"                if (line \u003d\u003d index) {","lastModifiedDate":"2023-09-05"},{"lineNumber":148,"author":{"gitId":"tohpinren"},"content":"                    writer.write(currLine.replace(\"| 0 |\", \"| 1 |\")","lastModifiedDate":"2023-09-05"},{"lineNumber":149,"author":{"gitId":"tohpinren"},"content":"                            + System.getProperty(\"line.separator\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":150,"author":{"gitId":"tohpinren"},"content":"                } else {","lastModifiedDate":"2023-09-05"},{"lineNumber":151,"author":{"gitId":"tohpinren"},"content":"                    writer.write(currLine + System.getProperty(\"line.separator\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":152,"author":{"gitId":"tohpinren"},"content":"                }","lastModifiedDate":"2023-09-05"},{"lineNumber":153,"author":{"gitId":"tohpinren"},"content":"                line++;","lastModifiedDate":"2023-09-05"},{"lineNumber":154,"author":{"gitId":"tohpinren"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":155,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":156,"author":{"gitId":"tohpinren"},"content":"            writer.close();","lastModifiedDate":"2023-09-05"},{"lineNumber":157,"author":{"gitId":"tohpinren"},"content":"            sc.close();","lastModifiedDate":"2023-09-05"},{"lineNumber":158,"author":{"gitId":"tohpinren"},"content":"            tempFile.renameTo(antoFile);","lastModifiedDate":"2023-09-05"},{"lineNumber":159,"author":{"gitId":"tohpinren"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":160,"author":{"gitId":"tohpinren"},"content":"            throw new AntoException(\"OOPS!!! IOException\");","lastModifiedDate":"2023-09-05"},{"lineNumber":161,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":162,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":163,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":164,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":165,"author":{"gitId":"tohpinren"},"content":"     * Unmark task in storage file.","lastModifiedDate":"2023-09-05"},{"lineNumber":166,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":167,"author":{"gitId":"tohpinren"},"content":"     * @param index Index of task to unmark.","lastModifiedDate":"2023-09-05"},{"lineNumber":168,"author":{"gitId":"tohpinren"},"content":"     * @throws AntoException Throws AntoException if there is an IOException.","lastModifiedDate":"2023-09-05"},{"lineNumber":169,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":170,"author":{"gitId":"tohpinren"},"content":"    public void unmarkTask(int index) throws AntoException {","lastModifiedDate":"2023-09-05"},{"lineNumber":171,"author":{"gitId":"tohpinren"},"content":"        String tempRelativePath \u003d \"data/tempFile.txt\";","lastModifiedDate":"2023-09-05"},{"lineNumber":172,"author":{"gitId":"tohpinren"},"content":"        Path tempAbsolutePath \u003d Paths.get(tempRelativePath).toAbsolutePath();","lastModifiedDate":"2023-09-05"},{"lineNumber":173,"author":{"gitId":"tohpinren"},"content":"        File tempFile \u003d tempAbsolutePath.toFile();","lastModifiedDate":"2023-09-05"},{"lineNumber":174,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":175,"author":{"gitId":"tohpinren"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":176,"author":{"gitId":"tohpinren"},"content":"            Scanner sc \u003d new Scanner(antoFile);","lastModifiedDate":"2023-09-05"},{"lineNumber":177,"author":{"gitId":"tohpinren"},"content":"            FileWriter writer \u003d new FileWriter(tempFile);","lastModifiedDate":"2023-09-05"},{"lineNumber":178,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":179,"author":{"gitId":"tohpinren"},"content":"            int line \u003d 0;","lastModifiedDate":"2023-09-05"},{"lineNumber":180,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":181,"author":{"gitId":"tohpinren"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":182,"author":{"gitId":"tohpinren"},"content":"                String currLine \u003d sc.nextLine();","lastModifiedDate":"2023-09-05"},{"lineNumber":183,"author":{"gitId":"tohpinren"},"content":"                if (line \u003d\u003d index) {","lastModifiedDate":"2023-09-05"},{"lineNumber":184,"author":{"gitId":"tohpinren"},"content":"                    writer.write(currLine.replace(\"| 1 |\", \"| 0 |\")","lastModifiedDate":"2023-09-05"},{"lineNumber":185,"author":{"gitId":"tohpinren"},"content":"                            + System.getProperty(\"line.separator\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":186,"author":{"gitId":"tohpinren"},"content":"                } else {","lastModifiedDate":"2023-09-05"},{"lineNumber":187,"author":{"gitId":"tohpinren"},"content":"                    writer.write(currLine + System.getProperty(\"line.separator\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":188,"author":{"gitId":"tohpinren"},"content":"                }","lastModifiedDate":"2023-09-05"},{"lineNumber":189,"author":{"gitId":"tohpinren"},"content":"                line++;","lastModifiedDate":"2023-09-05"},{"lineNumber":190,"author":{"gitId":"tohpinren"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":191,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":192,"author":{"gitId":"tohpinren"},"content":"            writer.close();","lastModifiedDate":"2023-09-05"},{"lineNumber":193,"author":{"gitId":"tohpinren"},"content":"            sc.close();","lastModifiedDate":"2023-09-05"},{"lineNumber":194,"author":{"gitId":"tohpinren"},"content":"            tempFile.renameTo(antoFile);","lastModifiedDate":"2023-09-05"},{"lineNumber":195,"author":{"gitId":"tohpinren"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":196,"author":{"gitId":"tohpinren"},"content":"            throw new AntoException(\"OOPS!!! IOException\");","lastModifiedDate":"2023-09-05"},{"lineNumber":197,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":198,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":199,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":200,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":201,"author":{"gitId":"tohpinren"},"content":"     * Delete task in storage file.","lastModifiedDate":"2023-09-05"},{"lineNumber":202,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":203,"author":{"gitId":"tohpinren"},"content":"     * @param index Index of task to delete.","lastModifiedDate":"2023-09-05"},{"lineNumber":204,"author":{"gitId":"tohpinren"},"content":"     * @throws AntoException Throws AntoException if there is an IOException.","lastModifiedDate":"2023-09-05"},{"lineNumber":205,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":206,"author":{"gitId":"tohpinren"},"content":"    public void deleteTask(int index) throws AntoException {","lastModifiedDate":"2023-09-05"},{"lineNumber":207,"author":{"gitId":"tohpinren"},"content":"        String tempRelativePath \u003d \"data/tempFile.txt\";","lastModifiedDate":"2023-09-05"},{"lineNumber":208,"author":{"gitId":"tohpinren"},"content":"        Path tempAbsolutePath \u003d Paths.get(tempRelativePath).toAbsolutePath();","lastModifiedDate":"2023-09-05"},{"lineNumber":209,"author":{"gitId":"tohpinren"},"content":"        File tempFile \u003d tempAbsolutePath.toFile();","lastModifiedDate":"2023-09-05"},{"lineNumber":210,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":211,"author":{"gitId":"tohpinren"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":212,"author":{"gitId":"tohpinren"},"content":"            Scanner sc \u003d new Scanner(antoFile);","lastModifiedDate":"2023-09-05"},{"lineNumber":213,"author":{"gitId":"tohpinren"},"content":"            FileWriter writer \u003d new FileWriter(tempFile);","lastModifiedDate":"2023-09-05"},{"lineNumber":214,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":215,"author":{"gitId":"tohpinren"},"content":"            int line \u003d 0;","lastModifiedDate":"2023-09-05"},{"lineNumber":216,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":217,"author":{"gitId":"tohpinren"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":218,"author":{"gitId":"tohpinren"},"content":"                String currLine \u003d sc.nextLine();","lastModifiedDate":"2023-09-05"},{"lineNumber":219,"author":{"gitId":"tohpinren"},"content":"                if (line !\u003d index) {","lastModifiedDate":"2023-09-05"},{"lineNumber":220,"author":{"gitId":"tohpinren"},"content":"                    writer.write(currLine + System.getProperty(\"line.separator\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":221,"author":{"gitId":"tohpinren"},"content":"                }","lastModifiedDate":"2023-09-05"},{"lineNumber":222,"author":{"gitId":"tohpinren"},"content":"                line++;","lastModifiedDate":"2023-09-05"},{"lineNumber":223,"author":{"gitId":"tohpinren"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":224,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":225,"author":{"gitId":"tohpinren"},"content":"            writer.close();","lastModifiedDate":"2023-09-05"},{"lineNumber":226,"author":{"gitId":"tohpinren"},"content":"            sc.close();","lastModifiedDate":"2023-09-05"},{"lineNumber":227,"author":{"gitId":"tohpinren"},"content":"            tempFile.renameTo(antoFile);","lastModifiedDate":"2023-09-05"},{"lineNumber":228,"author":{"gitId":"tohpinren"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":229,"author":{"gitId":"tohpinren"},"content":"            throw new AntoException(\"OOPS!!! IOException\");","lastModifiedDate":"2023-09-05"},{"lineNumber":230,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":231,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":232,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"tohpinren":232}},{"path":"src/main/java/anto/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package anto;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":" * Class representing a Task.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"     * Description of task.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"     * Boolean representing whether task is completed.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"     * Creates a task.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"     * Returns status of task in string form.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"     * @return Returns \"X\" if task is done, else \" \".","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"tohpinren"},"content":"     * Sets task to done.","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"tohpinren"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"tohpinren"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":43,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"tohpinren"},"content":"     * Sets task to not done.","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"tohpinren"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"tohpinren"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":50,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"tohpinren"},"content":"     * Returns string representing task.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"tohpinren"},"content":"     * @return String with task description.","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"tohpinren"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"tohpinren"},"content":"        assert this.description !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"tohpinren"},"content":"        return this.description;","lastModifiedDate":"2023-08-23"},{"lineNumber":58,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":59,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"tohpinren":59}},{"path":"src/main/java/anto/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package anto;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":" * TaskList class represents list of all current tasks and handles all actions","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":" * related to tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"     * Creates a new TaskList class.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"     * @param taskList Initial ArrayList of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList, Storage storage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"     * Add task given to arraylist.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"     * @param newTask Task to be added.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"     * @throws AntoException Throws anto exception if there is an IO Exception","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"    public void addToList(Task newTask) throws AntoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"        assert this.taskList !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"        this.taskList.add(newTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"        assert this.storage !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"        this.storage.addTaskToStorage(newTask);","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"tohpinren"},"content":"     * Returns current array list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"tohpinren"},"content":"     * @return ArrayList of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"tohpinren"},"content":"    public ArrayList\u003cTask\u003e getTaskArrayList() {","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"tohpinren"},"content":"        return this.taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"tohpinren"},"content":"     * Returns current number of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"tohpinren"},"content":"     * @return Current number of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"tohpinren"},"content":"    public int getLength() {","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"tohpinren"},"content":"        assert this.taskList !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"tohpinren"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"tohpinren"},"content":"     * Marks task at index as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"tohpinren"},"content":"     * @param index Index of task to mark as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"tohpinren"},"content":"     * @throws AntoException Throws AntoException if there is an IO Exception.","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"tohpinren"},"content":"    public void markTaskAsDone(int index) throws AntoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"tohpinren"},"content":"        assert this.storage !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"tohpinren"},"content":"        this.storage.markTaskAsDone(index);","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"tohpinren"},"content":"        assert this.taskList !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"tohpinren"},"content":"        this.taskList.get(index).markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":70,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"tohpinren"},"content":"     * Unmark task at index.","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"tohpinren"},"content":"     * @param index Index of task to unmark.","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"tohpinren"},"content":"     * @throws AntoException Throws AntoException if there is an IO Exception.","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"tohpinren"},"content":"    public void unmarkTask(int index) throws AntoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"tohpinren"},"content":"        assert this.storage !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"tohpinren"},"content":"        this.storage.unmarkTask(index);","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":80,"author":{"gitId":"tohpinren"},"content":"        assert this.taskList !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"tohpinren"},"content":"        this.taskList.get(index).unmark();","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":84,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"tohpinren"},"content":"     * Deletes task at given index.","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"tohpinren"},"content":"     * @param index Index of task to delete.","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"tohpinren"},"content":"     * @return Deleted task.","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"tohpinren"},"content":"     * @throws AntoException Throws AntoException if there is an IO Exception.","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"tohpinren"},"content":"    public Task deleteTask(int index) throws AntoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"tohpinren"},"content":"        assert this.storage !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":93,"author":{"gitId":"tohpinren"},"content":"        this.storage.deleteTask(index);","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"tohpinren"},"content":"        assert this.taskList !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"tohpinren"},"content":"        return this.taskList.remove(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"tohpinren"},"content":"     * Find tasks with matching keyword.","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"tohpinren"},"content":"     * @param keyword Keyword to search tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"tohpinren"},"content":"     * @return Return Array List of tasks with specified keyword.","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"tohpinren"},"content":"    public ArrayList\u003cTask\u003e findTask(String keyword) {","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"tohpinren"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"tohpinren"},"content":"        assert this.taskList !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":109,"author":{"gitId":"tohpinren"},"content":"        for (Task curr : this.taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"tohpinren"},"content":"            if (curr.description.contains(keyword)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"tohpinren"},"content":"                foundTasks.add(curr);","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"tohpinren"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"tohpinren"},"content":"        return foundTasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"tohpinren"},"content":"     * Checks if task list has no tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"tohpinren"},"content":"     * @return Whether task list has no tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"tohpinren"},"content":"    public Boolean hasNoTasks() {","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"tohpinren"},"content":"        assert this.taskList !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":125,"author":{"gitId":"tohpinren"},"content":"        return taskList.size() \u003d\u003d 0;","lastModifiedDate":"2023-09-05"},{"lineNumber":126,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":127,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"tohpinren":127}},{"path":"src/main/java/anto/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package anto;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":" * Todo class represents a Todo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"     * Creates a Todo task","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"     * @param description Description of todo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"     * Return string for writing to storage.","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"     * @return Task in storage format.","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"    public String getStoreFormat() {","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"        assert this.description !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"        return String.format(\"\\nT | %s | %s\", this.isDone ? \"1\" : \"0\", this.description);","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"     * Overridden toString to represent a Todo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"     * @return String representing a Todo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"        assert this.getStatusIcon() !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"        return String.format(\"[T] [%s] %s\",","lastModifiedDate":"2023-08-24"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-08-24"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"                super.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":37,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"tohpinren":37}},{"path":"src/main/java/anto/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package anto;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":" * Ui handles all responses.","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"     * Creates a Ui class.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"    public Ui() {}","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"     * Sets Ui\u0027s taskList to the given one.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"     * @param taskList TaskList to set it to.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"    public void setTaskList(TaskList taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"     * Returns string that greets the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"     * @return String that greets the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"    public String greet() {","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"        return \"Hello I\u0027m Anto\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"tohpinren"},"content":"     * Says bye to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"tohpinren"},"content":"     * @return String that says bye to the user.","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"tohpinren"},"content":"    public String sayBye() {","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"tohpinren"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"tohpinren"},"content":"     * Returns string with current list of tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"tohpinren"},"content":"     * @return String with current list of tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"tohpinren"},"content":"    public String printList() {","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"tohpinren"},"content":"        assert this.taskList !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"tohpinren"},"content":"        ArrayList\u003cTask\u003e taskArrayList \u003d taskList.getTaskArrayList();","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"tohpinren"},"content":"        int length \u003d taskList.getLength();","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"tohpinren"},"content":"        ArrayList\u003cString\u003e stringOutputArr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"tohpinren"},"content":"        stringOutputArr.add(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"tohpinren"},"content":"        for (int i \u003d 0; i \u003c length; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"tohpinren"},"content":"            stringOutputArr.add(String.format(\"%d. %s\",","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"tohpinren"},"content":"                    i + 1, taskArrayList.get(i)));","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"tohpinren"},"content":"        return String.join(\"\\n\", stringOutputArr);","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"tohpinren"},"content":"     * Returns String with task marked as done.","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"tohpinren"},"content":"     * @param index Index of task marked as done.","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"tohpinren"},"content":"     * @return String with information of task marked as done.","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"tohpinren"},"content":"    public String printMarkAsDone(int index) {","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"tohpinren"},"content":"        assert this.taskList !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"tohpinren"},"content":"        ArrayList\u003cTask\u003e taskArrayList \u003d taskList.getTaskArrayList();","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":76,"author":{"gitId":"tohpinren"},"content":"        return String.format(\"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"tohpinren"},"content":"                        + \"%s\",","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"tohpinren"},"content":"                taskArrayList.get(index));","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":80,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"tohpinren"},"content":"     * Returns string with message for task unmarked.","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"tohpinren"},"content":"     * @param index Index of task unmarked.","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"tohpinren"},"content":"     * @return String with message for task unmarked.","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"tohpinren"},"content":"    public String printUnmark(int index) {","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"tohpinren"},"content":"        assert this.taskList !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":89,"author":{"gitId":"tohpinren"},"content":"        ArrayList\u003cTask\u003e taskArrayList \u003d taskList.getTaskArrayList();","lastModifiedDate":"2023-09-12"},{"lineNumber":90,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"tohpinren"},"content":"        return String.format(\"Okay, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"tohpinren"},"content":"                        + \"%s\",","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"tohpinren"},"content":"                taskArrayList.get(index));","lastModifiedDate":"2023-09-12"},{"lineNumber":94,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"tohpinren"},"content":"     * Returns string of message of task added.","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"tohpinren"},"content":"     * @param task Task that was added.","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"tohpinren"},"content":"     * @return String with message of task added.","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"tohpinren"},"content":"    public String printAdded(Task task) {","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"tohpinren"},"content":"        assert this.taskList !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":104,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":105,"author":{"gitId":"tohpinren"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"tohpinren"},"content":"                        + \"%s\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"tohpinren"},"content":"                        + \"Now you have %d tasks in the list.\",","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"tohpinren"},"content":"                task,","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"tohpinren"},"content":"                taskList.getLength());","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"tohpinren"},"content":"     * Returns string of message for exception.","lastModifiedDate":"2023-09-05"},{"lineNumber":114,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"tohpinren"},"content":"     * @param e AntoException that was thrown.","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"tohpinren"},"content":"     * @return String with message of AntoException.","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"tohpinren"},"content":"    public String printError(AntoException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":119,"author":{"gitId":"tohpinren"},"content":"        return e.getMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"tohpinren"},"content":"     * Returns message of task deleted.","lastModifiedDate":"2023-09-05"},{"lineNumber":124,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"tohpinren"},"content":"     * @param task Task that was deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"tohpinren"},"content":"     * @return String with message of task deleted.","lastModifiedDate":"2023-09-05"},{"lineNumber":127,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"tohpinren"},"content":"    public String printDelete(Task task) {","lastModifiedDate":"2023-09-05"},{"lineNumber":129,"author":{"gitId":"tohpinren"},"content":"        assert this.taskList !\u003d null;","lastModifiedDate":"2023-09-12"},{"lineNumber":130,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":131,"author":{"gitId":"tohpinren"},"content":"        return String.format(\"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":132,"author":{"gitId":"tohpinren"},"content":"                        + \"%s\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":133,"author":{"gitId":"tohpinren"},"content":"                        + \"Now you have %d tasks in the list.\",","lastModifiedDate":"2023-09-05"},{"lineNumber":134,"author":{"gitId":"tohpinren"},"content":"                task,","lastModifiedDate":"2023-09-05"},{"lineNumber":135,"author":{"gitId":"tohpinren"},"content":"                taskList.getLength());","lastModifiedDate":"2023-09-05"},{"lineNumber":136,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"tohpinren"},"content":"     * Returns string with message of no tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":140,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":141,"author":{"gitId":"tohpinren"},"content":"     * @return String with message of no tasks.","lastModifiedDate":"2023-09-05"},{"lineNumber":142,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"tohpinren"},"content":"    public String printNoTasks() {","lastModifiedDate":"2023-09-05"},{"lineNumber":144,"author":{"gitId":"tohpinren"},"content":"        return \"Sorry, you currently have no tasks on the list.\";","lastModifiedDate":"2023-09-05"},{"lineNumber":145,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"tohpinren"},"content":"     * Returns message that there is no saved file.","lastModifiedDate":"2023-09-05"},{"lineNumber":149,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-09-05"},{"lineNumber":150,"author":{"gitId":"tohpinren"},"content":"     * @return String with message that there is no saved file.","lastModifiedDate":"2023-09-05"},{"lineNumber":151,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"tohpinren"},"content":"    public String printNoSavedFile() {","lastModifiedDate":"2023-09-05"},{"lineNumber":153,"author":{"gitId":"tohpinren"},"content":"        return \"No saved file found.\";","lastModifiedDate":"2023-09-05"},{"lineNumber":154,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"tohpinren"},"content":"     * Returns message with saved file information.","lastModifiedDate":"2023-09-05"},{"lineNumber":158,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"tohpinren"},"content":"     * @param taskArrayList Current array list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"tohpinren"},"content":"     * @return Message with saved file information.","lastModifiedDate":"2023-09-05"},{"lineNumber":161,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"tohpinren"},"content":"    public String printSavedFileFound(ArrayList\u003cTask\u003e taskArrayList) {","lastModifiedDate":"2023-09-05"},{"lineNumber":163,"author":{"gitId":"tohpinren"},"content":"        ArrayList\u003cString\u003e stringOutputArr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":164,"author":{"gitId":"tohpinren"},"content":"        stringOutputArr.add(\"Saved file found.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":165,"author":{"gitId":"tohpinren"},"content":"        stringOutputArr.add(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-09-05"},{"lineNumber":166,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":167,"author":{"gitId":"tohpinren"},"content":"        int length \u003d taskArrayList.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":168,"author":{"gitId":"tohpinren"},"content":"        for (int i \u003d 0; i \u003c length; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":169,"author":{"gitId":"tohpinren"},"content":"            stringOutputArr.add(String.format(\"%d. %s\",","lastModifiedDate":"2023-09-05"},{"lineNumber":170,"author":{"gitId":"tohpinren"},"content":"                    i + 1, taskArrayList.get(i)));","lastModifiedDate":"2023-08-30"},{"lineNumber":171,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":172,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":173,"author":{"gitId":"tohpinren"},"content":"        return String.join(\"\\n\", stringOutputArr);","lastModifiedDate":"2023-09-05"},{"lineNumber":174,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":175,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"tohpinren"},"content":"     * Prints list of tasks found.","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"tohpinren"},"content":"     * @param foundTasks List of tasks found.","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"tohpinren"},"content":"     * @return String with list of tasks found.","lastModifiedDate":"2023-09-05"},{"lineNumber":181,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"tohpinren"},"content":"    public String printFoundTasks(ArrayList\u003cTask\u003e foundTasks) {","lastModifiedDate":"2023-09-05"},{"lineNumber":183,"author":{"gitId":"tohpinren"},"content":"        if (foundTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":184,"author":{"gitId":"tohpinren"},"content":"            return \"There are no matching tasks in your list.\";","lastModifiedDate":"2023-09-05"},{"lineNumber":185,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":186,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":187,"author":{"gitId":"tohpinren"},"content":"        ArrayList\u003cString\u003e stringOutputArr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":188,"author":{"gitId":"tohpinren"},"content":"        stringOutputArr.add(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-05"},{"lineNumber":189,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":190,"author":{"gitId":"tohpinren"},"content":"        int length \u003d foundTasks.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":191,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":192,"author":{"gitId":"tohpinren"},"content":"        for (int i \u003d 0; i \u003c length; i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":193,"author":{"gitId":"tohpinren"},"content":"            stringOutputArr.add(String.format(\"%d. %s\",","lastModifiedDate":"2023-09-05"},{"lineNumber":194,"author":{"gitId":"tohpinren"},"content":"                    i + 1, foundTasks.get(i)));","lastModifiedDate":"2023-08-31"},{"lineNumber":195,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":196,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":197,"author":{"gitId":"tohpinren"},"content":"        return String.join(\"\\n\", stringOutputArr);","lastModifiedDate":"2023-09-05"},{"lineNumber":198,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":199,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":200,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":201,"author":{"gitId":"tohpinren"},"content":"     * Print the events of the date given in the arraylist.","lastModifiedDate":"2023-09-13"},{"lineNumber":202,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":203,"author":{"gitId":"tohpinren"},"content":"     * @param eventsOnDate ArrayList of events on the date.","lastModifiedDate":"2023-09-13"},{"lineNumber":204,"author":{"gitId":"tohpinren"},"content":"     * @param dateStr Date in string format.","lastModifiedDate":"2023-09-13"},{"lineNumber":205,"author":{"gitId":"tohpinren"},"content":"     * @return String with events on the date.","lastModifiedDate":"2023-09-13"},{"lineNumber":206,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":207,"author":{"gitId":"tohpinren"},"content":"    public String printEventsOnDate(ArrayList\u003cEvent\u003e eventsOnDate, String dateStr) {","lastModifiedDate":"2023-09-13"},{"lineNumber":208,"author":{"gitId":"tohpinren"},"content":"        if (eventsOnDate.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-13"},{"lineNumber":209,"author":{"gitId":"tohpinren"},"content":"            return \"There are no events on this date.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":210,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":211,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":212,"author":{"gitId":"tohpinren"},"content":"        ArrayList\u003cString\u003e stringOutputArr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-13"},{"lineNumber":213,"author":{"gitId":"tohpinren"},"content":"        stringOutputArr.add(String.format(\"Here are the events on %s:\", dateStr));","lastModifiedDate":"2023-09-13"},{"lineNumber":214,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":215,"author":{"gitId":"tohpinren"},"content":"        int length \u003d eventsOnDate.size();","lastModifiedDate":"2023-09-13"},{"lineNumber":216,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":217,"author":{"gitId":"tohpinren"},"content":"        for (int i \u003d 0; i \u003c length; i++) {","lastModifiedDate":"2023-09-13"},{"lineNumber":218,"author":{"gitId":"tohpinren"},"content":"            stringOutputArr.add(String.format(\"%d. %s\",","lastModifiedDate":"2023-09-13"},{"lineNumber":219,"author":{"gitId":"tohpinren"},"content":"                    i + 1, eventsOnDate.get(i)));","lastModifiedDate":"2023-09-13"},{"lineNumber":220,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":221,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":222,"author":{"gitId":"tohpinren"},"content":"        return String.join(\"\\n\", stringOutputArr);","lastModifiedDate":"2023-09-13"},{"lineNumber":223,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":224,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"tohpinren":224}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #27374D;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: #DDE6ED; -fx-background-radius: 10; -fx-padding: 20;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"            \u003cFont name\u003d\"Georgia\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"tohpinren":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"anto.MainWindow\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" style\u003d\"-fx-background-color: #9DB2BF; -fx-background-radius: 7;\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-radius: 10;\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #27374D;\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"tohpinren":19}},{"path":"src/test/java/anto/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package anto;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"    public void createDeadlineTaskTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"            Deadline newTodoTask \u003d new Deadline(\"Read book\", \"01-09-2023 23:59\");","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"            assertEquals(\"[D] [ ] Read book (by: 01 Sep 2023 23:59)\", newTodoTask.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"        } catch (AntoException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"            fail(\"Expected exception was thrown\");","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"    public void markAndUnmarkTodoTaskTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"            Deadline newTodoTask \u003d new Deadline(\"Read book\", \"01-09-2023 23:59\");","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"            newTodoTask.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"            assertEquals(\"X\", newTodoTask.getStatusIcon());","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"            assertEquals(\"[D] [X] Read book (by: 01 Sep 2023 23:59)\", newTodoTask.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"            newTodoTask.unmark();","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"            assertEquals(\" \", newTodoTask.getStatusIcon());","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"            assertEquals(\"[D] [ ] Read book (by: 01 Sep 2023 23:59)\", newTodoTask.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"        } catch (AntoException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"            fail(\"Expected exception was thrown\");","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"tohpinren":33}},{"path":"src/test/java/anto/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package anto;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"public class EventTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"    public void createDeadlineTaskTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"            Event newTodoTask \u003d new Event(\"Book meeting\", \"02-09-2023 20:00\", \"02-09-2023 21:00\");","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"            assertEquals(\"[E] [ ] Book meeting (from: 02 Sep 2023 20:00 to: 02 Sep 2023 21:00)\",","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"                    newTodoTask.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"        } catch (AntoException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"            fail(\"Expected exception was thrown\");","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"    public void markAndUnmarkTodoTaskTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"            Event newTodoTask \u003d new Event(\"Book meeting\", \"02-09-2023 20:00\", \"02-09-2023 21:00\");","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"            newTodoTask.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"            assertEquals(\"X\", newTodoTask.getStatusIcon());","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"            assertEquals(\"[E] [X] Book meeting (from: 02 Sep 2023 20:00 to: 02 Sep 2023 21:00)\",","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"                    newTodoTask.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"            newTodoTask.unmark();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"            assertEquals(\" \", newTodoTask.getStatusIcon());","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"            assertEquals(\"[E] [ ] Book meeting (from: 02 Sep 2023 20:00 to: 02 Sep 2023 21:00)\",","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"                    newTodoTask.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"        } catch (AntoException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"            fail(\"Expected exception was thrown\");","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"tohpinren":36}},{"path":"src/test/java/anto/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package anto;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"public class TodoTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"    public void createTodoTaskTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"        Todo newTodoTask \u003d new Todo(\"Borrow book\");","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"        assertEquals(\"[T] [ ] Borrow book\", newTodoTask.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"    public void markAndUnmarkTodoTaskTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"        Todo newTodoTask \u003d new Todo(\"Borrow book\");","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"        newTodoTask.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"        assertEquals(\"X\", newTodoTask.getStatusIcon());","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"        assertEquals(\"[T] [X] Borrow book\", newTodoTask.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"        newTodoTask.unmark();","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"        assertEquals(\" \", newTodoTask.getStatusIcon());","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"        assertEquals(\"[T] [ ] Borrow book\", newTodoTask.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"tohpinren":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"todo Read Book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"deadline Return book /by Next Wed","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"todo Eat dinner","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"event Important Meeting /from 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"mark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"unmark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"tohpinren":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"java -classpath ..\\bin Anto \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tohpinren":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"java -classpath ../bin Anto \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tohpinren":1,"-":37}}]
