[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"    mainClass.set(\"anto.Anto\")","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"    archiveBaseName \u003d \"anto\"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tohpinren":3,"-":40}},{"path":"data/anto.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"D | 1 | return book | 18-05-2023 18:00","lastModifiedDate":"2023-08-29"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"T | 1 | Buy Book","lastModifiedDate":"2023-08-29"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"D | 0 | Read Book | 18-05-2023 18:00","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"E | 1 | Book Review Meeting | 18-05-2023 18:00 | 18-05-2023 20:00","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"D | 0 | LOL1 | 01-09-2023 00:00","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"D | 0 | return book | 01-09-2023 23:59","lastModifiedDate":"2023-08-29"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"D | 0 | return book | 18-05-2023 18:00","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"D | 0 | return book | 18-11-2001 18:00","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"D | 0 | Test | 20-05-2001 18:00","lastModifiedDate":"2023-08-29"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"D | 0 | Test1 | 18-05-2001 18:00","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"E | 0 | Test | 13-11-2023 18:00 | 13-11-2023 20:00","lastModifiedDate":"2023-08-29"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"D | 0 | dadlajs | 20-12-2024 01:00","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"T | 0 | Test1","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"T | 0 | jdasldjas","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"D | 1 | sjdklasjdlas | 18-09-2023 14:00","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"E | 1 | jadljas | 18-08-2001 19:00 | 18-08-2001 20:00","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"T | 0 | dajskldaj","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"D | 0 | Borrow book | 01-09-2023 23:59","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"T | 0 | Test Test","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"tohpinren":22}},{"path":"src/main/java/anto/Anto.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package anto;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":" * Anto class represents a command line chatbot named Anto.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":" *","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":" * @author Toh Pin Ren","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"public class Anto {","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"    private Parser parser;","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"     * Creates a Anto chatbot with the specified filePath.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"     * @param filePath The relative file path to the location of anto.txt file.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"    public Anto(String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-30"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"        storage \u003d new Storage(ui, filePath);","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"            tasks \u003d new TaskList(storage.loadSave());","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"            ui.setTaskList(tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"        } catch (AntoException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"            ui.printError(e);","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"     * Runs the Anto chatbot and continuously reads inputs.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"    public void run() {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"        parser \u003d new Parser(ui, tasks);","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"        this.parser.readInputs();","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"tohpinren"},"content":"     * Main method to run program.","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"tohpinren"},"content":"     * @param args String input.","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"tohpinren"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"tohpinren"},"content":"        new Anto(\"data/anto.txt\").run();","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"tohpinren":47}},{"path":"src/main/java/anto/AntoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package anto;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":" * Class represents an Exception in the Anto chatbot.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"public class AntoException extends Exception {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"     * Creates a Anto Exception with the specified error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"     * @param errorMessage Error message for Anto exception.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"    public AntoException(String errorMessage) {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"tohpinren":16}},{"path":"src/main/java/anto/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package anto;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":" * Deadline class represents a Deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"     * DateTime that the Task must be completed by.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"     * Creates a Deadline task with specified description and by date.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"     * @param by String with DateTime format that represents when deadline task","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"     *           must be completed by.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"     * @throws AntoException Exception thrown if by is not in valid DateTime format.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"    public Deadline(String description, String by) throws AntoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"        if (!Parser.isValidDate(by, formatter)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"            throw new InvalidDateTimeException();","lastModifiedDate":"2023-08-29"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"        this.by \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"     * Overridden toString method to represent deadline task in a new format.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"     * @return String representing deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"tohpinren"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"tohpinren"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"tohpinren"},"content":"        return String.format(\"[D] [%s] %s (by: %s)\",","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"tohpinren"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-08-24"},{"lineNumber":42,"author":{"gitId":"tohpinren"},"content":"                super.toString(),","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"tohpinren"},"content":"                this.by.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\")));","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":45,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"tohpinren":45}},{"path":"src/main/java/anto/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package anto;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":" * Event class represents an event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"     * DateTime representing start of Event.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-08-29"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"     * DateTime representing end of Event.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-08-29"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"     * Creates an Event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"     * @param description Description of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"     * @param from String representing start of event.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"     * @param to String representing end of event.","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"     * @throws AntoException Throws Anto Exception if String given is not in","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"     *                       DateTime format.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"    public Event(String description, String from, String to) throws AntoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-08-29"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"        if (!Parser.isValidDate(from, formatter) || !Parser.isValidDate(to, formatter)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"            throw new InvalidDateTimeException();","lastModifiedDate":"2023-08-29"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":37,"author":{"gitId":"tohpinren"},"content":"        this.from \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":38,"author":{"gitId":"tohpinren"},"content":"        this.to \u003d LocalDateTime.parse(to, formatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":39,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"tohpinren"},"content":"     * Overridden toString method to represent Event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"tohpinren"},"content":"     * @return String representing Event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"tohpinren"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"tohpinren"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"tohpinren"},"content":"        return String.format(\"[E] [%s] %s (from: %s to: %s)\",","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"tohpinren"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"tohpinren"},"content":"                super.toString(),","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"tohpinren"},"content":"                this.from.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\")),","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"tohpinren"},"content":"                this.to.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\")));","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"tohpinren":54}},{"path":"src/main/java/anto/InvalidDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package anto;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":" * Anto Exception where String given is not in the correct DateTime format.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"public class InvalidDateTimeException extends AntoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"     * Creates an Invalid DateTime Exception.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"    public InvalidDateTimeException() {","lastModifiedDate":"2023-08-29"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"        super(\"InvalidDateException: OOPS!!! The datetime has to be in this format: dd-MM-yyyy HH:mm.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-08-29"}],"authorContributionMap":{"tohpinren":13}},{"path":"src/main/java/anto/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package anto;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":" * Anto Exception where Index given is invalid.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"public class InvalidIndexException extends AntoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"     * Creates an invalid index exception with error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"     * @param errorMessage String with description of exception.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"    public InvalidIndexException(String errorMessage) {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"        super(\"anto.InvalidIndexException: \" + errorMessage);","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"tohpinren":15}},{"path":"src/main/java/anto/InvalidParametersException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package anto;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":" * Anto exception where the parameters given are invalid.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"public class InvalidParametersException extends AntoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"     * Creates an invalid parameters exception.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"     * @param errorMessage String with description of exception.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"    public InvalidParametersException(String errorMessage) {","lastModifiedDate":"2023-08-28"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"        super(\"anto.InvalidParametersException: \" + errorMessage);","lastModifiedDate":"2023-08-30"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-28"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-08-28"}],"authorContributionMap":{"tohpinren":15}},{"path":"src/main/java/anto/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package anto;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-29"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":" * Parser class handles all reading of inputs from command line and decides what to do.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"public class Parser {","lastModifiedDate":"2023-08-30"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"    private Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"     * Creates a Parser class.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"     * @param ui Ui class that handles printing to command line.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"     * @param taskList TaskList with all the current tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"    public Parser(Ui ui, TaskList taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"     * Continuously reads inputs from command line and decide what actions to take.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"    public void readInputs() {","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"        this.ui.greet();","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"        while (this.scanner.hasNext()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"            try {","lastModifiedDate":"2023-08-24"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"                String input \u003d this.scanner.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":38,"author":{"gitId":"tohpinren"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"tohpinren"},"content":"                    this.ui.sayBye();","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"tohpinren"},"content":"                    return;","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"tohpinren"},"content":"                } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"tohpinren"},"content":"                    if (this.taskList.getLength() \u003d\u003d 0) {","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"tohpinren"},"content":"                        this.ui.printNoTasks();","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"tohpinren"},"content":"                    } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"tohpinren"},"content":"                        this.ui.printList();","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"tohpinren"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"tohpinren"},"content":"                } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"tohpinren"},"content":"                    // Throw error if there is no index","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"tohpinren"},"content":"                    if (input.length() \u003c 6 || input.split(\" \", 2).length \u003c 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"tohpinren"},"content":"                        throw new InvalidIndexException(\"OOPS!!! You need to include an index to mark task.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"tohpinren"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"tohpinren"},"content":"                    String strIndex \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"tohpinren"},"content":"                    // Throw error if index given is not an int","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"tohpinren"},"content":"                    if (!Parser.isInt(strIndex)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"tohpinren"},"content":"                        throw new InvalidIndexException(\"OOPS!!! You need to include an index to mark task.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"tohpinren"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"tohpinren"},"content":"                    int index \u003d Integer.parseInt(strIndex) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"tohpinren"},"content":"                    // Throw error if there is no task at index","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"tohpinren"},"content":"                    if (index \u003e\u003d this.taskList.getLength()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"tohpinren"},"content":"                        throw new InvalidIndexException(\"OOPS!!! There is no task at that index.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"tohpinren"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"tohpinren"},"content":"                    this.taskList.markTaskAsDone(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"tohpinren"},"content":"                    this.ui.printMarkAsDone(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"tohpinren"},"content":"                } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":68,"author":{"gitId":"tohpinren"},"content":"                    // Throw error if there is no index","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"tohpinren"},"content":"                    if (input.length() \u003c 8 || input.split(\" \", 2).length \u003c 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"tohpinren"},"content":"                        throw new InvalidIndexException(\"OOPS!!! You need to include an index to unmark task.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":71,"author":{"gitId":"tohpinren"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"tohpinren"},"content":"                    String strIndex \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":74,"author":{"gitId":"tohpinren"},"content":"                    // Throw error if index given is not an int","lastModifiedDate":"2023-08-24"},{"lineNumber":75,"author":{"gitId":"tohpinren"},"content":"                    if (!Parser.isInt(strIndex)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"tohpinren"},"content":"                        throw new InvalidIndexException(\"OOPS!!! You need to include an index to unmark task.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"tohpinren"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":78,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"tohpinren"},"content":"                    int index \u003d Integer.parseInt(strIndex) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":80,"author":{"gitId":"tohpinren"},"content":"                    // Throw error if there is no task at index","lastModifiedDate":"2023-08-24"},{"lineNumber":81,"author":{"gitId":"tohpinren"},"content":"                    if (index \u003e\u003d this.taskList.getLength()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"tohpinren"},"content":"                        throw new InvalidIndexException(\"OOPS!!! There is no task at that index.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":83,"author":{"gitId":"tohpinren"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":84,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"tohpinren"},"content":"                    this.taskList.unmarkTask(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"tohpinren"},"content":"                    this.ui.printUnmark(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"tohpinren"},"content":"                } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":88,"author":{"gitId":"tohpinren"},"content":"                    // Throw error if there is no description","lastModifiedDate":"2023-08-24"},{"lineNumber":89,"author":{"gitId":"tohpinren"},"content":"                    if (input.length() \u003c 6) {","lastModifiedDate":"2023-08-24"},{"lineNumber":90,"author":{"gitId":"tohpinren"},"content":"                        throw new InvalidParametersException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"tohpinren"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":92,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"tohpinren"},"content":"                    String[] arr \u003d input.split(\" \", 2);","lastModifiedDate":"2023-08-23"},{"lineNumber":94,"author":{"gitId":"tohpinren"},"content":"                    Task newTask \u003d new Todo(arr[1]);","lastModifiedDate":"2023-08-23"},{"lineNumber":95,"author":{"gitId":"tohpinren"},"content":"                    this.taskList.addToList(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"tohpinren"},"content":"                    this.ui.printAdded(newTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"tohpinren"},"content":"                } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":98,"author":{"gitId":"tohpinren"},"content":"                    // Throw error if description or by is missing","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"tohpinren"},"content":"                    if (input.length() \u003c 10 || !input.contains(\" /by \")","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"tohpinren"},"content":"                            || input.split(\" /by \").length \u003c 2","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"tohpinren"},"content":"                            || input.split(\" /by \")[0].length() \u003c 10","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"tohpinren"},"content":"                            || input.split(\" /by \")[0].substring(9).trim().equals(\"\")","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"tohpinren"},"content":"                            || input.split(\" /by \")[1].trim().equals(\"\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"tohpinren"},"content":"                        throw new InvalidParametersException(\"OOPS!!! The description and by of a deadline\"","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"tohpinren"},"content":"                                + \" cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"tohpinren"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"tohpinren"},"content":"                    String[] arr \u003d input.split(\" /by \");","lastModifiedDate":"2023-08-23"},{"lineNumber":109,"author":{"gitId":"tohpinren"},"content":"                    String taskDesc \u003d arr[0].substring(9);","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"tohpinren"},"content":"                    String by \u003d arr[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"tohpinren"},"content":"                    Task newTask \u003d new Deadline(taskDesc, by);","lastModifiedDate":"2023-08-23"},{"lineNumber":112,"author":{"gitId":"tohpinren"},"content":"                    this.taskList.addToList(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"tohpinren"},"content":"                    this.ui.printAdded(newTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"tohpinren"},"content":"                } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-08-23"},{"lineNumber":115,"author":{"gitId":"tohpinren"},"content":"                    // Throw error if description or from or to is missing","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"tohpinren"},"content":"                    if (input.length() \u003c 10 || !input.contains(\" /from \")","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"tohpinren"},"content":"                            || !input.contains(\" /to \")","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"tohpinren"},"content":"                            || input.split(\" /from \").length \u003c 2","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"tohpinren"},"content":"                            || input.split(\" /from \")[0].length() \u003c 7","lastModifiedDate":"2023-08-30"},{"lineNumber":120,"author":{"gitId":"tohpinren"},"content":"                            || input.split(\" /from \")[0].substring(6).trim().equals(\"\")","lastModifiedDate":"2023-08-30"},{"lineNumber":121,"author":{"gitId":"tohpinren"},"content":"                            || input.split(\" /from \")[1].split(\" /to \").length \u003c 2","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"tohpinren"},"content":"                            || input.split(\" /from \")[1].split(\" /to \")[0].trim().equals(\"\")","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"tohpinren"},"content":"                            || input.split(\" /from \")[1].split(\" /to \")[1].trim().equals(\"\")) {","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"tohpinren"},"content":"                        throw new InvalidParametersException(\"OOPS!!! The description and from and to of an event\"","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"tohpinren"},"content":"                                + \" cannot be empty.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"tohpinren"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":127,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"tohpinren"},"content":"                    String[] arr \u003d input.split(\" /from \");","lastModifiedDate":"2023-08-23"},{"lineNumber":129,"author":{"gitId":"tohpinren"},"content":"                    String taskDesc \u003d arr[0].substring(6);","lastModifiedDate":"2023-08-24"},{"lineNumber":130,"author":{"gitId":"tohpinren"},"content":"                    String[] arrBack \u003d arr[1].split(\" /to \");","lastModifiedDate":"2023-08-23"},{"lineNumber":131,"author":{"gitId":"tohpinren"},"content":"                    String from \u003d arrBack[0];","lastModifiedDate":"2023-08-24"},{"lineNumber":132,"author":{"gitId":"tohpinren"},"content":"                    String to \u003d arrBack[1];","lastModifiedDate":"2023-08-23"},{"lineNumber":133,"author":{"gitId":"tohpinren"},"content":"                    Task newTask \u003d new Event(taskDesc, from, to);","lastModifiedDate":"2023-08-23"},{"lineNumber":134,"author":{"gitId":"tohpinren"},"content":"                    this.taskList.addToList(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"tohpinren"},"content":"                    this.ui.printAdded(newTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"tohpinren"},"content":"                } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2023-08-24"},{"lineNumber":137,"author":{"gitId":"tohpinren"},"content":"                    // Throw error if there is no index","lastModifiedDate":"2023-08-24"},{"lineNumber":138,"author":{"gitId":"tohpinren"},"content":"                    if (input.length() \u003c 8 || input.split(\" \", 2).length \u003c 2) {","lastModifiedDate":"2023-08-24"},{"lineNumber":139,"author":{"gitId":"tohpinren"},"content":"                        throw new InvalidIndexException(\"OOPS!!! You need to include an index to delete task.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"tohpinren"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":141,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"tohpinren"},"content":"                    String strIndex \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-08-24"},{"lineNumber":143,"author":{"gitId":"tohpinren"},"content":"                    // Throw error if index given is not an int","lastModifiedDate":"2023-08-24"},{"lineNumber":144,"author":{"gitId":"tohpinren"},"content":"                    if (!Parser.isInt(strIndex)) {","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"tohpinren"},"content":"                        throw new InvalidIndexException(\"OOPS!!! You need to include an index to delete task.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"tohpinren"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":147,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"tohpinren"},"content":"                    int index \u003d Integer.parseInt(strIndex) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":149,"author":{"gitId":"tohpinren"},"content":"                    // Throw error if there is no task at index","lastModifiedDate":"2023-08-24"},{"lineNumber":150,"author":{"gitId":"tohpinren"},"content":"                    if (index \u003e\u003d this.taskList.getLength()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"tohpinren"},"content":"                        throw new InvalidIndexException(\"OOPS!!! There is no task at that index.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"tohpinren"},"content":"                    }","lastModifiedDate":"2023-08-24"},{"lineNumber":153,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"tohpinren"},"content":"                    Task removedTask \u003d this.taskList.deleteTask(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"tohpinren"},"content":"                    this.ui.printDelete(removedTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"tohpinren"},"content":"                } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"tohpinren"},"content":"                    // Throw error if there is no keyword","lastModifiedDate":"2023-08-31"},{"lineNumber":158,"author":{"gitId":"tohpinren"},"content":"                    if (input.length() \u003c 6 || input.split(\" \", 2).length \u003c 2) {","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"tohpinren"},"content":"                        throw new InvalidIndexException(\"OOPS!!! You need to include a keyword to find tasks.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":160,"author":{"gitId":"tohpinren"},"content":"                    }","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"tohpinren"},"content":"                    String keyword \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"tohpinren"},"content":"                    ArrayList\u003cTask\u003e foundTasks \u003d this.taskList.findTask(keyword);","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"tohpinren"},"content":"                    this.ui.printFoundTasks(foundTasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"tohpinren"},"content":"                } else {","lastModifiedDate":"2023-08-23"},{"lineNumber":166,"author":{"gitId":"tohpinren"},"content":"                    throw new AntoException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :(\");","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"tohpinren"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":168,"author":{"gitId":"tohpinren"},"content":"            } catch (AntoException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"tohpinren"},"content":"                this.ui.printError(e);","lastModifiedDate":"2023-08-30"},{"lineNumber":170,"author":{"gitId":"tohpinren"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":171,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":172,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":173,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":174,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"tohpinren"},"content":"     * Return boolean whether String represents an integer.","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"tohpinren"},"content":"     * @param strInt String to check.","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"tohpinren"},"content":"     * @return True if string represents an integer.","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"tohpinren"},"content":"    public static boolean isInt(String strInt) {","lastModifiedDate":"2023-08-24"},{"lineNumber":181,"author":{"gitId":"tohpinren"},"content":"        if (strInt \u003d\u003d null) {","lastModifiedDate":"2023-08-24"},{"lineNumber":182,"author":{"gitId":"tohpinren"},"content":"            return false;","lastModifiedDate":"2023-08-24"},{"lineNumber":183,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":184,"author":{"gitId":"tohpinren"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":185,"author":{"gitId":"tohpinren"},"content":"            int i \u003d Integer.parseInt(strInt);","lastModifiedDate":"2023-08-24"},{"lineNumber":186,"author":{"gitId":"tohpinren"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-08-24"},{"lineNumber":187,"author":{"gitId":"tohpinren"},"content":"            return false;","lastModifiedDate":"2023-08-24"},{"lineNumber":188,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-23"},{"lineNumber":189,"author":{"gitId":"tohpinren"},"content":"        return true;","lastModifiedDate":"2023-08-24"},{"lineNumber":190,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":191,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":192,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":193,"author":{"gitId":"tohpinren"},"content":"     * Check if String given is in correct datetime format.","lastModifiedDate":"2023-08-31"},{"lineNumber":194,"author":{"gitId":"tohpinren"},"content":"     * @param dateStr String to be checked.","lastModifiedDate":"2023-08-31"},{"lineNumber":195,"author":{"gitId":"tohpinren"},"content":"     * @param formatter Format of DateTime to check with.","lastModifiedDate":"2023-08-31"},{"lineNumber":196,"author":{"gitId":"tohpinren"},"content":"     * @return True if string is in correct DateTime format.","lastModifiedDate":"2023-08-31"},{"lineNumber":197,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":198,"author":{"gitId":"tohpinren"},"content":"    public static boolean isValidDate(String dateStr, DateTimeFormatter formatter) {","lastModifiedDate":"2023-08-29"},{"lineNumber":199,"author":{"gitId":"tohpinren"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":200,"author":{"gitId":"tohpinren"},"content":"            LocalDateTime.parse(dateStr, formatter);","lastModifiedDate":"2023-08-29"},{"lineNumber":201,"author":{"gitId":"tohpinren"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":202,"author":{"gitId":"tohpinren"},"content":"            return false;","lastModifiedDate":"2023-08-29"},{"lineNumber":203,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":204,"author":{"gitId":"tohpinren"},"content":"        return true;","lastModifiedDate":"2023-08-29"},{"lineNumber":205,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":206,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"tohpinren":206}},{"path":"src/main/java/anto/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package anto;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"import java.io.File;","lastModifiedDate":"2023-08-29"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-29"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-29"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-29"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":" * Storage class handles all storing and loading of data.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"public class Storage {","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"    private String relativePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"    private Path absolutePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"    private File antoFile;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"     * Creates a Storage class.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"     * @param ui Ui that handles all printing to the command line.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"     * @param filePath Relative file path of file to load data from.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"    public Storage(Ui ui, String filePath) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"        this.relativePath \u003d filePath;","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"        this.absolutePath \u003d Paths.get(relativePath).toAbsolutePath();","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"        this.antoFile \u003d absolutePath.toFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"     * Checks file at file path and loads data if it is there, else create a new file.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"     * @return ArrayList of Tasks representing data.","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"     * @throws AntoException Throws exception if there is an IO Exception.","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"tohpinren"},"content":"    public ArrayList\u003cTask\u003e loadSave() throws AntoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"tohpinren"},"content":"        try {","lastModifiedDate":"2023-08-29"},{"lineNumber":40,"author":{"gitId":"tohpinren"},"content":"            ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-29"},{"lineNumber":42,"author":{"gitId":"tohpinren"},"content":"            // If file doesn\u0027t exist","lastModifiedDate":"2023-08-29"},{"lineNumber":43,"author":{"gitId":"tohpinren"},"content":"            if (!antoFile.exists()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":44,"author":{"gitId":"tohpinren"},"content":"                antoFile.createNewFile();","lastModifiedDate":"2023-08-29"},{"lineNumber":45,"author":{"gitId":"tohpinren"},"content":"                this.ui.printNoSavedFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"tohpinren"},"content":"            } else {","lastModifiedDate":"2023-08-29"},{"lineNumber":47,"author":{"gitId":"tohpinren"},"content":"                Scanner sc \u003d new Scanner(antoFile);","lastModifiedDate":"2023-08-29"},{"lineNumber":48,"author":{"gitId":"tohpinren"},"content":"                while (sc.hasNextLine()) {","lastModifiedDate":"2023-08-29"},{"lineNumber":49,"author":{"gitId":"tohpinren"},"content":"                    String currLine \u003d sc.nextLine();","lastModifiedDate":"2023-08-29"},{"lineNumber":50,"author":{"gitId":"tohpinren"},"content":"                    String[] currLineArr \u003d currLine.split(Pattern.quote(\" | \"));","lastModifiedDate":"2023-08-29"},{"lineNumber":51,"author":{"gitId":"tohpinren"},"content":"                    if (currLineArr[0].equals(\"T\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":52,"author":{"gitId":"tohpinren"},"content":"                        Task newTask \u003d new Todo(currLineArr[2]);","lastModifiedDate":"2023-08-29"},{"lineNumber":53,"author":{"gitId":"tohpinren"},"content":"                        if (currLineArr[1].equals(\"1\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":54,"author":{"gitId":"tohpinren"},"content":"                            newTask.markAsDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":55,"author":{"gitId":"tohpinren"},"content":"                        }","lastModifiedDate":"2023-08-29"},{"lineNumber":56,"author":{"gitId":"tohpinren"},"content":"                        taskList.add(newTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"tohpinren"},"content":"                    } else if (currLineArr[0].equals(\"D\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":58,"author":{"gitId":"tohpinren"},"content":"                        Task newTask \u003d new Deadline(currLineArr[2], currLineArr[3]);","lastModifiedDate":"2023-08-29"},{"lineNumber":59,"author":{"gitId":"tohpinren"},"content":"                        if (currLineArr[1].equals(\"1\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":60,"author":{"gitId":"tohpinren"},"content":"                            newTask.markAsDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":61,"author":{"gitId":"tohpinren"},"content":"                        }","lastModifiedDate":"2023-08-29"},{"lineNumber":62,"author":{"gitId":"tohpinren"},"content":"                        taskList.add(newTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"tohpinren"},"content":"                    } else if (currLineArr[0].equals(\"E\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":64,"author":{"gitId":"tohpinren"},"content":"                        Task newTask \u003d new Event(currLineArr[2], currLineArr[3], currLineArr[4]);","lastModifiedDate":"2023-08-29"},{"lineNumber":65,"author":{"gitId":"tohpinren"},"content":"                        if (currLineArr[1].equals(\"1\")) {","lastModifiedDate":"2023-08-29"},{"lineNumber":66,"author":{"gitId":"tohpinren"},"content":"                            newTask.markAsDone();","lastModifiedDate":"2023-08-29"},{"lineNumber":67,"author":{"gitId":"tohpinren"},"content":"                        }","lastModifiedDate":"2023-08-29"},{"lineNumber":68,"author":{"gitId":"tohpinren"},"content":"                        taskList.add(newTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":69,"author":{"gitId":"tohpinren"},"content":"                    }","lastModifiedDate":"2023-08-29"},{"lineNumber":70,"author":{"gitId":"tohpinren"},"content":"                }","lastModifiedDate":"2023-08-29"},{"lineNumber":71,"author":{"gitId":"tohpinren"},"content":"                this.ui.printSavedFileFound(taskList);","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"tohpinren"},"content":"            }","lastModifiedDate":"2023-08-29"},{"lineNumber":73,"author":{"gitId":"tohpinren"},"content":"            return taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"tohpinren"},"content":"        } catch (java.io.IOException e) {","lastModifiedDate":"2023-08-29"},{"lineNumber":75,"author":{"gitId":"tohpinren"},"content":"            throw new AntoException(\"OOPS!!! IOException\");","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-29"},{"lineNumber":77,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-29"},{"lineNumber":78,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"tohpinren":78}},{"path":"src/main/java/anto/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package anto;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":" * Class representing a Task.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"public class Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"     * Description of task.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"    protected String description;","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"     * Boolean representing whether task is completed.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"     * Creates a task.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"     * Returns status of task in string form.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"     * @return Returns \"X\" if task is done, else \" \".","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-23"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-23"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"     * Sets task to done.","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"tohpinren"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-23"},{"lineNumber":39,"author":{"gitId":"tohpinren"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-23"},{"lineNumber":40,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":41,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":42,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"tohpinren"},"content":"     * Sets task to not done.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"tohpinren"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-23"},{"lineNumber":46,"author":{"gitId":"tohpinren"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-23"},{"lineNumber":47,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":48,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":49,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"tohpinren"},"content":"     * Returns string representing task.","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"tohpinren"},"content":"     * @return String with task description.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"tohpinren"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":54,"author":{"gitId":"tohpinren"},"content":"        return this.description;","lastModifiedDate":"2023-08-23"},{"lineNumber":55,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":56,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"tohpinren":56}},{"path":"src/main/java/anto/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package anto;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"import java.io.File;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-08-30"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-08-30"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":" * TaskList class represents list of all current tasks and handles all actions","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":" * related to tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"public class TaskList {","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"     * Creates a new TaskList class.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"     * @param taskList Initial ArrayList of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"     * Add task given to arraylist.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"     * @param newTask Task to be added.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"     * @throws AntoException Throws anto exception if there is an IO Exception","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"    public void addToList(Task newTask) throws AntoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"        this.taskList.add(newTask);","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"tohpinren"},"content":"        String relativePath \u003d \"data/anto.txt\";","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"tohpinren"},"content":"        Path absolutePath \u003d Paths.get(relativePath).toAbsolutePath();","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"tohpinren"},"content":"        File antoFile \u003d absolutePath.toFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"tohpinren"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"tohpinren"},"content":"            FileWriter writer \u003d new FileWriter(antoFile, true);","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"tohpinren"},"content":"            if (newTask instanceof Todo) {","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"tohpinren"},"content":"                writer.write(String.format(\"\\nT | %s | %s\", newTask.isDone ? \"1\" : \"0\", newTask.description));","lastModifiedDate":"2023-08-30"},{"lineNumber":45,"author":{"gitId":"tohpinren"},"content":"            } else if (newTask instanceof Deadline) {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"tohpinren"},"content":"                writer.write(String.format(\"\\nD | %s | %s | %s\", newTask.isDone ? \"1\" : \"0\", newTask.description, (","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"tohpinren"},"content":"                        (Deadline) newTask).by.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"))));","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"tohpinren"},"content":"            } else if (newTask instanceof Event) {","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"tohpinren"},"content":"                writer.write(String.format(\"\\nE | %s | %s | %s | %s\", newTask.isDone ? \"1\" : \"0\", newTask.description, (","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"tohpinren"},"content":"                        (Event) newTask).from.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\")), (","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"tohpinren"},"content":"                        (Event) newTask).to.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"))));","lastModifiedDate":"2023-08-30"},{"lineNumber":52,"author":{"gitId":"tohpinren"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"tohpinren"},"content":"            writer.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"tohpinren"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"tohpinren"},"content":"            throw new AntoException(\"OOPS!!! IOException\");","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"tohpinren"},"content":"     * Returns current array list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"tohpinren"},"content":"     * @return ArrayList of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"tohpinren"},"content":"    public ArrayList\u003cTask\u003e getStorage() {","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"tohpinren"},"content":"        return this.taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":67,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":68,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"tohpinren"},"content":"     * Returns current number of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"tohpinren"},"content":"     * @return Current number of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"tohpinren"},"content":"    public int getLength() {","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"tohpinren"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"tohpinren"},"content":"     * Marks task at index as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"tohpinren"},"content":"     * @param index Index of task to mark as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"tohpinren"},"content":"     * @throws AntoException Throws AntoException if there is an IO Exception.","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"tohpinren"},"content":"    public void markTaskAsDone(int index) throws AntoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"tohpinren"},"content":"        String relativePath \u003d \"data/anto.txt\";","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"tohpinren"},"content":"        Path absolutePath \u003d Paths.get(relativePath).toAbsolutePath();","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"tohpinren"},"content":"        File antoFile \u003d absolutePath.toFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"tohpinren"},"content":"        String tempRelativePath \u003d \"data/tempFile.txt\";","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"tohpinren"},"content":"        Path tempAbsolutePath \u003d Paths.get(tempRelativePath).toAbsolutePath();","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"tohpinren"},"content":"        File tempFile \u003d tempAbsolutePath.toFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"tohpinren"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":93,"author":{"gitId":"tohpinren"},"content":"            Scanner sc \u003d new Scanner(antoFile);","lastModifiedDate":"2023-08-30"},{"lineNumber":94,"author":{"gitId":"tohpinren"},"content":"            FileWriter writer \u003d new FileWriter(tempFile);","lastModifiedDate":"2023-08-30"},{"lineNumber":95,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":96,"author":{"gitId":"tohpinren"},"content":"            int line \u003d 0;","lastModifiedDate":"2023-08-30"},{"lineNumber":97,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"tohpinren"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"tohpinren"},"content":"                String currLine \u003d sc.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"tohpinren"},"content":"                if (line \u003d\u003d index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"tohpinren"},"content":"                    writer.write(currLine.replace(\"| 0 |\", \"| 1 |\")","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"tohpinren"},"content":"                            + System.getProperty(\"line.separator\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"tohpinren"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"tohpinren"},"content":"                    writer.write(currLine + System.getProperty(\"line.separator\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"tohpinren"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":106,"author":{"gitId":"tohpinren"},"content":"                line++;","lastModifiedDate":"2023-08-30"},{"lineNumber":107,"author":{"gitId":"tohpinren"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":108,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":109,"author":{"gitId":"tohpinren"},"content":"            writer.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":110,"author":{"gitId":"tohpinren"},"content":"            sc.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":111,"author":{"gitId":"tohpinren"},"content":"            tempFile.renameTo(antoFile);","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"tohpinren"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"tohpinren"},"content":"            throw new AntoException(\"OOPS!!! IOException\");","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"tohpinren"},"content":"        this.taskList.get(index).markAsDone();","lastModifiedDate":"2023-08-30"},{"lineNumber":117,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":118,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":119,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"tohpinren"},"content":"     * Unmark task at index.","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":122,"author":{"gitId":"tohpinren"},"content":"     * @param index Index of task to unmark.","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"tohpinren"},"content":"     * @throws AntoException Throws AntoException if there is an IO Exception.","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"tohpinren"},"content":"    public void unmarkTask(int index) throws AntoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"tohpinren"},"content":"        String relativePath \u003d \"data/anto.txt\";","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"tohpinren"},"content":"        Path absolutePath \u003d Paths.get(relativePath).toAbsolutePath();","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"tohpinren"},"content":"        File antoFile \u003d absolutePath.toFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":130,"author":{"gitId":"tohpinren"},"content":"        String tempRelativePath \u003d \"data/tempFile.txt\";","lastModifiedDate":"2023-08-30"},{"lineNumber":131,"author":{"gitId":"tohpinren"},"content":"        Path tempAbsolutePath \u003d Paths.get(tempRelativePath).toAbsolutePath();","lastModifiedDate":"2023-08-30"},{"lineNumber":132,"author":{"gitId":"tohpinren"},"content":"        File tempFile \u003d tempAbsolutePath.toFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"tohpinren"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"tohpinren"},"content":"            Scanner sc \u003d new Scanner(antoFile);","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"tohpinren"},"content":"            FileWriter writer \u003d new FileWriter(tempFile);","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"tohpinren"},"content":"            int line \u003d 0;","lastModifiedDate":"2023-08-30"},{"lineNumber":139,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":140,"author":{"gitId":"tohpinren"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":141,"author":{"gitId":"tohpinren"},"content":"                String currLine \u003d sc.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"tohpinren"},"content":"                if (line \u003d\u003d index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"tohpinren"},"content":"                    writer.write(currLine.replace(\"| 1 |\", \"| 0 |\")","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"tohpinren"},"content":"                            + System.getProperty(\"line.separator\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"tohpinren"},"content":"                } else {","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"tohpinren"},"content":"                    writer.write(currLine + System.getProperty(\"line.separator\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"tohpinren"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":148,"author":{"gitId":"tohpinren"},"content":"                line++;","lastModifiedDate":"2023-08-30"},{"lineNumber":149,"author":{"gitId":"tohpinren"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":150,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":151,"author":{"gitId":"tohpinren"},"content":"            writer.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":152,"author":{"gitId":"tohpinren"},"content":"            sc.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"tohpinren"},"content":"            tempFile.renameTo(antoFile);","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"tohpinren"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"tohpinren"},"content":"            throw new AntoException(\"OOPS!!! IOException\");","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"tohpinren"},"content":"        this.taskList.get(index).unmark();","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"tohpinren"},"content":"     * Deletes task at given index.","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"tohpinren"},"content":"     * @param index Index of task to delete.","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"tohpinren"},"content":"     * @return Deleted task.","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"tohpinren"},"content":"     * @throws AntoException Throws AntoException if there is an IO Exception.","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"tohpinren"},"content":"    public Task deleteTask(int index) throws AntoException {","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"tohpinren"},"content":"        String relativePath \u003d \"data/anto.txt\";","lastModifiedDate":"2023-08-30"},{"lineNumber":170,"author":{"gitId":"tohpinren"},"content":"        Path absolutePath \u003d Paths.get(relativePath).toAbsolutePath();","lastModifiedDate":"2023-08-30"},{"lineNumber":171,"author":{"gitId":"tohpinren"},"content":"        File antoFile \u003d absolutePath.toFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":172,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":173,"author":{"gitId":"tohpinren"},"content":"        String tempRelativePath \u003d \"data/tempFile.txt\";","lastModifiedDate":"2023-08-30"},{"lineNumber":174,"author":{"gitId":"tohpinren"},"content":"        Path tempAbsolutePath \u003d Paths.get(tempRelativePath).toAbsolutePath();","lastModifiedDate":"2023-08-30"},{"lineNumber":175,"author":{"gitId":"tohpinren"},"content":"        File tempFile \u003d tempAbsolutePath.toFile();","lastModifiedDate":"2023-08-30"},{"lineNumber":176,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":177,"author":{"gitId":"tohpinren"},"content":"        try {","lastModifiedDate":"2023-08-30"},{"lineNumber":178,"author":{"gitId":"tohpinren"},"content":"            Scanner sc \u003d new Scanner(antoFile);","lastModifiedDate":"2023-08-30"},{"lineNumber":179,"author":{"gitId":"tohpinren"},"content":"            FileWriter writer \u003d new FileWriter(tempFile);","lastModifiedDate":"2023-08-30"},{"lineNumber":180,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":181,"author":{"gitId":"tohpinren"},"content":"            int line \u003d 0;","lastModifiedDate":"2023-08-30"},{"lineNumber":182,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":183,"author":{"gitId":"tohpinren"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-08-30"},{"lineNumber":184,"author":{"gitId":"tohpinren"},"content":"                String currLine \u003d sc.nextLine();","lastModifiedDate":"2023-08-30"},{"lineNumber":185,"author":{"gitId":"tohpinren"},"content":"                if (line !\u003d index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":186,"author":{"gitId":"tohpinren"},"content":"                    writer.write(currLine + System.getProperty(\"line.separator\"));","lastModifiedDate":"2023-08-30"},{"lineNumber":187,"author":{"gitId":"tohpinren"},"content":"                }","lastModifiedDate":"2023-08-30"},{"lineNumber":188,"author":{"gitId":"tohpinren"},"content":"                line++;","lastModifiedDate":"2023-08-30"},{"lineNumber":189,"author":{"gitId":"tohpinren"},"content":"            }","lastModifiedDate":"2023-08-30"},{"lineNumber":190,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":191,"author":{"gitId":"tohpinren"},"content":"            writer.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":192,"author":{"gitId":"tohpinren"},"content":"            sc.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":193,"author":{"gitId":"tohpinren"},"content":"            tempFile.renameTo(antoFile);","lastModifiedDate":"2023-08-30"},{"lineNumber":194,"author":{"gitId":"tohpinren"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-30"},{"lineNumber":195,"author":{"gitId":"tohpinren"},"content":"            throw new AntoException(\"OOPS!!! IOException\");","lastModifiedDate":"2023-08-31"},{"lineNumber":196,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":197,"author":{"gitId":"tohpinren"},"content":"        return this.taskList.remove(index);","lastModifiedDate":"2023-08-30"},{"lineNumber":198,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":199,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":200,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":201,"author":{"gitId":"tohpinren"},"content":"     * Find tasks with matching keyword.","lastModifiedDate":"2023-08-31"},{"lineNumber":202,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":203,"author":{"gitId":"tohpinren"},"content":"     * @param keyword Keyword to search tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":204,"author":{"gitId":"tohpinren"},"content":"     * @return Return Array List of tasks with specified keyword.","lastModifiedDate":"2023-08-31"},{"lineNumber":205,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":206,"author":{"gitId":"tohpinren"},"content":"    public ArrayList\u003cTask\u003e findTask(String keyword) {","lastModifiedDate":"2023-08-31"},{"lineNumber":207,"author":{"gitId":"tohpinren"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":208,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":209,"author":{"gitId":"tohpinren"},"content":"        for (Task curr : this.taskList) {","lastModifiedDate":"2023-08-31"},{"lineNumber":210,"author":{"gitId":"tohpinren"},"content":"            if (curr.description.contains(keyword)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":211,"author":{"gitId":"tohpinren"},"content":"                foundTasks.add(curr);","lastModifiedDate":"2023-08-31"},{"lineNumber":212,"author":{"gitId":"tohpinren"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":213,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":214,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":215,"author":{"gitId":"tohpinren"},"content":"        return foundTasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":216,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":217,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":218,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"tohpinren":218}},{"path":"src/main/java/anto/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package anto;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":" * Todo class represents a Todo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"     * Creates a Todo task","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"     * @param description Description of todo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-23"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"        super(description);","lastModifiedDate":"2023-08-23"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-23"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"     * Overridden toString to represent a Todo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"     * @return String representing a Todo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"    @Override","lastModifiedDate":"2023-08-23"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"    public String toString() {","lastModifiedDate":"2023-08-23"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"        return String.format(\"[T] [%s] %s\",","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"                super.toString());","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-23"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"tohpinren":27}},{"path":"src/main/java/anto/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package anto;","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":" * Ui handles all printing to command line.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"public class Ui {","lastModifiedDate":"2023-08-30"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"     * Creates a Ui class.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"    public Ui() {}","lastModifiedDate":"2023-08-30"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"     * Sets Ui\u0027s taskList to the given one.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"     * @param taskList TaskList to set it to.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"    public void setTaskList(TaskList taskList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"     * Prints a border.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"    public void printBlock() {","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"        System.out.println(\"\u003d\u003d\u003d---\u003d\u003d\u003d---\u003d\u003d\u003d---\u003d\u003d\u003d---\u003d\u003d\u003d---\u003d\u003d\u003d---\u003d\u003d\u003d---\u003d\u003d\u003d\");","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"     * Greets the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"    public void greet() {","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"tohpinren"},"content":"        this.printBlock();","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"tohpinren"},"content":"        System.out.println(\"Hello I\u0027m Anto\\nWhat can I do for you?\");","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"tohpinren"},"content":"        this.printBlock();","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"tohpinren"},"content":"     * Says bye to the user.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"tohpinren"},"content":"    public void sayBye() {","lastModifiedDate":"2023-08-30"},{"lineNumber":46,"author":{"gitId":"tohpinren"},"content":"        this.printBlock();","lastModifiedDate":"2023-08-30"},{"lineNumber":47,"author":{"gitId":"tohpinren"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"tohpinren"},"content":"        this.printBlock();","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":51,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"tohpinren"},"content":"     * Prints current list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"tohpinren"},"content":"    public void printList() {","lastModifiedDate":"2023-08-30"},{"lineNumber":55,"author":{"gitId":"tohpinren"},"content":"        ArrayList\u003cTask\u003e storage \u003d taskList.getStorage();","lastModifiedDate":"2023-08-30"},{"lineNumber":56,"author":{"gitId":"tohpinren"},"content":"        int length \u003d taskList.getLength();","lastModifiedDate":"2023-08-30"},{"lineNumber":57,"author":{"gitId":"tohpinren"},"content":"        this.printBlock();","lastModifiedDate":"2023-08-30"},{"lineNumber":58,"author":{"gitId":"tohpinren"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"tohpinren"},"content":"        for (int i \u003d 0; i \u003c length; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":60,"author":{"gitId":"tohpinren"},"content":"            System.out.println(String.format(\"%d. %s\",","lastModifiedDate":"2023-08-30"},{"lineNumber":61,"author":{"gitId":"tohpinren"},"content":"                    i + 1, storage.get(i)));","lastModifiedDate":"2023-08-30"},{"lineNumber":62,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":63,"author":{"gitId":"tohpinren"},"content":"        this.printBlock();","lastModifiedDate":"2023-08-30"},{"lineNumber":64,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":65,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":66,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"tohpinren"},"content":"     * Tells user task is deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"tohpinren"},"content":"     * @param index Index of deleted task.","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"tohpinren"},"content":"    public void printMarkAsDone(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":72,"author":{"gitId":"tohpinren"},"content":"        ArrayList\u003cTask\u003e storage \u003d taskList.getStorage();","lastModifiedDate":"2023-08-30"},{"lineNumber":73,"author":{"gitId":"tohpinren"},"content":"        this.printBlock();","lastModifiedDate":"2023-08-30"},{"lineNumber":74,"author":{"gitId":"tohpinren"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":75,"author":{"gitId":"tohpinren"},"content":"        System.out.println(storage.get(index));","lastModifiedDate":"2023-08-30"},{"lineNumber":76,"author":{"gitId":"tohpinren"},"content":"        this.printBlock();","lastModifiedDate":"2023-08-30"},{"lineNumber":77,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":78,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"tohpinren"},"content":"     * Tells user task is unmarked.","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"tohpinren"},"content":"     * @param index Index of task unmarked.","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"tohpinren"},"content":"    public void printUnmark(int index) {","lastModifiedDate":"2023-08-30"},{"lineNumber":85,"author":{"gitId":"tohpinren"},"content":"        ArrayList\u003cTask\u003e storage \u003d taskList.getStorage();","lastModifiedDate":"2023-08-30"},{"lineNumber":86,"author":{"gitId":"tohpinren"},"content":"        this.printBlock();","lastModifiedDate":"2023-08-30"},{"lineNumber":87,"author":{"gitId":"tohpinren"},"content":"        System.out.println(\"Okay, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":88,"author":{"gitId":"tohpinren"},"content":"        System.out.println(storage.get(index));","lastModifiedDate":"2023-08-30"},{"lineNumber":89,"author":{"gitId":"tohpinren"},"content":"        this.printBlock();","lastModifiedDate":"2023-08-30"},{"lineNumber":90,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":91,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":92,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"tohpinren"},"content":"     * Tells user task is added.","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"tohpinren"},"content":"     * @param task Task that was added.","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"tohpinren"},"content":"    public void printAdded(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":98,"author":{"gitId":"tohpinren"},"content":"        this.printBlock();","lastModifiedDate":"2023-08-30"},{"lineNumber":99,"author":{"gitId":"tohpinren"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":100,"author":{"gitId":"tohpinren"},"content":"        System.out.println(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":101,"author":{"gitId":"tohpinren"},"content":"        System.out.println(String.format(\"Now you have %d tasks in the list.\", taskList.getLength()));","lastModifiedDate":"2023-08-30"},{"lineNumber":102,"author":{"gitId":"tohpinren"},"content":"        this.printBlock();","lastModifiedDate":"2023-08-30"},{"lineNumber":103,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":104,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":105,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"tohpinren"},"content":"     * Tells user there is an exception.","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"tohpinren"},"content":"     * @param e AntoException that was thrown.","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"tohpinren"},"content":"    public void printError(AntoException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"tohpinren"},"content":"        this.printBlock();","lastModifiedDate":"2023-08-30"},{"lineNumber":112,"author":{"gitId":"tohpinren"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2023-08-30"},{"lineNumber":113,"author":{"gitId":"tohpinren"},"content":"        this.printBlock();","lastModifiedDate":"2023-08-30"},{"lineNumber":114,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":115,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":116,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"tohpinren"},"content":"     * Tells user task is deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":118,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"tohpinren"},"content":"     * @param task Task that was deleted.","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":121,"author":{"gitId":"tohpinren"},"content":"    public void printDelete(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":122,"author":{"gitId":"tohpinren"},"content":"        this.printBlock();","lastModifiedDate":"2023-08-30"},{"lineNumber":123,"author":{"gitId":"tohpinren"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":124,"author":{"gitId":"tohpinren"},"content":"        System.out.println(task);","lastModifiedDate":"2023-08-30"},{"lineNumber":125,"author":{"gitId":"tohpinren"},"content":"        System.out.println(String.format(\"Now you have %d tasks in the list.\", taskList.getLength()));","lastModifiedDate":"2023-08-30"},{"lineNumber":126,"author":{"gitId":"tohpinren"},"content":"        this.printBlock();","lastModifiedDate":"2023-08-30"},{"lineNumber":127,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":128,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":129,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"tohpinren"},"content":"     * Tells user there are no current tasks on the list.","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"tohpinren"},"content":"    public void printNoTasks() {","lastModifiedDate":"2023-08-30"},{"lineNumber":133,"author":{"gitId":"tohpinren"},"content":"        this.printBlock();","lastModifiedDate":"2023-08-30"},{"lineNumber":134,"author":{"gitId":"tohpinren"},"content":"        System.out.println(\"Sorry, you currently have no tasks on the list.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":135,"author":{"gitId":"tohpinren"},"content":"        this.printBlock();","lastModifiedDate":"2023-08-30"},{"lineNumber":136,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":137,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":138,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"tohpinren"},"content":"     * Tells user there is no saved filed.","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"tohpinren"},"content":"    public void printNoSavedFile() {","lastModifiedDate":"2023-08-30"},{"lineNumber":142,"author":{"gitId":"tohpinren"},"content":"        this.printBlock();","lastModifiedDate":"2023-08-30"},{"lineNumber":143,"author":{"gitId":"tohpinren"},"content":"        System.out.println(\"No saved file found.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":144,"author":{"gitId":"tohpinren"},"content":"        this.printBlock();","lastModifiedDate":"2023-08-30"},{"lineNumber":145,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":146,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":147,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"tohpinren"},"content":"     * Tells user saved file is found and loaded.","lastModifiedDate":"2023-08-31"},{"lineNumber":149,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"tohpinren"},"content":"     * @param taskArrayList Current array list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"tohpinren"},"content":"    public void printSavedFileFound(ArrayList\u003cTask\u003e taskArrayList) {","lastModifiedDate":"2023-08-30"},{"lineNumber":153,"author":{"gitId":"tohpinren"},"content":"        this.printBlock();","lastModifiedDate":"2023-08-30"},{"lineNumber":154,"author":{"gitId":"tohpinren"},"content":"        System.out.println(\"Saved file found.\");","lastModifiedDate":"2023-08-30"},{"lineNumber":155,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":156,"author":{"gitId":"tohpinren"},"content":"        int length \u003d taskArrayList.size();","lastModifiedDate":"2023-08-30"},{"lineNumber":157,"author":{"gitId":"tohpinren"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-08-30"},{"lineNumber":158,"author":{"gitId":"tohpinren"},"content":"        for (int i \u003d 0; i \u003c length; i++) {","lastModifiedDate":"2023-08-30"},{"lineNumber":159,"author":{"gitId":"tohpinren"},"content":"            System.out.println(String.format(\"%d. %s\",","lastModifiedDate":"2023-08-30"},{"lineNumber":160,"author":{"gitId":"tohpinren"},"content":"                    i + 1, taskArrayList.get(i)));","lastModifiedDate":"2023-08-30"},{"lineNumber":161,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":162,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":163,"author":{"gitId":"tohpinren"},"content":"        this.printBlock();","lastModifiedDate":"2023-08-30"},{"lineNumber":164,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":165,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":166,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":167,"author":{"gitId":"tohpinren"},"content":"     * Prints list of tasks found.","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"tohpinren"},"content":"     * @param foundTasks List of tasks found.","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"tohpinren"},"content":"    public void printFoundTasks(ArrayList\u003cTask\u003e foundTasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"tohpinren"},"content":"        if (foundTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"tohpinren"},"content":"            this.printBlock();","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"tohpinren"},"content":"            System.out.println(\"There are no matching tasks in your list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"tohpinren"},"content":"            this.printBlock();","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"tohpinren"},"content":"            return;","lastModifiedDate":"2023-08-31"},{"lineNumber":177,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":179,"author":{"gitId":"tohpinren"},"content":"        this.printBlock();","lastModifiedDate":"2023-08-31"},{"lineNumber":180,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":181,"author":{"gitId":"tohpinren"},"content":"        int length \u003d foundTasks.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":182,"author":{"gitId":"tohpinren"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":183,"author":{"gitId":"tohpinren"},"content":"        for (int i \u003d 0; i \u003c length; i++) {","lastModifiedDate":"2023-08-31"},{"lineNumber":184,"author":{"gitId":"tohpinren"},"content":"            System.out.println(String.format(\"%d. %s\",","lastModifiedDate":"2023-08-31"},{"lineNumber":185,"author":{"gitId":"tohpinren"},"content":"                    i + 1, foundTasks.get(i)));","lastModifiedDate":"2023-08-31"},{"lineNumber":186,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":187,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":188,"author":{"gitId":"tohpinren"},"content":"        this.printBlock();","lastModifiedDate":"2023-08-31"},{"lineNumber":189,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":190,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-08-30"}],"authorContributionMap":{"tohpinren":190}},{"path":"src/test/java/anto/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package anto;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"    public void createDeadlineTaskTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"            Deadline newTodoTask \u003d new Deadline(\"Read book\", \"01-09-2023 23:59\");","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"            assertEquals(\"[D] [ ] Read book (by: 01 Sep 2023 23:59)\", newTodoTask.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"        } catch (AntoException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"            fail(\"Expected exception was thrown\");","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"    public void markAndUnmarkTodoTaskTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"            Deadline newTodoTask \u003d new Deadline(\"Read book\", \"01-09-2023 23:59\");","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"            newTodoTask.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"            assertEquals(\"X\", newTodoTask.getStatusIcon());","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"            assertEquals(\"[D] [X] Read book (by: 01 Sep 2023 23:59)\", newTodoTask.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"            newTodoTask.unmark();","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"            assertEquals(\" \", newTodoTask.getStatusIcon());","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"            assertEquals(\"[D] [ ] Read book (by: 01 Sep 2023 23:59)\", newTodoTask.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"        } catch (AntoException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"            fail(\"Expected exception was thrown\");","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"tohpinren":33}},{"path":"src/test/java/anto/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package anto;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"public class EventTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"    public void createDeadlineTaskTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"            Event newTodoTask \u003d new Event(\"Book meeting\", \"02-09-2023 20:00\", \"02-09-2023 21:00\");","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"            assertEquals(\"[E] [ ] Book meeting (from: 02 Sep 2023 20:00 to: 02 Sep 2023 21:00)\",","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"                    newTodoTask.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"        } catch (AntoException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"            fail(\"Expected exception was thrown\");","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"    public void markAndUnmarkTodoTaskTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"            Event newTodoTask \u003d new Event(\"Book meeting\", \"02-09-2023 20:00\", \"02-09-2023 21:00\");","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"            newTodoTask.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"            assertEquals(\"X\", newTodoTask.getStatusIcon());","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"            assertEquals(\"[E] [X] Book meeting (from: 02 Sep 2023 20:00 to: 02 Sep 2023 21:00)\",","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"                    newTodoTask.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"            newTodoTask.unmark();","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"            assertEquals(\" \", newTodoTask.getStatusIcon());","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"            assertEquals(\"[E] [ ] Book meeting (from: 02 Sep 2023 20:00 to: 02 Sep 2023 21:00)\",","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"                    newTodoTask.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"        } catch (AntoException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"            fail(\"Expected exception was thrown\");","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"tohpinren":36}},{"path":"src/test/java/anto/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package anto;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"public class TodoTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"    public void createTodoTaskTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"        Todo newTodoTask \u003d new Todo(\"Borrow book\");","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"        assertEquals(\"[T] [ ] Borrow book\", newTodoTask.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"    public void markAndUnmarkTodoTaskTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"        Todo newTodoTask \u003d new Todo(\"Borrow book\");","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"        newTodoTask.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"        assertEquals(\"X\", newTodoTask.getStatusIcon());","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"        assertEquals(\"[T] [X] Borrow book\", newTodoTask.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"        newTodoTask.unmark();","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"        assertEquals(\" \", newTodoTask.getStatusIcon());","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"        assertEquals(\"[T] [ ] Borrow book\", newTodoTask.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"tohpinren":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"todo Read Book","lastModifiedDate":"2023-08-23"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"deadline Return book /by Next Wed","lastModifiedDate":"2023-08-23"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"todo Eat dinner","lastModifiedDate":"2023-08-23"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"event Important Meeting /from 2pm /to 4pm","lastModifiedDate":"2023-08-23"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"mark 1","lastModifiedDate":"2023-08-23"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"mark 2","lastModifiedDate":"2023-08-23"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"mark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"unmark 3","lastModifiedDate":"2023-08-23"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"list","lastModifiedDate":"2023-08-23"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"bye","lastModifiedDate":"2023-08-23"}],"authorContributionMap":{"tohpinren":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"java -classpath ..\\bin Anto \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tohpinren":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"java -classpath ../bin Anto \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tohpinren":1,"-":37}}]
