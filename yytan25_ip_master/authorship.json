[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"yytan25"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"yytan25"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"yytan25"},"content":"    protected LocalDateTime due;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"yytan25"},"content":"    public Deadline(String details, LocalDateTime due) {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"yytan25"},"content":"        super(details);","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"yytan25"},"content":"        this.due \u003d due;","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"yytan25"},"content":"    public Deadline(String details, boolean isCompleted, LocalDateTime due) {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"yytan25"},"content":"        super(details, isCompleted);","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"yytan25"},"content":"        this.due \u003d due;","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"yytan25"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"yytan25"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"yytan25"},"content":"        SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"E, dd MMM yyyy\");","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"yytan25"},"content":"        return \"[D]\" + super.toString() + \" (by: \" +","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"yytan25"},"content":"                dateFormatter.format(this.due.toLocalDate()) + \" \" +","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"yytan25"},"content":"                this.due.toLocalTime().toString() + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"yytan25"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"yytan25":24}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-08-26"},{"lineNumber":2,"author":{"gitId":"yytan25"},"content":"import java.io.File;","lastModifiedDate":"2023-08-26"},{"lineNumber":3,"author":{"gitId":"yytan25"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"yytan25"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-26"},{"lineNumber":5,"author":{"gitId":"yytan25"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-26"},{"lineNumber":6,"author":{"gitId":"yytan25"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"yytan25"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"yytan25"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"yytan25"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"yytan25"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"yytan25"},"content":"import java.util.InputMismatchException;","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"yytan25"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":16,"author":{"gitId":"yytan25"},"content":"    private boolean isRunning \u003d true;","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"yytan25"},"content":"    private final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"yytan25"},"content":"    private int numOfTasks \u003d 0;","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"yytan25"},"content":"    private int numOfCompletedTasks \u003d 0;","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"yytan25"},"content":"    private int consecInvalidInputCount \u003d 0;","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"yytan25"},"content":"    private final String name;","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"yytan25"},"content":"    public enum TaskType {","lastModifiedDate":"2023-08-26"},{"lineNumber":23,"author":{"gitId":"yytan25"},"content":"        TASK, TODO, DEADLINE, EVENT","lastModifiedDate":"2023-08-26"},{"lineNumber":24,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":25,"author":{"gitId":"yytan25"},"content":"    public enum Command {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"yytan25"},"content":"        TASK, TODO, DEADLINE, EVENT, LIST, MARK, UNMARK, DELETE, COMMANDS, BYE","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"yytan25"},"content":"    public Duke() throws IOException {","lastModifiedDate":"2023-08-26"},{"lineNumber":30,"author":{"gitId":"yytan25"},"content":"        this.name \u003d \"Meg\";","lastModifiedDate":"2023-08-21"},{"lineNumber":31,"author":{"gitId":"yytan25"},"content":"        this.run();","lastModifiedDate":"2023-08-21"},{"lineNumber":32,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":33,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":34,"author":{"gitId":"yytan25"},"content":"    public void run() throws IOException {","lastModifiedDate":"2023-08-26"},{"lineNumber":35,"author":{"gitId":"yytan25"},"content":"        this.launchOnStart();","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"yytan25"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":37,"author":{"gitId":"yytan25"},"content":"            this.readTasksFromDisk(\"./data/tasks.txt\");","lastModifiedDate":"2023-08-26"},{"lineNumber":38,"author":{"gitId":"yytan25"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":39,"author":{"gitId":"yytan25"},"content":"            System.out.println(\"File not found. Please check your directory and try again.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":40,"author":{"gitId":"yytan25"},"content":"            this.exit(2);","lastModifiedDate":"2023-08-26"},{"lineNumber":41,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":42,"author":{"gitId":"yytan25"},"content":"        this.printSelfIntroduction();","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"yytan25"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-20"},{"lineNumber":44,"author":{"gitId":"yytan25"},"content":"        while (this.isRunning) {","lastModifiedDate":"2023-08-20"},{"lineNumber":45,"author":{"gitId":"yytan25"},"content":"            if (this.consecInvalidInputCount \u003e\u003d 10) {","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"yytan25"},"content":"                this.exit(1);","lastModifiedDate":"2023-08-26"},{"lineNumber":47,"author":{"gitId":"yytan25"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"yytan25"},"content":"            } else if (this.consecInvalidInputCount \u003d\u003d 8) {","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"yytan25"},"content":"                System.out.println(\"If you keep giving me nonsense, I\u0027m leaving!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"yytan25"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"yytan25"},"content":"            String msg \u003d sc.nextLine();","lastModifiedDate":"2023-08-20"},{"lineNumber":52,"author":{"gitId":"yytan25"},"content":"            this.readInput(msg);","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":54,"author":{"gitId":"yytan25"},"content":"        this.exit(0);","lastModifiedDate":"2023-08-26"},{"lineNumber":55,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":56,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":57,"author":{"gitId":"yytan25"},"content":"    /**","lastModifiedDate":"2023-08-26"},{"lineNumber":58,"author":{"gitId":"yytan25"},"content":"     * Greets the user and creates the requisite folder and text file, if required.","lastModifiedDate":"2023-08-26"},{"lineNumber":59,"author":{"gitId":"yytan25"},"content":"     */","lastModifiedDate":"2023-08-26"},{"lineNumber":60,"author":{"gitId":"yytan25"},"content":"    public void launchOnStart() {","lastModifiedDate":"2023-08-26"},{"lineNumber":61,"author":{"gitId":"yytan25"},"content":"        File f \u003d new File(\"./data\");","lastModifiedDate":"2023-08-26"},{"lineNumber":62,"author":{"gitId":"yytan25"},"content":"        if (f.mkdirs()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":63,"author":{"gitId":"yytan25"},"content":"            System.out.printf(\"Welcome, new user! I\u0027m %s!%n\" +","lastModifiedDate":"2023-08-26"},{"lineNumber":64,"author":{"gitId":"yytan25"},"content":"                    \"Hope you have a great time!%n\", this.name);","lastModifiedDate":"2023-08-26"},{"lineNumber":65,"author":{"gitId":"yytan25"},"content":"        } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":66,"author":{"gitId":"yytan25"},"content":"            System.out.println(\"Welcome back, friend!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":68,"author":{"gitId":"yytan25"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":69,"author":{"gitId":"yytan25"},"content":"            File file \u003d new File(\"./data/tasks.txt\");","lastModifiedDate":"2023-08-26"},{"lineNumber":70,"author":{"gitId":"yytan25"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":71,"author":{"gitId":"yytan25"},"content":"                System.out.printf(\"Your tasks will be automatically saved.%n\" + \"\\n\" +","lastModifiedDate":"2023-08-26"},{"lineNumber":72,"author":{"gitId":"yytan25"},"content":"                        \"Feeling overwhelmed in school and having trouble remembering commitments?%n\" +","lastModifiedDate":"2023-08-26"},{"lineNumber":73,"author":{"gitId":"yytan25"},"content":"                        \"I\u0027m here to help!%n\");","lastModifiedDate":"2023-08-26"},{"lineNumber":74,"author":{"gitId":"yytan25"},"content":"            } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":75,"author":{"gitId":"yytan25"},"content":"                System.out.println(\"Tasks from previous session loaded successfully!\");","lastModifiedDate":"2023-08-26"},{"lineNumber":76,"author":{"gitId":"yytan25"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":77,"author":{"gitId":"yytan25"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"yytan25"},"content":"            System.out.println(\"Due to technical issues, I\u0027m only available in guest mode.%n\" +","lastModifiedDate":"2023-08-26"},{"lineNumber":79,"author":{"gitId":"yytan25"},"content":"                    \"I sincerely apologise to the inconvenience caused.\");","lastModifiedDate":"2023-08-26"},{"lineNumber":80,"author":{"gitId":"yytan25"},"content":"        } finally {","lastModifiedDate":"2023-08-26"},{"lineNumber":81,"author":{"gitId":"yytan25"},"content":"            printHorizontalLine();","lastModifiedDate":"2023-08-26"},{"lineNumber":82,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":83,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":84,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":85,"author":{"gitId":"yytan25"},"content":"    public void printHorizontalLine() {","lastModifiedDate":"2023-08-20"},{"lineNumber":86,"author":{"gitId":"yytan25"},"content":"        for (int i \u003d 0; i \u003c 20; i++) {","lastModifiedDate":"2023-08-19"},{"lineNumber":87,"author":{"gitId":"yytan25"},"content":"            System.out.print(\"-\");","lastModifiedDate":"2023-08-19"},{"lineNumber":88,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-08-19"},{"lineNumber":89,"author":{"gitId":"yytan25"},"content":"        System.out.println();","lastModifiedDate":"2023-08-19"},{"lineNumber":90,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":91,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":92,"author":{"gitId":"yytan25"},"content":"    public void printCommands() {","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"yytan25"},"content":"        System.out.printf(\"\\033[3mtask\\033[0m - Create a new task%n\");","lastModifiedDate":"2023-08-24"},{"lineNumber":94,"author":{"gitId":"yytan25"},"content":"        System.out.printf(\"\\033[3mtodo\\033[0m - Create a new todo%n\");","lastModifiedDate":"2023-08-24"},{"lineNumber":95,"author":{"gitId":"yytan25"},"content":"        System.out.printf(\"\\033[3mdeadline\\033[0m - Create a new deadline%n\");","lastModifiedDate":"2023-08-24"},{"lineNumber":96,"author":{"gitId":"yytan25"},"content":"        System.out.printf(\"\\033[3mevent\\033[0m - Create a new event%n\");","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"yytan25"},"content":"        System.out.printf(\"\\033[3mlist\\033[0m - View your current tasks and completion status%n\");","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"yytan25"},"content":"        System.out.printf(\"\\033[3mmark\\033[0m - Mark a task as complete%n\");","lastModifiedDate":"2023-08-24"},{"lineNumber":99,"author":{"gitId":"yytan25"},"content":"        System.out.printf(\"\\033[3munmark\\033[0m - Mark a task as incomplete%n\");","lastModifiedDate":"2023-08-24"},{"lineNumber":100,"author":{"gitId":"yytan25"},"content":"        System.out.printf(\"\\033[3mdelete\\033[0m - Delete a task%n\");","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"yytan25"},"content":"        System.out.printf(\"\\033[3mbye\\033[0m - Exit the program%n\");","lastModifiedDate":"2023-08-24"},{"lineNumber":102,"author":{"gitId":"yytan25"},"content":"        this.consecInvalidInputCount \u003d 0;","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"yytan25"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-08-19"},{"lineNumber":104,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":105,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":106,"author":{"gitId":"yytan25"},"content":"    public void printSelfIntroduction() {","lastModifiedDate":"2023-08-24"},{"lineNumber":107,"author":{"gitId":"yytan25"},"content":"        System.out.println(\"I support the following commands:\" + \"\\n\");","lastModifiedDate":"2023-08-26"},{"lineNumber":108,"author":{"gitId":"yytan25"},"content":"        printCommands();","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":110,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":111,"author":{"gitId":"yytan25"},"content":"    public void printEndOfOperation() {","lastModifiedDate":"2023-08-24"},{"lineNumber":112,"author":{"gitId":"yytan25"},"content":"        System.out.println();","lastModifiedDate":"2023-08-24"},{"lineNumber":113,"author":{"gitId":"yytan25"},"content":"        System.out.printf(\"Anything else you want me to do?%n\");","lastModifiedDate":"2023-08-24"},{"lineNumber":114,"author":{"gitId":"yytan25"},"content":"        System.out.printf(\"Just so you know, you can input \\033[3mcommands\\033[0m \" +","lastModifiedDate":"2023-08-24"},{"lineNumber":115,"author":{"gitId":"yytan25"},"content":"                \"to view the commands again.%n\");","lastModifiedDate":"2023-08-24"},{"lineNumber":116,"author":{"gitId":"yytan25"},"content":"        this.consecInvalidInputCount \u003d 0;","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"yytan25"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":118,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":120,"author":{"gitId":"yytan25"},"content":"    public void readTasksFromDisk(String filePath) throws FileNotFoundException,","lastModifiedDate":"2023-08-26"},{"lineNumber":121,"author":{"gitId":"yytan25"},"content":"            IllegalArgumentException {","lastModifiedDate":"2023-08-26"},{"lineNumber":122,"author":{"gitId":"yytan25"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-08-26"},{"lineNumber":123,"author":{"gitId":"yytan25"},"content":"        Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2023-08-26"},{"lineNumber":124,"author":{"gitId":"yytan25"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2023-08-26"},{"lineNumber":125,"author":{"gitId":"yytan25"},"content":"            String[] args \u003d sc.nextLine().split(\"-\", -1);","lastModifiedDate":"2023-08-26"},{"lineNumber":126,"author":{"gitId":"yytan25"},"content":"            TaskType type;","lastModifiedDate":"2023-08-26"},{"lineNumber":127,"author":{"gitId":"yytan25"},"content":"            LocalDateTime due \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"yytan25"},"content":"            LocalDateTime start \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"yytan25"},"content":"            LocalDateTime end \u003d null;","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"yytan25"},"content":"            try {","lastModifiedDate":"2023-08-26"},{"lineNumber":131,"author":{"gitId":"yytan25"},"content":"                type \u003d TaskType.valueOf(args[0].toUpperCase());","lastModifiedDate":"2023-08-26"},{"lineNumber":132,"author":{"gitId":"yytan25"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":133,"author":{"gitId":"yytan25"},"content":"                System.out.println(\"Task not found\");","lastModifiedDate":"2023-08-26"},{"lineNumber":134,"author":{"gitId":"yytan25"},"content":"                return;","lastModifiedDate":"2023-08-26"},{"lineNumber":135,"author":{"gitId":"yytan25"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":136,"author":{"gitId":"yytan25"},"content":"            String details \u003d args[1];","lastModifiedDate":"2023-08-26"},{"lineNumber":137,"author":{"gitId":"yytan25"},"content":"            boolean isCompleted \u003d args[2].equals(\"Y\");","lastModifiedDate":"2023-08-26"},{"lineNumber":138,"author":{"gitId":"yytan25"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"yytan25"},"content":"                if (type \u003d\u003d TaskType.DEADLINE) {","lastModifiedDate":"2023-08-26"},{"lineNumber":140,"author":{"gitId":"yytan25"},"content":"                    due \u003d LocalDateTime.parse(args[3]);","lastModifiedDate":"2023-08-31"},{"lineNumber":141,"author":{"gitId":"yytan25"},"content":"                } else if (type \u003d\u003d TaskType.EVENT) {","lastModifiedDate":"2023-08-26"},{"lineNumber":142,"author":{"gitId":"yytan25"},"content":"                    start \u003d LocalDateTime.parse(args[3]);","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"yytan25"},"content":"                    end \u003d LocalDateTime.parse(args[4]);","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"yytan25"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"yytan25"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"yytan25"},"content":"                System.out.println(\"Could not retrieve date and/or time\");","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"yytan25"},"content":"                return;","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"yytan25"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":149,"author":{"gitId":"yytan25"},"content":"            switch (type) {","lastModifiedDate":"2023-08-26"},{"lineNumber":150,"author":{"gitId":"yytan25"},"content":"                case TASK:","lastModifiedDate":"2023-08-26"},{"lineNumber":151,"author":{"gitId":"yytan25"},"content":"                    Task t \u003d new Task(details, isCompleted);","lastModifiedDate":"2023-08-26"},{"lineNumber":152,"author":{"gitId":"yytan25"},"content":"                    tasks.add(t);","lastModifiedDate":"2023-08-26"},{"lineNumber":153,"author":{"gitId":"yytan25"},"content":"                    this.numOfTasks++;","lastModifiedDate":"2023-08-26"},{"lineNumber":154,"author":{"gitId":"yytan25"},"content":"                    if (t.isCompleted) {","lastModifiedDate":"2023-08-26"},{"lineNumber":155,"author":{"gitId":"yytan25"},"content":"                        this.numOfCompletedTasks++;","lastModifiedDate":"2023-08-26"},{"lineNumber":156,"author":{"gitId":"yytan25"},"content":"                    }","lastModifiedDate":"2023-08-26"},{"lineNumber":157,"author":{"gitId":"yytan25"},"content":"                    break;","lastModifiedDate":"2023-08-26"},{"lineNumber":158,"author":{"gitId":"yytan25"},"content":"                case TODO:","lastModifiedDate":"2023-08-26"},{"lineNumber":159,"author":{"gitId":"yytan25"},"content":"                    ToDo todo \u003d new ToDo(details, isCompleted);","lastModifiedDate":"2023-08-26"},{"lineNumber":160,"author":{"gitId":"yytan25"},"content":"                    tasks.add(todo);","lastModifiedDate":"2023-08-26"},{"lineNumber":161,"author":{"gitId":"yytan25"},"content":"                    this.numOfTasks++;","lastModifiedDate":"2023-08-26"},{"lineNumber":162,"author":{"gitId":"yytan25"},"content":"                    if (todo.isCompleted) {","lastModifiedDate":"2023-08-26"},{"lineNumber":163,"author":{"gitId":"yytan25"},"content":"                        this.numOfCompletedTasks++;","lastModifiedDate":"2023-08-26"},{"lineNumber":164,"author":{"gitId":"yytan25"},"content":"                    }","lastModifiedDate":"2023-08-26"},{"lineNumber":165,"author":{"gitId":"yytan25"},"content":"                    break;","lastModifiedDate":"2023-08-26"},{"lineNumber":166,"author":{"gitId":"yytan25"},"content":"                case DEADLINE:","lastModifiedDate":"2023-08-26"},{"lineNumber":167,"author":{"gitId":"yytan25"},"content":"                    Deadline d \u003d new Deadline(details, isCompleted, due);","lastModifiedDate":"2023-08-26"},{"lineNumber":168,"author":{"gitId":"yytan25"},"content":"                    tasks.add(d);","lastModifiedDate":"2023-08-26"},{"lineNumber":169,"author":{"gitId":"yytan25"},"content":"                    this.numOfTasks++;","lastModifiedDate":"2023-08-26"},{"lineNumber":170,"author":{"gitId":"yytan25"},"content":"                    if (d.isCompleted) {","lastModifiedDate":"2023-08-26"},{"lineNumber":171,"author":{"gitId":"yytan25"},"content":"                        this.numOfCompletedTasks++;","lastModifiedDate":"2023-08-26"},{"lineNumber":172,"author":{"gitId":"yytan25"},"content":"                    }","lastModifiedDate":"2023-08-26"},{"lineNumber":173,"author":{"gitId":"yytan25"},"content":"                    break;","lastModifiedDate":"2023-08-26"},{"lineNumber":174,"author":{"gitId":"yytan25"},"content":"                case EVENT:","lastModifiedDate":"2023-08-26"},{"lineNumber":175,"author":{"gitId":"yytan25"},"content":"                    Event e \u003d new Event(details, isCompleted, start, end);","lastModifiedDate":"2023-08-26"},{"lineNumber":176,"author":{"gitId":"yytan25"},"content":"                    tasks.add(e);","lastModifiedDate":"2023-08-26"},{"lineNumber":177,"author":{"gitId":"yytan25"},"content":"                    this.numOfTasks++;","lastModifiedDate":"2023-08-26"},{"lineNumber":178,"author":{"gitId":"yytan25"},"content":"                    if (e.isCompleted) {","lastModifiedDate":"2023-08-26"},{"lineNumber":179,"author":{"gitId":"yytan25"},"content":"                        this.numOfCompletedTasks++;","lastModifiedDate":"2023-08-26"},{"lineNumber":180,"author":{"gitId":"yytan25"},"content":"                    }","lastModifiedDate":"2023-08-26"},{"lineNumber":181,"author":{"gitId":"yytan25"},"content":"                    break;","lastModifiedDate":"2023-08-26"},{"lineNumber":182,"author":{"gitId":"yytan25"},"content":"                default:","lastModifiedDate":"2023-08-26"},{"lineNumber":183,"author":{"gitId":"yytan25"},"content":"                    // Shouldn\u0027t reach here","lastModifiedDate":"2023-08-26"},{"lineNumber":184,"author":{"gitId":"yytan25"},"content":"                    break;","lastModifiedDate":"2023-08-26"},{"lineNumber":185,"author":{"gitId":"yytan25"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":186,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":187,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":188,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":189,"author":{"gitId":"yytan25"},"content":"    public boolean checkValidTask(String details) {","lastModifiedDate":"2023-08-24"},{"lineNumber":190,"author":{"gitId":"yytan25"},"content":"        return !details.isEmpty();","lastModifiedDate":"2023-08-24"},{"lineNumber":191,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":192,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":193,"author":{"gitId":"yytan25"},"content":"    public boolean checkDuplicates(String details) {","lastModifiedDate":"2023-08-24"},{"lineNumber":194,"author":{"gitId":"yytan25"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-08-24"},{"lineNumber":195,"author":{"gitId":"yytan25"},"content":"            if (details.equals(t.getDetails())) {","lastModifiedDate":"2023-08-24"},{"lineNumber":196,"author":{"gitId":"yytan25"},"content":"                return true;","lastModifiedDate":"2023-08-24"},{"lineNumber":197,"author":{"gitId":"yytan25"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":198,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":199,"author":{"gitId":"yytan25"},"content":"        return false;","lastModifiedDate":"2023-08-24"},{"lineNumber":200,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-19"},{"lineNumber":201,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-19"},{"lineNumber":202,"author":{"gitId":"yytan25"},"content":"    public void readInput(String message) {","lastModifiedDate":"2023-08-20"},{"lineNumber":203,"author":{"gitId":"yytan25"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":204,"author":{"gitId":"yytan25"},"content":"            executeCommand(Command.valueOf(message.toUpperCase()));","lastModifiedDate":"2023-08-24"},{"lineNumber":205,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":206,"author":{"gitId":"yytan25"},"content":"        catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-24"},{"lineNumber":207,"author":{"gitId":"yytan25"},"content":"            System.out.printf(\"I\u0027m just a robot!%n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":208,"author":{"gitId":"yytan25"},"content":"                    \"I don\u0027t understand what %s is!%n\", message);","lastModifiedDate":"2023-08-24"},{"lineNumber":209,"author":{"gitId":"yytan25"},"content":"            this.consecInvalidInputCount++;","lastModifiedDate":"2023-08-24"},{"lineNumber":210,"author":{"gitId":"yytan25"},"content":"            printHorizontalLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":211,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":212,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":213,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":214,"author":{"gitId":"yytan25"},"content":"    public void executeCommand(Command command) {","lastModifiedDate":"2023-08-24"},{"lineNumber":215,"author":{"gitId":"yytan25"},"content":"        switch (command) {","lastModifiedDate":"2023-08-24"},{"lineNumber":216,"author":{"gitId":"yytan25"},"content":"            case TASK:","lastModifiedDate":"2023-08-24"},{"lineNumber":217,"author":{"gitId":"yytan25"},"content":"                this.createTask();","lastModifiedDate":"2023-08-24"},{"lineNumber":218,"author":{"gitId":"yytan25"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":219,"author":{"gitId":"yytan25"},"content":"            case TODO:","lastModifiedDate":"2023-08-24"},{"lineNumber":220,"author":{"gitId":"yytan25"},"content":"                this.createToDo();","lastModifiedDate":"2023-08-24"},{"lineNumber":221,"author":{"gitId":"yytan25"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":222,"author":{"gitId":"yytan25"},"content":"            case DEADLINE:","lastModifiedDate":"2023-08-24"},{"lineNumber":223,"author":{"gitId":"yytan25"},"content":"                this.createDeadline();","lastModifiedDate":"2023-08-24"},{"lineNumber":224,"author":{"gitId":"yytan25"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":225,"author":{"gitId":"yytan25"},"content":"            case EVENT:","lastModifiedDate":"2023-08-24"},{"lineNumber":226,"author":{"gitId":"yytan25"},"content":"                this.createEvent();","lastModifiedDate":"2023-08-24"},{"lineNumber":227,"author":{"gitId":"yytan25"},"content":"                break;","lastModifiedDate":"2023-08-20"},{"lineNumber":228,"author":{"gitId":"yytan25"},"content":"            case LIST:","lastModifiedDate":"2023-08-24"},{"lineNumber":229,"author":{"gitId":"yytan25"},"content":"                this.list();","lastModifiedDate":"2023-08-20"},{"lineNumber":230,"author":{"gitId":"yytan25"},"content":"                break;","lastModifiedDate":"2023-08-20"},{"lineNumber":231,"author":{"gitId":"yytan25"},"content":"            case MARK:","lastModifiedDate":"2023-08-24"},{"lineNumber":232,"author":{"gitId":"yytan25"},"content":"                this.markAsComplete();","lastModifiedDate":"2023-08-20"},{"lineNumber":233,"author":{"gitId":"yytan25"},"content":"                break;","lastModifiedDate":"2023-08-20"},{"lineNumber":234,"author":{"gitId":"yytan25"},"content":"            case UNMARK:","lastModifiedDate":"2023-08-24"},{"lineNumber":235,"author":{"gitId":"yytan25"},"content":"                this.markAsIncomplete();","lastModifiedDate":"2023-08-20"},{"lineNumber":236,"author":{"gitId":"yytan25"},"content":"                break;","lastModifiedDate":"2023-08-20"},{"lineNumber":237,"author":{"gitId":"yytan25"},"content":"            case DELETE:","lastModifiedDate":"2023-08-24"},{"lineNumber":238,"author":{"gitId":"yytan25"},"content":"                this.deleteTask();","lastModifiedDate":"2023-08-24"},{"lineNumber":239,"author":{"gitId":"yytan25"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":240,"author":{"gitId":"yytan25"},"content":"            case COMMANDS:","lastModifiedDate":"2023-08-24"},{"lineNumber":241,"author":{"gitId":"yytan25"},"content":"                this.printCommands();","lastModifiedDate":"2023-08-24"},{"lineNumber":242,"author":{"gitId":"yytan25"},"content":"                break;","lastModifiedDate":"2023-08-24"},{"lineNumber":243,"author":{"gitId":"yytan25"},"content":"            case BYE:","lastModifiedDate":"2023-08-24"},{"lineNumber":244,"author":{"gitId":"yytan25"},"content":"                this.isRunning \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":245,"author":{"gitId":"yytan25"},"content":"                break;","lastModifiedDate":"2023-08-20"},{"lineNumber":246,"author":{"gitId":"yytan25"},"content":"            default:","lastModifiedDate":"2023-08-26"},{"lineNumber":247,"author":{"gitId":"yytan25"},"content":"                // Shouldn\u0027t reach here","lastModifiedDate":"2023-08-26"},{"lineNumber":248,"author":{"gitId":"yytan25"},"content":"                // Input errors should already be caught in the readInput() method.","lastModifiedDate":"2023-08-26"},{"lineNumber":249,"author":{"gitId":"yytan25"},"content":"                break;","lastModifiedDate":"2023-08-26"},{"lineNumber":250,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":251,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":252,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":253,"author":{"gitId":"yytan25"},"content":"    public String checkUserInput(String taskType, String input) {","lastModifiedDate":"2023-08-24"},{"lineNumber":254,"author":{"gitId":"yytan25"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":255,"author":{"gitId":"yytan25"},"content":"        System.out.printf(\"Input %s %s.%n\", taskType, input);","lastModifiedDate":"2023-08-24"},{"lineNumber":256,"author":{"gitId":"yytan25"},"content":"        String message \u003d sc.nextLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":257,"author":{"gitId":"yytan25"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":258,"author":{"gitId":"yytan25"},"content":"            if (!checkValidTask(message)) {","lastModifiedDate":"2023-08-24"},{"lineNumber":259,"author":{"gitId":"yytan25"},"content":"                if (taskType.equals(\"deadline\") \u0026\u0026","lastModifiedDate":"2023-08-31"},{"lineNumber":260,"author":{"gitId":"yytan25"},"content":"                        input.equals(\"due time (Optional, Required format: HH:MM)\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":261,"author":{"gitId":"yytan25"},"content":"                    return \"23:59\";","lastModifiedDate":"2023-08-31"},{"lineNumber":262,"author":{"gitId":"yytan25"},"content":"                } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":263,"author":{"gitId":"yytan25"},"content":"                    System.out.printf(\"The %s %s cannot be empty.%n\", taskType, input);","lastModifiedDate":"2023-08-24"},{"lineNumber":264,"author":{"gitId":"yytan25"},"content":"                    printEndOfOperation();","lastModifiedDate":"2023-08-24"},{"lineNumber":265,"author":{"gitId":"yytan25"},"content":"                    return null;","lastModifiedDate":"2023-08-24"},{"lineNumber":266,"author":{"gitId":"yytan25"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":267,"author":{"gitId":"yytan25"},"content":"            } else if (checkDuplicates(message)) {","lastModifiedDate":"2023-08-24"},{"lineNumber":268,"author":{"gitId":"yytan25"},"content":"                System.out.printf(\"Task %s already exists.%n\", message);","lastModifiedDate":"2023-08-24"},{"lineNumber":269,"author":{"gitId":"yytan25"},"content":"                printEndOfOperation();","lastModifiedDate":"2023-08-24"},{"lineNumber":270,"author":{"gitId":"yytan25"},"content":"                return null;","lastModifiedDate":"2023-08-24"},{"lineNumber":271,"author":{"gitId":"yytan25"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":272,"author":{"gitId":"yytan25"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":273,"author":{"gitId":"yytan25"},"content":"            System.out.printf(\"Invalid date or time format. Please try again.%n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":274,"author":{"gitId":"yytan25"},"content":"            printEndOfOperation();","lastModifiedDate":"2023-08-31"},{"lineNumber":275,"author":{"gitId":"yytan25"},"content":"            return null;","lastModifiedDate":"2023-08-31"},{"lineNumber":276,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":277,"author":{"gitId":"yytan25"},"content":"        return message;","lastModifiedDate":"2023-08-24"},{"lineNumber":278,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":279,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":280,"author":{"gitId":"yytan25"},"content":"    public void createTask() {","lastModifiedDate":"2023-08-24"},{"lineNumber":281,"author":{"gitId":"yytan25"},"content":"        String details \u003d checkUserInput(\"task\", \"details\");","lastModifiedDate":"2023-08-24"},{"lineNumber":282,"author":{"gitId":"yytan25"},"content":"        if (details !\u003d null) {","lastModifiedDate":"2023-08-24"},{"lineNumber":283,"author":{"gitId":"yytan25"},"content":"            tasks.add(new Task(details));","lastModifiedDate":"2023-08-24"},{"lineNumber":284,"author":{"gitId":"yytan25"},"content":"            numOfTasks++;","lastModifiedDate":"2023-08-24"},{"lineNumber":285,"author":{"gitId":"yytan25"},"content":"            System.out.printf(\"Don\u0027t expect me to %s for you!%n\", details);","lastModifiedDate":"2023-08-24"},{"lineNumber":286,"author":{"gitId":"yytan25"},"content":"            printEndOfOperation();","lastModifiedDate":"2023-08-24"},{"lineNumber":287,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":288,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":289,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":290,"author":{"gitId":"yytan25"},"content":"    public void createToDo() {","lastModifiedDate":"2023-08-24"},{"lineNumber":291,"author":{"gitId":"yytan25"},"content":"        String details \u003d checkUserInput(\"todo\", \"details\");","lastModifiedDate":"2023-08-24"},{"lineNumber":292,"author":{"gitId":"yytan25"},"content":"        if (details !\u003d null) {","lastModifiedDate":"2023-08-24"},{"lineNumber":293,"author":{"gitId":"yytan25"},"content":"            tasks.add(new ToDo(details));","lastModifiedDate":"2023-08-24"},{"lineNumber":294,"author":{"gitId":"yytan25"},"content":"            numOfTasks++;","lastModifiedDate":"2023-08-24"},{"lineNumber":295,"author":{"gitId":"yytan25"},"content":"            System.out.printf(\"Stop talking to me! Go and %s!%n\", details);","lastModifiedDate":"2023-08-24"},{"lineNumber":296,"author":{"gitId":"yytan25"},"content":"            printEndOfOperation();","lastModifiedDate":"2023-08-24"},{"lineNumber":297,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":298,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":299,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":300,"author":{"gitId":"yytan25"},"content":"    public void createDeadline() {","lastModifiedDate":"2023-08-24"},{"lineNumber":301,"author":{"gitId":"yytan25"},"content":"        String details \u003d checkUserInput(\"deadline\",\"details\");","lastModifiedDate":"2023-08-24"},{"lineNumber":302,"author":{"gitId":"yytan25"},"content":"        if (details \u003d\u003d null) {","lastModifiedDate":"2023-08-24"},{"lineNumber":303,"author":{"gitId":"yytan25"},"content":"            return;","lastModifiedDate":"2023-08-24"},{"lineNumber":304,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":305,"author":{"gitId":"yytan25"},"content":"        LocalDate dueDate \u003d LocalDate.parse(checkUserInput(\"deadline\",","lastModifiedDate":"2023-08-31"},{"lineNumber":306,"author":{"gitId":"yytan25"},"content":"                \"due date (Required format: YYYY-MM-DD)\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":307,"author":{"gitId":"yytan25"},"content":"        LocalTime dueTime \u003d LocalTime.parse(checkUserInput(\"deadline\",","lastModifiedDate":"2023-08-31"},{"lineNumber":308,"author":{"gitId":"yytan25"},"content":"                \"due time (Optional, Required format: HH:MM)\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":309,"author":{"gitId":"yytan25"},"content":"        LocalDateTime due \u003d dueTime.atDate(dueDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":310,"author":{"gitId":"yytan25"},"content":"        tasks.add(new Deadline(details, due));","lastModifiedDate":"2023-08-24"},{"lineNumber":311,"author":{"gitId":"yytan25"},"content":"        numOfTasks++;","lastModifiedDate":"2023-08-24"},{"lineNumber":312,"author":{"gitId":"yytan25"},"content":"        System.out.printf(\"Just saying, better %s now.%n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":313,"author":{"gitId":"yytan25"},"content":"                \"Not like it\u0027s my problem if you don\u0027t.%n\", details);","lastModifiedDate":"2023-08-24"},{"lineNumber":314,"author":{"gitId":"yytan25"},"content":"        printEndOfOperation();","lastModifiedDate":"2023-08-24"},{"lineNumber":315,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":316,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":317,"author":{"gitId":"yytan25"},"content":"    public void createEvent() {","lastModifiedDate":"2023-08-24"},{"lineNumber":318,"author":{"gitId":"yytan25"},"content":"        String details \u003d checkUserInput(\"event\", \"details\");","lastModifiedDate":"2023-08-24"},{"lineNumber":319,"author":{"gitId":"yytan25"},"content":"        if (details \u003d\u003d null) {","lastModifiedDate":"2023-08-24"},{"lineNumber":320,"author":{"gitId":"yytan25"},"content":"            return;","lastModifiedDate":"2023-08-24"},{"lineNumber":321,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":322,"author":{"gitId":"yytan25"},"content":"        LocalDate startDate \u003d LocalDate.parse(checkUserInput(\"event\",","lastModifiedDate":"2023-08-31"},{"lineNumber":323,"author":{"gitId":"yytan25"},"content":"                \"start date (Required format: YYYY-MM-DD)\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":324,"author":{"gitId":"yytan25"},"content":"        LocalTime startTime \u003d LocalTime.parse(checkUserInput(\"event\",","lastModifiedDate":"2023-08-31"},{"lineNumber":325,"author":{"gitId":"yytan25"},"content":"                \"start time (Required format: HH:MM)\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":326,"author":{"gitId":"yytan25"},"content":"        LocalDate endDate \u003d LocalDate.parse(checkUserInput(\"event\",","lastModifiedDate":"2023-08-31"},{"lineNumber":327,"author":{"gitId":"yytan25"},"content":"                \"end date (Required format: YYYY-MM-DD)\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":328,"author":{"gitId":"yytan25"},"content":"        LocalTime endTime \u003d LocalTime.parse(checkUserInput(\"event\",","lastModifiedDate":"2023-08-31"},{"lineNumber":329,"author":{"gitId":"yytan25"},"content":"                \"end time (Required format: HH:MM)\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":330,"author":{"gitId":"yytan25"},"content":"        LocalDateTime start \u003d startTime.atDate(startDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":331,"author":{"gitId":"yytan25"},"content":"        LocalDateTime end \u003d endTime.atDate(endDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":332,"author":{"gitId":"yytan25"},"content":"        tasks.add(new Event(details, start, end));","lastModifiedDate":"2023-08-24"},{"lineNumber":333,"author":{"gitId":"yytan25"},"content":"        numOfTasks++;","lastModifiedDate":"2023-08-24"},{"lineNumber":334,"author":{"gitId":"yytan25"},"content":"        System.out.printf(\"Wow, you have a %s at %s?%n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":335,"author":{"gitId":"yytan25"},"content":"                \"Uhh, n-not like I wanna join you!%n\", details, start);","lastModifiedDate":"2023-08-24"},{"lineNumber":336,"author":{"gitId":"yytan25"},"content":"        printEndOfOperation();","lastModifiedDate":"2023-08-24"},{"lineNumber":337,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":338,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":339,"author":{"gitId":"yytan25"},"content":"    public void list() {","lastModifiedDate":"2023-08-20"},{"lineNumber":340,"author":{"gitId":"yytan25"},"content":"        System.out.printf(\"You have %d tasks. (%d complete, %d incomplete)%n\",","lastModifiedDate":"2023-08-21"},{"lineNumber":341,"author":{"gitId":"yytan25"},"content":"                numOfTasks, numOfCompletedTasks, numOfTasks - numOfCompletedTasks);","lastModifiedDate":"2023-08-21"},{"lineNumber":342,"author":{"gitId":"yytan25"},"content":"        for (int i \u003d 0; i \u003c numOfTasks; i++) {","lastModifiedDate":"2023-08-20"},{"lineNumber":343,"author":{"gitId":"yytan25"},"content":"            System.out.printf(\"%d. \" + tasks.get(i).toString()","lastModifiedDate":"2023-08-20"},{"lineNumber":344,"author":{"gitId":"yytan25"},"content":"                    + \"%n\", i + 1);","lastModifiedDate":"2023-08-20"},{"lineNumber":345,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":346,"author":{"gitId":"yytan25"},"content":"        if (numOfCompletedTasks \u003d\u003d numOfTasks) {","lastModifiedDate":"2023-08-21"},{"lineNumber":347,"author":{"gitId":"yytan25"},"content":"            System.out.println(\"You\u0027ve completed all your tasks. Good for you.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":348,"author":{"gitId":"yytan25"},"content":"        } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":349,"author":{"gitId":"yytan25"},"content":"            System.out.println(\"Don\u0027t expect me to remember them for you!\");","lastModifiedDate":"2023-08-20"},{"lineNumber":350,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":351,"author":{"gitId":"yytan25"},"content":"        printEndOfOperation();","lastModifiedDate":"2023-08-24"},{"lineNumber":352,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":353,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":354,"author":{"gitId":"yytan25"},"content":"    public void markAsComplete() {","lastModifiedDate":"2023-08-20"},{"lineNumber":355,"author":{"gitId":"yytan25"},"content":"        if (this.numOfTasks \u003d\u003d 0) {","lastModifiedDate":"2023-08-20"},{"lineNumber":356,"author":{"gitId":"yytan25"},"content":"            System.out.println(\"No tasks to mark.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":357,"author":{"gitId":"yytan25"},"content":"            System.out.println(\"Please create a task first.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":358,"author":{"gitId":"yytan25"},"content":"            this.consecInvalidInputCount++;","lastModifiedDate":"2023-08-24"},{"lineNumber":359,"author":{"gitId":"yytan25"},"content":"            printHorizontalLine();","lastModifiedDate":"2023-08-20"},{"lineNumber":360,"author":{"gitId":"yytan25"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":361,"author":{"gitId":"yytan25"},"content":"            Integer taskNumber \u003d this.launchConfirmationScreen(\"mark as complete\");","lastModifiedDate":"2023-08-24"},{"lineNumber":362,"author":{"gitId":"yytan25"},"content":"            if (taskNumber !\u003d null) {","lastModifiedDate":"2023-08-24"},{"lineNumber":363,"author":{"gitId":"yytan25"},"content":"                Task task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2023-08-20"},{"lineNumber":364,"author":{"gitId":"yytan25"},"content":"                if (!task.isCompleted) {","lastModifiedDate":"2023-08-20"},{"lineNumber":365,"author":{"gitId":"yytan25"},"content":"                    task.setCompleted();","lastModifiedDate":"2023-08-20"},{"lineNumber":366,"author":{"gitId":"yytan25"},"content":"                    this.numOfCompletedTasks++;","lastModifiedDate":"2023-08-21"},{"lineNumber":367,"author":{"gitId":"yytan25"},"content":"                    System.out.printf(\"Task %d set as complete.%n\", taskNumber);","lastModifiedDate":"2023-08-20"},{"lineNumber":368,"author":{"gitId":"yytan25"},"content":"                } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":369,"author":{"gitId":"yytan25"},"content":"                    System.out.printf(\"Task %d is already complete.%n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":370,"author":{"gitId":"yytan25"},"content":"                            \"Stop wasting my time!%n\", taskNumber);","lastModifiedDate":"2023-08-21"},{"lineNumber":371,"author":{"gitId":"yytan25"},"content":"                }","lastModifiedDate":"2023-08-20"},{"lineNumber":372,"author":{"gitId":"yytan25"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":373,"author":{"gitId":"yytan25"},"content":"            printEndOfOperation();","lastModifiedDate":"2023-08-24"},{"lineNumber":374,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":375,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":376,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":377,"author":{"gitId":"yytan25"},"content":"    public void markAsIncomplete() {","lastModifiedDate":"2023-08-20"},{"lineNumber":378,"author":{"gitId":"yytan25"},"content":"        if (this.numOfCompletedTasks \u003d\u003d 0) {","lastModifiedDate":"2023-08-24"},{"lineNumber":379,"author":{"gitId":"yytan25"},"content":"            System.out.println(\"No tasks to unmark.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":380,"author":{"gitId":"yytan25"},"content":"            if (this.numOfTasks !\u003d 0) {","lastModifiedDate":"2023-08-24"},{"lineNumber":381,"author":{"gitId":"yytan25"},"content":"                System.out.println(\"You have no completed tasks.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":382,"author":{"gitId":"yytan25"},"content":"            } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":383,"author":{"gitId":"yytan25"},"content":"                System.out.println(\"Please create a task first.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":384,"author":{"gitId":"yytan25"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":385,"author":{"gitId":"yytan25"},"content":"            this.consecInvalidInputCount++;","lastModifiedDate":"2023-08-24"},{"lineNumber":386,"author":{"gitId":"yytan25"},"content":"            printHorizontalLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":387,"author":{"gitId":"yytan25"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":388,"author":{"gitId":"yytan25"},"content":"            Integer taskNumber \u003d this.launchConfirmationScreen(\"mark as incomplete\");","lastModifiedDate":"2023-08-24"},{"lineNumber":389,"author":{"gitId":"yytan25"},"content":"            if (taskNumber !\u003d null) {","lastModifiedDate":"2023-08-24"},{"lineNumber":390,"author":{"gitId":"yytan25"},"content":"                Task task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2023-08-20"},{"lineNumber":391,"author":{"gitId":"yytan25"},"content":"                if (task.isCompleted) {","lastModifiedDate":"2023-08-20"},{"lineNumber":392,"author":{"gitId":"yytan25"},"content":"                    task.setIncomplete();","lastModifiedDate":"2023-08-20"},{"lineNumber":393,"author":{"gitId":"yytan25"},"content":"                    this.numOfCompletedTasks--;","lastModifiedDate":"2023-08-21"},{"lineNumber":394,"author":{"gitId":"yytan25"},"content":"                    System.out.printf(\"Task %d set as incomplete.%n\", taskNumber);","lastModifiedDate":"2023-08-20"},{"lineNumber":395,"author":{"gitId":"yytan25"},"content":"                } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":396,"author":{"gitId":"yytan25"},"content":"                    System.out.printf(\"Task %d is already incomplete.%n\" +","lastModifiedDate":"2023-08-21"},{"lineNumber":397,"author":{"gitId":"yytan25"},"content":"                            \"Stop wasting my time!%n\", taskNumber);","lastModifiedDate":"2023-08-21"},{"lineNumber":398,"author":{"gitId":"yytan25"},"content":"                }","lastModifiedDate":"2023-08-20"},{"lineNumber":399,"author":{"gitId":"yytan25"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":400,"author":{"gitId":"yytan25"},"content":"            printEndOfOperation();","lastModifiedDate":"2023-08-24"},{"lineNumber":401,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":402,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":403,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":404,"author":{"gitId":"yytan25"},"content":"    public void deleteTask() {","lastModifiedDate":"2023-08-24"},{"lineNumber":405,"author":{"gitId":"yytan25"},"content":"        if (this.numOfTasks \u003d\u003d 0) {","lastModifiedDate":"2023-08-24"},{"lineNumber":406,"author":{"gitId":"yytan25"},"content":"            System.out.println(\"No tasks to delete.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":407,"author":{"gitId":"yytan25"},"content":"            System.out.println(\"Please create a task first.\");","lastModifiedDate":"2023-08-24"},{"lineNumber":408,"author":{"gitId":"yytan25"},"content":"            this.consecInvalidInputCount++;","lastModifiedDate":"2023-08-24"},{"lineNumber":409,"author":{"gitId":"yytan25"},"content":"            printHorizontalLine();","lastModifiedDate":"2023-08-24"},{"lineNumber":410,"author":{"gitId":"yytan25"},"content":"        } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":411,"author":{"gitId":"yytan25"},"content":"            Integer taskNumber \u003d this.launchConfirmationScreen(\"delete\");","lastModifiedDate":"2023-08-24"},{"lineNumber":412,"author":{"gitId":"yytan25"},"content":"            if (taskNumber !\u003d null) {","lastModifiedDate":"2023-08-24"},{"lineNumber":413,"author":{"gitId":"yytan25"},"content":"                Task task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":414,"author":{"gitId":"yytan25"},"content":"                if (task.isCompleted) {","lastModifiedDate":"2023-08-24"},{"lineNumber":415,"author":{"gitId":"yytan25"},"content":"                    this.numOfCompletedTasks--;","lastModifiedDate":"2023-08-24"},{"lineNumber":416,"author":{"gitId":"yytan25"},"content":"                }","lastModifiedDate":"2023-08-24"},{"lineNumber":417,"author":{"gitId":"yytan25"},"content":"                tasks.remove(task);","lastModifiedDate":"2023-08-24"},{"lineNumber":418,"author":{"gitId":"yytan25"},"content":"                this.numOfTasks--;","lastModifiedDate":"2023-08-24"},{"lineNumber":419,"author":{"gitId":"yytan25"},"content":"                System.out.printf(\"Task %d deleted successfully.%n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":420,"author":{"gitId":"yytan25"},"content":"                        \"You now have %d tasks.%n\", taskNumber, this.numOfTasks);","lastModifiedDate":"2023-08-24"},{"lineNumber":421,"author":{"gitId":"yytan25"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":422,"author":{"gitId":"yytan25"},"content":"            printEndOfOperation();","lastModifiedDate":"2023-08-24"},{"lineNumber":423,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":424,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":425,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":426,"author":{"gitId":"yytan25"},"content":"    public Integer launchConfirmationScreen(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":427,"author":{"gitId":"yytan25"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-20"},{"lineNumber":428,"author":{"gitId":"yytan25"},"content":"        System.out.printf(\"Please input the task number you wish to %s.%n\",","lastModifiedDate":"2023-08-20"},{"lineNumber":429,"author":{"gitId":"yytan25"},"content":"                message);","lastModifiedDate":"2023-08-20"},{"lineNumber":430,"author":{"gitId":"yytan25"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-08-20"},{"lineNumber":431,"author":{"gitId":"yytan25"},"content":"        for (int i \u003d 0; i \u003c numOfTasks; i++) {","lastModifiedDate":"2023-08-20"},{"lineNumber":432,"author":{"gitId":"yytan25"},"content":"            System.out.printf(\"%d. \" + tasks.get(i).toString()","lastModifiedDate":"2023-08-20"},{"lineNumber":433,"author":{"gitId":"yytan25"},"content":"                    + \"%n\", i + 1);","lastModifiedDate":"2023-08-20"},{"lineNumber":434,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":435,"author":{"gitId":"yytan25"},"content":"        try {","lastModifiedDate":"2023-08-20"},{"lineNumber":436,"author":{"gitId":"yytan25"},"content":"            int taskNumber \u003d sc.nextInt();","lastModifiedDate":"2023-08-24"},{"lineNumber":437,"author":{"gitId":"yytan25"},"content":"            if (taskNumber \u003e numOfTasks || taskNumber \u003c 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":438,"author":{"gitId":"yytan25"},"content":"                System.out.println(\"Request unsuccessful. (reason: invalid task number)\");","lastModifiedDate":"2023-08-24"},{"lineNumber":439,"author":{"gitId":"yytan25"},"content":"                return null;","lastModifiedDate":"2023-08-24"},{"lineNumber":440,"author":{"gitId":"yytan25"},"content":"            } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":441,"author":{"gitId":"yytan25"},"content":"                return taskNumber;","lastModifiedDate":"2023-08-24"},{"lineNumber":442,"author":{"gitId":"yytan25"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":443,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":444,"author":{"gitId":"yytan25"},"content":"        catch (InputMismatchException e) {","lastModifiedDate":"2023-08-20"},{"lineNumber":445,"author":{"gitId":"yytan25"},"content":"            System.out.println(\"Request unsuccessful. (reason: invalid input)\");","lastModifiedDate":"2023-08-24"},{"lineNumber":446,"author":{"gitId":"yytan25"},"content":"            return null;","lastModifiedDate":"2023-08-24"},{"lineNumber":447,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":448,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":449,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":450,"author":{"gitId":"yytan25"},"content":"    public void saveTasksToDisk(String filePath) throws IOException {","lastModifiedDate":"2023-08-26"},{"lineNumber":451,"author":{"gitId":"yytan25"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-08-26"},{"lineNumber":452,"author":{"gitId":"yytan25"},"content":"        BufferedWriter bw \u003d new BufferedWriter(fw);","lastModifiedDate":"2023-08-26"},{"lineNumber":453,"author":{"gitId":"yytan25"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":454,"author":{"gitId":"yytan25"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2023-08-26"},{"lineNumber":455,"author":{"gitId":"yytan25"},"content":"                if (t instanceof ToDo) {","lastModifiedDate":"2023-08-26"},{"lineNumber":456,"author":{"gitId":"yytan25"},"content":"                    bw.write(String.format(\"ToDo-%s-%c\",","lastModifiedDate":"2023-08-26"},{"lineNumber":457,"author":{"gitId":"yytan25"},"content":"                            t.getDetails(),","lastModifiedDate":"2023-08-26"},{"lineNumber":458,"author":{"gitId":"yytan25"},"content":"                            t.isCompleted ? \u0027Y\u0027 : \u0027N\u0027));","lastModifiedDate":"2023-08-26"},{"lineNumber":459,"author":{"gitId":"yytan25"},"content":"                } else if (t instanceof Deadline) {","lastModifiedDate":"2023-08-26"},{"lineNumber":460,"author":{"gitId":"yytan25"},"content":"                    bw.write(String.format(\"Deadline-%s-%c-%s\",","lastModifiedDate":"2023-08-26"},{"lineNumber":461,"author":{"gitId":"yytan25"},"content":"                            t.getDetails(),","lastModifiedDate":"2023-08-26"},{"lineNumber":462,"author":{"gitId":"yytan25"},"content":"                            t.isCompleted ? \u0027Y\u0027 : \u0027N\u0027,","lastModifiedDate":"2023-08-26"},{"lineNumber":463,"author":{"gitId":"yytan25"},"content":"                            ((Deadline) t).due));","lastModifiedDate":"2023-08-26"},{"lineNumber":464,"author":{"gitId":"yytan25"},"content":"                } else if (t instanceof Event) {","lastModifiedDate":"2023-08-26"},{"lineNumber":465,"author":{"gitId":"yytan25"},"content":"                    bw.write(String.format(\"Event-%s-%c-%s-%s\",","lastModifiedDate":"2023-08-26"},{"lineNumber":466,"author":{"gitId":"yytan25"},"content":"                            t.getDetails(),","lastModifiedDate":"2023-08-26"},{"lineNumber":467,"author":{"gitId":"yytan25"},"content":"                            t.isCompleted ? \u0027Y\u0027 : \u0027N\u0027,","lastModifiedDate":"2023-08-26"},{"lineNumber":468,"author":{"gitId":"yytan25"},"content":"                            ((Event) t).start,","lastModifiedDate":"2023-08-26"},{"lineNumber":469,"author":{"gitId":"yytan25"},"content":"                            ((Event) t).end));","lastModifiedDate":"2023-08-26"},{"lineNumber":470,"author":{"gitId":"yytan25"},"content":"                } else {","lastModifiedDate":"2023-08-26"},{"lineNumber":471,"author":{"gitId":"yytan25"},"content":"                    bw.write(String.format(\"Task-%s-%c\",","lastModifiedDate":"2023-08-26"},{"lineNumber":472,"author":{"gitId":"yytan25"},"content":"                            t.getDetails(),","lastModifiedDate":"2023-08-26"},{"lineNumber":473,"author":{"gitId":"yytan25"},"content":"                            t.isCompleted ? \u0027Y\u0027 : \u0027N\u0027));","lastModifiedDate":"2023-08-26"},{"lineNumber":474,"author":{"gitId":"yytan25"},"content":"                }","lastModifiedDate":"2023-08-26"},{"lineNumber":475,"author":{"gitId":"yytan25"},"content":"                bw.newLine();","lastModifiedDate":"2023-08-26"},{"lineNumber":476,"author":{"gitId":"yytan25"},"content":"            }","lastModifiedDate":"2023-08-26"},{"lineNumber":477,"author":{"gitId":"yytan25"},"content":"            bw.flush();","lastModifiedDate":"2023-08-26"},{"lineNumber":478,"author":{"gitId":"yytan25"},"content":"            bw.close();","lastModifiedDate":"2023-08-26"},{"lineNumber":479,"author":{"gitId":"yytan25"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":480,"author":{"gitId":"yytan25"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-08-26"},{"lineNumber":481,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":482,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":483,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":484,"author":{"gitId":"yytan25"},"content":"    public void exit(int status) throws IOException {","lastModifiedDate":"2023-08-26"},{"lineNumber":485,"author":{"gitId":"yytan25"},"content":"        this.saveTasksToDisk(\"./data/tasks.txt\");","lastModifiedDate":"2023-08-26"},{"lineNumber":486,"author":{"gitId":"yytan25"},"content":"        if (status \u003d\u003d 1) {","lastModifiedDate":"2023-08-26"},{"lineNumber":487,"author":{"gitId":"yytan25"},"content":"            System.out.printf(\"I\u0027ve had enough of your nonsense!%n\" +","lastModifiedDate":"2023-08-24"},{"lineNumber":488,"author":{"gitId":"yytan25"},"content":"                    \"Don\u0027t let me see you again!%n\");","lastModifiedDate":"2023-08-24"},{"lineNumber":489,"author":{"gitId":"yytan25"},"content":"        } else if (status \u003d\u003d 0) {","lastModifiedDate":"2023-08-26"},{"lineNumber":490,"author":{"gitId":"yytan25"},"content":"            System.out.println(\"Finally I can rest. Bye!\");","lastModifiedDate":"2023-08-24"},{"lineNumber":491,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":492,"author":{"gitId":"yytan25"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-08-20"},{"lineNumber":493,"author":{"gitId":"yytan25"},"content":"        System.exit(0);","lastModifiedDate":"2023-08-24"},{"lineNumber":494,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":495,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":496,"author":{"gitId":"yytan25"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-08-26"},{"lineNumber":497,"author":{"gitId":"yytan25"},"content":"        new Duke();","lastModifiedDate":"2023-08-19"},{"lineNumber":498,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":499,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"yytan25":496,"-":3}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"yytan25"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"yytan25"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"yytan25"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"yytan25"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"yytan25"},"content":"    public Event(String details, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"yytan25"},"content":"        super(details);","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"yytan25"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"yytan25"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"yytan25"},"content":"    public Event(String details, boolean isCompleted, LocalDateTime start,","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"yytan25"},"content":"                 LocalDateTime end) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"yytan25"},"content":"        super(details, isCompleted);","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"yytan25"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-26"},{"lineNumber":18,"author":{"gitId":"yytan25"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-26"},{"lineNumber":19,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":20,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":21,"author":{"gitId":"yytan25"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"yytan25"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"yytan25"},"content":"        SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd MMM yyyy\");","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"yytan25"},"content":"        String startDate \u003d dateFormatter.format(this.start.toLocalDate());","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"yytan25"},"content":"        String endDate \u003d dateFormatter.format(this.start.toLocalDate());","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"yytan25"},"content":"        String startTime \u003d this.start.toLocalTime().toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"yytan25"},"content":"        String endTime \u003d this.end.toLocalTime().toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"yytan25"},"content":"        return \"[E]\" + super.toString() + String.format(","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"yytan25"},"content":"                \" (from: %s to: %s)\",","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"yytan25"},"content":"                startDate + \" \" + startTime,","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"yytan25"},"content":"                endDate + \" \" + endTime);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"yytan25"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"yytan25":33}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"public class Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"yytan25"},"content":"    protected String details;","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"yytan25"},"content":"    protected boolean isCompleted;","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"yytan25"},"content":"    public Task(String details) {","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"yytan25"},"content":"        this.details \u003d details;","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"yytan25"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"yytan25"},"content":"    public Task(String details, boolean isCompleted) {","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"yytan25"},"content":"        this.details \u003d details;","lastModifiedDate":"2023-08-26"},{"lineNumber":13,"author":{"gitId":"yytan25"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2023-08-26"},{"lineNumber":14,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"yytan25"},"content":"    public void setCompleted() {","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"yytan25"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"yytan25"},"content":"    public void setIncomplete() {","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"yytan25"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"yytan25"},"content":"    protected String getDetails() {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"yytan25"},"content":"        return this.details;","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":28,"author":{"gitId":"yytan25"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"yytan25"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"yytan25"},"content":"        if (this.isCompleted) {","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"yytan25"},"content":"            return \"[X] \" + this.details;","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"yytan25"},"content":"        } else {","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"yytan25"},"content":"            return \"[ ] \" + this.details;","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"yytan25"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"yytan25"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"yytan25":36}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"yytan25"},"content":"    public ToDo(String details) {","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"yytan25"},"content":"        super(details);","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"yytan25"},"content":"    public ToDo(String details, boolean isCompleted) {","lastModifiedDate":"2023-08-26"},{"lineNumber":9,"author":{"gitId":"yytan25"},"content":"        super(details, isCompleted);","lastModifiedDate":"2023-08-26"},{"lineNumber":10,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":11,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-26"},{"lineNumber":12,"author":{"gitId":"yytan25"},"content":"    @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"yytan25"},"content":"    public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"yytan25"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"yytan25"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":16,"author":{"gitId":"yytan25"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"yytan25":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yytan25"},"content":"deadline","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"yytan25"},"content":"finish software engineering assignment","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"yytan25"},"content":"fri 2359","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"yytan25"},"content":"event","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"yytan25"},"content":"party at Jon\u0027s","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"yytan25"},"content":"fri 8pm","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"yytan25"},"content":"sat 2am","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"yytan25"},"content":"list","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"yytan25":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"yytan25"},"content":"echo \"The output will be redirected to stdoutput.txt\"","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"yytan25"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yytan25":2,"-":21}}]
