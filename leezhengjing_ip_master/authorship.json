[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"leezhengjing"},"content":"# bee.Bee project template","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"leezhengjing"},"content":"3. After that, locate the `src/main/java/bee.Bee.java` file, right-click it, and choose `Run bee.Bee.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"leezhengjing":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"leezhengjing"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"leezhengjing"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"leezhengjing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"leezhengjing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"leezhengjing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"leezhengjing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"leezhengjing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"leezhengjing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"leezhengjing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"leezhengjing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"leezhengjing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"leezhengjing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"leezhengjing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"leezhengjing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"leezhengjing"},"content":"    mainClass.set(\"bee.Launcher\")","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"leezhengjing"},"content":"    archiveBaseName \u003d \"bee\"","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"leezhengjing"},"content":"checkstyle {","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"leezhengjing"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"leezhengjing"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"leezhengjing":22,"-":40}},{"path":"data/bee.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"leezhengjing"},"content":"[T][ ] YOUR MOM","lastModifiedDate":"2023-08-30"},{"lineNumber":2,"author":{"gitId":"leezhengjing"},"content":"[D][ ] YOUR DAD (by: Aug 30 2023 23:59)","lastModifiedDate":"2023-08-30"},{"lineNumber":3,"author":{"gitId":"leezhengjing"},"content":"[T][ ] YOUR MOM","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"leezhengjing"},"content":"[T][X] YOUR DADDY","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"leezhengjing"},"content":"[T][ ] YOUR DAD","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"leezhengjing"},"content":"[T][ ] finish IP ","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"leezhengjing":6}},{"path":"src/main/java/bee/Bee.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhengjing"},"content":"package bee;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"leezhengjing"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"leezhengjing"},"content":"import bee.ui.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"leezhengjing"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"leezhengjing"},"content":" * The main class representing the chatbot application.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"leezhengjing"},"content":" * Orchestrates the initialization, execution, and termination of the chatbot.","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"leezhengjing"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"leezhengjing"},"content":"public class Bee {","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"leezhengjing"},"content":"    private static final String DATA_FILE_PATH \u003d \"./data/bee.txt\";","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"leezhengjing"},"content":"    private Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"leezhengjing"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"leezhengjing"},"content":"    private Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"leezhengjing"},"content":"     * Constructs a new Bee chatbot instance.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"leezhengjing"},"content":"     * Initializes the user interface, storage, and task list based on the provided","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"leezhengjing"},"content":"     * data file path.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"leezhengjing"},"content":"     * @param filePath The path to the data file for storing tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"leezhengjing"},"content":"    public Bee(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"leezhengjing"},"content":"        try {","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"leezhengjing"},"content":"            ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"leezhengjing"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"leezhengjing"},"content":"            tasks \u003d new TaskList(storage.loadTasksFromFile(), storage);","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"leezhengjing"},"content":"        } catch (BeeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"leezhengjing"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"leezhengjing"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-08-30"},{"lineNumber":33,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"leezhengjing"},"content":"     * Constructs a new Bee chatbot instance.","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"leezhengjing"},"content":"    public Bee() {","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"leezhengjing"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"leezhengjing"},"content":"            ui \u003d new Ui();","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"leezhengjing"},"content":"            storage \u003d new Storage(DATA_FILE_PATH);","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"leezhengjing"},"content":"            tasks \u003d new TaskList(storage.loadTasksFromFile(), storage);","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"leezhengjing"},"content":"        } catch (BeeException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"leezhengjing"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"leezhengjing"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"leezhengjing"},"content":"     * Starts the execution of the chatbot.","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"leezhengjing"},"content":"     * Displays a greeting, reads user input, and processes commands until the","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"leezhengjing"},"content":"     * chatbot is terminated.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"leezhengjing"},"content":"    public void run() {","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"leezhengjing"},"content":"        ui.greet();","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"leezhengjing"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"leezhengjing"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":58,"author":{"gitId":"leezhengjing"},"content":"        scanner.close();","lastModifiedDate":"2023-08-30"},{"lineNumber":59,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":60,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"leezhengjing"},"content":"     * Parses the user\u0027s response and returns Bee\u0027s output","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"leezhengjing"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"leezhengjing"},"content":"        return Parser.parseUserCommand(input, tasks, storage, ui);","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"leezhengjing"},"content":"     * The entry point of the chatbot application.","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"leezhengjing"},"content":"     * Creates a new Bee instance and starts its execution.","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"leezhengjing"},"content":"     * @param args The command line arguments (not used in this case).","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"leezhengjing"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"leezhengjing"},"content":"        new Bee(DATA_FILE_PATH).run();","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"leezhengjing"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"leezhengjing":76}},{"path":"src/main/java/bee/BeeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhengjing"},"content":"package bee;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"leezhengjing"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"leezhengjing"},"content":" * Custom exception class for handling exceptions specific to the Bee chatbot.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"leezhengjing"},"content":" * Extends the base class Exception to add custom behavior and formatting for error messages.","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"leezhengjing"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"leezhengjing"},"content":"public class BeeException extends Exception {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"leezhengjing"},"content":"     * Constructs a BeeException with the specified error message.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"leezhengjing"},"content":"     * @param message The error message associated with the exception.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"leezhengjing"},"content":"    public BeeException(String message) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"leezhengjing"},"content":"        super(message);","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"leezhengjing"},"content":"     * Converts the BeeException to a formatted string representation.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"leezhengjing"},"content":"     * @return Formatted string representation of the BeeException.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"leezhengjing"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"leezhengjing"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"leezhengjing"},"content":"        return \"    _  _\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"leezhengjing"},"content":"                + \"   | )/ )\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"leezhengjing"},"content":"                + \"\\\\\\\\ |//,\u0027 __\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"leezhengjing"},"content":"                + \"(\\\")(_)-\\\"()))\u003d-\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"leezhengjing"},"content":"                + \"   (\\\\\\\\ \"","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"leezhengjing"},"content":"                + super.getMessage();","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"leezhengjing"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"leezhengjing":32}},{"path":"src/main/java/bee/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhengjing"},"content":"package bee;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"leezhengjing"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":4,"author":{"gitId":"leezhengjing"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-30"},{"lineNumber":5,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":6,"author":{"gitId":"leezhengjing"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"leezhengjing"},"content":" * Represents a task with a deadline, including a date and time.","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"leezhengjing"},"content":" * Extends the base class Task and adds functionality for handling deadlines.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"leezhengjing"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"leezhengjing"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"leezhengjing"},"content":"    private LocalDateTime localDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"leezhengjing"},"content":"     * Constructor for creating a new Deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"leezhengjing"},"content":"     * @param description   Description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"leezhengjing"},"content":"     * @param localDateTime Deadline date and time.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"leezhengjing"},"content":"    public Deadline(String description, LocalDateTime localDateTime) {","lastModifiedDate":"2023-08-30"},{"lineNumber":20,"author":{"gitId":"leezhengjing"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"leezhengjing"},"content":"        assert description !\u003d null : \"Description cannot be null.\"; // Assumption: Description should not be null","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"leezhengjing"},"content":"        assert localDateTime !\u003d null : \"LocalDateTime cannot be null.\"; // Assumption: LocalDateTime should not be null","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"leezhengjing"},"content":"        this.localDateTime \u003d localDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":24,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"leezhengjing"},"content":"     * Constructor for creating a new Deadline task with an additional flag for task completion status.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"leezhengjing"},"content":"     * @param description   Description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"leezhengjing"},"content":"     * @param localDateTime Deadline date and time.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"leezhengjing"},"content":"     * @param isDone        Completion status of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"leezhengjing"},"content":"    public Deadline(String description, LocalDateTime localDateTime, Boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":34,"author":{"gitId":"leezhengjing"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":35,"author":{"gitId":"leezhengjing"},"content":"        assert description !\u003d null : \"Description cannot be null.\"; // Assumption: Description should not be null","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"leezhengjing"},"content":"        assert localDateTime !\u003d null : \"LocalDateTime cannot be null.\"; // Assumption: LocalDateTime should not be null","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"leezhengjing"},"content":"        this.localDateTime \u003d localDateTime;","lastModifiedDate":"2023-08-30"},{"lineNumber":38,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":39,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":40,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"leezhengjing"},"content":"     * Converts the Deadline task to a formatted string representation.","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"leezhengjing"},"content":"     * @return Formatted string representation of the Deadline task.","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"leezhengjing"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"leezhengjing"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"leezhengjing"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2023-08-30"},{"lineNumber":48,"author":{"gitId":"leezhengjing"},"content":"                + this.localDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";","lastModifiedDate":"2023-08-30"},{"lineNumber":49,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"leezhengjing"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"leezhengjing":50}},{"path":"src/main/java/bee/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhengjing"},"content":"package bee;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"leezhengjing"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"leezhengjing"},"content":" * Represents an event task with start and end dates.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"leezhengjing"},"content":" * Extends the base class Task and provides functionality for handling events.","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"leezhengjing"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"leezhengjing"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"leezhengjing"},"content":"    private String startDate;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"leezhengjing"},"content":"    private String endDate;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"leezhengjing"},"content":"     * Constructs a new Event task with start and end dates.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"leezhengjing"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"leezhengjing"},"content":"     * @param startDate   Start date of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"leezhengjing"},"content":"     * @param endDate     End date of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"leezhengjing"},"content":"    public Event(String description, String startDate, String endDate) {","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"leezhengjing"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"leezhengjing"},"content":"        assert description !\u003d null : \"Description cannot be null.\"; // Assumption: Description should not be null","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"leezhengjing"},"content":"        assert startDate !\u003d null : \"StartDate cannot be null.\"; // Assumption: StartDate should not be null","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"leezhengjing"},"content":"        assert endDate !\u003d null : \"EndDate cannot be null.\"; // Assumption: EndDate should not be null","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"leezhengjing"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"leezhengjing"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"leezhengjing"},"content":"     * Constructs a new Event task with start and end dates and an additional completion status.","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"leezhengjing"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"leezhengjing"},"content":"     * @param startDate   Start date of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"leezhengjing"},"content":"     * @param endDate     End date of the event.","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"leezhengjing"},"content":"     * @param isDone      Completion status of the event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"leezhengjing"},"content":"    public Event(String description, String startDate, String endDate, Boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":36,"author":{"gitId":"leezhengjing"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-30"},{"lineNumber":37,"author":{"gitId":"leezhengjing"},"content":"        assert description !\u003d null : \"Description cannot be null.\"; // Assumption: Description should not be null","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"leezhengjing"},"content":"        assert startDate !\u003d null : \"StartDate cannot be null.\"; // Assumption: StartDate should not be null","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"leezhengjing"},"content":"        assert endDate !\u003d null : \"EndDate cannot be null.\"; // Assumption: EndDate should not be null","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"leezhengjing"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":41,"author":{"gitId":"leezhengjing"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-08-30"},{"lineNumber":42,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":43,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":44,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"leezhengjing"},"content":"     * Converts the Event task to a formatted string representation.","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"leezhengjing"},"content":"     * @return Formatted string representation of the Event task.","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"leezhengjing"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"leezhengjing"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"leezhengjing"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startDate + \" to: \" + endDate + \")\";","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"leezhengjing"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"leezhengjing":53}},{"path":"src/main/java/bee/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhengjing"},"content":"package bee;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"leezhengjing"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"leezhengjing"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"leezhengjing"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"leezhengjing"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"leezhengjing"},"content":"public class Launcher {","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"leezhengjing"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"leezhengjing"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"leezhengjing"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"leezhengjing":12}},{"path":"src/main/java/bee/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhengjing"},"content":"package bee;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"leezhengjing"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"leezhengjing"},"content":"import bee.ui.MainWindow;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"leezhengjing"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"leezhengjing"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"leezhengjing"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"leezhengjing"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"leezhengjing"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"leezhengjing"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"leezhengjing"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"leezhengjing"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"leezhengjing"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"leezhengjing"},"content":"    private Bee bee \u003d new Bee();","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"leezhengjing"},"content":"    @Override","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"leezhengjing"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"leezhengjing"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"leezhengjing"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"leezhengjing"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"leezhengjing"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"leezhengjing"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"leezhengjing"},"content":"            assert fxmlLoader !\u003d null : \"FXMLLoader failed to load MainWindow.fxml\";","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"leezhengjing"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBee(bee);","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"leezhengjing"},"content":"            stage.show();","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"leezhengjing"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"leezhengjing"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"leezhengjing"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"leezhengjing":35}},{"path":"src/main/java/bee/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhengjing"},"content":"package bee;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"leezhengjing"},"content":"import bee.ui.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"leezhengjing"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"leezhengjing"},"content":" * Handles the parsing of user commands and delegates the corresponding actions.","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"leezhengjing"},"content":" * Provides methods for parsing user input and executing actions based on the","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"leezhengjing"},"content":" * input.","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"leezhengjing"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"leezhengjing"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"leezhengjing"},"content":"     * Parses the user\u0027s command, executes the corresponding action, and handles","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"leezhengjing"},"content":"     * exceptions.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"leezhengjing"},"content":"     * @param userInput The user\u0027s input command.","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"leezhengjing"},"content":"     * @param tasks     The TaskList instance to manage tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"leezhengjing"},"content":"     * @param storage   The Storage instance to manage data storage.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"leezhengjing"},"content":"     * @param ui        The Ui instance to handle user interface.","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"leezhengjing"},"content":"     * @return True if the chatbot should continue running, false if it should exit.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"leezhengjing"},"content":"    public static String parseUserCommand(String userInput, TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"leezhengjing"},"content":"        assert userInput !\u003d null : \"User input cannot be null.\"; // Assumption: User input should not be null","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"leezhengjing"},"content":"        assert tasks !\u003d null : \"TaskList object cannot be null.\"; // Assumption: TaskList should not be null","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"leezhengjing"},"content":"        assert storage !\u003d null : \"Storage object cannot be null.\"; // Assumption: Storage should not be null","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"leezhengjing"},"content":"        assert ui !\u003d null : \"Ui object cannot be null.\"; // Assumption: Ui should not be null","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"leezhengjing"},"content":"        String[] splitInput \u003d userInput.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"leezhengjing"},"content":"        String command \u003d splitInput[0].toLowerCase();","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"leezhengjing"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"leezhengjing"},"content":"            switch (command) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"leezhengjing"},"content":"            case \"bye\":","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"leezhengjing"},"content":"                return ui.farewell();","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"leezhengjing"},"content":"            case \"list\":","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"leezhengjing"},"content":"                return tasks.listAllTasks();","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"leezhengjing"},"content":"            case \"t\": // \u0027t\u0027 as an alias for \u0027todo\u0027","lastModifiedDate":"2023-09-15"},{"lineNumber":37,"author":{"gitId":"leezhengjing"},"content":"            case \"todo\":","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"leezhengjing"},"content":"                return tasks.createTask(TaskClass.TODO, userInput);","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"leezhengjing"},"content":"            case \"d\": // \u0027d\u0027 as an alias for \u0027deadline\u0027","lastModifiedDate":"2023-09-15"},{"lineNumber":40,"author":{"gitId":"leezhengjing"},"content":"            case \"deadline\":","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"leezhengjing"},"content":"                return tasks.createTask(TaskClass.DEADLINE, userInput);","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"leezhengjing"},"content":"            case \"e\": // \u0027e\u0027 as an alias for \u0027event\u0027","lastModifiedDate":"2023-09-15"},{"lineNumber":43,"author":{"gitId":"leezhengjing"},"content":"            case \"event\":","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"leezhengjing"},"content":"                return tasks.createTask(TaskClass.EVENT, userInput);","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"leezhengjing"},"content":"            case \"m\": // \u0027m\u0027 as an alias for \u0027mark\u0027","lastModifiedDate":"2023-09-15"},{"lineNumber":46,"author":{"gitId":"leezhengjing"},"content":"            case \"mark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"leezhengjing"},"content":"                return tasks.updateTask(TaskAction.MARK, userInput);","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"leezhengjing"},"content":"            case \"u\": // \u0027u\u0027 as an alias for \u0027unmark\u0027","lastModifiedDate":"2023-09-15"},{"lineNumber":49,"author":{"gitId":"leezhengjing"},"content":"            case \"unmark\":","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"leezhengjing"},"content":"                return tasks.updateTask(TaskAction.UNMARK, userInput);","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"leezhengjing"},"content":"            case \"del\": // \u0027del\u0027 as an alias for \u0027delete\u0027","lastModifiedDate":"2023-09-15"},{"lineNumber":52,"author":{"gitId":"leezhengjing"},"content":"            case \"delete\":","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"leezhengjing"},"content":"                return tasks.updateTask(TaskAction.DELETE, userInput);","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"leezhengjing"},"content":"            case \"find\":","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"leezhengjing"},"content":"                return tasks.findTasksByKeyword(userInput);","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"leezhengjing"},"content":"            default:","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"leezhengjing"},"content":"                return Ui.returnErrorString(new BeeException(\"Sorry, you need to use a command!\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"leezhengjing"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"leezhengjing"},"content":"        } catch (BeeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"leezhengjing"},"content":"            return Ui.returnErrorString(e);","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"leezhengjing"},"content":"     * Enumeration representing the types of tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"leezhengjing"},"content":"    enum TaskClass {","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"leezhengjing"},"content":"        TODO, DEADLINE, EVENT","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"leezhengjing"},"content":"     * Enumeration representing the types of task actions.","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"leezhengjing"},"content":"    enum TaskAction {","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"leezhengjing"},"content":"        MARK, UNMARK, DELETE","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"leezhengjing"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"leezhengjing":77}},{"path":"src/main/java/bee/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhengjing"},"content":"package bee;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"leezhengjing"},"content":"import java.io.File;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"leezhengjing"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"leezhengjing"},"content":"import java.io.IOException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"leezhengjing"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"leezhengjing"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"leezhengjing"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"leezhengjing"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"leezhengjing"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"leezhengjing"},"content":" * Handles the storage of tasks and interaction with data files.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"leezhengjing"},"content":" * Provides methods for saving tasks to a file and loading tasks from a file.","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"leezhengjing"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"leezhengjing"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"leezhengjing"},"content":"    private TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"leezhengjing"},"content":"    private String filePath \u003d \"\";","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"leezhengjing"},"content":"     * Constructs a Storage instance with the specified file path.","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"leezhengjing"},"content":"     * @param filePath The path to the data file for storing tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"leezhengjing"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"leezhengjing"},"content":"        assert filePath !\u003d null : \"File path cannot be null.\"; // Assumption: File path should not be null","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"leezhengjing"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"leezhengjing"},"content":"     * Parses task data from a string and creates corresponding task objects.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"leezhengjing"},"content":"     * @param taskData The task data string to parse.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"leezhengjing"},"content":"     * @throws BeeException If there\u0027s an issue with parsing the task data.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"leezhengjing"},"content":"    private void parseTask(String taskData) throws BeeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"leezhengjing"},"content":"        assert taskData !\u003d null : \"Task data string cannot be null.\"; // Assumption: Task data should not be null","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"leezhengjing"},"content":"        String[] taskDataSplit \u003d taskData.split(\"]\");","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"leezhengjing"},"content":"        String taskType \u003d taskDataSplit[0].substring(1);","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"leezhengjing"},"content":"        Boolean isDone \u003d taskDataSplit[1].substring(1).equals(\"X\");","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"leezhengjing"},"content":"        String taskDescription \u003d taskDataSplit[2].substring(1);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"leezhengjing"},"content":"        switch (taskType) {","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"leezhengjing"},"content":"        case \"T\":","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"leezhengjing"},"content":"            Todo todo \u003d new Todo(taskDescription, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"leezhengjing"},"content":"            tasks.quietlyAddTask(todo);","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"leezhengjing"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"leezhengjing"},"content":"        case \"D\":","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"leezhengjing"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"leezhengjing"},"content":"                String[] splitEditedInput \u003d taskDescription.split(\"by: \");","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"leezhengjing"},"content":"                String deadlineDescription \u003d splitEditedInput[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"leezhengjing"},"content":"                deadlineDescription \u003d deadlineDescription.substring(0, deadlineDescription.indexOf(\"(\") - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"leezhengjing"},"content":"                String deadlineDateString \u003d splitEditedInput[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"leezhengjing"},"content":"                deadlineDateString \u003d deadlineDateString.substring(0, deadlineDateString.indexOf(\")\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"leezhengjing"},"content":"                DateTimeFormatter storageFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"leezhengjing"},"content":"                LocalDateTime deadlineDate \u003d LocalDateTime.parse(deadlineDateString, storageFormatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"leezhengjing"},"content":"                Deadline deadlineTask \u003d new Deadline(deadlineDescription, deadlineDate, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"leezhengjing"},"content":"                tasks.quietlyAddTask(deadlineTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"leezhengjing"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"leezhengjing"},"content":"                throw new BeeException(\"OOPS!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"leezhengjing"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"leezhengjing"},"content":"                throw new BeeException(\"OOPS!! The date of the deadline cannot be empty.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"leezhengjing"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"leezhengjing"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"leezhengjing"},"content":"        case \"E\":","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"leezhengjing"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"leezhengjing"},"content":"                String[] splitEditedInput \u003d taskDescription.split(\"from: \");","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"leezhengjing"},"content":"                String[] splitEditedInput2 \u003d splitEditedInput[1].split(\" to: \");","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"leezhengjing"},"content":"                String eventDescription \u003d splitEditedInput[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"leezhengjing"},"content":"                eventDescription \u003d eventDescription.substring(0, eventDescription.indexOf(\"(\") - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"leezhengjing"},"content":"                String eventStartDate \u003d splitEditedInput2[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"leezhengjing"},"content":"                String eventEndDate \u003d splitEditedInput2[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"leezhengjing"},"content":"                eventEndDate \u003d eventEndDate.substring(0, eventEndDate.indexOf(\")\"));","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"leezhengjing"},"content":"                Event event \u003d new Event(eventDescription, eventStartDate, eventEndDate, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"leezhengjing"},"content":"                tasks.quietlyAddTask(event);","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"leezhengjing"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"leezhengjing"},"content":"                throw new BeeException(\"OOPS!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"leezhengjing"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"leezhengjing"},"content":"                throw new BeeException(\"OOPS!! The date of an event cannot be empty.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"leezhengjing"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"leezhengjing"},"content":"            break;","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"leezhengjing"},"content":"        default:","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":90,"author":{"gitId":"leezhengjing"},"content":"     * Saves tasks to the data file.","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"leezhengjing"},"content":"    public void saveTasksToFile() {","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"leezhengjing"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"leezhengjing"},"content":"            File file \u003d new File(this.filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"leezhengjing"},"content":"            assert file !\u003d null : \"File object cannot be null.\"; // Assumption: File should not be null","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"leezhengjing"},"content":"            FileWriter writer \u003d new FileWriter(file);","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"leezhengjing"},"content":"            for (Task task : tasks.getTasks()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"leezhengjing"},"content":"                assert task !\u003d null : \"Task object cannot be null.\"; // Assumption: Task should not be null","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"leezhengjing"},"content":"                writer.write(task.toString() + System.lineSeparator());","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"leezhengjing"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"leezhengjing"},"content":"            writer.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"leezhengjing"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"leezhengjing"},"content":"            System.out.println(\"Error saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"leezhengjing"},"content":"     * Loads tasks from the data file.","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"leezhengjing"},"content":"     * @return The list of tasks loaded from the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"leezhengjing"},"content":"     * @throws BeeException If there\u0027s an issue with loading tasks from the file.","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"leezhengjing"},"content":"    public ArrayList\u003cTask\u003e loadTasksFromFile() throws BeeException {","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"leezhengjing"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"leezhengjing"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":117,"author":{"gitId":"leezhengjing"},"content":"            assert file !\u003d null : \"File object cannot be null.\"; // Assumption: File should not be null","lastModifiedDate":"2023-09-12"},{"lineNumber":118,"author":{"gitId":"leezhengjing"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":119,"author":{"gitId":"leezhengjing"},"content":"                // If file doesn\u0027t exist, create an empty one","lastModifiedDate":"2023-08-31"},{"lineNumber":120,"author":{"gitId":"leezhengjing"},"content":"                boolean created \u003d file.createNewFile();","lastModifiedDate":"2023-09-12"},{"lineNumber":121,"author":{"gitId":"leezhengjing"},"content":"                assert created : \"Failed to create a new file.\"; // Assumption: File creation should succeed","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"leezhengjing"},"content":"                return this.tasks.getTasks();","lastModifiedDate":"2023-08-31"},{"lineNumber":123,"author":{"gitId":"leezhengjing"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":124,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"leezhengjing"},"content":"            Scanner fileScanner \u003d new Scanner(file);","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"leezhengjing"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"leezhengjing"},"content":"                String taskData \u003d fileScanner.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"leezhengjing"},"content":"                assert taskData !\u003d null : \"Task data string cannot be null.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":129,"author":{"gitId":"leezhengjing"},"content":"                parseTask(taskData);","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"leezhengjing"},"content":"                // Parse taskData and add tasks to the list","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"leezhengjing"},"content":"                // Example: T | 1 | read book","lastModifiedDate":"2023-08-31"},{"lineNumber":132,"author":{"gitId":"leezhengjing"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":133,"author":{"gitId":"leezhengjing"},"content":"            fileScanner.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":134,"author":{"gitId":"leezhengjing"},"content":"            return this.tasks.getTasks();","lastModifiedDate":"2023-08-31"},{"lineNumber":135,"author":{"gitId":"leezhengjing"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":136,"author":{"gitId":"leezhengjing"},"content":"            System.out.println(\"Error loading tasks from file: \" + e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":137,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":138,"author":{"gitId":"leezhengjing"},"content":"        return null;","lastModifiedDate":"2023-08-31"},{"lineNumber":139,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":140,"author":{"gitId":"leezhengjing"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"leezhengjing":140}},{"path":"src/main/java/bee/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhengjing"},"content":"package bee;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"leezhengjing"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"leezhengjing"},"content":" * Represents a basic task with a description and completion status.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"leezhengjing"},"content":" * Provides methods for managing task properties and retrieving information.","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"leezhengjing"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"leezhengjing"},"content":"public class Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"leezhengjing"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"leezhengjing"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"leezhengjing"},"content":"     * Constructs a new Task with the specified description.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"leezhengjing"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"leezhengjing"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"leezhengjing"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"leezhengjing"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"leezhengjing"},"content":"     * Constructs a new Task with the specified description and completion status.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"leezhengjing"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"leezhengjing"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"leezhengjing"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-08-30"},{"lineNumber":28,"author":{"gitId":"leezhengjing"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-30"},{"lineNumber":29,"author":{"gitId":"leezhengjing"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":31,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":32,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"leezhengjing"},"content":"     * Returns a string representing the completion status of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"leezhengjing"},"content":"     * @return The status icon (\"X\" if done, \" \" if not done).","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"leezhengjing"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"leezhengjing"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"leezhengjing"},"content":"     * Retrieves the description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"leezhengjing"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"leezhengjing"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"leezhengjing"},"content":"        return this.description;","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":49,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":50,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"leezhengjing"},"content":"     * Sets the task as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"leezhengjing"},"content":"    public void setDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"leezhengjing"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":56,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"leezhengjing"},"content":"     * Sets the task as not done.","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"leezhengjing"},"content":"    public void setNotDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":61,"author":{"gitId":"leezhengjing"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"leezhengjing"},"content":"     * Converts the Task to a formatted string representation.","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"leezhengjing"},"content":"     * @return Formatted string representation of the Task.","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"leezhengjing"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":70,"author":{"gitId":"leezhengjing"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":71,"author":{"gitId":"leezhengjing"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"leezhengjing"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"leezhengjing":73}},{"path":"src/main/java/bee/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhengjing"},"content":"package bee;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"leezhengjing"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"leezhengjing"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"leezhengjing"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"leezhengjing"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"leezhengjing"},"content":"import bee.ui.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"leezhengjing"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"leezhengjing"},"content":" * Represents a list of tasks and provides methods to interact with the tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"leezhengjing"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"leezhengjing"},"content":"public class TaskList {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"leezhengjing"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"leezhengjing"},"content":"    private Storage storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"leezhengjing"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"leezhengjing"},"content":"    public TaskList() {","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"leezhengjing"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"leezhengjing"},"content":"     * Constructs a TaskList with the provided list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"leezhengjing"},"content":"     * @param tasks The initial list of tasks to populate the TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"leezhengjing"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks, Storage storage) {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"leezhengjing"},"content":"        assert tasks !\u003d null : \"Tasks list should not be null.\"; // Assumption: Tasks list should not be null","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"leezhengjing"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"leezhengjing"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"leezhengjing"},"content":"     * Returns the number of tasks in the TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"leezhengjing"},"content":"     * @return The number of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"leezhengjing"},"content":"    public int size() {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"leezhengjing"},"content":"        return tasks.size();","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"leezhengjing"},"content":"     * Adds a task to the TaskList without displaying any messages.","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"leezhengjing"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"leezhengjing"},"content":"    public void quietlyAddTask(Task task) {","lastModifiedDate":"2023-08-30"},{"lineNumber":50,"author":{"gitId":"leezhengjing"},"content":"        assert task !\u003d null : \"Task object cannot be null.\"; // Assumption: Task object should not be null","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"leezhengjing"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-13"},{"lineNumber":52,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":53,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":54,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"leezhengjing"},"content":"     * Adds a task to the TaskList and displays a confirmation message.","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"leezhengjing"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"leezhengjing"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"leezhengjing"},"content":"        assert task !\u003d null : \"Task object cannot be null.\"; // Assumption: Task object should not be null","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"leezhengjing"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"leezhengjing"},"content":"        storage.saveTasksToFile();","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"leezhengjing"},"content":"        return Ui.addTask(task, this.tasks.size());","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":66,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"leezhengjing"},"content":"     * Lists all tasks in the TaskList along with their indices.","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"leezhengjing"},"content":"    public String listAllTasks() {","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"leezhengjing"},"content":"        return Ui.listAllTasks(this.tasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":72,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":73,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"leezhengjing"},"content":"     * Returns the list of tasks in the TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"leezhengjing"},"content":"     * @return The list of tasks.","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"leezhengjing"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-08-30"},{"lineNumber":79,"author":{"gitId":"leezhengjing"},"content":"        return new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2023-09-13"},{"lineNumber":80,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-30"},{"lineNumber":81,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":82,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"leezhengjing"},"content":"     * Retrieves the task at the specified index.","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"leezhengjing"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"leezhengjing"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":88,"author":{"gitId":"leezhengjing"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-08-31"},{"lineNumber":89,"author":{"gitId":"leezhengjing"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size() : \"Invalid task index.\";","lastModifiedDate":"2023-09-13"},{"lineNumber":90,"author":{"gitId":"leezhengjing"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"leezhengjing"},"content":"     * Marks a task as done based on its index in the TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"leezhengjing"},"content":"     * @param taskIndex The index of the task to mark as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"leezhengjing"},"content":"     * @throws BeeException If there\u0027s an issue with marking the task as done.","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"leezhengjing"},"content":"    public String setTaskDone(int taskIndex) {","lastModifiedDate":"2023-09-07"},{"lineNumber":100,"author":{"gitId":"leezhengjing"},"content":"        if (taskIndex \u003e this.tasks.size() || taskIndex \u003c 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":101,"author":{"gitId":"leezhengjing"},"content":"            return Ui.returnErrorString(new BeeException(\"OOPS!! Please enter a valid task number.\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":102,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":103,"author":{"gitId":"leezhengjing"},"content":"        Task task \u003d this.tasks.get(taskIndex - 1);","lastModifiedDate":"2023-09-07"},{"lineNumber":104,"author":{"gitId":"leezhengjing"},"content":"        task.setDone();","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"leezhengjing"},"content":"        storage.saveTasksToFile();","lastModifiedDate":"2023-09-07"},{"lineNumber":106,"author":{"gitId":"leezhengjing"},"content":"        return Ui.setTaskDone(task);","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":108,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":109,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"leezhengjing"},"content":"     * Marks a task as not done based on its index in the TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":111,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"leezhengjing"},"content":"     * @param taskIndex The index of the task to mark as not done.","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"leezhengjing"},"content":"     * @throws BeeException If there\u0027s an issue with marking the task as not done.","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":115,"author":{"gitId":"leezhengjing"},"content":"    public String setTaskNotDone(int taskIndex) {","lastModifiedDate":"2023-09-07"},{"lineNumber":116,"author":{"gitId":"leezhengjing"},"content":"        if (taskIndex \u003e this.tasks.size() || taskIndex \u003c 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":117,"author":{"gitId":"leezhengjing"},"content":"            return Ui.returnErrorString(new BeeException(\"OOPS!! Please enter a valid task number.\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":118,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":119,"author":{"gitId":"leezhengjing"},"content":"        Task task \u003d this.tasks.get(taskIndex - 1);","lastModifiedDate":"2023-09-07"},{"lineNumber":120,"author":{"gitId":"leezhengjing"},"content":"        task.setNotDone();","lastModifiedDate":"2023-09-07"},{"lineNumber":121,"author":{"gitId":"leezhengjing"},"content":"        storage.saveTasksToFile();","lastModifiedDate":"2023-09-07"},{"lineNumber":122,"author":{"gitId":"leezhengjing"},"content":"        return Ui.setTaskNotDone(task);","lastModifiedDate":"2023-09-07"},{"lineNumber":123,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":124,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":125,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"leezhengjing"},"content":"     * Deletes a task based on its index in the TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":127,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":128,"author":{"gitId":"leezhengjing"},"content":"     * @param taskIndex The index of the task to delete.","lastModifiedDate":"2023-08-31"},{"lineNumber":129,"author":{"gitId":"leezhengjing"},"content":"     * @throws BeeException If there\u0027s an issue with deleting the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":130,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":131,"author":{"gitId":"leezhengjing"},"content":"    public String deleteTask(int taskIndex) {","lastModifiedDate":"2023-09-07"},{"lineNumber":132,"author":{"gitId":"leezhengjing"},"content":"        if (taskIndex \u003e tasks.size() || taskIndex \u003c 1) {","lastModifiedDate":"2023-08-24"},{"lineNumber":133,"author":{"gitId":"leezhengjing"},"content":"            return Ui.returnErrorString(new BeeException(\"OOPS!! Please enter a valid task number.\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":134,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-08-24"},{"lineNumber":135,"author":{"gitId":"leezhengjing"},"content":"        Task deletedTask \u003d this.tasks.get(taskIndex - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":136,"author":{"gitId":"leezhengjing"},"content":"        this.tasks.remove(taskIndex - 1);","lastModifiedDate":"2023-08-24"},{"lineNumber":137,"author":{"gitId":"leezhengjing"},"content":"        storage.saveTasksToFile();","lastModifiedDate":"2023-09-07"},{"lineNumber":138,"author":{"gitId":"leezhengjing"},"content":"        return Ui.deleteTask(deletedTask, this.tasks.size());","lastModifiedDate":"2023-09-07"},{"lineNumber":139,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":140,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":141,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":142,"author":{"gitId":"leezhengjing"},"content":"     * Creates a task of the specified type based on user input and adds it to the TaskList.","lastModifiedDate":"2023-08-31"},{"lineNumber":143,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":144,"author":{"gitId":"leezhengjing"},"content":"     * @param task      The type of task to create.","lastModifiedDate":"2023-08-31"},{"lineNumber":145,"author":{"gitId":"leezhengjing"},"content":"     * @param userInput The user input specifying the task details.","lastModifiedDate":"2023-08-31"},{"lineNumber":146,"author":{"gitId":"leezhengjing"},"content":"     * @throws BeeException If there\u0027s an issue with creating or adding the task.","lastModifiedDate":"2023-08-31"},{"lineNumber":147,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":148,"author":{"gitId":"leezhengjing"},"content":"    public String createTask(Parser.TaskClass task, String userInput) throws BeeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":149,"author":{"gitId":"leezhengjing"},"content":"        switch (task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":150,"author":{"gitId":"leezhengjing"},"content":"        case TODO:","lastModifiedDate":"2023-08-31"},{"lineNumber":151,"author":{"gitId":"leezhengjing"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":152,"author":{"gitId":"leezhengjing"},"content":"                String editedInput \u003d userInput.substring(5);","lastModifiedDate":"2023-08-31"},{"lineNumber":153,"author":{"gitId":"leezhengjing"},"content":"                if (editedInput.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":154,"author":{"gitId":"leezhengjing"},"content":"                    return Ui.returnErrorString(new BeeException(\"OOPS!! The description of a todo cannot be empty.\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":155,"author":{"gitId":"leezhengjing"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":156,"author":{"gitId":"leezhengjing"},"content":"                Todo todo \u003d new Todo(editedInput);","lastModifiedDate":"2023-08-31"},{"lineNumber":157,"author":{"gitId":"leezhengjing"},"content":"                return this.addTask(todo);","lastModifiedDate":"2023-09-07"},{"lineNumber":158,"author":{"gitId":"leezhengjing"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":159,"author":{"gitId":"leezhengjing"},"content":"                return Ui.returnErrorString(new BeeException(\"OOPS!! The description of a todo cannot be empty.\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":160,"author":{"gitId":"leezhengjing"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":161,"author":{"gitId":"leezhengjing"},"content":"        case DEADLINE:","lastModifiedDate":"2023-08-31"},{"lineNumber":162,"author":{"gitId":"leezhengjing"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":163,"author":{"gitId":"leezhengjing"},"content":"                String editedInput \u003d userInput.substring(9);","lastModifiedDate":"2023-08-31"},{"lineNumber":164,"author":{"gitId":"leezhengjing"},"content":"                if (editedInput.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":165,"author":{"gitId":"leezhengjing"},"content":"                    return Ui.returnErrorString(","lastModifiedDate":"2023-09-13"},{"lineNumber":166,"author":{"gitId":"leezhengjing"},"content":"                            new BeeException(\"OOPS!! The description of a deadline cannot be empty.\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":167,"author":{"gitId":"leezhengjing"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":168,"author":{"gitId":"leezhengjing"},"content":"                String[] splitEditedInput \u003d editedInput.split(\" /by \");","lastModifiedDate":"2023-08-31"},{"lineNumber":169,"author":{"gitId":"leezhengjing"},"content":"                String deadlineDescription \u003d splitEditedInput[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":170,"author":{"gitId":"leezhengjing"},"content":"                String deadlineDateString \u003d splitEditedInput[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":171,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":172,"author":{"gitId":"leezhengjing"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":173,"author":{"gitId":"leezhengjing"},"content":"                LocalDateTime deadlineDate \u003d LocalDateTime.parse(deadlineDateString, formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":174,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":175,"author":{"gitId":"leezhengjing"},"content":"                Deadline deadlineTask \u003d new Deadline(deadlineDescription, deadlineDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":176,"author":{"gitId":"leezhengjing"},"content":"                return this.addTask(deadlineTask);","lastModifiedDate":"2023-09-07"},{"lineNumber":177,"author":{"gitId":"leezhengjing"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":178,"author":{"gitId":"leezhengjing"},"content":"                return Ui.returnErrorString(","lastModifiedDate":"2023-09-13"},{"lineNumber":179,"author":{"gitId":"leezhengjing"},"content":"                        new BeeException(\"OOPS!! Invalid deadline date format. Please use yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":180,"author":{"gitId":"leezhengjing"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-13"},{"lineNumber":181,"author":{"gitId":"leezhengjing"},"content":"                return Ui.returnErrorString(new BeeException(\"OOPS!! The description of a deadline cannot be empty.\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":182,"author":{"gitId":"leezhengjing"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":183,"author":{"gitId":"leezhengjing"},"content":"                return Ui.returnErrorString(new BeeException(\"OOPS!! The date of the deadline cannot be empty.\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":184,"author":{"gitId":"leezhengjing"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":185,"author":{"gitId":"leezhengjing"},"content":"        case EVENT:","lastModifiedDate":"2023-08-31"},{"lineNumber":186,"author":{"gitId":"leezhengjing"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":187,"author":{"gitId":"leezhengjing"},"content":"                String editedInput \u003d userInput.substring(6);","lastModifiedDate":"2023-08-31"},{"lineNumber":188,"author":{"gitId":"leezhengjing"},"content":"                if (editedInput.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":189,"author":{"gitId":"leezhengjing"},"content":"                    return Ui.returnErrorString(","lastModifiedDate":"2023-09-13"},{"lineNumber":190,"author":{"gitId":"leezhengjing"},"content":"                            new BeeException(\"OOPS!! The description of an event cannot be empty.\"));","lastModifiedDate":"2023-09-13"},{"lineNumber":191,"author":{"gitId":"leezhengjing"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":192,"author":{"gitId":"leezhengjing"},"content":"                String[] splitEditedInput \u003d editedInput.split(\" /from \");","lastModifiedDate":"2023-08-31"},{"lineNumber":193,"author":{"gitId":"leezhengjing"},"content":"                String[] splitEditedInput2 \u003d splitEditedInput[1].split(\" /to \");","lastModifiedDate":"2023-08-31"},{"lineNumber":194,"author":{"gitId":"leezhengjing"},"content":"                String eventDescription \u003d splitEditedInput[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":195,"author":{"gitId":"leezhengjing"},"content":"                String eventStartDate \u003d splitEditedInput2[0];","lastModifiedDate":"2023-08-31"},{"lineNumber":196,"author":{"gitId":"leezhengjing"},"content":"                String eventEndDate \u003d splitEditedInput2[1];","lastModifiedDate":"2023-08-31"},{"lineNumber":197,"author":{"gitId":"leezhengjing"},"content":"                Event event \u003d new Event(eventDescription, eventStartDate, eventEndDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":198,"author":{"gitId":"leezhengjing"},"content":"                return this.addTask(event);","lastModifiedDate":"2023-09-07"},{"lineNumber":199,"author":{"gitId":"leezhengjing"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":200,"author":{"gitId":"leezhengjing"},"content":"                return Ui.returnErrorString(new BeeException(\"OOPS!! The description of an event cannot be empty.\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":201,"author":{"gitId":"leezhengjing"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":202,"author":{"gitId":"leezhengjing"},"content":"                return Ui.returnErrorString(new BeeException(\"OOPS!! The date of an event cannot be empty.\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":203,"author":{"gitId":"leezhengjing"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":204,"author":{"gitId":"leezhengjing"},"content":"        default:","lastModifiedDate":"2023-08-31"},{"lineNumber":205,"author":{"gitId":"leezhengjing"},"content":"            return Ui.returnErrorString(new BeeException(\"I\u0027m sorry, but I don\u0027t know what that means.\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":206,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":207,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":208,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":209,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":210,"author":{"gitId":"leezhengjing"},"content":"     * Updates a task based on the specified action and user input.","lastModifiedDate":"2023-08-31"},{"lineNumber":211,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":212,"author":{"gitId":"leezhengjing"},"content":"     * @param action    The action to perform on the task (e.g., mark, unmark, delete).","lastModifiedDate":"2023-08-31"},{"lineNumber":213,"author":{"gitId":"leezhengjing"},"content":"     * @param userInput The user input specifying the task and action.","lastModifiedDate":"2023-08-31"},{"lineNumber":214,"author":{"gitId":"leezhengjing"},"content":"     * @throws BeeException If there\u0027s an issue with performing the task action.","lastModifiedDate":"2023-08-31"},{"lineNumber":215,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":216,"author":{"gitId":"leezhengjing"},"content":"    public String updateTask(Parser.TaskAction action, String userInput) throws BeeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":217,"author":{"gitId":"leezhengjing"},"content":"        String[] splitInput \u003d userInput.split(\" \");","lastModifiedDate":"2023-08-31"},{"lineNumber":218,"author":{"gitId":"leezhengjing"},"content":"        switch (action) {","lastModifiedDate":"2023-08-31"},{"lineNumber":219,"author":{"gitId":"leezhengjing"},"content":"        case MARK:","lastModifiedDate":"2023-08-31"},{"lineNumber":220,"author":{"gitId":"leezhengjing"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":221,"author":{"gitId":"leezhengjing"},"content":"                int taskIndex \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":222,"author":{"gitId":"leezhengjing"},"content":"                return this.setTaskDone(taskIndex);","lastModifiedDate":"2023-09-07"},{"lineNumber":223,"author":{"gitId":"leezhengjing"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":224,"author":{"gitId":"leezhengjing"},"content":"                return Ui.returnErrorString(new BeeException(\"OOPS!! The task number cannot be empty.\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":225,"author":{"gitId":"leezhengjing"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":226,"author":{"gitId":"leezhengjing"},"content":"                return Ui.returnErrorString(new BeeException(\"OOPS!! You must have entered an invalid task number.\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":227,"author":{"gitId":"leezhengjing"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":228,"author":{"gitId":"leezhengjing"},"content":"        case UNMARK:","lastModifiedDate":"2023-08-31"},{"lineNumber":229,"author":{"gitId":"leezhengjing"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":230,"author":{"gitId":"leezhengjing"},"content":"                int taskIndex \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":231,"author":{"gitId":"leezhengjing"},"content":"                return this.setTaskNotDone(taskIndex);","lastModifiedDate":"2023-09-07"},{"lineNumber":232,"author":{"gitId":"leezhengjing"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":233,"author":{"gitId":"leezhengjing"},"content":"                return Ui.returnErrorString(new BeeException(\"OOPS!! The task number cannot be empty.\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":234,"author":{"gitId":"leezhengjing"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":235,"author":{"gitId":"leezhengjing"},"content":"                return Ui.returnErrorString(new BeeException(\"OOPSS!! You must have entered an invalid task number.\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":236,"author":{"gitId":"leezhengjing"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":237,"author":{"gitId":"leezhengjing"},"content":"        case DELETE:","lastModifiedDate":"2023-08-31"},{"lineNumber":238,"author":{"gitId":"leezhengjing"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":239,"author":{"gitId":"leezhengjing"},"content":"                int taskIndex \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2023-08-31"},{"lineNumber":240,"author":{"gitId":"leezhengjing"},"content":"                return this.deleteTask(taskIndex);","lastModifiedDate":"2023-09-07"},{"lineNumber":241,"author":{"gitId":"leezhengjing"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":242,"author":{"gitId":"leezhengjing"},"content":"                return Ui.returnErrorString(new BeeException(\"OOPSS!! Please enter a task number\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":243,"author":{"gitId":"leezhengjing"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":244,"author":{"gitId":"leezhengjing"},"content":"                return Ui.returnErrorString(new BeeException(\"OOPSS!! You must have entered an invalid task number.\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":245,"author":{"gitId":"leezhengjing"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":246,"author":{"gitId":"leezhengjing"},"content":"        default:","lastModifiedDate":"2023-08-31"},{"lineNumber":247,"author":{"gitId":"leezhengjing"},"content":"            return Ui.returnErrorString(new BeeException(\"OOPSS!! I can\u0027t do that!!!\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":248,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":249,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":250,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":251,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":252,"author":{"gitId":"leezhengjing"},"content":"     * Finds a task that contains a keyword","lastModifiedDate":"2023-09-07"},{"lineNumber":253,"author":{"gitId":"leezhengjing"},"content":"     * @param userInput","lastModifiedDate":"2023-09-07"},{"lineNumber":254,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":255,"author":{"gitId":"leezhengjing"},"content":"    public String findTasksByKeyword(String userInput) {","lastModifiedDate":"2023-09-07"},{"lineNumber":256,"author":{"gitId":"leezhengjing"},"content":"        String keyword \u003d userInput.substring(5).trim();","lastModifiedDate":"2023-08-31"},{"lineNumber":257,"author":{"gitId":"leezhengjing"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":258,"author":{"gitId":"leezhengjing"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":259,"author":{"gitId":"leezhengjing"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2023-08-31"},{"lineNumber":260,"author":{"gitId":"leezhengjing"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":261,"author":{"gitId":"leezhengjing"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":262,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":263,"author":{"gitId":"leezhengjing"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":264,"author":{"gitId":"leezhengjing"},"content":"            return \"No matching tasks found.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":265,"author":{"gitId":"leezhengjing"},"content":"        } else {","lastModifiedDate":"2023-08-31"},{"lineNumber":266,"author":{"gitId":"leezhengjing"},"content":"            return Ui.findTasks(matchingTasks);","lastModifiedDate":"2023-09-07"},{"lineNumber":267,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":268,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":269,"author":{"gitId":"leezhengjing"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"leezhengjing":269}},{"path":"src/main/java/bee/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhengjing"},"content":"package bee;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"leezhengjing"},"content":"/**","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"leezhengjing"},"content":" * Represents a todo task that needs to be done.","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"leezhengjing"},"content":" * Inherits from the parent class Task.","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"leezhengjing"},"content":" */","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"leezhengjing"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"leezhengjing"},"content":"     * Constructs a new todo task with the given description.","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"leezhengjing"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"leezhengjing"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"leezhengjing"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"leezhengjing"},"content":"        assert description !\u003d null : \"Description cannot be null.\"; // Assumption: Description should not be null","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":18,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"leezhengjing"},"content":"     * Constructs a new todo task with the given description and completion status.","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"leezhengjing"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"leezhengjing"},"content":"     * @param isDone      The completion status of the todo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"leezhengjing"},"content":"    public Todo(String description, Boolean isDone) {","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"leezhengjing"},"content":"        super(description, isDone);","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"leezhengjing"},"content":"        assert description !\u003d null : \"Description cannot be null.\"; // Assumption: Description should not be null","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-30"},{"lineNumber":30,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"leezhengjing"},"content":"     * Returns a string representation of the todo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"leezhengjing"},"content":"     * Includes the task type indicator \"[T]\".","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"leezhengjing"},"content":"     * @return A formatted string representing the todo task.","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"leezhengjing"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":37,"author":{"gitId":"leezhengjing"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"leezhengjing"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"leezhengjing"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"leezhengjing":40}},{"path":"src/main/java/bee/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhengjing"},"content":"package bee.ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"leezhengjing"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"leezhengjing"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"leezhengjing"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"leezhengjing"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"leezhengjing"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"leezhengjing"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"leezhengjing"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"leezhengjing"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"leezhengjing"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"leezhengjing"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"leezhengjing"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"leezhengjing"},"content":"/**","lastModifiedDate":"2023-09-13"},{"lineNumber":17,"author":{"gitId":"leezhengjing"},"content":" * Represents a dialog box used for displaying messages in the user interface.","lastModifiedDate":"2023-09-13"},{"lineNumber":18,"author":{"gitId":"leezhengjing"},"content":" * The dialog box can contain text and an optional display picture.","lastModifiedDate":"2023-09-13"},{"lineNumber":19,"author":{"gitId":"leezhengjing"},"content":" */","lastModifiedDate":"2023-09-13"},{"lineNumber":20,"author":{"gitId":"leezhengjing"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"leezhengjing"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"leezhengjing"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"leezhengjing"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"leezhengjing"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":27,"author":{"gitId":"leezhengjing"},"content":"     * Constructs a new DialogBox with the specified text and image.","lastModifiedDate":"2023-09-13"},{"lineNumber":28,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":29,"author":{"gitId":"leezhengjing"},"content":"     * @param text The text message to display in the dialog.","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"leezhengjing"},"content":"     * @param img  The image to display alongside the text.","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"leezhengjing"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"leezhengjing"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"leezhengjing"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"leezhengjing"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"leezhengjing"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"leezhengjing"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"leezhengjing"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"leezhengjing"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"leezhengjing"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"leezhengjing"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":47,"author":{"gitId":"leezhengjing"},"content":"     * Flips the dialog box to align it to the top left.","lastModifiedDate":"2023-09-13"},{"lineNumber":48,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":49,"author":{"gitId":"leezhengjing"},"content":"    private void flip() {","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"leezhengjing"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"leezhengjing"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"leezhengjing"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"leezhengjing"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":57,"author":{"gitId":"leezhengjing"},"content":"     * Creates a user dialog box with the specified text and image.","lastModifiedDate":"2023-09-13"},{"lineNumber":58,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":59,"author":{"gitId":"leezhengjing"},"content":"     * @param text The text message to display in the user dialog.","lastModifiedDate":"2023-09-13"},{"lineNumber":60,"author":{"gitId":"leezhengjing"},"content":"     * @param img  The image to display alongside the user\u0027s text.","lastModifiedDate":"2023-09-13"},{"lineNumber":61,"author":{"gitId":"leezhengjing"},"content":"     * @return A DialogBox representing the user\u0027s dialog.","lastModifiedDate":"2023-09-13"},{"lineNumber":62,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":63,"author":{"gitId":"leezhengjing"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"leezhengjing"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":68,"author":{"gitId":"leezhengjing"},"content":"     * Creates a Bee dialog box with the specified text and image.","lastModifiedDate":"2023-09-13"},{"lineNumber":69,"author":{"gitId":"leezhengjing"},"content":"     * This dialog box is flipped to align it to the top left.","lastModifiedDate":"2023-09-13"},{"lineNumber":70,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":71,"author":{"gitId":"leezhengjing"},"content":"     * @param text The text message to display in the Bee\u0027s dialog.","lastModifiedDate":"2023-09-13"},{"lineNumber":72,"author":{"gitId":"leezhengjing"},"content":"     * @param img  The image to display alongside the Bee\u0027s text.","lastModifiedDate":"2023-09-13"},{"lineNumber":73,"author":{"gitId":"leezhengjing"},"content":"     * @return A DialogBox representing the Bee\u0027s dialog.","lastModifiedDate":"2023-09-13"},{"lineNumber":74,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":75,"author":{"gitId":"leezhengjing"},"content":"    public static DialogBox getBeeDialog(String text, Image img) {","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"leezhengjing"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"leezhengjing"},"content":"        db.flip();","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"leezhengjing"},"content":"        return db;","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"leezhengjing"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"leezhengjing":80}},{"path":"src/main/java/bee/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhengjing"},"content":"package bee.ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"leezhengjing"},"content":"import bee.Bee;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"leezhengjing"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"leezhengjing"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"leezhengjing"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"leezhengjing"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"leezhengjing"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"leezhengjing"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"leezhengjing"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"leezhengjing"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"leezhengjing"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"leezhengjing"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"leezhengjing"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"leezhengjing"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"leezhengjing"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"leezhengjing"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"leezhengjing"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"leezhengjing"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"leezhengjing"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"leezhengjing"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"leezhengjing"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"leezhengjing"},"content":"    private Bee bee;","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"leezhengjing"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"leezhengjing"},"content":"    private Image beeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bee.jpg\"));","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":30,"author":{"gitId":"leezhengjing"},"content":"     * Initializes the MainWindow. Binds the scroll pane to the dialog container and","lastModifiedDate":"2023-09-13"},{"lineNumber":31,"author":{"gitId":"leezhengjing"},"content":"     * displays the initial greeting message.","lastModifiedDate":"2023-09-13"},{"lineNumber":32,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":33,"author":{"gitId":"leezhengjing"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"leezhengjing"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"leezhengjing"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"leezhengjing"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"leezhengjing"},"content":"                DialogBox.getBeeDialog(Ui.greet(), beeImage)","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"leezhengjing"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-09-13"},{"lineNumber":42,"author":{"gitId":"leezhengjing"},"content":"     * Sets the Bee instance for this MainWindow.","lastModifiedDate":"2023-09-13"},{"lineNumber":43,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-09-13"},{"lineNumber":44,"author":{"gitId":"leezhengjing"},"content":"     * @param b The Bee instance to set.","lastModifiedDate":"2023-09-13"},{"lineNumber":45,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-09-13"},{"lineNumber":46,"author":{"gitId":"leezhengjing"},"content":"    public void setBee(Bee b) {","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"leezhengjing"},"content":"        bee \u003d b;","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"leezhengjing"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"leezhengjing"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"leezhengjing"},"content":"    @FXML","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"leezhengjing"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"leezhengjing"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"leezhengjing"},"content":"        String response \u003d bee.getResponse(input);","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"leezhengjing"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"leezhengjing"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"leezhengjing"},"content":"                DialogBox.getBeeDialog(response, beeImage)","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"leezhengjing"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"leezhengjing"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"leezhengjing"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"leezhengjing":64}},{"path":"src/main/java/bee/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhengjing"},"content":"package bee.ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"leezhengjing"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"leezhengjing"},"content":"import bee.BeeException;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"leezhengjing"},"content":"import bee.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"leezhengjing"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"leezhengjing"},"content":" * Represents the User Interface (UI) of the chatbot.","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"leezhengjing"},"content":" * Provides methods to display greetings, loading errors, and farewell messages.","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"leezhengjing"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"leezhengjing"},"content":"public class Ui {","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"leezhengjing"},"content":"     * Displays a greeting message along with the chatbot\u0027s logo.","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"leezhengjing"},"content":"    public static String greet() {","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"leezhengjing"},"content":"        String logo \u003d \"\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"leezhengjing"},"content":"                + \"__________\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"leezhengjing"},"content":"                + \"\\\\______   \\\\ ____   ____\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"leezhengjing"},"content":"                + \" |    |  _// __ \\\\_/ __ \\\\\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"leezhengjing"},"content":"                + \" |    |   \\\\  ___/\\\\  ___/\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"leezhengjing"},"content":"                + \" |______  /\\\\___  \u003e\\\\___  \u003e\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"leezhengjing"},"content":"                + \"        \\\\/     \\\\/     \\\\/\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"leezhengjing"},"content":"        return \"Hello! I\u0027m\" + logo + \"~Bzzzz~ What may I assist you with today? ~Bzzzz~\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"leezhengjing"},"content":"     * Displays an error message indicating a failure to load tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"leezhengjing"},"content":"    public String showLoadingError() {","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"leezhengjing"},"content":"        return \"~Bzzzz~ Oh no! We failed to load the tasks\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"leezhengjing"},"content":"     * Displays a farewell message to bid the user goodbye.","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"leezhengjing"},"content":"    public static String farewell() {","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"leezhengjing"},"content":"        return \"Bye-bye! Have a great day! ~Bzzz~\";","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"leezhengjing"},"content":"     * Prints the error message.","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"leezhengjing"},"content":"     * @param err The error message.","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"leezhengjing"},"content":"    public static String returnErrorString(BeeException err) {","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"leezhengjing"},"content":"        return err.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"leezhengjing"},"content":"     * Adds a Task object to the specified list of tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"leezhengjing"},"content":"     * @param tsk","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"leezhengjing"},"content":"     * @param taskNumber","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":57,"author":{"gitId":"leezhengjing"},"content":"    public static String addTask(Task tsk, int taskNumber) {","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"leezhengjing"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"leezhengjing"},"content":"                + tsk.toString()","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"leezhengjing"},"content":"                + \"\\nNow you have \"","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"leezhengjing"},"content":"                + taskNumber","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"leezhengjing"},"content":"                + \" tasks in the list.  ~Bzzz~\";","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"leezhengjing"},"content":"     * Deletes a Task object from the specified list of tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"leezhengjing"},"content":"     * @param task The task to be deleted.","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"leezhengjing"},"content":"     * @param taskNumber The number of tasks in the list.","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"leezhengjing"},"content":"    public static String deleteTask(Task task, int taskNumber) {","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"leezhengjing"},"content":"        return \"Okies~. I\u0027ve removed this task:\\n\" + task.toString() + \"\\nNow you have \"","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"leezhengjing"},"content":"                + taskNumber + \" tasks in the list.\";","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"leezhengjing"},"content":"     * Lists all the tasks in the specified list of tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"leezhengjing"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"leezhengjing"},"content":"    public static String listAllTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"leezhengjing"},"content":"        String res \u003d \"Here are the tasks in your list:  ~Bzzz~\";","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"leezhengjing"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"leezhengjing"},"content":"            res +\u003d \"\\n\" + (i + 1) + \". \" + tasks.get(i).toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"leezhengjing"},"content":"        return res;","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"leezhengjing"},"content":"     * Marks a Task object in the specified list of tasks as done.","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"leezhengjing"},"content":"     * @param task The task to be marked as done.","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"leezhengjing"},"content":"    public static String setTaskDone(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"leezhengjing"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + task.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":96,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":99,"author":{"gitId":"leezhengjing"},"content":"     * Marks a Task object in the specified list of tasks as not done.","lastModifiedDate":"2023-09-07"},{"lineNumber":100,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":101,"author":{"gitId":"leezhengjing"},"content":"     * @param task The task to be marked as not done.","lastModifiedDate":"2023-09-07"},{"lineNumber":102,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":103,"author":{"gitId":"leezhengjing"},"content":"    public static String setTaskNotDone(Task task) {","lastModifiedDate":"2023-09-07"},{"lineNumber":104,"author":{"gitId":"leezhengjing"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + task.toString() + \" ~Bzzzz\";","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":106,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"leezhengjing"},"content":"     * Finds the tasks that contain the specified keyword.","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"leezhengjing"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"leezhengjing"},"content":"     * @param tasks The list of tasks that contain the specified keyword.","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":112,"author":{"gitId":"leezhengjing"},"content":"    public static String findTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-07"},{"lineNumber":113,"author":{"gitId":"leezhengjing"},"content":"        String res \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":114,"author":{"gitId":"leezhengjing"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-07"},{"lineNumber":115,"author":{"gitId":"leezhengjing"},"content":"            res +\u003d (i + 1) + \". \" + tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":116,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":117,"author":{"gitId":"leezhengjing"},"content":"        return res;","lastModifiedDate":"2023-09-07"},{"lineNumber":118,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":119,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":120,"author":{"gitId":"leezhengjing"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"leezhengjing":120}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"leezhengjing"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"leezhengjing"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"leezhengjing"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"leezhengjing"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"leezhengjing"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"leezhengjing"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"leezhengjing"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"leezhengjing"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"leezhengjing"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"leezhengjing"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"leezhengjing"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"leezhengjing"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"leezhengjing"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"leezhengjing"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"leezhengjing":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"leezhengjing"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"leezhengjing"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"leezhengjing"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"leezhengjing"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"leezhengjing"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"leezhengjing"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"leezhengjing"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"bee.ui.MainWindow\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"leezhengjing"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"leezhengjing"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"leezhengjing"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"leezhengjing"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"leezhengjing"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"leezhengjing"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"leezhengjing"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"leezhengjing"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"leezhengjing"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"leezhengjing"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"leezhengjing":19}},{"path":"src/test/java/bee/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhengjing"},"content":"package bee;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"leezhengjing"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"leezhengjing"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"leezhengjing"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"leezhengjing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"leezhengjing"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"leezhengjing"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"leezhengjing"},"content":"    public void initializeTest1() {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"leezhengjing"},"content":"        String deadlineDateString \u003d \"2023-08-31 2359\";","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"leezhengjing"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"leezhengjing"},"content":"        LocalDateTime deadlineDate \u003d LocalDateTime.parse(deadlineDateString, formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"leezhengjing"},"content":"        Deadline deadline \u003d new Deadline(\"Deadline Test\", deadlineDate);","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"leezhengjing"},"content":"        assertEquals(\"[D][ ] Deadline Test (by: Aug 31 2023 23:59)\", deadline.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"leezhengjing"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"leezhengjing"},"content":"    public void initializeTest2() {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"leezhengjing"},"content":"        String deadlineDateString \u003d \"2023-08-31 2359\";","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"leezhengjing"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"leezhengjing"},"content":"        LocalDateTime deadlineDate \u003d LocalDateTime.parse(deadlineDateString, formatter);","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"leezhengjing"},"content":"        boolean isDone \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"leezhengjing"},"content":"        Deadline deadline \u003d new Deadline(\"Deadline Test\", deadlineDate, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"leezhengjing"},"content":"        assertEquals(\"[D][X] Deadline Test (by: Aug 31 2023 23:59)\", deadline.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"leezhengjing"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"leezhengjing":28}},{"path":"src/test/java/bee/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leezhengjing"},"content":"package bee;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"leezhengjing"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"leezhengjing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"leezhengjing"},"content":"public class TaskListTest {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"leezhengjing"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"leezhengjing"},"content":"    public void initialiseTest1() {","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"leezhengjing"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"leezhengjing"},"content":"        assertEquals(0, tasks.size());","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"leezhengjing"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"leezhengjing"},"content":"    public void initialiseTest2() {","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"leezhengjing"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"leezhengjing"},"content":"        assertEquals(0, tasks.size());","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"leezhengjing"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"leezhengjing"},"content":"    public void addTaskTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"leezhengjing"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"leezhengjing"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"leezhengjing"},"content":"            tasks.createTask(Parser.TaskClass.TODO, \"todo return books\");","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"leezhengjing"},"content":"        } catch (BeeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"leezhengjing"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"leezhengjing"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"leezhengjing"},"content":"        assertEquals(\"[T][ ] return books\", tasks.getTask(0).toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"leezhengjing"},"content":"    @Test","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"leezhengjing"},"content":"    public void deleteTaskTest() {","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"leezhengjing"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"leezhengjing"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"leezhengjing"},"content":"            tasks.createTask(Parser.TaskClass.TODO, \"todo return books\");","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"leezhengjing"},"content":"        } catch (BeeException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"leezhengjing"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"leezhengjing"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"leezhengjing"},"content":"        assertEquals(\"[T][ ] return books\", tasks.getTask(0).toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"leezhengjing"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"leezhengjing":42}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"leezhengjing"},"content":"todo borrow books","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"leezhengjing"},"content":"deadline return books /by June 6th","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"leezhengjing"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"leezhengjing"},"content":"todo join sports club","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"leezhengjing"},"content":"todo borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"leezhengjing"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"leezhengjing"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"leezhengjing"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"leezhengjing"},"content":"mark 4","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"leezhengjing"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"leezhengjing"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"leezhengjing":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"leezhengjing"},"content":"java -classpath ..\\bin bee.Bee \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"leezhengjing":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"leezhengjing"},"content":"java -classpath ../bin Bee \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"leezhengjing":1,"-":37}}]
