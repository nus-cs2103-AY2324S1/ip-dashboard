[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"wnchan"},"content":"id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":16,"author":{"gitId":"wnchan"},"content":"String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":17,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":18,"author":{"gitId":"wnchan"},"content":"implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":19,"author":{"gitId":"wnchan"},"content":"implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":20,"author":{"gitId":"wnchan"},"content":"implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":21,"author":{"gitId":"wnchan"},"content":"implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":22,"author":{"gitId":"wnchan"},"content":"implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":23,"author":{"gitId":"wnchan"},"content":"implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":24,"author":{"gitId":"wnchan"},"content":"implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":25,"author":{"gitId":"wnchan"},"content":"implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":26,"author":{"gitId":"wnchan"},"content":"implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":27,"author":{"gitId":"wnchan"},"content":"implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":28,"author":{"gitId":"wnchan"},"content":"implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":29,"author":{"gitId":"wnchan"},"content":"implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"wnchan"},"content":"mainClass.set(\"dukduk.Launcher\")","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"wnchan"},"content":"archiveBaseName \u003d \"dukduk\"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"wnchan"},"content":"archiveFileName \u003d \u0027dukduk.jar\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"wnchan"},"content":"checkstyle {","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"wnchan"},"content":"toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"wnchan"},"content":"enableAssertions \u003d true","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wnchan":22,"-":42}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"wnchan"},"content":"# DukdukðŸ¦† User Guide","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"wnchan"},"content":"DukdukðŸ¦† is a desktop chatbot application for managing and storing tasks,","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"wnchan"},"content":"with a Graphical User Interface (GUI).","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"wnchan"},"content":"DukdukðŸ¦† is your personal assistant! Start getting organised by talking to dukduk!","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"wnchan"},"content":"## Quick start","lastModifiedDate":"2023-09-21"},{"lineNumber":9,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"wnchan"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"wnchan"},"content":"2. Download the latest `dukduk.jar` from [here](https://github.com/wnchan/ip/releases/latest).","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"wnchan"},"content":"3. Copy the file to the folder you want to use as the home folder for your dukduk chatbot.","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"wnchan"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar dukduk.jar` command to run the dukduk chatbot.","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"wnchan"},"content":"5. Dukduk can help to find any deadlines or events. Try entering `find` command. You should see the GUI as below.","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"wnchan"},"content":"\u003cdiv style\u003d\"text-align:center;\"\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"wnchan"},"content":"  \u003cimg src\u003d\"Ui.png\" alt\u003d\"Image of Ui\"\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"wnchan"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"wnchan"},"content":"6. Type the command in the command box and press `Enter` or the `Send` button to execute it.","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"wnchan"},"content":"   Some example commands you can try:","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"wnchan"},"content":"    **`any command`**: Shows help message that explains what commands there are and how to use it.\u003cbr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"wnchan"},"content":"    **`todo`**`finish report`: Adds a todo task `finish report` to the list.\u003cbr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"wnchan"},"content":"    **`list`**: Lists all the tasks in the list.\u003cbr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"wnchan"},"content":"    **`find`**`report`: Finds and lists all the tasks in the list that matches with the keyword, `report`.\u003cbr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"wnchan"},"content":"    **`bye`**: Exits the program.\u003cbr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"wnchan"},"content":"7. Refer to the [Features](#features) below for more details on each command.","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"wnchan"},"content":"\u003cdiv class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"wnchan"},"content":"**Note:**\u003cbr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"wnchan"},"content":"* Words in [ ] are the parameters that the user needs to enter. \u003cbr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"wnchan"},"content":"  e.g. in `todo [task]`, `task` is a parameter e.g. `todo homework`.","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":49,"author":{"gitId":"wnchan"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"wnchan"},"content":"### ðŸ¦† Add a todo task: `todo`","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"wnchan"},"content":"Adds a todo task to the list.\u003cbr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"wnchan"},"content":"Format: `todo [task]`","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":56,"author":{"gitId":"wnchan"},"content":"### ðŸ¦† Add a deadline task: `deadline`","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"wnchan"},"content":"Adds a deadline task to the list.\u003cbr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"wnchan"},"content":"Format: `deadline [task] /by yyyy-mm-dd hhmm`","lastModifiedDate":"2023-09-21"},{"lineNumber":60,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":61,"author":{"gitId":"wnchan"},"content":"### ðŸ¦† Add an event task: `event`","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"wnchan"},"content":"Adds an event task to the list.\u003cbr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"wnchan"},"content":"Format: `event [task] /from yyyy-mm-dd hhmm /to yyyy-mm-dd hhmm`","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":66,"author":{"gitId":"wnchan"},"content":"### ðŸ¦† List all tasks: `list`","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":68,"author":{"gitId":"wnchan"},"content":"Lists all the tasks in the list.\u003cbr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"wnchan"},"content":"Format: `list`","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"wnchan"},"content":"### ðŸ¦† Mark task: `mark`","lastModifiedDate":"2023-09-21"},{"lineNumber":72,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"wnchan"},"content":"Marks a task with the specified task number in the list as done.\u003cbr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":74,"author":{"gitId":"wnchan"},"content":"Format: `mark [task number]`","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":76,"author":{"gitId":"wnchan"},"content":"* The task number must be valid and positive","lastModifiedDate":"2023-09-21"},{"lineNumber":77,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":78,"author":{"gitId":"wnchan"},"content":"### ðŸ¦† Unmark task: `unmark`","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":80,"author":{"gitId":"wnchan"},"content":"Marks a task with the specified task number in the list as not done.\u003cbr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":81,"author":{"gitId":"wnchan"},"content":"Format: `unmark [task number]`","lastModifiedDate":"2023-09-21"},{"lineNumber":82,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":83,"author":{"gitId":"wnchan"},"content":"* The task number must be valid and positive","lastModifiedDate":"2023-09-21"},{"lineNumber":84,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":85,"author":{"gitId":"wnchan"},"content":"### ðŸ¦† Delete task: `delete`","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":87,"author":{"gitId":"wnchan"},"content":"Deletes a task with the specified task number in the list.\u003cbr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":88,"author":{"gitId":"wnchan"},"content":"Format: `delete [task number]`","lastModifiedDate":"2023-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":90,"author":{"gitId":"wnchan"},"content":"* The task number must be valid and positive","lastModifiedDate":"2023-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":92,"author":{"gitId":"wnchan"},"content":"### ðŸ¦† Find tasks: `find`","lastModifiedDate":"2023-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":94,"author":{"gitId":"wnchan"},"content":"Finds all tasks that matches the keyword.\u003cbr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":95,"author":{"gitId":"wnchan"},"content":"Format: `find [keyword]`","lastModifiedDate":"2023-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":97,"author":{"gitId":"wnchan"},"content":"Finds all tasks containing the `keyword`. Possible searches includes:","lastModifiedDate":"2023-09-21"},{"lineNumber":98,"author":{"gitId":"wnchan"},"content":"* Case-insensitive search","lastModifiedDate":"2023-09-21"},{"lineNumber":99,"author":{"gitId":"wnchan"},"content":"* Partial word search","lastModifiedDate":"2023-09-21"},{"lineNumber":100,"author":{"gitId":"wnchan"},"content":"* Date / timing search","lastModifiedDate":"2023-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":102,"author":{"gitId":"wnchan"},"content":"### ðŸ¦† Exit program: `bye`","lastModifiedDate":"2023-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":104,"author":{"gitId":"wnchan"},"content":"Displays farewell message.\u003cbr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":105,"author":{"gitId":"wnchan"},"content":"Format: `bye`","lastModifiedDate":"2023-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":107,"author":{"gitId":"wnchan"},"content":"## FAQ","lastModifiedDate":"2023-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":109,"author":{"gitId":"wnchan"},"content":"**Q:** How do I save my data? \u003cbr\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":111,"author":{"gitId":"wnchan"},"content":"**A:** There is no need to save data manually. Your data will be automatically saved when you perform any command.","lastModifiedDate":"2023-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":113,"author":{"gitId":"wnchan"},"content":"## Command summary","lastModifiedDate":"2023-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":115,"author":{"gitId":"wnchan"},"content":"| Action       | Format, Examples                                                                                                              ","lastModifiedDate":"2023-09-22"},{"lineNumber":116,"author":{"gitId":"wnchan"},"content":"|--------------|-------------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-22"},{"lineNumber":117,"author":{"gitId":"wnchan"},"content":"| **Todo**     | `todo [task]` \u003cbr\u003e e.g., `todo complete quiz`                                                                                 ","lastModifiedDate":"2023-09-22"},{"lineNumber":118,"author":{"gitId":"wnchan"},"content":"| **Deadline** | `deadline [task] /by yyyy-mm-dd hhmm` \u003cbr\u003e e.g., `deadline submit report /by 2023-09-21 1800`                                 ","lastModifiedDate":"2023-09-22"},{"lineNumber":119,"author":{"gitId":"wnchan"},"content":"| **Event**    | `event [task] /from yyyy-mm-dd hhmm /to yyyy-mm-dd hhmm` \u003cbr\u003e e.g., `event meeting /from 2023-09-21 1400 /to 2023-09-21 1600` ","lastModifiedDate":"2023-09-22"},{"lineNumber":120,"author":{"gitId":"wnchan"},"content":"| **List**     | `list`                                                                                                                        ","lastModifiedDate":"2023-09-22"},{"lineNumber":121,"author":{"gitId":"wnchan"},"content":"| **Mark**     | `mark [task number]` \u003cbr\u003e e.g., `mark 1`                                                                                      ","lastModifiedDate":"2023-09-22"},{"lineNumber":122,"author":{"gitId":"wnchan"},"content":"| **Unmark**   | `unmark [task number]` \u003cbr\u003e e.g., `unmark 2`                                                                                  ","lastModifiedDate":"2023-09-22"},{"lineNumber":123,"author":{"gitId":"wnchan"},"content":"| **Delete**   | `delete [task number]` \u003cbr\u003e e.g., `delete 3`                                                                                  ","lastModifiedDate":"2023-09-22"},{"lineNumber":124,"author":{"gitId":"wnchan"},"content":"| **Find**     | `find [keyword]` \u003cbr\u003e e.g., `find report`                                                                                     ","lastModifiedDate":"2023-09-22"},{"lineNumber":125,"author":{"gitId":"wnchan"},"content":"| **Exit**     | `bye`                                                                                                                         ","lastModifiedDate":"2023-09-22"}],"authorContributionMap":{"wnchan":110,"-":15}},{"path":"src/main/java/Dukduk/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wnchan"},"content":"package dukduk;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"wnchan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"wnchan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"wnchan"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"wnchan"},"content":" * Represents a task with a specific deadline.","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"wnchan"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"wnchan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"wnchan"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"wnchan"},"content":"     * Initialises a new Deadline task with the given description and deadline.","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"wnchan"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"wnchan"},"content":"     * @param by          The deadline of the task as a LocalDateTime object.","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"wnchan"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-09-04"},{"lineNumber":20,"author":{"gitId":"wnchan"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"wnchan"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"wnchan"},"content":"     * Gets the LocalDateTime representing the deadline of the task.","lastModifiedDate":"2023-09-18"},{"lineNumber":26,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"wnchan"},"content":"     * @return The LocalDateTime representing the deadline.","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"wnchan"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"wnchan"},"content":"        return this.by;","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"wnchan"},"content":"     * Returns a string representation of the Deadline task, including its description and deadline.","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"wnchan"},"content":"     * @return A formatted string representing the Deadline task.","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"wnchan"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"wnchan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"wnchan"},"content":"        return \"[D]\" + super.toString() + \" (by: \" +","lastModifiedDate":"2023-09-04"},{"lineNumber":41,"author":{"gitId":"wnchan"},"content":"                by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";","lastModifiedDate":"2023-09-04"},{"lineNumber":42,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":43,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"wnchan"},"content":"     * Returns a string representation of the Deadline task in a data-friendly format.","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"wnchan"},"content":"     * @return A formatted string suitable for data storage.","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"wnchan"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"wnchan"},"content":"    public String toDataString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"wnchan"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + ","lastModifiedDate":"2023-09-04"},{"lineNumber":52,"author":{"gitId":"wnchan"},"content":"                by.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"wnchan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wnchan":54}},{"path":"src/main/java/Dukduk/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wnchan"},"content":"package dukduk;","lastModifiedDate":"2023-09-17"},{"lineNumber":2,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":3,"author":{"gitId":"wnchan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-17"},{"lineNumber":4,"author":{"gitId":"wnchan"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-17"},{"lineNumber":5,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":6,"author":{"gitId":"wnchan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-17"},{"lineNumber":7,"author":{"gitId":"wnchan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-17"},{"lineNumber":8,"author":{"gitId":"wnchan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"wnchan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"wnchan"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"wnchan"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"wnchan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"wnchan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"wnchan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-17"},{"lineNumber":15,"author":{"gitId":"wnchan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":17,"author":{"gitId":"wnchan"},"content":"/**","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"wnchan"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"wnchan"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"wnchan"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"wnchan"},"content":" */","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"wnchan"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"wnchan"},"content":"    @FXML","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"wnchan"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"wnchan"},"content":"    @FXML","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"wnchan"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-17"},{"lineNumber":27,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"wnchan"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-17"},{"lineNumber":29,"author":{"gitId":"wnchan"},"content":"        try {","lastModifiedDate":"2023-09-17"},{"lineNumber":30,"author":{"gitId":"wnchan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-17"},{"lineNumber":31,"author":{"gitId":"wnchan"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-17"},{"lineNumber":32,"author":{"gitId":"wnchan"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-17"},{"lineNumber":33,"author":{"gitId":"wnchan"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-17"},{"lineNumber":34,"author":{"gitId":"wnchan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-17"},{"lineNumber":35,"author":{"gitId":"wnchan"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-17"},{"lineNumber":36,"author":{"gitId":"wnchan"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":37,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":38,"author":{"gitId":"wnchan"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-17"},{"lineNumber":39,"author":{"gitId":"wnchan"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-17"},{"lineNumber":40,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":41,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":42,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":43,"author":{"gitId":"wnchan"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-17"},{"lineNumber":44,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":45,"author":{"gitId":"wnchan"},"content":"    private void flip() {","lastModifiedDate":"2023-09-17"},{"lineNumber":46,"author":{"gitId":"wnchan"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-17"},{"lineNumber":47,"author":{"gitId":"wnchan"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-17"},{"lineNumber":48,"author":{"gitId":"wnchan"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-17"},{"lineNumber":49,"author":{"gitId":"wnchan"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-17"},{"lineNumber":50,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":51,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":52,"author":{"gitId":"wnchan"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-17"},{"lineNumber":53,"author":{"gitId":"wnchan"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-09-17"},{"lineNumber":54,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":55,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":56,"author":{"gitId":"wnchan"},"content":"    public static DialogBox getDukdukDialog(String text, Image img) {","lastModifiedDate":"2023-09-17"},{"lineNumber":57,"author":{"gitId":"wnchan"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-17"},{"lineNumber":58,"author":{"gitId":"wnchan"},"content":"        db.flip();","lastModifiedDate":"2023-09-17"},{"lineNumber":59,"author":{"gitId":"wnchan"},"content":"        return db;","lastModifiedDate":"2023-09-17"},{"lineNumber":60,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":61,"author":{"gitId":"wnchan"},"content":"}","lastModifiedDate":"2023-09-17"}],"authorContributionMap":{"wnchan":61}},{"path":"src/main/java/Dukduk/Dukduk.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wnchan"},"content":"package dukduk;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"wnchan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-26"},{"lineNumber":4,"author":{"gitId":"wnchan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"wnchan"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-21"},{"lineNumber":6,"author":{"gitId":"wnchan"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"wnchan"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"wnchan"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"wnchan"},"content":" * The main class used for the Dukduk chatbot.","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"wnchan"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"wnchan"},"content":"public class Dukduk {","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"wnchan"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"wnchan"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"wnchan"},"content":"     * Constructs a new Dukduk chatbot with the specified file path.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"wnchan"},"content":"    public Dukduk() {","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"wnchan"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"wnchan"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"wnchan"},"content":"        Storage.createDataLocation();","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"wnchan"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d Storage.loadTasksFromFile();","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"wnchan"},"content":"        if (loadedTasks !\u003d null) {","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"wnchan"},"content":"            this.tasks.setTasks(loadedTasks);","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"wnchan"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"wnchan"},"content":"     * Manages the reply for inputs to dukduk chatbot.","lastModifiedDate":"2023-09-17"},{"lineNumber":33,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"wnchan"},"content":"    public String reply(String input, Stage stage) {","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"wnchan"},"content":"        try {","lastModifiedDate":"2023-08-26"},{"lineNumber":36,"author":{"gitId":"wnchan"},"content":"            Parser parser \u003d new Parser(input);","lastModifiedDate":"2023-09-17"},{"lineNumber":37,"author":{"gitId":"wnchan"},"content":"            String firstInput \u003d parser.getCommand();","lastModifiedDate":"2023-09-17"},{"lineNumber":38,"author":{"gitId":"wnchan"},"content":"            switch (firstInput) {","lastModifiedDate":"2023-09-17"},{"lineNumber":39,"author":{"gitId":"wnchan"},"content":"                case \"bye\":","lastModifiedDate":"2023-09-17"},{"lineNumber":40,"author":{"gitId":"wnchan"},"content":"                    Storage.saveTasksToFile(this.tasks.getTasks());","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"wnchan"},"content":"                    PauseTransition delay \u003d new PauseTransition(Duration.seconds(1));","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"wnchan"},"content":"                    delay.setOnFinished(event -\u003e {","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"wnchan"},"content":"                        Platform.runLater(() -\u003e stage.close());","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"wnchan"},"content":"                    });","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"wnchan"},"content":"                    delay.play();","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"wnchan"},"content":"                    return this.ui.printExit();","lastModifiedDate":"2023-09-17"},{"lineNumber":47,"author":{"gitId":"wnchan"},"content":"                case \"list\":","lastModifiedDate":"2023-09-17"},{"lineNumber":48,"author":{"gitId":"wnchan"},"content":"                    if (this.tasks.getTaskCount() \u003d\u003d 0) {","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"wnchan"},"content":"                        throw new DukdukException(\"QUACKKK!!! No tasks has been added yet.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":50,"author":{"gitId":"wnchan"},"content":"                    } else {","lastModifiedDate":"2023-08-24"},{"lineNumber":51,"author":{"gitId":"wnchan"},"content":"                        return this.ui.printTasks(this.tasks.getTasks());","lastModifiedDate":"2023-09-17"},{"lineNumber":52,"author":{"gitId":"wnchan"},"content":"                    }","lastModifiedDate":"2023-09-04"},{"lineNumber":53,"author":{"gitId":"wnchan"},"content":"                case \"todo\":","lastModifiedDate":"2023-09-17"},{"lineNumber":54,"author":{"gitId":"wnchan"},"content":"                case \"deadline\":","lastModifiedDate":"2023-09-17"},{"lineNumber":55,"author":{"gitId":"wnchan"},"content":"                case \"event\":","lastModifiedDate":"2023-09-17"},{"lineNumber":56,"author":{"gitId":"wnchan"},"content":"                    Task task \u003d Parser.parseTask(input);","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"wnchan"},"content":"                    this.tasks.addTask(task);","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"wnchan"},"content":"                    Storage.saveTasksToFile(this.tasks.getTasks());","lastModifiedDate":"2023-09-21"},{"lineNumber":59,"author":{"gitId":"wnchan"},"content":"                    return this.ui.addTask(this.tasks.getTasks());","lastModifiedDate":"2023-09-17"},{"lineNumber":60,"author":{"gitId":"wnchan"},"content":"                case \"mark\":","lastModifiedDate":"2023-09-17"},{"lineNumber":61,"author":{"gitId":"wnchan"},"content":"                    if (input.length() \u003c\u003d firstInput.length()) {","lastModifiedDate":"2023-09-18"},{"lineNumber":62,"author":{"gitId":"wnchan"},"content":"                        throw new DukdukException(\"QUACKKK!!! Please provide additional information for the \u0027\" + firstInput + \"\u0027 command.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":63,"author":{"gitId":"wnchan"},"content":"                    }","lastModifiedDate":"2023-09-18"},{"lineNumber":64,"author":{"gitId":"wnchan"},"content":"                    int taskIndex \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"wnchan"},"content":"                    this.tasks.markTaskAsDone(taskIndex);","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"wnchan"},"content":"                    Storage.saveTasksToFile(this.tasks.getTasks());","lastModifiedDate":"2023-09-21"},{"lineNumber":67,"author":{"gitId":"wnchan"},"content":"                    return this.ui.markAsDone(this.tasks.getTasks(), taskIndex);","lastModifiedDate":"2023-09-17"},{"lineNumber":68,"author":{"gitId":"wnchan"},"content":"                case \"unmark\":","lastModifiedDate":"2023-09-17"},{"lineNumber":69,"author":{"gitId":"wnchan"},"content":"                    if (input.length() \u003c\u003d firstInput.length()) {","lastModifiedDate":"2023-09-18"},{"lineNumber":70,"author":{"gitId":"wnchan"},"content":"                        throw new DukdukException(\"QUACKKK!!! Please provide additional information for the \u0027\" + firstInput + \"\u0027 command.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":71,"author":{"gitId":"wnchan"},"content":"                    }","lastModifiedDate":"2023-09-18"},{"lineNumber":72,"author":{"gitId":"wnchan"},"content":"                    int unmarkTaskIndex \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2023-09-17"},{"lineNumber":73,"author":{"gitId":"wnchan"},"content":"                    this.tasks.unMarkTask(unmarkTaskIndex);","lastModifiedDate":"2023-09-17"},{"lineNumber":74,"author":{"gitId":"wnchan"},"content":"                    Storage.saveTasksToFile(this.tasks.getTasks());","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"wnchan"},"content":"                    return this.ui.markAsNotDone(this.tasks.getTasks(), unmarkTaskIndex);","lastModifiedDate":"2023-09-17"},{"lineNumber":76,"author":{"gitId":"wnchan"},"content":"                case \"delete\":","lastModifiedDate":"2023-09-17"},{"lineNumber":77,"author":{"gitId":"wnchan"},"content":"                    String[] parts \u003d input.split(\" \");","lastModifiedDate":"2023-08-26"},{"lineNumber":78,"author":{"gitId":"wnchan"},"content":"                    if (parts.length !\u003d 2) {","lastModifiedDate":"2023-08-26"},{"lineNumber":79,"author":{"gitId":"wnchan"},"content":"                            throw new DukdukException(\"QUACKKK!!! Please specify the task number to delete.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":80,"author":{"gitId":"wnchan"},"content":"                    }","lastModifiedDate":"2023-08-26"},{"lineNumber":81,"author":{"gitId":"wnchan"},"content":"                    int deleteTaskIndex \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2023-09-17"},{"lineNumber":82,"author":{"gitId":"wnchan"},"content":"                    return this.tasks.deleteTask(deleteTaskIndex);","lastModifiedDate":"2023-09-17"},{"lineNumber":83,"author":{"gitId":"wnchan"},"content":"                case \"find\":","lastModifiedDate":"2023-09-17"},{"lineNumber":84,"author":{"gitId":"wnchan"},"content":"                    if (input.length() \u003c\u003d firstInput.length()) {","lastModifiedDate":"2023-09-18"},{"lineNumber":85,"author":{"gitId":"wnchan"},"content":"                        throw new DukdukException(\"QUACKKK!!! Please provide additional information for the \u0027\" + firstInput + \"\u0027 command.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":86,"author":{"gitId":"wnchan"},"content":"                    }","lastModifiedDate":"2023-09-18"},{"lineNumber":87,"author":{"gitId":"wnchan"},"content":"                    String keyword \u003d input.substring(5).trim();","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"wnchan"},"content":"                    ArrayList\u003cTask\u003e matchingTasks \u003d this.tasks.findTasks(keyword);","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"wnchan"},"content":"                    return this.ui.printTasksIfFound(matchingTasks);","lastModifiedDate":"2023-09-17"},{"lineNumber":90,"author":{"gitId":"wnchan"},"content":"                default:","lastModifiedDate":"2023-09-17"},{"lineNumber":91,"author":{"gitId":"wnchan"},"content":"                    return this.ui.printHelpMessage();","lastModifiedDate":"2023-09-17"},{"lineNumber":92,"author":{"gitId":"wnchan"},"content":"            }","lastModifiedDate":"2023-08-24"},{"lineNumber":93,"author":{"gitId":"wnchan"},"content":"        } catch (DukdukException e) {","lastModifiedDate":"2023-08-26"},{"lineNumber":94,"author":{"gitId":"wnchan"},"content":"            return this.ui.printErrorMsg(e);","lastModifiedDate":"2023-09-17"},{"lineNumber":95,"author":{"gitId":"wnchan"},"content":"        }","lastModifiedDate":"2023-08-26"},{"lineNumber":96,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":97,"author":{"gitId":"wnchan"},"content":"}","lastModifiedDate":"2023-08-24"},{"lineNumber":98,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":99,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"wnchan":99}},{"path":"src/main/java/Dukduk/DukdukException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wnchan"},"content":"package dukduk;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"wnchan"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"wnchan"},"content":" * Custom exception class for Dukduk chatbot.","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"wnchan"},"content":" * This exception is thrown to indicate errors specific to the Dukduk chatbot.","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"wnchan"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"wnchan"},"content":"public class DukdukException extends Exception {","lastModifiedDate":"2023-08-26"},{"lineNumber":8,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"wnchan"},"content":"     * Constructs a new DukdukException with the specified error message.","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"wnchan"},"content":"     * @param message The error message associated with this exception.","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"wnchan"},"content":"    public DukdukException(String message) {","lastModifiedDate":"2023-08-26"},{"lineNumber":15,"author":{"gitId":"wnchan"},"content":"        super(message);","lastModifiedDate":"2023-08-26"},{"lineNumber":16,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-08-26"},{"lineNumber":17,"author":{"gitId":"wnchan"},"content":"}","lastModifiedDate":"2023-08-26"}],"authorContributionMap":{"wnchan":17}},{"path":"src/main/java/Dukduk/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wnchan"},"content":"package dukduk;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"wnchan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"wnchan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"wnchan"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"wnchan"},"content":" * Represents a task that is an event with a specific start and end date/time.","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"wnchan"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"wnchan"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"wnchan"},"content":"    protected LocalDateTime fromDateTime;","lastModifiedDate":"2023-09-04"},{"lineNumber":12,"author":{"gitId":"wnchan"},"content":"    protected LocalDateTime toDateTime;","lastModifiedDate":"2023-09-04"},{"lineNumber":13,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"wnchan"},"content":"     * Initializes a new Event task with the given description, start date/time, and end date/time.","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"wnchan"},"content":"     * @param description   The description of the event.","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"wnchan"},"content":"     * @param fromDateTime  The start date/time of the event as a LocalDateTime object.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"wnchan"},"content":"     * @param toDateTime    The end date/time of the event as a LocalDateTime object.","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"wnchan"},"content":"    public Event(String description, LocalDateTime fromDateTime, LocalDateTime toDateTime) {","lastModifiedDate":"2023-09-04"},{"lineNumber":22,"author":{"gitId":"wnchan"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"wnchan"},"content":"        this.fromDateTime \u003d fromDateTime;","lastModifiedDate":"2023-09-04"},{"lineNumber":24,"author":{"gitId":"wnchan"},"content":"        this.toDateTime \u003d toDateTime;","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":27,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"wnchan"},"content":"     * Gets the start date and time of the event.","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"wnchan"},"content":"     * @return The LocalDateTime representing the start date and time.","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"wnchan"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"wnchan"},"content":"        return this.fromDateTime;","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"wnchan"},"content":"     * Gets the end date and time of the event.","lastModifiedDate":"2023-09-18"},{"lineNumber":38,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"wnchan"},"content":"     * @return The LocalDateTime representing the end date and time.","lastModifiedDate":"2023-09-18"},{"lineNumber":40,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":41,"author":{"gitId":"wnchan"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2023-09-18"},{"lineNumber":42,"author":{"gitId":"wnchan"},"content":"        return this.toDateTime;","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":44,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"wnchan"},"content":"     * Returns a string representation of the Event task, including its description, ","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"wnchan"},"content":"     * start date/time, and end date/time.","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"wnchan"},"content":"     * @return A formatted string representing the Event task.","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"wnchan"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"wnchan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"wnchan"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + ","lastModifiedDate":"2023-09-04"},{"lineNumber":54,"author":{"gitId":"wnchan"},"content":"                fromDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \" to: \" + ","lastModifiedDate":"2023-09-04"},{"lineNumber":55,"author":{"gitId":"wnchan"},"content":"                toDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";","lastModifiedDate":"2023-09-04"},{"lineNumber":56,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":57,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"wnchan"},"content":"     * Returns a string representation of the Event task in a data-friendly format.","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"wnchan"},"content":"     * @return A formatted string suitable for data storage.","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"wnchan"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":64,"author":{"gitId":"wnchan"},"content":"    public String toDataString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":65,"author":{"gitId":"wnchan"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + ","lastModifiedDate":"2023-09-04"},{"lineNumber":66,"author":{"gitId":"wnchan"},"content":"                fromDateTime.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\")) + \"|\" + ","lastModifiedDate":"2023-09-04"},{"lineNumber":67,"author":{"gitId":"wnchan"},"content":"                toDateTime.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":68,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":69,"author":{"gitId":"wnchan"},"content":"}","lastModifiedDate":"2023-09-03"},{"lineNumber":70,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"wnchan":70}},{"path":"src/main/java/Dukduk/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wnchan"},"content":"package dukduk;","lastModifiedDate":"2023-09-17"},{"lineNumber":2,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":3,"author":{"gitId":"wnchan"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-17"},{"lineNumber":4,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":5,"author":{"gitId":"wnchan"},"content":"/**","lastModifiedDate":"2023-09-17"},{"lineNumber":6,"author":{"gitId":"wnchan"},"content":" * A launcher class to launch the dukduk chatbot.","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"wnchan"},"content":" */","lastModifiedDate":"2023-09-17"},{"lineNumber":8,"author":{"gitId":"wnchan"},"content":"public class Launcher {","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"wnchan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"wnchan"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"wnchan"},"content":"}","lastModifiedDate":"2023-09-17"}],"authorContributionMap":{"wnchan":12}},{"path":"src/main/java/Dukduk/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wnchan"},"content":"package dukduk;","lastModifiedDate":"2023-09-17"},{"lineNumber":2,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":3,"author":{"gitId":"wnchan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-17"},{"lineNumber":4,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":5,"author":{"gitId":"wnchan"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-17"},{"lineNumber":6,"author":{"gitId":"wnchan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-17"},{"lineNumber":7,"author":{"gitId":"wnchan"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-17"},{"lineNumber":8,"author":{"gitId":"wnchan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"wnchan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"wnchan"},"content":"/**","lastModifiedDate":"2023-09-17"},{"lineNumber":12,"author":{"gitId":"wnchan"},"content":" * A GUI for Dukduk using FXML.","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"wnchan"},"content":" */","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"wnchan"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-17"},{"lineNumber":15,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"wnchan"},"content":"    private Dukduk dukduk \u003d new Dukduk();","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"wnchan"},"content":"    @Override","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"wnchan"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"wnchan"},"content":"        try {","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"wnchan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"wnchan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"wnchan"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"wnchan"},"content":"            stage.setTitle(\"dukduk\");","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"wnchan"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"wnchan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDukduk(dukduk, stage);","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"wnchan"},"content":"            stage.show();","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"wnchan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-17"},{"lineNumber":29,"author":{"gitId":"wnchan"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-17"},{"lineNumber":30,"author":{"gitId":"wnchan"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":31,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":32,"author":{"gitId":"wnchan"},"content":"}","lastModifiedDate":"2023-09-17"},{"lineNumber":33,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"wnchan":33}},{"path":"src/main/java/Dukduk/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wnchan"},"content":"package dukduk;","lastModifiedDate":"2023-09-17"},{"lineNumber":2,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":3,"author":{"gitId":"wnchan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-17"},{"lineNumber":4,"author":{"gitId":"wnchan"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-17"},{"lineNumber":5,"author":{"gitId":"wnchan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-17"},{"lineNumber":6,"author":{"gitId":"wnchan"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-17"},{"lineNumber":7,"author":{"gitId":"wnchan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-17"},{"lineNumber":8,"author":{"gitId":"wnchan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"wnchan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"wnchan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"wnchan"},"content":"/**","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"wnchan"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"wnchan"},"content":" */","lastModifiedDate":"2023-09-17"},{"lineNumber":15,"author":{"gitId":"wnchan"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"wnchan"},"content":"    @FXML","lastModifiedDate":"2023-09-17"},{"lineNumber":17,"author":{"gitId":"wnchan"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"wnchan"},"content":"    @FXML","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"wnchan"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"wnchan"},"content":"    @FXML","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"wnchan"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"wnchan"},"content":"    @FXML","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"wnchan"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"wnchan"},"content":"    private Dukduk dukduk;","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"wnchan"},"content":"    private Stage stage;","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"wnchan"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-09-17"},{"lineNumber":29,"author":{"gitId":"wnchan"},"content":"    private Image dukdukImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDukduk.png\"));","lastModifiedDate":"2023-09-17"},{"lineNumber":30,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":31,"author":{"gitId":"wnchan"},"content":"    @FXML","lastModifiedDate":"2023-09-17"},{"lineNumber":32,"author":{"gitId":"wnchan"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-17"},{"lineNumber":33,"author":{"gitId":"wnchan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-17"},{"lineNumber":34,"author":{"gitId":"wnchan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-17"},{"lineNumber":35,"author":{"gitId":"wnchan"},"content":"                DialogBox.getDukdukDialog(\"Quack Quack! I\u0027m Dukduk!\\nWhat can I do for you?\", dukdukImage)","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"wnchan"},"content":"        );","lastModifiedDate":"2023-09-17"},{"lineNumber":37,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":38,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":39,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":40,"author":{"gitId":"wnchan"},"content":"     * Sets dukduk for the main window.","lastModifiedDate":"2023-09-17"},{"lineNumber":41,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":42,"author":{"gitId":"wnchan"},"content":"     * @param dukduk","lastModifiedDate":"2023-09-17"},{"lineNumber":43,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":44,"author":{"gitId":"wnchan"},"content":"    public void setDukduk(Dukduk dukduk, Stage stage) {","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"wnchan"},"content":"        this.dukduk \u003d dukduk;","lastModifiedDate":"2023-09-17"},{"lineNumber":46,"author":{"gitId":"wnchan"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2023-09-21"},{"lineNumber":47,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":48,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":49,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":50,"author":{"gitId":"wnchan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Dukduk\u0027s reply","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"wnchan"},"content":"     * and then appends them to the dialog container.","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"wnchan"},"content":"     * Clears the user input after processing.","lastModifiedDate":"2023-09-21"},{"lineNumber":53,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":54,"author":{"gitId":"wnchan"},"content":"    @FXML","lastModifiedDate":"2023-09-17"},{"lineNumber":55,"author":{"gitId":"wnchan"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-17"},{"lineNumber":56,"author":{"gitId":"wnchan"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-17"},{"lineNumber":57,"author":{"gitId":"wnchan"},"content":"        String response \u003d getResponse(input);","lastModifiedDate":"2023-09-17"},{"lineNumber":58,"author":{"gitId":"wnchan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-17"},{"lineNumber":59,"author":{"gitId":"wnchan"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-17"},{"lineNumber":60,"author":{"gitId":"wnchan"},"content":"                DialogBox.getDukdukDialog(response, dukdukImage)","lastModifiedDate":"2023-09-17"},{"lineNumber":61,"author":{"gitId":"wnchan"},"content":"        );","lastModifiedDate":"2023-09-17"},{"lineNumber":62,"author":{"gitId":"wnchan"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-17"},{"lineNumber":63,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":64,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":65,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":66,"author":{"gitId":"wnchan"},"content":"     * Returns the response from dukduk.","lastModifiedDate":"2023-09-17"},{"lineNumber":67,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":68,"author":{"gitId":"wnchan"},"content":"     * @param input the user input","lastModifiedDate":"2023-09-17"},{"lineNumber":69,"author":{"gitId":"wnchan"},"content":"     * @return the response from dukduk","lastModifiedDate":"2023-09-17"},{"lineNumber":70,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":71,"author":{"gitId":"wnchan"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2023-09-17"},{"lineNumber":72,"author":{"gitId":"wnchan"},"content":"        return dukduk.reply(input, stage);","lastModifiedDate":"2023-09-21"},{"lineNumber":73,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":74,"author":{"gitId":"wnchan"},"content":"}","lastModifiedDate":"2023-09-17"}],"authorContributionMap":{"wnchan":74}},{"path":"src/main/java/Dukduk/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wnchan"},"content":"package dukduk;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"wnchan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"wnchan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"wnchan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"wnchan"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"wnchan"},"content":" * The class responsible for parsing user input and creating tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"wnchan"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"wnchan"},"content":"public class Parser {","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"wnchan"},"content":"    private String[] words;","lastModifiedDate":"2023-09-17"},{"lineNumber":13,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":15,"author":{"gitId":"wnchan"},"content":"     * A constructor for a parser","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":17,"author":{"gitId":"wnchan"},"content":"     * @param input the user input","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"wnchan"},"content":"    public Parser(String input) {","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"wnchan"},"content":"        assert input !\u003d null : \"Input cannot be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"wnchan"},"content":"        this.words \u003d input.split(\" \", 2);","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"wnchan"},"content":"     * Return the command word of the user input","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-17"},{"lineNumber":27,"author":{"gitId":"wnchan"},"content":"     * @return the command word","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-17"},{"lineNumber":29,"author":{"gitId":"wnchan"},"content":"    public String getCommand() {","lastModifiedDate":"2023-09-17"},{"lineNumber":30,"author":{"gitId":"wnchan"},"content":"        assert this.words.length \u003e 0 : \"Words array is empty\";","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"wnchan"},"content":"        return this.words[0];","lastModifiedDate":"2023-09-17"},{"lineNumber":32,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-17"},{"lineNumber":33,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":34,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"wnchan"},"content":"     * Parses user input and creates a task object based on the input.","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"wnchan"},"content":"     * @param input The user input to be parsed.","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"wnchan"},"content":"     * @return A Task object created from the input.","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"wnchan"},"content":"     * @throws DukdukException If there is an error in the input or task creation.","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"wnchan"},"content":"    public static Task parseTask(String input) throws DukdukException {","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"wnchan"},"content":"        assert input !\u003d null : \"Input cannot be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"wnchan"},"content":"        if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"wnchan"},"content":"            return parseToDoTask(input);","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"wnchan"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"wnchan"},"content":"            return parseDeadlineTask(input);","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"wnchan"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"wnchan"},"content":"            return parseEventTask(input);","lastModifiedDate":"2023-09-18"},{"lineNumber":49,"author":{"gitId":"wnchan"},"content":"        } else {","lastModifiedDate":"2023-09-18"},{"lineNumber":50,"author":{"gitId":"wnchan"},"content":"            throw new DukdukException(\"QUACKKK!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"wnchan"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"wnchan"},"content":"     * Parses a ToDo task from the given input string.","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":57,"author":{"gitId":"wnchan"},"content":"     * @param input The input string containing the task description.","lastModifiedDate":"2023-09-18"},{"lineNumber":58,"author":{"gitId":"wnchan"},"content":"     * @return A ToDo task.","lastModifiedDate":"2023-09-18"},{"lineNumber":59,"author":{"gitId":"wnchan"},"content":"     * @throws DukdukException If the description is empty.","lastModifiedDate":"2023-09-18"},{"lineNumber":60,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"wnchan"},"content":"    private static Task parseToDoTask(String input) throws DukdukException {","lastModifiedDate":"2023-09-18"},{"lineNumber":62,"author":{"gitId":"wnchan"},"content":"        if (input.length() \u003c\u003d 5) {","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"wnchan"},"content":"            throw new DukdukException(\"QUACKKK!!! The description cannot be empty.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":64,"author":{"gitId":"wnchan"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"wnchan"},"content":"        return new ToDo(input.substring(5));","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":67,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":68,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":69,"author":{"gitId":"wnchan"},"content":"     * Parses a Deadline task from the given input string.","lastModifiedDate":"2023-09-18"},{"lineNumber":70,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":71,"author":{"gitId":"wnchan"},"content":"     * @param input The input string containing the task description and deadline.","lastModifiedDate":"2023-09-18"},{"lineNumber":72,"author":{"gitId":"wnchan"},"content":"     * @return A Deadline task.","lastModifiedDate":"2023-09-18"},{"lineNumber":73,"author":{"gitId":"wnchan"},"content":"     * @throws DukdukException If the deadline format is incorrect or the date/time format is incorrect.","lastModifiedDate":"2023-09-18"},{"lineNumber":74,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":75,"author":{"gitId":"wnchan"},"content":"    private static Task parseDeadlineTask(String input) throws DukdukException {","lastModifiedDate":"2023-09-18"},{"lineNumber":76,"author":{"gitId":"wnchan"},"content":"        int byIndex \u003d input.indexOf(\"/by\");","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"wnchan"},"content":"        if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"wnchan"},"content":"            throw new DukdukException(\"QUACKKK!!! The deadline format is incorrect. \" +","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"wnchan"},"content":"                    \"Use \u0027/by\u0027 to specify the deadline.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"wnchan"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"wnchan"},"content":"        String description \u003d input.substring(9, byIndex).trim();","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"wnchan"},"content":"        String byString \u003d input.substring(byIndex + 3).trim();","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"wnchan"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"wnchan"},"content":"            LocalDateTime by \u003d LocalDateTime.parse(byString, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"wnchan"},"content":"            return new Deadline(description, by);","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"wnchan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"wnchan"},"content":"            throw new DukdukException(\"QUACKKK!!! The date/time format is incorrect. \" +","lastModifiedDate":"2023-09-21"},{"lineNumber":88,"author":{"gitId":"wnchan"},"content":"                    \"Please use \u0027yyyy-MM-dd HHmm\u0027 format.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"wnchan"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":91,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":92,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":93,"author":{"gitId":"wnchan"},"content":"     * Parses an Event task from the given input string.","lastModifiedDate":"2023-09-18"},{"lineNumber":94,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":95,"author":{"gitId":"wnchan"},"content":"     * @param input The input string containing the task description and event timings.","lastModifiedDate":"2023-09-18"},{"lineNumber":96,"author":{"gitId":"wnchan"},"content":"     * @return An Event task.","lastModifiedDate":"2023-09-18"},{"lineNumber":97,"author":{"gitId":"wnchan"},"content":"     * @throws DukdukException If the event format is incorrect, timings are incorrect, or \u0027to\u0027 is not after \u0027from\u0027.","lastModifiedDate":"2023-09-18"},{"lineNumber":98,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":99,"author":{"gitId":"wnchan"},"content":"    private static Task parseEventTask(String input) throws DukdukException {","lastModifiedDate":"2023-09-18"},{"lineNumber":100,"author":{"gitId":"wnchan"},"content":"        int fromIndex \u003d input.indexOf(\"/from\");","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"wnchan"},"content":"        int toIndex \u003d input.indexOf(\"/to\");","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"wnchan"},"content":"        if (fromIndex \u003d\u003d -1 || toIndex \u003d\u003d -1) {","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"wnchan"},"content":"            throw new DukdukException(\"QUACKKK!!! The event format is incorrect. Use \u0027/from\u0027 \" +","lastModifiedDate":"2023-09-21"},{"lineNumber":104,"author":{"gitId":"wnchan"},"content":"                    \"and \u0027/to\u0027 to specify the timings.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"wnchan"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"wnchan"},"content":"        String description \u003d input.substring(6, fromIndex).trim();","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"wnchan"},"content":"        String from \u003d input.substring(fromIndex + 5, toIndex).trim();","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"wnchan"},"content":"        String to \u003d input.substring(toIndex + 3).trim();","lastModifiedDate":"2023-09-05"},{"lineNumber":109,"author":{"gitId":"wnchan"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":110,"author":{"gitId":"wnchan"},"content":"            LocalDateTime fromDateTime \u003d LocalDateTime.parse(from, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"wnchan"},"content":"            LocalDateTime toDateTime \u003d LocalDateTime.parse(to, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":112,"author":{"gitId":"wnchan"},"content":"            if (!toDateTime.isAfter(fromDateTime)) {","lastModifiedDate":"2023-09-05"},{"lineNumber":113,"author":{"gitId":"wnchan"},"content":"                throw new DukdukException(\"QUACKKK!!! The \u0027to\u0027 date/time must be \" +","lastModifiedDate":"2023-09-21"},{"lineNumber":114,"author":{"gitId":"wnchan"},"content":"                        \"after the \u0027from\u0027 date/time.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"wnchan"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"wnchan"},"content":"            return new Event(description, fromDateTime, toDateTime);","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"wnchan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"wnchan"},"content":"            throw new DukdukException(\"QUACKKK!!! The date/time format is incorrect. \" +","lastModifiedDate":"2023-09-21"},{"lineNumber":119,"author":{"gitId":"wnchan"},"content":"                    \"Please use \u0027yyyy-MM-dd HHmm\u0027 format.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"wnchan"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":121,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"wnchan"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"wnchan":122}},{"path":"src/main/java/Dukduk/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wnchan"},"content":"package dukduk;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"wnchan"},"content":"import java.io.*;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"wnchan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"wnchan"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"wnchan"},"content":" * The class responsible for loading and saving tasks from/to a file.","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"wnchan"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"wnchan"},"content":"public class Storage {","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"wnchan"},"content":"    private static final String FILE_PATH \u003d \"src/main/java/data/duke.txt\";","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"wnchan"},"content":"     * Creates the data storage directory and file if they do not exist.","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"wnchan"},"content":"     * If the directory or file creation fails, appropriate error messages are displayed.","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"wnchan"},"content":"    public static void createDataLocation() {","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"wnchan"},"content":"        File dir \u003d new File(\"src/main/java/data\");","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"wnchan"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"wnchan"},"content":"            if (dir.mkdirs()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"wnchan"},"content":"                System.out.println(\"Directory created: \" + dir.getAbsolutePath());","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"wnchan"},"content":"            } else {","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"wnchan"},"content":"                System.err.println(\"Failed to create directory: \"","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"wnchan"},"content":"                        + dir.getAbsolutePath());","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"wnchan"},"content":"                return;","lastModifiedDate":"2023-09-21"},{"lineNumber":27,"author":{"gitId":"wnchan"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":28,"author":{"gitId":"wnchan"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":29,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":30,"author":{"gitId":"wnchan"},"content":"        File db \u003d new File(FILE_PATH);","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"wnchan"},"content":"        if (!db.exists()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"wnchan"},"content":"            try {","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"wnchan"},"content":"                if (db.createNewFile()) {","lastModifiedDate":"2023-09-21"},{"lineNumber":34,"author":{"gitId":"wnchan"},"content":"                    System.out.println(\"File created: \"","lastModifiedDate":"2023-09-21"},{"lineNumber":35,"author":{"gitId":"wnchan"},"content":"                            + db.getAbsolutePath());","lastModifiedDate":"2023-09-21"},{"lineNumber":36,"author":{"gitId":"wnchan"},"content":"                } else {","lastModifiedDate":"2023-09-21"},{"lineNumber":37,"author":{"gitId":"wnchan"},"content":"                    System.err.println(\"Failed to create file: \"","lastModifiedDate":"2023-09-21"},{"lineNumber":38,"author":{"gitId":"wnchan"},"content":"                            + db.getAbsolutePath());","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"wnchan"},"content":"                }","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"wnchan"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"wnchan"},"content":"                System.out.println(\"Error when creating the data storage!\");","lastModifiedDate":"2023-09-21"},{"lineNumber":42,"author":{"gitId":"wnchan"},"content":"            }","lastModifiedDate":"2023-09-21"},{"lineNumber":43,"author":{"gitId":"wnchan"},"content":"        }","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-21"},{"lineNumber":45,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":46,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"wnchan"},"content":"     * Loads tasks from a specified file.","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"wnchan"},"content":"     * @return An ArrayList of tasks loaded from the file.","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"wnchan"},"content":"    public static ArrayList\u003cTask\u003e loadTasksFromFile() {","lastModifiedDate":"2023-09-21"},{"lineNumber":52,"author":{"gitId":"wnchan"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"wnchan"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"wnchan"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2023-09-21"},{"lineNumber":55,"author":{"gitId":"wnchan"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"wnchan"},"content":"                System.out.println(\"No existing tasks file found. Starting with an empty task list.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"wnchan"},"content":"                return tasks;","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"wnchan"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"wnchan"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"wnchan"},"content":"            String line;","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"wnchan"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"wnchan"},"content":"                processTasks(line, tasks);","lastModifiedDate":"2023-09-18"},{"lineNumber":63,"author":{"gitId":"wnchan"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":64,"author":{"gitId":"wnchan"},"content":"            reader.close();","lastModifiedDate":"2023-09-18"},{"lineNumber":65,"author":{"gitId":"wnchan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-18"},{"lineNumber":66,"author":{"gitId":"wnchan"},"content":"            System.out.println(\"Error loading tasks from file: \" + e.getMessage());","lastModifiedDate":"2023-09-18"},{"lineNumber":67,"author":{"gitId":"wnchan"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":68,"author":{"gitId":"wnchan"},"content":"        return tasks;","lastModifiedDate":"2023-09-18"},{"lineNumber":69,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":70,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":71,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":72,"author":{"gitId":"wnchan"},"content":"     * Processes a single line from the tasks file and adds the corresponding Task to the tasks list.","lastModifiedDate":"2023-09-18"},{"lineNumber":73,"author":{"gitId":"wnchan"},"content":"     * If the line contains valid task data, a Task object is created and added to the list.","lastModifiedDate":"2023-09-18"},{"lineNumber":74,"author":{"gitId":"wnchan"},"content":"     * If there is an error parsing the task data, an error message is displayed.","lastModifiedDate":"2023-09-18"},{"lineNumber":75,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":76,"author":{"gitId":"wnchan"},"content":"     * @param line   The line of task data to be processed.","lastModifiedDate":"2023-09-18"},{"lineNumber":77,"author":{"gitId":"wnchan"},"content":"     * @param tasks  The list of tasks to which the processed task will be added.","lastModifiedDate":"2023-09-18"},{"lineNumber":78,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":79,"author":{"gitId":"wnchan"},"content":"    private static void processTasks(String line, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-18"},{"lineNumber":80,"author":{"gitId":"wnchan"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"wnchan"},"content":"            Task task \u003d Task.createTaskFromDataString(line);","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"wnchan"},"content":"            tasks.add(task);","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"wnchan"},"content":"            String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"wnchan"},"content":"            if (parts.length \u003e\u003d 2 \u0026\u0026 parts[1].equals(\"1\")) {","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"wnchan"},"content":"                task.markAsDone();","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"wnchan"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":87,"author":{"gitId":"wnchan"},"content":"        } catch (DukdukException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"wnchan"},"content":"            System.out.println(\"Error parsing task data: \" + e.getMessage());","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"wnchan"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"wnchan"},"content":"     * Saves tasks to a specified file.","lastModifiedDate":"2023-09-07"},{"lineNumber":94,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"wnchan"},"content":"     * @param tasks    An ArrayList of tasks to be saved to the file.","lastModifiedDate":"2023-09-07"},{"lineNumber":96,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"wnchan"},"content":"    public static void saveTasksToFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-21"},{"lineNumber":98,"author":{"gitId":"wnchan"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(FILE_PATH))) {","lastModifiedDate":"2023-09-21"},{"lineNumber":99,"author":{"gitId":"wnchan"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"wnchan"},"content":"                writer.write(task.toDataString());","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"wnchan"},"content":"                writer.newLine();","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"wnchan"},"content":"            }","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"wnchan"},"content":"            writer.flush();","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"wnchan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"wnchan"},"content":"            System.out.println(\"Error saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"wnchan"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":107,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"wnchan"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"wnchan":108}},{"path":"src/main/java/Dukduk/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wnchan"},"content":"package dukduk;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"wnchan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"wnchan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-04"},{"lineNumber":5,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":6,"author":{"gitId":"wnchan"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"wnchan"},"content":" * Represents an abstract task with a description and completion status.","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"wnchan"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"wnchan"},"content":"public abstract class Task {","lastModifiedDate":"2023-09-03"},{"lineNumber":10,"author":{"gitId":"wnchan"},"content":"    protected String description;","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"wnchan"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-24"},{"lineNumber":12,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":13,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"wnchan"},"content":"     * Initializes a new task with the given description and sets its completion status to false.","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"wnchan"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"wnchan"},"content":"    public Task(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":19,"author":{"gitId":"wnchan"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-08-24"},{"lineNumber":20,"author":{"gitId":"wnchan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":21,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":22,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"wnchan"},"content":"     * Gets an icon representing the completion status of the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"wnchan"},"content":"     * @return \"X\" if the task is completed, \" \" (space) if it is not.","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"wnchan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-24"},{"lineNumber":29,"author":{"gitId":"wnchan"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-08-24"},{"lineNumber":30,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":31,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":32,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"wnchan"},"content":"     * Gets the description of the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"wnchan"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"wnchan"},"content":"    public String getDescription() {","lastModifiedDate":"2023-08-24"},{"lineNumber":38,"author":{"gitId":"wnchan"},"content":"        return description;","lastModifiedDate":"2023-08-24"},{"lineNumber":39,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":40,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":41,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"wnchan"},"content":"     * Marks the task as done by setting its completion status to true.","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"wnchan"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-24"},{"lineNumber":45,"author":{"gitId":"wnchan"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-08-24"},{"lineNumber":46,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":47,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":48,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"wnchan"},"content":"     * Unmarks the task by setting its completion status to false.","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"wnchan"},"content":"    public void unmark() {","lastModifiedDate":"2023-08-24"},{"lineNumber":52,"author":{"gitId":"wnchan"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-08-24"},{"lineNumber":53,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":54,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":55,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":56,"author":{"gitId":"wnchan"},"content":"     * Returns a string representation of the task, including its completion status icon ","lastModifiedDate":"2023-09-21"},{"lineNumber":57,"author":{"gitId":"wnchan"},"content":"     * and description.","lastModifiedDate":"2023-09-21"},{"lineNumber":58,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"wnchan"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"wnchan"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":62,"author":{"gitId":"wnchan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":63,"author":{"gitId":"wnchan"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2023-08-24"},{"lineNumber":64,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":65,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":66,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"wnchan"},"content":"     * Returns a string representation of the task in a data-friendly format.","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":69,"author":{"gitId":"wnchan"},"content":"     * @return A formatted string suitable for data storage.","lastModifiedDate":"2023-09-07"},{"lineNumber":70,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"wnchan"},"content":"    public abstract String toDataString();","lastModifiedDate":"2023-09-03"},{"lineNumber":72,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":73,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"wnchan"},"content":"     * Creates a task object from a data string.","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"wnchan"},"content":"     * @param dataString The data string representing the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"wnchan"},"content":"     * @return A Task object created from the data string.","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"wnchan"},"content":"     * @throws DukdukException If there is an error in parsing the data string or creating the task.","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"wnchan"},"content":"    public static Task createTaskFromDataString(String dataString) throws DukdukException {","lastModifiedDate":"2023-09-03"},{"lineNumber":81,"author":{"gitId":"wnchan"},"content":"        String[] parts \u003d dataString.split(\" \\\\| \");","lastModifiedDate":"2023-09-03"},{"lineNumber":82,"author":{"gitId":"wnchan"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2023-09-03"},{"lineNumber":83,"author":{"gitId":"wnchan"},"content":"            throw new DukdukException(\"QUACK!!! Invalid task data format: \" + dataString);","lastModifiedDate":"2023-09-21"},{"lineNumber":84,"author":{"gitId":"wnchan"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":85,"author":{"gitId":"wnchan"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2023-09-03"},{"lineNumber":86,"author":{"gitId":"wnchan"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2023-09-03"},{"lineNumber":87,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":88,"author":{"gitId":"wnchan"},"content":"        switch (type) {","lastModifiedDate":"2023-09-03"},{"lineNumber":89,"author":{"gitId":"wnchan"},"content":"            case \"T\":","lastModifiedDate":"2023-09-03"},{"lineNumber":90,"author":{"gitId":"wnchan"},"content":"                return createToDoTask(description);","lastModifiedDate":"2023-09-18"},{"lineNumber":91,"author":{"gitId":"wnchan"},"content":"            case \"D\":","lastModifiedDate":"2023-09-03"},{"lineNumber":92,"author":{"gitId":"wnchan"},"content":"                if (parts.length \u003e\u003d 4) {","lastModifiedDate":"2023-09-03"},{"lineNumber":93,"author":{"gitId":"wnchan"},"content":"                    String byString \u003d parts[3];","lastModifiedDate":"2023-09-04"},{"lineNumber":94,"author":{"gitId":"wnchan"},"content":"                    return createDeadlineTask(description, byString);","lastModifiedDate":"2023-09-18"},{"lineNumber":95,"author":{"gitId":"wnchan"},"content":"                } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"wnchan"},"content":"                    throw new DukdukException(\"QUACK!!! Invalid Deadline task data format: \" +","lastModifiedDate":"2023-09-21"},{"lineNumber":97,"author":{"gitId":"wnchan"},"content":"                            dataString);","lastModifiedDate":"2023-09-21"},{"lineNumber":98,"author":{"gitId":"wnchan"},"content":"                }","lastModifiedDate":"2023-09-03"},{"lineNumber":99,"author":{"gitId":"wnchan"},"content":"            case \"E\":","lastModifiedDate":"2023-09-03"},{"lineNumber":100,"author":{"gitId":"wnchan"},"content":"                if (parts.length \u003e\u003d 4) {","lastModifiedDate":"2023-09-03"},{"lineNumber":101,"author":{"gitId":"wnchan"},"content":"                    String eventTiming \u003d parts[3];","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"wnchan"},"content":"                    return createEventTask(description, eventTiming, dataString);","lastModifiedDate":"2023-09-18"},{"lineNumber":103,"author":{"gitId":"wnchan"},"content":"                } else {","lastModifiedDate":"2023-09-18"},{"lineNumber":104,"author":{"gitId":"wnchan"},"content":"                    throw new DukdukException(\"QUACK!!! Invalid Event task data format: \" + ","lastModifiedDate":"2023-09-21"},{"lineNumber":105,"author":{"gitId":"wnchan"},"content":"                            dataString);","lastModifiedDate":"2023-09-21"},{"lineNumber":106,"author":{"gitId":"wnchan"},"content":"                }","lastModifiedDate":"2023-09-18"},{"lineNumber":107,"author":{"gitId":"wnchan"},"content":"            default:","lastModifiedDate":"2023-09-18"},{"lineNumber":108,"author":{"gitId":"wnchan"},"content":"                throw new DukdukException(\"QUACKKK!!! Invalid task type in data string: \" + type);","lastModifiedDate":"2023-09-21"},{"lineNumber":109,"author":{"gitId":"wnchan"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":110,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":111,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":112,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":113,"author":{"gitId":"wnchan"},"content":"     * Creates a ToDo task with the given description.","lastModifiedDate":"2023-09-18"},{"lineNumber":114,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":115,"author":{"gitId":"wnchan"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2023-09-18"},{"lineNumber":116,"author":{"gitId":"wnchan"},"content":"     * @return A ToDo task.","lastModifiedDate":"2023-09-18"},{"lineNumber":117,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":118,"author":{"gitId":"wnchan"},"content":"    private static Task createToDoTask(String description) {","lastModifiedDate":"2023-09-18"},{"lineNumber":119,"author":{"gitId":"wnchan"},"content":"        return new ToDo(description);","lastModifiedDate":"2023-09-18"},{"lineNumber":120,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":121,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":122,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":123,"author":{"gitId":"wnchan"},"content":"     * Creates a Deadline task with the given description and deadline string.","lastModifiedDate":"2023-09-18"},{"lineNumber":124,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":125,"author":{"gitId":"wnchan"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2023-09-18"},{"lineNumber":126,"author":{"gitId":"wnchan"},"content":"     * @param byString    The deadline string in \"dd-MM-yyyy HH:mm\" format.","lastModifiedDate":"2023-09-18"},{"lineNumber":127,"author":{"gitId":"wnchan"},"content":"     * @return A Deadline task.","lastModifiedDate":"2023-09-18"},{"lineNumber":128,"author":{"gitId":"wnchan"},"content":"     * @throws DukdukException If the deadline string format is incorrect.","lastModifiedDate":"2023-09-18"},{"lineNumber":129,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":130,"author":{"gitId":"wnchan"},"content":"    private static Task createDeadlineTask(String description, String byString) throws DukdukException {","lastModifiedDate":"2023-09-18"},{"lineNumber":131,"author":{"gitId":"wnchan"},"content":"        LocalDateTime by \u003d LocalDateTime.parse(byString,","lastModifiedDate":"2023-09-18"},{"lineNumber":132,"author":{"gitId":"wnchan"},"content":"                DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2023-09-18"},{"lineNumber":133,"author":{"gitId":"wnchan"},"content":"        return new Deadline(description, by);","lastModifiedDate":"2023-09-18"},{"lineNumber":134,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":135,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":136,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-18"},{"lineNumber":137,"author":{"gitId":"wnchan"},"content":"     * Creates an Event task with the given description and event timing string.","lastModifiedDate":"2023-09-18"},{"lineNumber":138,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-18"},{"lineNumber":139,"author":{"gitId":"wnchan"},"content":"     * @param description  The description of the Event task.","lastModifiedDate":"2023-09-18"},{"lineNumber":140,"author":{"gitId":"wnchan"},"content":"     * @param eventTiming  The event timing string in \"dd-MM-yyyy HH:mm|dd-MM-yyyy HH:mm\" format.","lastModifiedDate":"2023-09-18"},{"lineNumber":141,"author":{"gitId":"wnchan"},"content":"     * @param dataString   The original data string for error reporting, if needed.","lastModifiedDate":"2023-09-18"},{"lineNumber":142,"author":{"gitId":"wnchan"},"content":"     * @return An Event task.","lastModifiedDate":"2023-09-18"},{"lineNumber":143,"author":{"gitId":"wnchan"},"content":"     * @throws DukdukException If the event timing string format is incorrect.","lastModifiedDate":"2023-09-18"},{"lineNumber":144,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-18"},{"lineNumber":145,"author":{"gitId":"wnchan"},"content":"    private static Task createEventTask(String description, String eventTiming, String dataString) throws DukdukException {","lastModifiedDate":"2023-09-18"},{"lineNumber":146,"author":{"gitId":"wnchan"},"content":"        String[] eventParts \u003d eventTiming.split(\"\\\\|\");","lastModifiedDate":"2023-09-04"},{"lineNumber":147,"author":{"gitId":"wnchan"},"content":"        if (eventParts.length \u003e\u003d 2) {","lastModifiedDate":"2023-09-03"},{"lineNumber":148,"author":{"gitId":"wnchan"},"content":"            String from \u003d eventParts[0];","lastModifiedDate":"2023-09-03"},{"lineNumber":149,"author":{"gitId":"wnchan"},"content":"            String to \u003d eventParts[1];","lastModifiedDate":"2023-09-03"},{"lineNumber":150,"author":{"gitId":"wnchan"},"content":"            LocalDateTime fromDateTime \u003d LocalDateTime.parse(from,","lastModifiedDate":"2023-09-04"},{"lineNumber":151,"author":{"gitId":"wnchan"},"content":"                    DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":152,"author":{"gitId":"wnchan"},"content":"            LocalDateTime toDateTime \u003d LocalDateTime.parse(to,","lastModifiedDate":"2023-09-04"},{"lineNumber":153,"author":{"gitId":"wnchan"},"content":"                    DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2023-09-04"},{"lineNumber":154,"author":{"gitId":"wnchan"},"content":"            return new Event(description, fromDateTime, toDateTime);","lastModifiedDate":"2023-09-04"},{"lineNumber":155,"author":{"gitId":"wnchan"},"content":"        } else {","lastModifiedDate":"2023-09-03"},{"lineNumber":156,"author":{"gitId":"wnchan"},"content":"            throw new DukdukException(\"QUACKKK!!! Invalid Event task data format: \" + dataString);","lastModifiedDate":"2023-09-21"},{"lineNumber":157,"author":{"gitId":"wnchan"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":158,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":159,"author":{"gitId":"wnchan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wnchan":159}},{"path":"src/main/java/Dukduk/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wnchan"},"content":"package dukduk;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"wnchan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"wnchan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"wnchan"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"wnchan"},"content":" * Represents a list of tasks and provides methods to manage them.","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"wnchan"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"wnchan"},"content":"public class TaskList {","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"wnchan"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"wnchan"},"content":"    private Ui ui;","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":15,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"wnchan"},"content":"     * Constructs a new TaskList with an empty list of tasks.","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"wnchan"},"content":"    public TaskList() {","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"wnchan"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"wnchan"},"content":"     * Sets the list of tasks in the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"wnchan"},"content":"     * @param tasks An ArrayList of tasks to set as the tasks in the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"wnchan"},"content":"    public void setTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"wnchan"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"wnchan"},"content":"     * Retrieves the list of tasks in the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"wnchan"},"content":"     * @return An ArrayList of tasks stored in the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"wnchan"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"wnchan"},"content":"        return tasks;","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"wnchan"},"content":"     * Gets the count of tasks in the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"wnchan"},"content":"     * @return The number of tasks in the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"wnchan"},"content":"    public int getTaskCount() {","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"wnchan"},"content":"        return tasks.size();","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"wnchan"},"content":"     * Checks if a given task index is valid.","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"wnchan"},"content":"     * @param taskIndex The index of the task to check.","lastModifiedDate":"2023-09-07"},{"lineNumber":53,"author":{"gitId":"wnchan"},"content":"     * @return True if the task index is valid, false otherwise.","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":55,"author":{"gitId":"wnchan"},"content":"    private boolean isValidTaskIndex(int taskIndex) {","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"wnchan"},"content":"        return taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.size();","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"wnchan"},"content":"     * Gets a task from the TaskList based on its index.","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":62,"author":{"gitId":"wnchan"},"content":"     * @param taskIndex The index of the task to retrieve.","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"wnchan"},"content":"     * @return The task at the specified index, or null if the index is invalid.","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":65,"author":{"gitId":"wnchan"},"content":"    public Task getTask(int taskIndex) {","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"wnchan"},"content":"        if (isValidTaskIndex(taskIndex)) {","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"wnchan"},"content":"            return tasks.get(taskIndex);","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"wnchan"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"wnchan"},"content":"        return null;","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":73,"author":{"gitId":"wnchan"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":75,"author":{"gitId":"wnchan"},"content":"     * @param task The task to add to the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"wnchan"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-09-05"},{"lineNumber":78,"author":{"gitId":"wnchan"},"content":"        assert task !\u003d null : \"Task cannot be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":79,"author":{"gitId":"wnchan"},"content":"        tasks.add(task);","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"wnchan"},"content":"     * Marks a task at the specified index as done.","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"wnchan"},"content":"     * @param taskIndex The index of the task to mark as done.","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"wnchan"},"content":"    public void markTaskAsDone(int taskIndex) {","lastModifiedDate":"2023-09-05"},{"lineNumber":88,"author":{"gitId":"wnchan"},"content":"        assert isValidTaskIndex(taskIndex) : \"Invalid task index\";","lastModifiedDate":"2023-09-18"},{"lineNumber":89,"author":{"gitId":"wnchan"},"content":"        if (isValidTaskIndex(taskIndex)) {","lastModifiedDate":"2023-09-05"},{"lineNumber":90,"author":{"gitId":"wnchan"},"content":"            tasks.get(taskIndex).markAsDone();","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"wnchan"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":93,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"wnchan"},"content":"     * Unmarks a task at the specified index as not done.","lastModifiedDate":"2023-09-07"},{"lineNumber":96,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":97,"author":{"gitId":"wnchan"},"content":"     * @param taskIndex The index of the task to unmark.","lastModifiedDate":"2023-09-07"},{"lineNumber":98,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":99,"author":{"gitId":"wnchan"},"content":"    public void unMarkTask(int taskIndex) {","lastModifiedDate":"2023-09-05"},{"lineNumber":100,"author":{"gitId":"wnchan"},"content":"        assert isValidTaskIndex(taskIndex) : \"Invalid task index\";","lastModifiedDate":"2023-09-18"},{"lineNumber":101,"author":{"gitId":"wnchan"},"content":"        if (isValidTaskIndex(taskIndex)) {","lastModifiedDate":"2023-09-05"},{"lineNumber":102,"author":{"gitId":"wnchan"},"content":"            tasks.get(taskIndex).unmark();","lastModifiedDate":"2023-09-05"},{"lineNumber":103,"author":{"gitId":"wnchan"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":105,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":106,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"wnchan"},"content":"     * Deletes a task at the specified index from the TaskList.","lastModifiedDate":"2023-09-07"},{"lineNumber":108,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"wnchan"},"content":"     * @param taskIndex The index of the task to delete.","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"wnchan"},"content":"     * @throws DukdukException If the task index is invalid.","lastModifiedDate":"2023-09-07"},{"lineNumber":111,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":112,"author":{"gitId":"wnchan"},"content":"    public String deleteTask(int taskIndex) throws DukdukException {","lastModifiedDate":"2023-09-17"},{"lineNumber":113,"author":{"gitId":"wnchan"},"content":"        assert isValidTaskIndex(taskIndex) : \"Invalid task index\";","lastModifiedDate":"2023-09-18"},{"lineNumber":114,"author":{"gitId":"wnchan"},"content":"        if (isValidTaskIndex(taskIndex)) {","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"wnchan"},"content":"            Task removedTask \u003d tasks.remove(taskIndex);","lastModifiedDate":"2023-09-05"},{"lineNumber":116,"author":{"gitId":"wnchan"},"content":"            return String.format(\"Quack, noted. I\u0027ve removed this task:\\n%s\\n\" +","lastModifiedDate":"2023-09-21"},{"lineNumber":117,"author":{"gitId":"wnchan"},"content":"                            \"Now you have %d tasks in the list.\",","lastModifiedDate":"2023-09-21"},{"lineNumber":118,"author":{"gitId":"wnchan"},"content":"                    removedTask, tasks.size());","lastModifiedDate":"2023-09-17"},{"lineNumber":119,"author":{"gitId":"wnchan"},"content":"        } else {","lastModifiedDate":"2023-09-05"},{"lineNumber":120,"author":{"gitId":"wnchan"},"content":"            throw new DukdukException(\"QUACKKK!!! Task not found. Please provide a valid task number.\");","lastModifiedDate":"2023-09-21"},{"lineNumber":121,"author":{"gitId":"wnchan"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":122,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":123,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":124,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":125,"author":{"gitId":"wnchan"},"content":"     * Finds a task by searching for a keyword.","lastModifiedDate":"2023-09-07"},{"lineNumber":126,"author":{"gitId":"wnchan"},"content":"     * Has been editted for extension C-BetterSearch.","lastModifiedDate":"2023-09-18"},{"lineNumber":127,"author":{"gitId":"wnchan"},"content":"     * Allows for partial word matching, case-insensitive matching and searching for date/time.","lastModifiedDate":"2023-09-18"},{"lineNumber":128,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":129,"author":{"gitId":"wnchan"},"content":"     * @param keyword Used for searching tasks that matches keyword.","lastModifiedDate":"2023-09-18"},{"lineNumber":130,"author":{"gitId":"wnchan"},"content":"     * @return An ArrayList of tasks that match the keyword partially.","lastModifiedDate":"2023-09-18"},{"lineNumber":131,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":132,"author":{"gitId":"wnchan"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2023-09-07"},{"lineNumber":133,"author":{"gitId":"wnchan"},"content":"        assert keyword !\u003d null : \"Keyword cannot be null\";","lastModifiedDate":"2023-09-18"},{"lineNumber":134,"author":{"gitId":"wnchan"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-07"},{"lineNumber":135,"author":{"gitId":"wnchan"},"content":"        String lowerKeyword \u003d keyword.toLowerCase();","lastModifiedDate":"2023-09-18"},{"lineNumber":136,"author":{"gitId":"wnchan"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-07"},{"lineNumber":137,"author":{"gitId":"wnchan"},"content":"            if (task.getDescription().toLowerCase().contains(lowerKeyword)) {","lastModifiedDate":"2023-09-18"},{"lineNumber":138,"author":{"gitId":"wnchan"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2023-09-07"},{"lineNumber":139,"author":{"gitId":"wnchan"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":140,"author":{"gitId":"wnchan"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2023-09-18"},{"lineNumber":141,"author":{"gitId":"wnchan"},"content":"                Deadline deadlineTask \u003d (Deadline) task;","lastModifiedDate":"2023-09-18"},{"lineNumber":142,"author":{"gitId":"wnchan"},"content":"                String deadlineString \u003d deadlineTask.getBy().format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2023-09-18"},{"lineNumber":143,"author":{"gitId":"wnchan"},"content":"                if (deadlineString.contains(lowerKeyword)) {","lastModifiedDate":"2023-09-18"},{"lineNumber":144,"author":{"gitId":"wnchan"},"content":"                    matchingTasks.add(task);","lastModifiedDate":"2023-09-18"},{"lineNumber":145,"author":{"gitId":"wnchan"},"content":"                }","lastModifiedDate":"2023-09-18"},{"lineNumber":146,"author":{"gitId":"wnchan"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2023-09-18"},{"lineNumber":147,"author":{"gitId":"wnchan"},"content":"                Event eventTask \u003d (Event) task;","lastModifiedDate":"2023-09-18"},{"lineNumber":148,"author":{"gitId":"wnchan"},"content":"                String fromString \u003d eventTask.getFrom().format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2023-09-18"},{"lineNumber":149,"author":{"gitId":"wnchan"},"content":"                String toString \u003d eventTask.getTo().format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2023-09-18"},{"lineNumber":150,"author":{"gitId":"wnchan"},"content":"                if (fromString.contains(lowerKeyword) || toString.contains(lowerKeyword)) {","lastModifiedDate":"2023-09-18"},{"lineNumber":151,"author":{"gitId":"wnchan"},"content":"                    matchingTasks.add(task);","lastModifiedDate":"2023-09-18"},{"lineNumber":152,"author":{"gitId":"wnchan"},"content":"                }","lastModifiedDate":"2023-09-18"},{"lineNumber":153,"author":{"gitId":"wnchan"},"content":"            }","lastModifiedDate":"2023-09-18"},{"lineNumber":154,"author":{"gitId":"wnchan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":155,"author":{"gitId":"wnchan"},"content":"        return matchingTasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":156,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":157,"author":{"gitId":"wnchan"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":158,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"wnchan":158}},{"path":"src/main/java/Dukduk/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wnchan"},"content":"package dukduk;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"wnchan"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"wnchan"},"content":" * Represents a task of type \"To-Do\" with a description and completion status.","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"wnchan"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"wnchan"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"wnchan"},"content":"     * Initializes a new To-Do task with the given description.","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"wnchan"},"content":"     * @param description The description of the To-Do task.","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"wnchan"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-08-24"},{"lineNumber":14,"author":{"gitId":"wnchan"},"content":"        super(description);","lastModifiedDate":"2023-08-24"},{"lineNumber":15,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":16,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-08-24"},{"lineNumber":17,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"wnchan"},"content":"     * Returns a string representation of the To-Do task, including its completion status icon.","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"wnchan"},"content":"     * @return A formatted string representing the To-Do task.","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"wnchan"},"content":"    @Override","lastModifiedDate":"2023-08-24"},{"lineNumber":23,"author":{"gitId":"wnchan"},"content":"    public String toString() {","lastModifiedDate":"2023-08-24"},{"lineNumber":24,"author":{"gitId":"wnchan"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-24"},{"lineNumber":25,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-08-24"},{"lineNumber":26,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"wnchan"},"content":"     * Returns a string representation of the To-Do task in a data-friendly format.","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"wnchan"},"content":"     * @return A formatted string suitable for data storage.","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"wnchan"},"content":"    @Override","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"wnchan"},"content":"    public String toDataString() {","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"wnchan"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"wnchan"},"content":"}","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wnchan":36}},{"path":"src/main/java/Dukduk/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wnchan"},"content":"package dukduk;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"wnchan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"wnchan"},"content":"/**","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"wnchan"},"content":" * Represents the user interface (UI) for the Dukduk chatbot and return strings.","lastModifiedDate":"2023-09-21"},{"lineNumber":7,"author":{"gitId":"wnchan"},"content":" */","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"wnchan"},"content":"public class Ui {","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"wnchan"},"content":"     * Returns a help message for incorrect inputs.","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"wnchan"},"content":"     * ","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"wnchan"},"content":"     * @return a help message for incorrect inputs.","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"wnchan"},"content":"    public String printHelpMessage() {","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"wnchan"},"content":"        StringBuilder commands \u003d new StringBuilder(\"QUACKKK!!! Invalid command. \" +","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"wnchan"},"content":"                \"Try the following commands instead:\\n\");","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"wnchan"},"content":"        String[] validCommands \u003d {","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"wnchan"},"content":"                \"~ todo \u003ctask\u003e\",","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"wnchan"},"content":"                \"~ deadline \u003ctask\u003e /by yyyy-mm-dd hhmm\",","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"wnchan"},"content":"                \"~ event \u003ctask\u003e /from yyyy-mm-dd hhmm /to yyyy-mm-dd hhmm\",","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"wnchan"},"content":"                \"~ list\",","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"wnchan"},"content":"                \"~ mark \u003ctask number\u003e\",","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"wnchan"},"content":"                \"~ unmark \u003ctask number\u003e\",","lastModifiedDate":"2023-09-17"},{"lineNumber":26,"author":{"gitId":"wnchan"},"content":"                \"~ delete \u003ctask number\u003e\",","lastModifiedDate":"2023-09-17"},{"lineNumber":27,"author":{"gitId":"wnchan"},"content":"                \"~ find \u003ckeyword\u003e\",","lastModifiedDate":"2023-09-17"},{"lineNumber":28,"author":{"gitId":"wnchan"},"content":"                \"~ bye\"","lastModifiedDate":"2023-09-17"},{"lineNumber":29,"author":{"gitId":"wnchan"},"content":"        };","lastModifiedDate":"2023-09-17"},{"lineNumber":30,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":31,"author":{"gitId":"wnchan"},"content":"        for (String command : validCommands) {","lastModifiedDate":"2023-09-17"},{"lineNumber":32,"author":{"gitId":"wnchan"},"content":"            commands.append(command).append(\"\\n\");","lastModifiedDate":"2023-09-17"},{"lineNumber":33,"author":{"gitId":"wnchan"},"content":"        }","lastModifiedDate":"2023-09-17"},{"lineNumber":34,"author":{"gitId":"wnchan"},"content":"        return commands.toString();","lastModifiedDate":"2023-09-17"},{"lineNumber":35,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"wnchan"},"content":"     * Returns a message when the user exits the application.","lastModifiedDate":"2023-09-21"},{"lineNumber":39,"author":{"gitId":"wnchan"},"content":"     * ","lastModifiedDate":"2023-09-21"},{"lineNumber":40,"author":{"gitId":"wnchan"},"content":"     * @return a message when the user exits the application.","lastModifiedDate":"2023-09-21"},{"lineNumber":41,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"wnchan"},"content":"    public String printExit() {","lastModifiedDate":"2023-09-17"},{"lineNumber":43,"author":{"gitId":"wnchan"},"content":"        return \"Quackkk byeee!! Hope to see you again soon!\";","lastModifiedDate":"2023-09-21"},{"lineNumber":44,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"wnchan"},"content":"     * Returns a list of tasks.","lastModifiedDate":"2023-09-21"},{"lineNumber":48,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"wnchan"},"content":"     * @param tasks The list of tasks to be printed.","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"wnchan"},"content":"     * @return a list of tasks.             ","lastModifiedDate":"2023-09-21"},{"lineNumber":51,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"wnchan"},"content":"    public String printTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-17"},{"lineNumber":53,"author":{"gitId":"wnchan"},"content":"        StringBuilder message \u003d new StringBuilder(\"Quackkk, here are the tasks in your list:\\n\");","lastModifiedDate":"2023-09-21"},{"lineNumber":54,"author":{"gitId":"wnchan"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"wnchan"},"content":"            message.append(\" \").append(i + 1).append(\".\").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2023-09-17"},{"lineNumber":56,"author":{"gitId":"wnchan"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"wnchan"},"content":"        return message.toString();","lastModifiedDate":"2023-09-17"},{"lineNumber":58,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":61,"author":{"gitId":"wnchan"},"content":"     * Returns a message when a task is added to the list.","lastModifiedDate":"2023-09-21"},{"lineNumber":62,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":63,"author":{"gitId":"wnchan"},"content":"     * @param tasks The list of tasks after adding a new task.","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"wnchan"},"content":"     * @return a message when a task is added to the list.             ","lastModifiedDate":"2023-09-21"},{"lineNumber":65,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":66,"author":{"gitId":"wnchan"},"content":"    public String addTask(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-17"},{"lineNumber":67,"author":{"gitId":"wnchan"},"content":"        Task addedTask \u003d tasks.get(tasks.size() - 1);","lastModifiedDate":"2023-09-17"},{"lineNumber":68,"author":{"gitId":"wnchan"},"content":"        return String.format(\"Quackkk, got it! I\u0027ve added this task:\\n%s\\n\" +","lastModifiedDate":"2023-09-21"},{"lineNumber":69,"author":{"gitId":"wnchan"},"content":"                        \"Now you have %d tasks in the list.\",","lastModifiedDate":"2023-09-21"},{"lineNumber":70,"author":{"gitId":"wnchan"},"content":"                addedTask, tasks.size());","lastModifiedDate":"2023-09-17"},{"lineNumber":71,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":74,"author":{"gitId":"wnchan"},"content":"     * Returns a message when a task is marked as done.","lastModifiedDate":"2023-09-21"},{"lineNumber":75,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"wnchan"},"content":"     * @param tasks     The list of tasks after marking a task as done.","lastModifiedDate":"2023-09-07"},{"lineNumber":77,"author":{"gitId":"wnchan"},"content":"     * @param taskIndex The index of the marked task.","lastModifiedDate":"2023-09-07"},{"lineNumber":78,"author":{"gitId":"wnchan"},"content":"     * @return a message when a task is marked as done.","lastModifiedDate":"2023-09-21"},{"lineNumber":79,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"wnchan"},"content":"    public String markAsDone(ArrayList\u003cTask\u003e tasks, int taskIndex) {","lastModifiedDate":"2023-09-17"},{"lineNumber":81,"author":{"gitId":"wnchan"},"content":"        Task markedTask \u003d tasks.get(taskIndex);","lastModifiedDate":"2023-09-17"},{"lineNumber":82,"author":{"gitId":"wnchan"},"content":"        return String.format(\"Quackkk!!! Nice! I\u0027ve marked this task as done:\\n[%s] %s\",","lastModifiedDate":"2023-09-21"},{"lineNumber":83,"author":{"gitId":"wnchan"},"content":"                markedTask.getStatusIcon(), markedTask.getDescription());","lastModifiedDate":"2023-09-17"},{"lineNumber":84,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":85,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"wnchan"},"content":"     * Returns a message when a task is marked as not done.","lastModifiedDate":"2023-09-21"},{"lineNumber":88,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":89,"author":{"gitId":"wnchan"},"content":"     * @param tasks     The list of tasks after marking a task as not done.","lastModifiedDate":"2023-09-07"},{"lineNumber":90,"author":{"gitId":"wnchan"},"content":"     * @param taskIndex The index of the marked task.","lastModifiedDate":"2023-09-07"},{"lineNumber":91,"author":{"gitId":"wnchan"},"content":"     * @return a message when a task is marked as not done.                ","lastModifiedDate":"2023-09-21"},{"lineNumber":92,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":93,"author":{"gitId":"wnchan"},"content":"    public String markAsNotDone(ArrayList\u003cTask\u003e tasks, int taskIndex) {","lastModifiedDate":"2023-09-17"},{"lineNumber":94,"author":{"gitId":"wnchan"},"content":"        Task markedTask \u003d tasks.get(taskIndex);","lastModifiedDate":"2023-09-17"},{"lineNumber":95,"author":{"gitId":"wnchan"},"content":"        return String.format(\"Quack, ok! I\u0027ve marked this task as not done yet:\\n[%s] %s\",","lastModifiedDate":"2023-09-21"},{"lineNumber":96,"author":{"gitId":"wnchan"},"content":"                markedTask.getStatusIcon(), markedTask.getDescription());","lastModifiedDate":"2023-09-17"},{"lineNumber":97,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":98,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":100,"author":{"gitId":"wnchan"},"content":"     * Returns a list of tasks found from find method, else prints no tasks found.","lastModifiedDate":"2023-09-21"},{"lineNumber":101,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":102,"author":{"gitId":"wnchan"},"content":"     * @param matchingTasks The list of matching tasks to be printed.","lastModifiedDate":"2023-09-07"},{"lineNumber":103,"author":{"gitId":"wnchan"},"content":"     * @return the list of matching tasks.                     ","lastModifiedDate":"2023-09-21"},{"lineNumber":104,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"wnchan"},"content":"    public String printTasksIfFound(ArrayList\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2023-09-17"},{"lineNumber":106,"author":{"gitId":"wnchan"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2023-09-07"},{"lineNumber":107,"author":{"gitId":"wnchan"},"content":"            return \"QUACKKK!!! No matching tasks found.\";","lastModifiedDate":"2023-09-21"},{"lineNumber":108,"author":{"gitId":"wnchan"},"content":"        } else {","lastModifiedDate":"2023-09-07"},{"lineNumber":109,"author":{"gitId":"wnchan"},"content":"            StringBuilder message \u003d new StringBuilder(\"Quackkk, here are the matching tasks \" +","lastModifiedDate":"2023-09-21"},{"lineNumber":110,"author":{"gitId":"wnchan"},"content":"                    \"in your list:\\n\");","lastModifiedDate":"2023-09-21"},{"lineNumber":111,"author":{"gitId":"wnchan"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2023-09-07"},{"lineNumber":112,"author":{"gitId":"wnchan"},"content":"                message.append(\" \").append(i + 1).append(\".\").append(matchingTasks.get(i)).append(\"\\n\");","lastModifiedDate":"2023-09-17"},{"lineNumber":113,"author":{"gitId":"wnchan"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":114,"author":{"gitId":"wnchan"},"content":"            return message.toString();","lastModifiedDate":"2023-09-17"},{"lineNumber":115,"author":{"gitId":"wnchan"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":116,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":117,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":118,"author":{"gitId":"wnchan"},"content":"    /**","lastModifiedDate":"2023-09-07"},{"lineNumber":119,"author":{"gitId":"wnchan"},"content":"     * Returns an error message when an exception occurs.","lastModifiedDate":"2023-09-21"},{"lineNumber":120,"author":{"gitId":"wnchan"},"content":"     *","lastModifiedDate":"2023-09-07"},{"lineNumber":121,"author":{"gitId":"wnchan"},"content":"     * @param e The DukdukException that occurred.","lastModifiedDate":"2023-09-07"},{"lineNumber":122,"author":{"gitId":"wnchan"},"content":"     * @return error message when an exception occurs.","lastModifiedDate":"2023-09-21"},{"lineNumber":123,"author":{"gitId":"wnchan"},"content":"     */","lastModifiedDate":"2023-09-07"},{"lineNumber":124,"author":{"gitId":"wnchan"},"content":"    public String printErrorMsg(DukdukException e) {","lastModifiedDate":"2023-09-17"},{"lineNumber":125,"author":{"gitId":"wnchan"},"content":"        return e.getMessage();","lastModifiedDate":"2023-09-17"},{"lineNumber":126,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":127,"author":{"gitId":"wnchan"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"wnchan":127}},{"path":"src/main/java/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wnchan"},"content":"T | 1 | brainstorm on report","lastModifiedDate":"2023-09-21"},{"lineNumber":2,"author":{"gitId":"wnchan"},"content":"D | 1 | Finish Report | 31-12-2023 18:00","lastModifiedDate":"2023-09-21"},{"lineNumber":3,"author":{"gitId":"wnchan"},"content":"D | 1 | assignment | 20-12-2023 18:00","lastModifiedDate":"2023-09-21"},{"lineNumber":4,"author":{"gitId":"wnchan"},"content":"E | 0 | project meeting | 20-12-2023 18:00|20-12-2023 18:30","lastModifiedDate":"2023-09-21"},{"lineNumber":5,"author":{"gitId":"wnchan"},"content":"T | 1 | watch lecture recording","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"wnchan":5}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wnchan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":2,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":3,"author":{"gitId":"wnchan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":4,"author":{"gitId":"wnchan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":5,"author":{"gitId":"wnchan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":6,"author":{"gitId":"wnchan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":7,"author":{"gitId":"wnchan"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":8,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"wnchan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" spacing\u003d\"10.0\" style\u003d\"-fx-background-color: #FFFFE0;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"wnchan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"wnchan"},"content":"\t\u003cLabel fx:id\u003d\"dialog\" graphicTextGap\u003d\"10.0\" lineSpacing\u003d\"1.0\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"wnchan"},"content":"\t \u003cfont\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"wnchan"},"content":"\t    \u003cFont name\u003d\"Courier New\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"wnchan"},"content":"\t \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"wnchan"},"content":"\t\u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"wnchan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":17,"author":{"gitId":"wnchan"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"wnchan"},"content":"\t\u003cInsets bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"wnchan"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"wnchan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"wnchan":21}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wnchan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":2,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":3,"author":{"gitId":"wnchan"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":4,"author":{"gitId":"wnchan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":5,"author":{"gitId":"wnchan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":6,"author":{"gitId":"wnchan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":7,"author":{"gitId":"wnchan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":8,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":9,"author":{"gitId":"wnchan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"dukduk.MainWindow\" style\u003d\"-fx-background-color: #FFFFE0;\"\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":10,"author":{"gitId":"wnchan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":11,"author":{"gitId":"wnchan"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.4\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" style\u003d\"-fx-background-color: #ADD8E6;\" AnchorPane.bottomAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"wnchan"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: #98FB98;\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"wnchan"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":14,"author":{"gitId":"wnchan"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":15,"author":{"gitId":"wnchan"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" spacing\u003d\"0.5\" /\u003e","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"wnchan"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":17,"author":{"gitId":"wnchan"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"wnchan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"wnchan"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-17"}],"authorContributionMap":{"wnchan":19}},{"path":"src/test/java/seedu/dukduk/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wnchan"},"content":"package seedu.dukduk;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"wnchan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"wnchan"},"content":"import dukduk.Deadline;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"wnchan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"wnchan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"wnchan"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"wnchan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"wnchan"},"content":"    public void testToString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"wnchan"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2023, 9, 15, 14, 30);","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"wnchan"},"content":"        Deadline deadline \u003d new Deadline(\"Test Deadline\", dateTime);","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":14,"author":{"gitId":"wnchan"},"content":"        String expected \u003d \"[D][ ] Test Deadline (by: Sep 15 2023 14:30)\";","lastModifiedDate":"2023-09-07"},{"lineNumber":15,"author":{"gitId":"wnchan"},"content":"        String actual \u003d deadline.toString();","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"wnchan"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"wnchan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"wnchan"},"content":"    public void testToDataString() {","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"wnchan"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2023, 9, 15, 14, 30);","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"wnchan"},"content":"        Deadline deadline \u003d new Deadline(\"Test Deadline\", dateTime);","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"wnchan"},"content":"        deadline.markAsDone();","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"wnchan"},"content":"        String expected \u003d \"D | 1 | Test Deadline | 15-09-2023 14:30\";","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"wnchan"},"content":"        String actual \u003d deadline.toDataString();","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"wnchan"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"wnchan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"wnchan"},"content":"    public void testToDataStringUnmarked() {","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"wnchan"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2023, 9, 15, 14, 30);","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"wnchan"},"content":"        Deadline deadline \u003d new Deadline(\"Test Deadline\", dateTime);","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"wnchan"},"content":"        String expected \u003d \"D | 0 | Test Deadline | 15-09-2023 14:30\";","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"wnchan"},"content":"        String actual \u003d deadline.toDataString();","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"wnchan"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-09-07"},{"lineNumber":41,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"wnchan"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":43,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"wnchan":43}},{"path":"src/test/java/seedu/dukduk/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wnchan"},"content":"package seedu.dukduk;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"wnchan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"wnchan"},"content":"import dukduk.Ui;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"wnchan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"wnchan"},"content":"public class UiTest {","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"wnchan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"wnchan"},"content":"    public void testPrintHelpMessage() {","lastModifiedDate":"2023-09-21"},{"lineNumber":11,"author":{"gitId":"wnchan"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-21"},{"lineNumber":12,"author":{"gitId":"wnchan"},"content":"        String helpMessage \u003d ui.printHelpMessage();","lastModifiedDate":"2023-09-21"},{"lineNumber":13,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":14,"author":{"gitId":"wnchan"},"content":"        String expectedHelpMessage \u003d \"QUACKKK!!! Invalid command. Try the following commands instead:\\n\" +","lastModifiedDate":"2023-09-21"},{"lineNumber":15,"author":{"gitId":"wnchan"},"content":"                \"~ todo \u003ctask\u003e\\n\" +","lastModifiedDate":"2023-09-21"},{"lineNumber":16,"author":{"gitId":"wnchan"},"content":"                \"~ deadline \u003ctask\u003e /by yyyy-mm-dd hhmm\\n\" +","lastModifiedDate":"2023-09-21"},{"lineNumber":17,"author":{"gitId":"wnchan"},"content":"                \"~ event \u003ctask\u003e /from yyyy-mm-dd hhmm /to yyyy-mm-dd hhmm\\n\" +","lastModifiedDate":"2023-09-21"},{"lineNumber":18,"author":{"gitId":"wnchan"},"content":"                \"~ list\\n\" +","lastModifiedDate":"2023-09-21"},{"lineNumber":19,"author":{"gitId":"wnchan"},"content":"                \"~ mark \u003ctask number\u003e\\n\" +","lastModifiedDate":"2023-09-21"},{"lineNumber":20,"author":{"gitId":"wnchan"},"content":"                \"~ unmark \u003ctask number\u003e\\n\" +","lastModifiedDate":"2023-09-21"},{"lineNumber":21,"author":{"gitId":"wnchan"},"content":"                \"~ delete \u003ctask number\u003e\\n\" +","lastModifiedDate":"2023-09-21"},{"lineNumber":22,"author":{"gitId":"wnchan"},"content":"                \"~ find \u003ckeyword\u003e\\n\" +","lastModifiedDate":"2023-09-21"},{"lineNumber":23,"author":{"gitId":"wnchan"},"content":"                \"~ bye\\n\";","lastModifiedDate":"2023-09-21"},{"lineNumber":24,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"},{"lineNumber":25,"author":{"gitId":"wnchan"},"content":"        assertEquals(expectedHelpMessage, helpMessage);","lastModifiedDate":"2023-09-21"},{"lineNumber":26,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"wnchan"},"content":"    @Test","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"wnchan"},"content":"    public void testPrintExit() {","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"wnchan"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-09-21"},{"lineNumber":31,"author":{"gitId":"wnchan"},"content":"        String exitMessage \u003d ui.printExit();","lastModifiedDate":"2023-09-21"},{"lineNumber":32,"author":{"gitId":"wnchan"},"content":"        assertEquals(\"Quackkk byeee!! Hope to see you again soon!\", exitMessage);","lastModifiedDate":"2023-09-21"},{"lineNumber":33,"author":{"gitId":"wnchan"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"wnchan"},"content":"}","lastModifiedDate":"2023-09-07"},{"lineNumber":35,"author":{"gitId":"wnchan"},"content":"","lastModifiedDate":"2023-09-21"}],"authorContributionMap":{"wnchan":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wnchan"},"content":"to do borrow book","lastModifiedDate":"2023-08-24"},{"lineNumber":2,"author":{"gitId":"wnchan"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-24"},{"lineNumber":3,"author":{"gitId":"wnchan"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-24"},{"lineNumber":4,"author":{"gitId":"wnchan"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":5,"author":{"gitId":"wnchan"},"content":"mark 2","lastModifiedDate":"2023-08-24"},{"lineNumber":6,"author":{"gitId":"wnchan"},"content":"mark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":7,"author":{"gitId":"wnchan"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":8,"author":{"gitId":"wnchan"},"content":"unmark 1","lastModifiedDate":"2023-08-24"},{"lineNumber":9,"author":{"gitId":"wnchan"},"content":"mark 3","lastModifiedDate":"2023-08-24"},{"lineNumber":10,"author":{"gitId":"wnchan"},"content":"list","lastModifiedDate":"2023-08-24"},{"lineNumber":11,"author":{"gitId":"wnchan"},"content":"bye","lastModifiedDate":"2023-08-24"}],"authorContributionMap":{"wnchan":11}}]
