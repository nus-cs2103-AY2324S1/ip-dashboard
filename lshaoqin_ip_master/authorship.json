[{"path":"src/main/java/Juke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lshaoqin"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-20"},{"lineNumber":2,"author":{"gitId":"lshaoqin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-20"},{"lineNumber":3,"author":{"gitId":"lshaoqin"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"lshaoqin"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":6,"author":{"gitId":"lshaoqin"},"content":"public class Juke {","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"lshaoqin"},"content":"    static void printLine() {","lastModifiedDate":"2023-08-20"},{"lineNumber":8,"author":{"gitId":"lshaoqin"},"content":"        System.out.println(\"_______________________________________________________\");","lastModifiedDate":"2023-08-20"},{"lineNumber":9,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":10,"author":{"gitId":"lshaoqin"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"lshaoqin"},"content":"        class Task {","lastModifiedDate":"2023-08-20"},{"lineNumber":12,"author":{"gitId":"lshaoqin"},"content":"            protected final String desc;","lastModifiedDate":"2023-08-20"},{"lineNumber":13,"author":{"gitId":"lshaoqin"},"content":"            protected boolean isDone;","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":15,"author":{"gitId":"lshaoqin"},"content":"            public Task(String desc) {","lastModifiedDate":"2023-08-21"},{"lineNumber":16,"author":{"gitId":"lshaoqin"},"content":"                this.desc \u003d desc;","lastModifiedDate":"2023-08-20"},{"lineNumber":17,"author":{"gitId":"lshaoqin"},"content":"                this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"lshaoqin"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":19,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":20,"author":{"gitId":"lshaoqin"},"content":"            public String getStatusIcon() {","lastModifiedDate":"2023-08-20"},{"lineNumber":21,"author":{"gitId":"lshaoqin"},"content":"                return (isDone ? \"[X] \" : \"[ ] \"); // mark done task with X","lastModifiedDate":"2023-08-20"},{"lineNumber":22,"author":{"gitId":"lshaoqin"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":23,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":24,"author":{"gitId":"lshaoqin"},"content":"            public void markAsDone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":25,"author":{"gitId":"lshaoqin"},"content":"                this.isDone \u003d true;","lastModifiedDate":"2023-08-20"},{"lineNumber":26,"author":{"gitId":"lshaoqin"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":27,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":28,"author":{"gitId":"lshaoqin"},"content":"            public void markAsUndone() {","lastModifiedDate":"2023-08-20"},{"lineNumber":29,"author":{"gitId":"lshaoqin"},"content":"                this.isDone \u003d false;","lastModifiedDate":"2023-08-20"},{"lineNumber":30,"author":{"gitId":"lshaoqin"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":31,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":32,"author":{"gitId":"lshaoqin"},"content":"            @Override","lastModifiedDate":"2023-08-20"},{"lineNumber":33,"author":{"gitId":"lshaoqin"},"content":"            public String toString() {","lastModifiedDate":"2023-08-20"},{"lineNumber":34,"author":{"gitId":"lshaoqin"},"content":"                return this.getStatusIcon() + desc;","lastModifiedDate":"2023-08-20"},{"lineNumber":35,"author":{"gitId":"lshaoqin"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":36,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":37,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":38,"author":{"gitId":"lshaoqin"},"content":"        class Todo extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"lshaoqin"},"content":"            public Todo(String desc) {","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"lshaoqin"},"content":"                super(desc);","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"lshaoqin"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":43,"author":{"gitId":"lshaoqin"},"content":"            @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"lshaoqin"},"content":"            public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":45,"author":{"gitId":"lshaoqin"},"content":"                return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-21"},{"lineNumber":46,"author":{"gitId":"lshaoqin"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":47,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":48,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":49,"author":{"gitId":"lshaoqin"},"content":"        class Deadline extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":50,"author":{"gitId":"lshaoqin"},"content":"            protected String by;","lastModifiedDate":"2023-08-21"},{"lineNumber":51,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":52,"author":{"gitId":"lshaoqin"},"content":"            public Deadline(String description, String by) {","lastModifiedDate":"2023-08-21"},{"lineNumber":53,"author":{"gitId":"lshaoqin"},"content":"                super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":54,"author":{"gitId":"lshaoqin"},"content":"                this.by \u003d by;","lastModifiedDate":"2023-08-21"},{"lineNumber":55,"author":{"gitId":"lshaoqin"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":56,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":57,"author":{"gitId":"lshaoqin"},"content":"            @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":58,"author":{"gitId":"lshaoqin"},"content":"            public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"lshaoqin"},"content":"                return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-08-21"},{"lineNumber":60,"author":{"gitId":"lshaoqin"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":61,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":62,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":63,"author":{"gitId":"lshaoqin"},"content":"        class Event extends Task {","lastModifiedDate":"2023-08-21"},{"lineNumber":64,"author":{"gitId":"lshaoqin"},"content":"            protected String start;","lastModifiedDate":"2023-08-21"},{"lineNumber":65,"author":{"gitId":"lshaoqin"},"content":"            protected String end;","lastModifiedDate":"2023-08-21"},{"lineNumber":66,"author":{"gitId":"lshaoqin"},"content":"            public Event(String description, String start, String end) {","lastModifiedDate":"2023-08-21"},{"lineNumber":67,"author":{"gitId":"lshaoqin"},"content":"                super(description);","lastModifiedDate":"2023-08-21"},{"lineNumber":68,"author":{"gitId":"lshaoqin"},"content":"                this.start \u003d start;","lastModifiedDate":"2023-08-21"},{"lineNumber":69,"author":{"gitId":"lshaoqin"},"content":"                this.end \u003d end;","lastModifiedDate":"2023-08-21"},{"lineNumber":70,"author":{"gitId":"lshaoqin"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":71,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":72,"author":{"gitId":"lshaoqin"},"content":"            @Override","lastModifiedDate":"2023-08-21"},{"lineNumber":73,"author":{"gitId":"lshaoqin"},"content":"            public String toString() {","lastModifiedDate":"2023-08-21"},{"lineNumber":74,"author":{"gitId":"lshaoqin"},"content":"                return \"[E]\" + super.toString() + \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2023-08-21"},{"lineNumber":75,"author":{"gitId":"lshaoqin"},"content":"            }","lastModifiedDate":"2023-08-21"},{"lineNumber":76,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":77,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":78,"author":{"gitId":"lshaoqin"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-08-20"},{"lineNumber":79,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":80,"author":{"gitId":"lshaoqin"},"content":"        //Introduce itself to the user","lastModifiedDate":"2023-08-20"},{"lineNumber":81,"author":{"gitId":"lshaoqin"},"content":"        System.out.println(\"Hello! I\u0027m Juke!\");","lastModifiedDate":"2023-08-20"},{"lineNumber":82,"author":{"gitId":"lshaoqin"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-20"},{"lineNumber":83,"author":{"gitId":"lshaoqin"},"content":"        printLine();","lastModifiedDate":"2023-08-20"},{"lineNumber":84,"author":{"gitId":"lshaoqin"},"content":"        while(true) {","lastModifiedDate":"2023-08-20"},{"lineNumber":85,"author":{"gitId":"lshaoqin"},"content":"            Scanner scanner \u003d new Scanner(System.in);  // Create a Scanner object","lastModifiedDate":"2023-08-20"},{"lineNumber":86,"author":{"gitId":"lshaoqin"},"content":"            try {","lastModifiedDate":"2023-08-21"},{"lineNumber":87,"author":{"gitId":"lshaoqin"},"content":"                String input \u003d scanner.nextLine();","lastModifiedDate":"2023-08-20"},{"lineNumber":88,"author":{"gitId":"lshaoqin"},"content":"                if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":89,"author":{"gitId":"lshaoqin"},"content":"                    //Say goodbye","lastModifiedDate":"2023-08-20"},{"lineNumber":90,"author":{"gitId":"lshaoqin"},"content":"                    System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-20"},{"lineNumber":91,"author":{"gitId":"lshaoqin"},"content":"                    printLine();","lastModifiedDate":"2023-08-20"},{"lineNumber":92,"author":{"gitId":"lshaoqin"},"content":"                    scanner.close();  // Close the scanner before exiting","lastModifiedDate":"2023-08-20"},{"lineNumber":93,"author":{"gitId":"lshaoqin"},"content":"                    return;","lastModifiedDate":"2023-08-20"},{"lineNumber":94,"author":{"gitId":"lshaoqin"},"content":"                }","lastModifiedDate":"2023-08-20"},{"lineNumber":95,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":96,"author":{"gitId":"lshaoqin"},"content":"                if (input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":97,"author":{"gitId":"lshaoqin"},"content":"                    int count \u003d 1;","lastModifiedDate":"2023-08-20"},{"lineNumber":98,"author":{"gitId":"lshaoqin"},"content":"                    for (Task task : tasks) {","lastModifiedDate":"2023-08-20"},{"lineNumber":99,"author":{"gitId":"lshaoqin"},"content":"                        System.out.println(count + \": \" + task.toString());","lastModifiedDate":"2023-08-20"},{"lineNumber":100,"author":{"gitId":"lshaoqin"},"content":"                        count++;","lastModifiedDate":"2023-08-20"},{"lineNumber":101,"author":{"gitId":"lshaoqin"},"content":"                    }","lastModifiedDate":"2023-08-20"},{"lineNumber":102,"author":{"gitId":"lshaoqin"},"content":"                    printLine();","lastModifiedDate":"2023-08-20"},{"lineNumber":103,"author":{"gitId":"lshaoqin"},"content":"                    continue;","lastModifiedDate":"2023-08-20"},{"lineNumber":104,"author":{"gitId":"lshaoqin"},"content":"                }","lastModifiedDate":"2023-08-20"},{"lineNumber":105,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":106,"author":{"gitId":"lshaoqin"},"content":"                if (input.contains(\"unmark \")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":107,"author":{"gitId":"lshaoqin"},"content":"                    int index \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2023-08-20"},{"lineNumber":108,"author":{"gitId":"lshaoqin"},"content":"                    if (index \u003e tasks.size()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":109,"author":{"gitId":"lshaoqin"},"content":"                        throw new JukeError(\"That task does not exist!\");","lastModifiedDate":"2023-08-21"},{"lineNumber":110,"author":{"gitId":"lshaoqin"},"content":"                    }","lastModifiedDate":"2023-08-21"},{"lineNumber":111,"author":{"gitId":"lshaoqin"},"content":"                    Task currTask \u003d tasks.get(index - 1);","lastModifiedDate":"2023-08-20"},{"lineNumber":112,"author":{"gitId":"lshaoqin"},"content":"                    currTask.markAsUndone();","lastModifiedDate":"2023-08-20"},{"lineNumber":113,"author":{"gitId":"lshaoqin"},"content":"                    System.out.println(\"OK, I\u0027ve marked this task as not done yet: \\n\" + currTask.toString());","lastModifiedDate":"2023-08-20"},{"lineNumber":114,"author":{"gitId":"lshaoqin"},"content":"                    printLine();","lastModifiedDate":"2023-08-20"},{"lineNumber":115,"author":{"gitId":"lshaoqin"},"content":"                    continue;","lastModifiedDate":"2023-08-20"},{"lineNumber":116,"author":{"gitId":"lshaoqin"},"content":"                }","lastModifiedDate":"2023-08-20"},{"lineNumber":117,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":118,"author":{"gitId":"lshaoqin"},"content":"                if (input.contains(\"mark \")) {","lastModifiedDate":"2023-08-20"},{"lineNumber":119,"author":{"gitId":"lshaoqin"},"content":"                    int index \u003d Integer.parseInt(input.substring(5));","lastModifiedDate":"2023-08-20"},{"lineNumber":120,"author":{"gitId":"lshaoqin"},"content":"                    if (index \u003e tasks.size()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":121,"author":{"gitId":"lshaoqin"},"content":"                        throw new JukeError(\"That task does not exist!\");","lastModifiedDate":"2023-08-21"},{"lineNumber":122,"author":{"gitId":"lshaoqin"},"content":"                    }","lastModifiedDate":"2023-08-21"},{"lineNumber":123,"author":{"gitId":"lshaoqin"},"content":"                    Task currTask \u003d tasks.get(index - 1);","lastModifiedDate":"2023-08-20"},{"lineNumber":124,"author":{"gitId":"lshaoqin"},"content":"                    currTask.markAsDone();","lastModifiedDate":"2023-08-20"},{"lineNumber":125,"author":{"gitId":"lshaoqin"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\" + currTask.toString());","lastModifiedDate":"2023-08-20"},{"lineNumber":126,"author":{"gitId":"lshaoqin"},"content":"                    printLine();","lastModifiedDate":"2023-08-20"},{"lineNumber":127,"author":{"gitId":"lshaoqin"},"content":"                    continue;","lastModifiedDate":"2023-08-20"},{"lineNumber":128,"author":{"gitId":"lshaoqin"},"content":"                }","lastModifiedDate":"2023-08-21"},{"lineNumber":129,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":130,"author":{"gitId":"lshaoqin"},"content":"                if (input.startsWith(\"delete \")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":131,"author":{"gitId":"lshaoqin"},"content":"                    int index \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2023-08-21"},{"lineNumber":132,"author":{"gitId":"lshaoqin"},"content":"                    if (index \u003e tasks.size()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":133,"author":{"gitId":"lshaoqin"},"content":"                        throw new JukeError(\"That task does not exist!\");","lastModifiedDate":"2023-08-21"},{"lineNumber":134,"author":{"gitId":"lshaoqin"},"content":"                    }","lastModifiedDate":"2023-08-21"},{"lineNumber":135,"author":{"gitId":"lshaoqin"},"content":"                    Task currTask \u003d tasks.get(index - 1);","lastModifiedDate":"2023-08-21"},{"lineNumber":136,"author":{"gitId":"lshaoqin"},"content":"                    tasks.remove(index - 1);","lastModifiedDate":"2023-08-21"},{"lineNumber":137,"author":{"gitId":"lshaoqin"},"content":"                    System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":138,"author":{"gitId":"lshaoqin"},"content":"                    System.out.println(\"\\t\" + currTask.toString());","lastModifiedDate":"2023-08-21"},{"lineNumber":139,"author":{"gitId":"lshaoqin"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":140,"author":{"gitId":"lshaoqin"},"content":"                    printLine();","lastModifiedDate":"2023-08-21"},{"lineNumber":141,"author":{"gitId":"lshaoqin"},"content":"                }","lastModifiedDate":"2023-08-21"},{"lineNumber":142,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":143,"author":{"gitId":"lshaoqin"},"content":"                else { //check for task creation","lastModifiedDate":"2023-08-21"},{"lineNumber":144,"author":{"gitId":"lshaoqin"},"content":"                    if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":145,"author":{"gitId":"lshaoqin"},"content":"                        if (input.length() \u003c 5 || input.substring(5).length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-21"},{"lineNumber":146,"author":{"gitId":"lshaoqin"},"content":"                            throw new JukeError(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":147,"author":{"gitId":"lshaoqin"},"content":"                        }","lastModifiedDate":"2023-08-21"},{"lineNumber":148,"author":{"gitId":"lshaoqin"},"content":"                        Task newTask \u003d new Todo(input.substring(5));","lastModifiedDate":"2023-08-21"},{"lineNumber":149,"author":{"gitId":"lshaoqin"},"content":"                        tasks.add(newTask);","lastModifiedDate":"2023-08-21"},{"lineNumber":150,"author":{"gitId":"lshaoqin"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":151,"author":{"gitId":"lshaoqin"},"content":"                        System.out.println(\"\\t\" + newTask.toString());","lastModifiedDate":"2023-08-21"},{"lineNumber":152,"author":{"gitId":"lshaoqin"},"content":"                        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":153,"author":{"gitId":"lshaoqin"},"content":"                        printLine();","lastModifiedDate":"2023-08-20"},{"lineNumber":154,"author":{"gitId":"lshaoqin"},"content":"                    } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":155,"author":{"gitId":"lshaoqin"},"content":"                        final Pattern deadlinePattern \u003d Pattern.compile(","lastModifiedDate":"2023-08-21"},{"lineNumber":156,"author":{"gitId":"lshaoqin"},"content":"                                \"^deadline\\\\s+(.*)\\\\s+/by\\\\s+(.*)$\");","lastModifiedDate":"2023-08-21"},{"lineNumber":157,"author":{"gitId":"lshaoqin"},"content":"                        Matcher matcher \u003d deadlinePattern.matcher(input);","lastModifiedDate":"2023-08-21"},{"lineNumber":158,"author":{"gitId":"lshaoqin"},"content":"                        if (matcher.matches()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":159,"author":{"gitId":"lshaoqin"},"content":"                            Task newTask \u003d new Deadline(matcher.group(1), matcher.group(2));","lastModifiedDate":"2023-08-21"},{"lineNumber":160,"author":{"gitId":"lshaoqin"},"content":"                            tasks.add(newTask);","lastModifiedDate":"2023-08-21"},{"lineNumber":161,"author":{"gitId":"lshaoqin"},"content":"                            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":162,"author":{"gitId":"lshaoqin"},"content":"                            System.out.println(\"\\t\" + newTask.toString());","lastModifiedDate":"2023-08-21"},{"lineNumber":163,"author":{"gitId":"lshaoqin"},"content":"                            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":164,"author":{"gitId":"lshaoqin"},"content":"                            printLine();","lastModifiedDate":"2023-08-21"},{"lineNumber":165,"author":{"gitId":"lshaoqin"},"content":"                        }","lastModifiedDate":"2023-08-21"},{"lineNumber":166,"author":{"gitId":"lshaoqin"},"content":"                    } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-08-21"},{"lineNumber":167,"author":{"gitId":"lshaoqin"},"content":"                        final Pattern eventPattern \u003d Pattern.compile(","lastModifiedDate":"2023-08-21"},{"lineNumber":168,"author":{"gitId":"lshaoqin"},"content":"                                \"^event\\\\s+(.*)\\\\s+/from\\\\s+(.*)\\\\s+/to\\\\s+(.*)$\");","lastModifiedDate":"2023-08-21"},{"lineNumber":169,"author":{"gitId":"lshaoqin"},"content":"                        Matcher matcher \u003d eventPattern.matcher(input);","lastModifiedDate":"2023-08-21"},{"lineNumber":170,"author":{"gitId":"lshaoqin"},"content":"                        if (matcher.matches()) {","lastModifiedDate":"2023-08-21"},{"lineNumber":171,"author":{"gitId":"lshaoqin"},"content":"                            Task newTask \u003d new Event(matcher.group(1), matcher.group(2), matcher.group(3));","lastModifiedDate":"2023-08-21"},{"lineNumber":172,"author":{"gitId":"lshaoqin"},"content":"                            tasks.add(newTask);","lastModifiedDate":"2023-08-21"},{"lineNumber":173,"author":{"gitId":"lshaoqin"},"content":"                            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-21"},{"lineNumber":174,"author":{"gitId":"lshaoqin"},"content":"                            System.out.println(\"\\t\" + newTask.toString());","lastModifiedDate":"2023-08-21"},{"lineNumber":175,"author":{"gitId":"lshaoqin"},"content":"                            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2023-08-21"},{"lineNumber":176,"author":{"gitId":"lshaoqin"},"content":"                            printLine();","lastModifiedDate":"2023-08-21"},{"lineNumber":177,"author":{"gitId":"lshaoqin"},"content":"                        }","lastModifiedDate":"2023-08-21"},{"lineNumber":178,"author":{"gitId":"lshaoqin"},"content":"                    } else {","lastModifiedDate":"2023-08-21"},{"lineNumber":179,"author":{"gitId":"lshaoqin"},"content":"                        throw new JukeError(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-21"},{"lineNumber":180,"author":{"gitId":"lshaoqin"},"content":"                    }","lastModifiedDate":"2023-08-21"},{"lineNumber":181,"author":{"gitId":"lshaoqin"},"content":"                }","lastModifiedDate":"2023-08-21"},{"lineNumber":182,"author":{"gitId":"lshaoqin"},"content":"            } catch (JukeError error) {","lastModifiedDate":"2023-08-21"},{"lineNumber":183,"author":{"gitId":"lshaoqin"},"content":"                System.out.println(\"☹ OOPS!!! \" + error.getMessage());","lastModifiedDate":"2023-08-21"},{"lineNumber":184,"author":{"gitId":"lshaoqin"},"content":"                printLine();","lastModifiedDate":"2023-08-21"},{"lineNumber":185,"author":{"gitId":"lshaoqin"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":186,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":187,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":188,"author":{"gitId":"lshaoqin"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"lshaoqin":188}},{"path":"src/main/java/JukeError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lshaoqin"},"content":"public class JukeError extends Exception {","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"lshaoqin"},"content":"    public JukeError(String errorMessage) {","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"lshaoqin"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"lshaoqin"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"lshaoqin":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lshaoqin"},"content":"todo borrow book","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"lshaoqin"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"lshaoqin"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"lshaoqin"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"lshaoqin"},"content":"mark 1","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"lshaoqin"},"content":"mark 2","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"lshaoqin"},"content":"unmark 1","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"lshaoqin"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"lshaoqin"},"content":"bye","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"lshaoqin":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"lshaoqin"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Juke.java","lastModifiedDate":"2023-08-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"lshaoqin"},"content":"java -classpath ..\\bin Juke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lshaoqin":2,"-":19}}]
