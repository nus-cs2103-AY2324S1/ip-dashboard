[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"lshaoqin"},"content":"    mainClass.set(\"juke.Juke\")","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"lshaoqin"},"content":"    archiveBaseName \u003d \"juke\"","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lshaoqin":2,"-":40}},{"path":"src/main/java/juke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lshaoqin"},"content":"package juke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"lshaoqin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"lshaoqin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"lshaoqin"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"lshaoqin"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"lshaoqin"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"lshaoqin"},"content":"        super(description);","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"lshaoqin"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"lshaoqin"},"content":"    public Deadline(String description, boolean isDone, LocalDate by) {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"lshaoqin"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"lshaoqin"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"lshaoqin"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"lshaoqin"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"lshaoqin"},"content":"        return \"[D]\" + super.toString() + \" (by: \" +","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"lshaoqin"},"content":"                by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"lshaoqin"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"lshaoqin"},"content":"    public String toData() { return \"D\" + super.toData() + \"|\" + this.by; }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"lshaoqin"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"lshaoqin":27}},{"path":"src/main/java/juke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lshaoqin"},"content":"package juke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"lshaoqin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"lshaoqin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"lshaoqin"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"lshaoqin"},"content":"    protected LocalDate start;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"lshaoqin"},"content":"    protected LocalDate end;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"lshaoqin"},"content":"    public Event(String description, LocalDate start, LocalDate end) {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"lshaoqin"},"content":"        super(description);","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"lshaoqin"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"lshaoqin"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"lshaoqin"},"content":"    public Event(String description, boolean isDone, LocalDate start, LocalDate end) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"lshaoqin"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"lshaoqin"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"lshaoqin"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"lshaoqin"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"lshaoqin"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"lshaoqin"},"content":"        return \"[E]\" + super.toString() + \" (\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"lshaoqin"},"content":"                \"from: \" + start.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) +","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"lshaoqin"},"content":"                \" to: \" + end.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"lshaoqin"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"lshaoqin"},"content":"    public String toData() { return \"E\" + super.toData() + \"|\" + start + \"|\" + end; }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"lshaoqin"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"lshaoqin":30}},{"path":"src/main/java/juke/Juke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lshaoqin"},"content":"package juke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"lshaoqin"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-20"},{"lineNumber":4,"author":{"gitId":"lshaoqin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-20"},{"lineNumber":5,"author":{"gitId":"lshaoqin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"lshaoqin"},"content":"public class Juke {","lastModifiedDate":"2023-08-20"},{"lineNumber":7,"author":{"gitId":"lshaoqin"},"content":"    private final Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"lshaoqin"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"lshaoqin"},"content":"    private final Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":11,"author":{"gitId":"lshaoqin"},"content":"    private final Parser parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":13,"author":{"gitId":"lshaoqin"},"content":"    private boolean isEnded;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":15,"author":{"gitId":"lshaoqin"},"content":"    public void closeBot() {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"lshaoqin"},"content":"        ui.printBye();","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"lshaoqin"},"content":"        isEnded \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"lshaoqin"},"content":"    public void printList() {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"lshaoqin"},"content":"        ui.printList(tasks.tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":23,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"lshaoqin"},"content":"    public void unmark(int index) throws JukeError {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"lshaoqin"},"content":"        Task currTask \u003d tasks.markAsUndone(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"lshaoqin"},"content":"        ui.unmark(currTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"lshaoqin"},"content":"        storage.updateAll(tasks.tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":29,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":30,"author":{"gitId":"lshaoqin"},"content":"    public void mark(int index) throws JukeError {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"lshaoqin"},"content":"        Task currTask \u003d tasks.markAsDone(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"lshaoqin"},"content":"        ui.mark(currTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"lshaoqin"},"content":"        storage.updateAll(tasks.tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"lshaoqin"},"content":"    public void delete(int index) throws JukeError {","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"lshaoqin"},"content":"        Task currTask \u003d tasks.delete(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"lshaoqin"},"content":"        ui.delete(currTask, tasks.getSize());","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"lshaoqin"},"content":"        storage.updateAll(tasks.tasks);","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":41,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"lshaoqin"},"content":"    public void find(String searchTerm) {","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"lshaoqin"},"content":"        ArrayList\u003cTask\u003e results \u003d tasks.find(searchTerm);","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"lshaoqin"},"content":"        ui.find(results);","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"lshaoqin"},"content":"    public void createTodo(String desc) throws JukeError {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"lshaoqin"},"content":"        Task newTask \u003d new Todo(desc);","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"lshaoqin"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"lshaoqin"},"content":"        storage.write(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"lshaoqin"},"content":"        ui.createTask(newTask, tasks.getSize());","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":54,"author":{"gitId":"lshaoqin"},"content":"    public void createDeadline(String desc, LocalDate by) throws JukeError {","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"lshaoqin"},"content":"        Task newTask \u003d new Deadline(desc, by);","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"lshaoqin"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"lshaoqin"},"content":"        storage.write(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"lshaoqin"},"content":"        ui.createTask(newTask, tasks.getSize());","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"lshaoqin"},"content":"    public void createEvent(String desc, LocalDate start, LocalDate end) throws JukeError {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"lshaoqin"},"content":"        Task newTask \u003d new Event(desc, start, end);","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"lshaoqin"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"lshaoqin"},"content":"        storage.write(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"lshaoqin"},"content":"        ui.createTask(newTask, tasks.getSize());","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"lshaoqin"},"content":"    public Juke(String filePath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"lshaoqin"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"lshaoqin"},"content":"        parser \u003d new Parser(this);","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"lshaoqin"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"lshaoqin"},"content":"        try {","lastModifiedDate":"2023-08-21"},{"lineNumber":73,"author":{"gitId":"lshaoqin"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"lshaoqin"},"content":"        } catch (JukeError e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"lshaoqin"},"content":"            ui.printError(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"lshaoqin"},"content":"            tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-21"},{"lineNumber":78,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":79,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":80,"author":{"gitId":"lshaoqin"},"content":"    public void run() {","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"lshaoqin"},"content":"        ui.printStart();","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"lshaoqin"},"content":"        while (!isEnded) {","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"lshaoqin"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"lshaoqin"},"content":"                parser.parse(ui.readInput());","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"lshaoqin"},"content":"            } catch (JukeError error) {","lastModifiedDate":"2023-08-21"},{"lineNumber":86,"author":{"gitId":"lshaoqin"},"content":"                ui.printError(error);","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"lshaoqin"},"content":"            }","lastModifiedDate":"2023-08-20"},{"lineNumber":88,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-20"},{"lineNumber":89,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-20"},{"lineNumber":90,"author":{"gitId":"lshaoqin"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"lshaoqin"},"content":"        new Juke(\"./savefile.txt\").run();","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"lshaoqin"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"lshaoqin":93}},{"path":"src/main/java/juke/JukeError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lshaoqin"},"content":"package juke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"lshaoqin"},"content":"public class JukeError extends Exception {","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"lshaoqin"},"content":"    public JukeError(String errorMessage) {","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"lshaoqin"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"lshaoqin"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"lshaoqin":7}},{"path":"src/main/java/juke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lshaoqin"},"content":"package juke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"lshaoqin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"lshaoqin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"lshaoqin"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"lshaoqin"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"lshaoqin"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"lshaoqin"},"content":"    protected Juke juke;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"lshaoqin"},"content":"    public Parser(Juke juke) {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"lshaoqin"},"content":"        this.juke \u003d juke;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"lshaoqin"},"content":"     * Parses input and calls the appropriate Juke function.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"lshaoqin"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"lshaoqin"},"content":"     * @param input Input from the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"lshaoqin"},"content":"     * @throws JukeError If there was a problem parsing the input.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lshaoqin"},"content":"    void parse(String input) throws JukeError {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"lshaoqin"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"lshaoqin"},"content":"            juke.closeBot();","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"lshaoqin"},"content":"        else if (input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"lshaoqin"},"content":"            juke.printList();","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"lshaoqin"},"content":"        else if (input.contains(\"unmark \")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"lshaoqin"},"content":"            int index \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"lshaoqin"},"content":"            juke.unmark(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"lshaoqin"},"content":"        else if (input.contains(\"mark \")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"lshaoqin"},"content":"            int index \u003d Integer.parseInt(input.substring(5));","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"lshaoqin"},"content":"            juke.mark(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"lshaoqin"},"content":"        else if (input.startsWith(\"delete \")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"lshaoqin"},"content":"            int index \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"lshaoqin"},"content":"            juke.delete(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"lshaoqin"},"content":"        else if (input.startsWith(\"find \")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"lshaoqin"},"content":"            if (input.length() \u003c 6) {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"lshaoqin"},"content":"                throw new JukeError(\"Please specify a search term.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"lshaoqin"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"lshaoqin"},"content":"            String searchTerm \u003d input.substring(5);","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"lshaoqin"},"content":"            juke.find(searchTerm);","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"lshaoqin"},"content":"        else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"lshaoqin"},"content":"            if (input.length() \u003c 5 || input.substring(5).length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"lshaoqin"},"content":"                throw new JukeError(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"lshaoqin"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"lshaoqin"},"content":"            juke.createTodo(input.substring(5));","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"lshaoqin"},"content":"        else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"lshaoqin"},"content":"            final Pattern deadlinePattern \u003d Pattern.compile(","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"lshaoqin"},"content":"                    \"^deadline\\\\s+(.*)\\\\s+/by\\\\s+(.*)$\");","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"lshaoqin"},"content":"            Matcher matcher \u003d deadlinePattern.matcher(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"lshaoqin"},"content":"            if (matcher.matches()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"lshaoqin"},"content":"                try {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"lshaoqin"},"content":"                    juke.createDeadline(matcher.group(1), LocalDate.parse(matcher.group(2)));","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"lshaoqin"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"lshaoqin"},"content":"                    throw new JukeError(\"Failed to parse date.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"lshaoqin"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"lshaoqin"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"lshaoqin"},"content":"        else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"lshaoqin"},"content":"            final Pattern eventPattern \u003d Pattern.compile(","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"lshaoqin"},"content":"                    \"^event\\\\s+(.*)\\\\s+/from\\\\s+(.*)\\\\s+/to\\\\s+(.*)$\");","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"lshaoqin"},"content":"            Matcher matcher \u003d eventPattern.matcher(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"lshaoqin"},"content":"            if (matcher.matches()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"lshaoqin"},"content":"                try {","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"lshaoqin"},"content":"                    juke.createEvent(matcher.group(1),","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"lshaoqin"},"content":"                            LocalDate.parse(matcher.group(2)),","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"lshaoqin"},"content":"                            LocalDate.parse(matcher.group(3)));","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"lshaoqin"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"lshaoqin"},"content":"                    throw new JukeError(\"Failed to parse date.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"lshaoqin"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"lshaoqin"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"lshaoqin"},"content":"        else {","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"lshaoqin"},"content":"            throw new JukeError(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"lshaoqin"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"lshaoqin":82}},{"path":"src/main/java/juke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lshaoqin"},"content":"package juke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"lshaoqin"},"content":"import java.io.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"lshaoqin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"lshaoqin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"lshaoqin"},"content":"import java.util.Objects;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"lshaoqin"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"lshaoqin"},"content":"    File savefile;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"lshaoqin"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"lshaoqin"},"content":"       this.savefile \u003d new File(filepath);","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"lshaoqin"},"content":"        if (!savefile.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"lshaoqin"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"lshaoqin"},"content":"                savefile.createNewFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"lshaoqin"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"lshaoqin"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"lshaoqin"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"lshaoqin"},"content":"     * Checks if task in data has been completed.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"lshaoqin"},"content":"     * @param isDone isDone portion of the task in data.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"lshaoqin"},"content":"     * @return Whether the task has been completed.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"lshaoqin"},"content":"    private boolean parseIsDone(String isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"lshaoqin"},"content":"        return isDone.equals(\"true\");","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"lshaoqin"},"content":"     * Parses one task which was stored in the savefile.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"lshaoqin"},"content":"     * @param data The data string representation of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"lshaoqin"},"content":"     * @return The parsed Task object.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"lshaoqin"},"content":"    private Task parseOne(String data) {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"lshaoqin"},"content":"        String[] parts \u003d data.split(\"\\\\|\");","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"lshaoqin"},"content":"        if (Objects.equals(parts[0], \"T\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"lshaoqin"},"content":"            return new Todo(parts[2], parseIsDone(parts[1]));","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"lshaoqin"},"content":"        if (Objects.equals(parts[0], \"D\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"lshaoqin"},"content":"            return new Deadline(parts[2], parseIsDone(parts[1]), LocalDate.parse(parts[3]));","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"lshaoqin"},"content":"        if (Objects.equals(parts[0], \"E\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"lshaoqin"},"content":"            return new Event(parts[2], parseIsDone(parts[1]),","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"lshaoqin"},"content":"                    LocalDate.parse(parts[3]), LocalDate.parse(parts[4]));","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"lshaoqin"},"content":"        return null;","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"lshaoqin"},"content":"     * Loads all tasks from the savefile.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"lshaoqin"},"content":"     * @return An ArrayList of Tasks which was loaded from the savefile.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"lshaoqin"},"content":"     * @throws JukeError If there was an error parsing any of the data.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"lshaoqin"},"content":"    public ArrayList\u003cTask\u003e load() throws JukeError {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"lshaoqin"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"lshaoqin"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"lshaoqin"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(savefile));","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"lshaoqin"},"content":"            // Read the lines from the file one by one.","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"lshaoqin"},"content":"            String line;","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"lshaoqin"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"lshaoqin"},"content":"                tasks.add(parseOne(line));","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"lshaoqin"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"lshaoqin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"lshaoqin"},"content":"            throw new JukeError(\"Failed to load data.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"lshaoqin"},"content":"        return tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"lshaoqin"},"content":"     * Writes a task to the savefile.","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"lshaoqin"},"content":"     * @param task The task to be written.","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"lshaoqin"},"content":"     * @throws JukeError If the writing operation failed.","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"lshaoqin"},"content":"    public void write(Task task) throws JukeError {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"lshaoqin"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"lshaoqin"},"content":"            FileWriter writer \u003d new FileWriter(savefile, true);","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"lshaoqin"},"content":"            writer.write(task.toData() + \"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"lshaoqin"},"content":"            writer.flush();","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"lshaoqin"},"content":"            writer.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"lshaoqin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"lshaoqin"},"content":"            throw new JukeError(\"Failed to write to storage.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"lshaoqin"},"content":"     * Updates all tasks in the savefile, useful when a task is deleted or modified.","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"lshaoqin"},"content":"     * @param tasks An ArrayList of all tasks to be written.","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"lshaoqin"},"content":"    public void updateAll(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"lshaoqin"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"lshaoqin"},"content":"            FileWriter deleter \u003d new FileWriter(savefile, false);","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"lshaoqin"},"content":"            deleter.write(\"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"lshaoqin"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"lshaoqin"},"content":"                FileWriter writer \u003d new FileWriter(savefile, true);","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"lshaoqin"},"content":"                writer.write(task.toData() + \"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"lshaoqin"},"content":"                writer.flush();","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"lshaoqin"},"content":"                writer.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"lshaoqin"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"lshaoqin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"lshaoqin"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"lshaoqin"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"lshaoqin":105}},{"path":"src/main/java/juke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lshaoqin"},"content":"package juke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"lshaoqin"},"content":"public class Task {","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"lshaoqin"},"content":"    protected final String desc;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"lshaoqin"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"lshaoqin"},"content":"    public Task(String desc) {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"lshaoqin"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"lshaoqin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"lshaoqin"},"content":"    public Task(String desc, boolean isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"lshaoqin"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"lshaoqin"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"lshaoqin"},"content":"     * Gets the appropriate icon based on whether the task is done.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lshaoqin"},"content":"     * @return [X] if task is done, [ ] if task is not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"lshaoqin"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"lshaoqin"},"content":"        return (isDone ? \"[X] \" : \"[ ] \"); // mark done task with X","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"lshaoqin"},"content":"     * Marks task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"lshaoqin"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"lshaoqin"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"lshaoqin"},"content":"     * Marks task as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"lshaoqin"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"lshaoqin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"lshaoqin"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"lshaoqin"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"lshaoqin"},"content":"        return this.getStatusIcon() + desc;","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"lshaoqin"},"content":"     * Generates string to be stored as data in Storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"lshaoqin"},"content":"     * @return String which stores all necessary attributes in the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"lshaoqin"},"content":"    public String toData() {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"lshaoqin"},"content":"        return \"|\" + isDone + \"|\" + desc;","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"lshaoqin"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"lshaoqin":51}},{"path":"src/main/java/juke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lshaoqin"},"content":"package juke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"lshaoqin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"lshaoqin"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"lshaoqin"},"content":"    public ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"lshaoqin"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"lshaoqin"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"lshaoqin"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"lshaoqin"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"lshaoqin"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"lshaoqin"},"content":"        return tasks.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"lshaoqin"},"content":"    public Task markAsUndone(int index) throws JukeError {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"lshaoqin"},"content":"        if (index \u003e tasks.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"lshaoqin"},"content":"            throw new JukeError(\"That task does not exist!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"lshaoqin"},"content":"        Task currTask \u003d tasks.get(index - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"lshaoqin"},"content":"        currTask.markAsUndone();","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"lshaoqin"},"content":"        return currTask;","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"lshaoqin"},"content":"    public Task markAsDone(int index) throws JukeError {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"lshaoqin"},"content":"        if (index \u003e tasks.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"lshaoqin"},"content":"            throw new JukeError(\"That task does not exist!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"lshaoqin"},"content":"        Task currTask \u003d tasks.get(index - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"lshaoqin"},"content":"        currTask.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"lshaoqin"},"content":"        return currTask;","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"lshaoqin"},"content":"    public Task delete(int index) throws JukeError {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"lshaoqin"},"content":"        if (index \u003e tasks.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"lshaoqin"},"content":"            throw new JukeError(\"That task does not exist!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"lshaoqin"},"content":"        Task currTask \u003d tasks.get(index - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"lshaoqin"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"lshaoqin"},"content":"        return currTask;","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"lshaoqin"},"content":"    public ArrayList\u003cTask\u003e find(String searchTerm) {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"lshaoqin"},"content":"        ArrayList\u003cTask\u003e results \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"lshaoqin"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"lshaoqin"},"content":"            if (task.desc.contains(searchTerm)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"lshaoqin"},"content":"                results.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"lshaoqin"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"lshaoqin"},"content":"        return results;","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"lshaoqin"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"lshaoqin":57}},{"path":"src/main/java/juke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lshaoqin"},"content":"package juke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"lshaoqin"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"lshaoqin"},"content":"    public Todo(String desc) {","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"lshaoqin"},"content":"        super(desc);","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"lshaoqin"},"content":"    public Todo(String desc, boolean isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"lshaoqin"},"content":"        super(desc, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"lshaoqin"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"lshaoqin"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"lshaoqin"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"lshaoqin"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"lshaoqin"},"content":"    public String toData() {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lshaoqin"},"content":"        return \"T\" + super.toData();","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"lshaoqin"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"lshaoqin":21}},{"path":"src/main/java/juke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lshaoqin"},"content":"package juke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"lshaoqin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"lshaoqin"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"lshaoqin"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"lshaoqin"},"content":"    Scanner scanner;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"lshaoqin"},"content":"    public Ui() {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"lshaoqin"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"lshaoqin"},"content":"     * Prints a line to separate different sections.","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"lshaoqin"},"content":"    static void printLine() {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"lshaoqin"},"content":"        System.out.println(\"_______________________________________________________\");","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"lshaoqin"},"content":"     * Reads the input from the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"lshaoqin"},"content":"     * @return The input from the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"lshaoqin"},"content":"    public String readInput() {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"lshaoqin"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"lshaoqin"},"content":"     * Prints the message to welcome the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"lshaoqin"},"content":"    public void printStart() {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"lshaoqin"},"content":"        //Introduce itself to the user","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"lshaoqin"},"content":"        System.out.println(\"Hello! I\u0027m Juke!\");","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"lshaoqin"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"lshaoqin"},"content":"        printLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":39,"author":{"gitId":"lshaoqin"},"content":"     * Prints the error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"lshaoqin"},"content":"     * @param error The JukeError which was encountered.","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"lshaoqin"},"content":"    public void printError(JukeError error) {","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"lshaoqin"},"content":"        System.out.println(error.getMessage());","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"lshaoqin"},"content":"        printLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"lshaoqin"},"content":"     * Prints bye to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"lshaoqin"},"content":"    public void printBye() {","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"lshaoqin"},"content":"        //Say goodbye","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"lshaoqin"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"lshaoqin"},"content":"        printLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"lshaoqin"},"content":"        scanner.close();  // Close the scanner before exiting","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"lshaoqin"},"content":"     * Prints the lists of tasks that the user has saved.","lastModifiedDate":"2023-09-01"},{"lineNumber":59,"author":{"gitId":"lshaoqin"},"content":"     * @param tasks The list of tasks to be printed.","lastModifiedDate":"2023-09-01"},{"lineNumber":60,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":61,"author":{"gitId":"lshaoqin"},"content":"    public void printList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"lshaoqin"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"lshaoqin"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"lshaoqin"},"content":"            System.out.println(count + \": \" + task.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"lshaoqin"},"content":"            count++;","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"lshaoqin"},"content":"        printLine();","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"lshaoqin"},"content":"     * Prints message after a task is marked as uncompleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"lshaoqin"},"content":"     * @param task The task which was unmarked.","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"lshaoqin"},"content":"    public void unmark(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"lshaoqin"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet: \\n\" + task.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":79,"author":{"gitId":"lshaoqin"},"content":"     * Prints message after a task is marked as completed.","lastModifiedDate":"2023-09-01"},{"lineNumber":80,"author":{"gitId":"lshaoqin"},"content":"     * @param task The task which was marked.","lastModifiedDate":"2023-09-01"},{"lineNumber":81,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":82,"author":{"gitId":"lshaoqin"},"content":"    public void mark(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"lshaoqin"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\" + task.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"lshaoqin"},"content":"     * Prints message after a task is deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"lshaoqin"},"content":"     * @param task The task which was deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"lshaoqin"},"content":"     * @param size The number of tasks in the TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"lshaoqin"},"content":"    public void delete(Task task, int size) {","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"lshaoqin"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"lshaoqin"},"content":"        System.out.println(\"\\t\" + task.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"lshaoqin"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"lshaoqin"},"content":"     * Prints message after a task is created.","lastModifiedDate":"2023-09-01"},{"lineNumber":99,"author":{"gitId":"lshaoqin"},"content":"     * @param task The task which was created.","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"lshaoqin"},"content":"     * @param size The number of tasks in the TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":102,"author":{"gitId":"lshaoqin"},"content":"    public void createTask(Task task, int size) {","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"lshaoqin"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"lshaoqin"},"content":"        System.out.println(\"\\t\" + task.toString());","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"lshaoqin"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":107,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":108,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":109,"author":{"gitId":"lshaoqin"},"content":"     * Prints out corresponding tasks based on search term.","lastModifiedDate":"2023-09-01"},{"lineNumber":110,"author":{"gitId":"lshaoqin"},"content":"     * @param results The results of the search.","lastModifiedDate":"2023-09-01"},{"lineNumber":111,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":112,"author":{"gitId":"lshaoqin"},"content":"    public void find(ArrayList\u003cTask\u003e results) {","lastModifiedDate":"2023-09-01"},{"lineNumber":113,"author":{"gitId":"lshaoqin"},"content":"        if (results.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":114,"author":{"gitId":"lshaoqin"},"content":"            System.out.println(\"No results found.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":115,"author":{"gitId":"lshaoqin"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":116,"author":{"gitId":"lshaoqin"},"content":"            int count \u003d 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":117,"author":{"gitId":"lshaoqin"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-09-01"},{"lineNumber":118,"author":{"gitId":"lshaoqin"},"content":"            for (Task task : results) {","lastModifiedDate":"2023-09-01"},{"lineNumber":119,"author":{"gitId":"lshaoqin"},"content":"                System.out.println(count + \". \" + task.toString());","lastModifiedDate":"2023-09-01"},{"lineNumber":120,"author":{"gitId":"lshaoqin"},"content":"                count++;","lastModifiedDate":"2023-09-01"},{"lineNumber":121,"author":{"gitId":"lshaoqin"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":122,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":123,"author":{"gitId":"lshaoqin"},"content":"        printLine();","lastModifiedDate":"2023-09-01"},{"lineNumber":124,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":125,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":126,"author":{"gitId":"lshaoqin"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"lshaoqin":126}},{"path":"src/test/java/juke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lshaoqin"},"content":"package juke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"lshaoqin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"lshaoqin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"lshaoqin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lshaoqin"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lshaoqin"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"lshaoqin"},"content":"    public void deleteTask_indexOutOfBounds_errorThrown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"lshaoqin"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"lshaoqin"},"content":"            TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"lshaoqin"},"content":"            tasks.delete(1);","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"lshaoqin"},"content":"        } catch (JukeError e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"lshaoqin"},"content":"            assertEquals(\"That task does not exist!\", e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lshaoqin"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lshaoqin"},"content":"    public void markTask_indexOutOfBounds_errorThrown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"lshaoqin"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"lshaoqin"},"content":"            TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"lshaoqin"},"content":"            tasks.markAsDone(1);","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"lshaoqin"},"content":"        } catch (JukeError e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"lshaoqin"},"content":"            assertEquals(\"That task does not exist!\", e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"lshaoqin"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"lshaoqin"},"content":"    public void add_getSize_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"lshaoqin"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"lshaoqin"},"content":"        tasks.add(new Task(\"testing\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"lshaoqin"},"content":"        tasks.add(new Task(\"testing\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"lshaoqin"},"content":"        assertEquals(tasks.getSize(), 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"lshaoqin"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"lshaoqin":35}},{"path":"src/test/java/juke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lshaoqin"},"content":"package juke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"lshaoqin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"lshaoqin"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"lshaoqin"},"content":"public class TodoTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lshaoqin"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lshaoqin"},"content":"    public void toString_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lshaoqin"},"content":"        Todo todo \u003d new Todo(\"testing\");","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"lshaoqin"},"content":"        assertEquals(todo.toString(), \"[T][ ] testing\");","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"lshaoqin"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"lshaoqin"},"content":"    public void toData_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"lshaoqin"},"content":"        Todo todo \u003d new Todo(\"testing\");","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"lshaoqin"},"content":"        assertEquals(todo.toData(), \"T|false|testing\");","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lshaoqin"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"lshaoqin"},"content":"    public void mark_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"lshaoqin"},"content":"        Todo todo \u003d new Todo(\"testing\");","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"lshaoqin"},"content":"        todo.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"lshaoqin"},"content":"        assertTrue(todo.isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"lshaoqin"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"lshaoqin"},"content":"    public void unmark_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"lshaoqin"},"content":"        Todo todo \u003d new Todo(\"testing\");","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"lshaoqin"},"content":"        todo.markAsUndone();","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"lshaoqin"},"content":"        assertFalse(todo.isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"lshaoqin"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"lshaoqin":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lshaoqin"},"content":"todo borrow book","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"lshaoqin"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"lshaoqin"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"lshaoqin"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"lshaoqin"},"content":"mark 1","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"lshaoqin"},"content":"mark 2","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"lshaoqin"},"content":"unmark 1","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"lshaoqin"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"lshaoqin"},"content":"bye","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"lshaoqin":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"lshaoqin"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\juke.Juke.java","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"lshaoqin"},"content":"java -classpath ..\\bin juke.Juke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lshaoqin":2,"-":19}}]
