[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"lshaoqin"},"content":"# Juke project template","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"lshaoqin"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Juke_. Given below are instructions on how to use it.","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"lshaoqin"},"content":"3. After that, locate the `src/main/java/Juke.java` file, right-click it, and choose `Run Juke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"lshaoqin"},"content":"   Hello! I\u0027m Juke!","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"lshaoqin"},"content":"   What can I do for you?","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lshaoqin":5,"-":15}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"lshaoqin"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"lshaoqin"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"lshaoqin"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"lshaoqin"},"content":"javafx {","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"lshaoqin"},"content":"    version \u003d \"17.0.7\"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"lshaoqin"},"content":"    modules \u003d [ \u0027javafx.controls\u0027,\u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"lshaoqin"},"content":"}","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"lshaoqin"},"content":"checkstyle {","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"lshaoqin"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":25,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"lshaoqin"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"lshaoqin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"lshaoqin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"lshaoqin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"lshaoqin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"lshaoqin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"lshaoqin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"lshaoqin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"lshaoqin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"lshaoqin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"lshaoqin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"lshaoqin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"lshaoqin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"lshaoqin"},"content":"    mainClass.set(\"juke.Launcher\")","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"lshaoqin"},"content":"    archiveBaseName \u003d \"juke\"","lastModifiedDate":"2023-09-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lshaoqin":28,"-":40}},{"path":"src/main/java/juke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lshaoqin"},"content":"package juke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"lshaoqin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"lshaoqin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"lshaoqin"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"lshaoqin"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"lshaoqin"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"lshaoqin"},"content":"        super(description);","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"lshaoqin"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"lshaoqin"},"content":"    public Deadline(String description, boolean isDone, LocalDate by) {","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"lshaoqin"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"lshaoqin"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"lshaoqin"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"lshaoqin"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"lshaoqin"},"content":"        return \"[D]\" + super.toString() + \" (by: \" +","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"lshaoqin"},"content":"                by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"lshaoqin"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"lshaoqin"},"content":"    public String toData() { return \"D\" + super.toData() + \"|\" + this.by; }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"lshaoqin"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"lshaoqin":27}},{"path":"src/main/java/juke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lshaoqin"},"content":"package juke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"lshaoqin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"lshaoqin"},"content":"import java.util.Collections;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"lshaoqin"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"lshaoqin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"lshaoqin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"lshaoqin"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"lshaoqin"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"lshaoqin"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"lshaoqin"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"lshaoqin"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"lshaoqin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"lshaoqin"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"lshaoqin"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"lshaoqin"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"lshaoqin"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"lshaoqin"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"lshaoqin"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"lshaoqin"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"lshaoqin"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"lshaoqin"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"lshaoqin"},"content":"    private Label dialog;","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"lshaoqin"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"lshaoqin"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"lshaoqin"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"lshaoqin"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"lshaoqin"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"lshaoqin"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"lshaoqin"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"lshaoqin"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"lshaoqin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"lshaoqin"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"lshaoqin"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"lshaoqin"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"lshaoqin"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"lshaoqin"},"content":"    private void flip() {","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"lshaoqin"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"lshaoqin"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"lshaoqin"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"lshaoqin"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"lshaoqin"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"lshaoqin"},"content":"        DialogBox userDialog \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"lshaoqin"},"content":"        userDialog.setPadding(new Insets(10, 10, 10, 10));","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"lshaoqin"},"content":"        return userDialog;","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"lshaoqin"},"content":"    public static DialogBox getJukeDialog(String text, Image img) {","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"lshaoqin"},"content":"        var jukeDialog \u003d new DialogBox(text, img);","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"lshaoqin"},"content":"        jukeDialog.flip();","lastModifiedDate":"2023-09-05"},{"lineNumber":62,"author":{"gitId":"lshaoqin"},"content":"        jukeDialog.setPadding(new Insets(10, 10, 10, 10));","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"lshaoqin"},"content":"        return jukeDialog;","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"lshaoqin"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"lshaoqin":65}},{"path":"src/main/java/juke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lshaoqin"},"content":"package juke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"lshaoqin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"lshaoqin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"lshaoqin"},"content":"public class Event extends Task {","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"lshaoqin"},"content":"    protected LocalDate start;","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"lshaoqin"},"content":"    protected LocalDate end;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"lshaoqin"},"content":"    public Event(String description, LocalDate start, LocalDate end) {","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"lshaoqin"},"content":"        super(description);","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"lshaoqin"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"lshaoqin"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"lshaoqin"},"content":"    public Event(String description, boolean isDone, LocalDate start, LocalDate end) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"lshaoqin"},"content":"        super(description, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"lshaoqin"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"lshaoqin"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"lshaoqin"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"lshaoqin"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"lshaoqin"},"content":"        return \"[E]\" + super.toString() + \" (\" +","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"lshaoqin"},"content":"                \"from: \" + start.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) +","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"lshaoqin"},"content":"                \" to: \" + end.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"lshaoqin"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"lshaoqin"},"content":"    public String toData() { return \"E\" + super.toData() + \"|\" + start + \"|\" + end; }","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"lshaoqin"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"lshaoqin":30}},{"path":"src/main/java/juke/Juke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lshaoqin"},"content":"package juke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"lshaoqin"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"lshaoqin"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"lshaoqin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"lshaoqin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"lshaoqin"},"content":"import java.util.concurrent.Executors;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"lshaoqin"},"content":"import java.util.concurrent.ScheduledExecutorService;","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"lshaoqin"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"lshaoqin"},"content":"public class Juke {","lastModifiedDate":"2023-08-20"},{"lineNumber":14,"author":{"gitId":"lshaoqin"},"content":"    private final Storage storage;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"lshaoqin"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"lshaoqin"},"content":"    private final Ui ui;","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":18,"author":{"gitId":"lshaoqin"},"content":"    private final Parser parser;","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":20,"author":{"gitId":"lshaoqin"},"content":"    private Application main;","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":22,"author":{"gitId":"lshaoqin"},"content":"    private boolean isEnded;","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"lshaoqin"},"content":"    public Juke(String filePath, Application main) {","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"lshaoqin"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"lshaoqin"},"content":"        parser \u003d new Parser(this);","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"lshaoqin"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"lshaoqin"},"content":"        this.main \u003d main;","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"lshaoqin"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"lshaoqin"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"lshaoqin"},"content":"        } catch (JukeError e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"lshaoqin"},"content":"            System.out.println(ui.printError(e));","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"lshaoqin"},"content":"            tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"lshaoqin"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"lshaoqin"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"lshaoqin"},"content":"            return parser.parse(input);","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"lshaoqin"},"content":"        } catch (JukeError error) {","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"lshaoqin"},"content":"            return ui.printError(error);","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"lshaoqin"},"content":"        } catch (Exception error) {","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"lshaoqin"},"content":"            System.out.println(\"Something went wrong.\");","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"lshaoqin"},"content":"        return \"Something went wrong. Please try again!\";","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"lshaoqin"},"content":"    public String closeBot() throws Exception {","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"lshaoqin"},"content":"        // Create a ScheduledExecutorService with a single-thread pool","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"lshaoqin"},"content":"        ScheduledExecutorService executorService \u003d Executors.newSingleThreadScheduledExecutor();","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"lshaoqin"},"content":"        // Schedule the main.stop() to run after 2 seconds","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"lshaoqin"},"content":"        executorService.schedule(() -\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"lshaoqin"},"content":"            Platform.runLater(() -\u003e {","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"lshaoqin"},"content":"                try {","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"lshaoqin"},"content":"                    main.stop();","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"lshaoqin"},"content":"                } catch (Exception e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"lshaoqin"},"content":"                    e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"lshaoqin"},"content":"                }","lastModifiedDate":"2023-08-21"},{"lineNumber":59,"author":{"gitId":"lshaoqin"},"content":"            });","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"lshaoqin"},"content":"        }, 2, TimeUnit.SECONDS);","lastModifiedDate":"2023-09-05"},{"lineNumber":61,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"lshaoqin"},"content":"        // Shutdown the executor service after scheduling the task","lastModifiedDate":"2023-09-05"},{"lineNumber":63,"author":{"gitId":"lshaoqin"},"content":"        executorService.shutdown();","lastModifiedDate":"2023-09-05"},{"lineNumber":64,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":65,"author":{"gitId":"lshaoqin"},"content":"        // Return ui.printBye() immediately","lastModifiedDate":"2023-09-05"},{"lineNumber":66,"author":{"gitId":"lshaoqin"},"content":"        return ui.printBye();","lastModifiedDate":"2023-09-05"},{"lineNumber":67,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"lshaoqin"},"content":"    public String printList() {","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"lshaoqin"},"content":"        return ui.printList(tasks.getTasks());","lastModifiedDate":"2023-09-07"},{"lineNumber":71,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":72,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"lshaoqin"},"content":"    public String unmark(int index) throws JukeError {","lastModifiedDate":"2023-09-05"},{"lineNumber":74,"author":{"gitId":"lshaoqin"},"content":"        Task currTask \u003d tasks.markAsUndone(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"lshaoqin"},"content":"        storage.updateAll(tasks.getTasks());","lastModifiedDate":"2023-09-07"},{"lineNumber":76,"author":{"gitId":"lshaoqin"},"content":"        return ui.unmark(currTask);","lastModifiedDate":"2023-09-05"},{"lineNumber":77,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":78,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-21"},{"lineNumber":79,"author":{"gitId":"lshaoqin"},"content":"    public String mark(int index) throws JukeError {","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"lshaoqin"},"content":"        Task currTask \u003d tasks.markAsDone(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"lshaoqin"},"content":"        storage.updateAll(tasks.getTasks());","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"lshaoqin"},"content":"        return ui.mark(currTask);","lastModifiedDate":"2023-09-05"},{"lineNumber":83,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"lshaoqin"},"content":"    public String delete(int index) throws JukeError {","lastModifiedDate":"2023-09-05"},{"lineNumber":86,"author":{"gitId":"lshaoqin"},"content":"        Task currTask \u003d tasks.delete(index);","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"lshaoqin"},"content":"        storage.updateAll(tasks.getTasks());","lastModifiedDate":"2023-09-07"},{"lineNumber":88,"author":{"gitId":"lshaoqin"},"content":"        return ui.delete(currTask, tasks.getSize());","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":90,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":91,"author":{"gitId":"lshaoqin"},"content":"    public String find(String searchTerm) {","lastModifiedDate":"2023-09-05"},{"lineNumber":92,"author":{"gitId":"lshaoqin"},"content":"        ArrayList\u003cTask\u003e results \u003d tasks.find(searchTerm);","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"lshaoqin"},"content":"        return ui.find(results);","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":96,"author":{"gitId":"lshaoqin"},"content":"    public String createTodo(String desc) throws JukeError {","lastModifiedDate":"2023-09-05"},{"lineNumber":97,"author":{"gitId":"lshaoqin"},"content":"        Task newTask \u003d new Todo(desc);","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"lshaoqin"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"lshaoqin"},"content":"        storage.write(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"lshaoqin"},"content":"        return ui.createTask(newTask, tasks.getSize());","lastModifiedDate":"2023-09-05"},{"lineNumber":101,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-20"},{"lineNumber":103,"author":{"gitId":"lshaoqin"},"content":"    public String createDeadline(String desc, LocalDate by) throws JukeError {","lastModifiedDate":"2023-09-05"},{"lineNumber":104,"author":{"gitId":"lshaoqin"},"content":"        Task newTask \u003d new Deadline(desc, by);","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"lshaoqin"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":106,"author":{"gitId":"lshaoqin"},"content":"        storage.write(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":107,"author":{"gitId":"lshaoqin"},"content":"        return ui.createTask(newTask, tasks.getSize());","lastModifiedDate":"2023-09-05"},{"lineNumber":108,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":109,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":110,"author":{"gitId":"lshaoqin"},"content":"    public String createEvent(String desc, LocalDate start, LocalDate end) throws JukeError {","lastModifiedDate":"2023-09-05"},{"lineNumber":111,"author":{"gitId":"lshaoqin"},"content":"        Task newTask \u003d new Event(desc, start, end);","lastModifiedDate":"2023-08-31"},{"lineNumber":112,"author":{"gitId":"lshaoqin"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":113,"author":{"gitId":"lshaoqin"},"content":"        storage.write(newTask);","lastModifiedDate":"2023-08-31"},{"lineNumber":114,"author":{"gitId":"lshaoqin"},"content":"        return ui.createTask(newTask, tasks.getSize());","lastModifiedDate":"2023-09-05"},{"lineNumber":115,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":116,"author":{"gitId":"lshaoqin"},"content":"}","lastModifiedDate":"2023-08-20"}],"authorContributionMap":{"lshaoqin":116}},{"path":"src/main/java/juke/JukeError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lshaoqin"},"content":"package juke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"lshaoqin"},"content":"public class JukeError extends Exception {","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"lshaoqin"},"content":"    public JukeError(String errorMessage) {","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"lshaoqin"},"content":"        super(errorMessage);","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"lshaoqin"},"content":"}","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"lshaoqin":7}},{"path":"src/main/java/juke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lshaoqin"},"content":"package juke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"lshaoqin"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lshaoqin"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"lshaoqin"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"lshaoqin"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"lshaoqin"},"content":"public class Launcher {","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"lshaoqin"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"lshaoqin"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"lshaoqin"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"lshaoqin":12}},{"path":"src/main/java/juke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lshaoqin"},"content":"package juke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"lshaoqin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lshaoqin"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"lshaoqin"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"lshaoqin"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"lshaoqin"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"lshaoqin"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"lshaoqin"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"lshaoqin"},"content":" * A GUI for Juke using FXML.","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"lshaoqin"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"lshaoqin"},"content":"public class Main extends Application {","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"lshaoqin"},"content":"    private Juke juke \u003d new Juke(\"./savefile.txt\", this);","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"lshaoqin"},"content":"    private Stage stage;","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"lshaoqin"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"lshaoqin"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"lshaoqin"},"content":"        try {","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"lshaoqin"},"content":"            this.stage \u003d stage;","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"lshaoqin"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"lshaoqin"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"lshaoqin"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"lshaoqin"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"lshaoqin"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setJuke(juke);","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"lshaoqin"},"content":"            stage.show();","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"lshaoqin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"lshaoqin"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"lshaoqin"},"content":"    @Override","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"lshaoqin"},"content":"    public void stop() {","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"lshaoqin"},"content":"        stage.close();","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"lshaoqin"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"lshaoqin":38}},{"path":"src/main/java/juke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lshaoqin"},"content":"package juke;","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"lshaoqin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"lshaoqin"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lshaoqin"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"lshaoqin"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"lshaoqin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"lshaoqin"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"lshaoqin"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"lshaoqin"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"lshaoqin"},"content":"/**","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"lshaoqin"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"lshaoqin"},"content":" */","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"lshaoqin"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"lshaoqin"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"lshaoqin"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"lshaoqin"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":20,"author":{"gitId":"lshaoqin"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"lshaoqin"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"lshaoqin"},"content":"    private TextField userInput;","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"lshaoqin"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":24,"author":{"gitId":"lshaoqin"},"content":"    private Button sendButton;","lastModifiedDate":"2023-09-05"},{"lineNumber":25,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"lshaoqin"},"content":"    private Juke juke;","lastModifiedDate":"2023-09-05"},{"lineNumber":27,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"lshaoqin"},"content":"    private Image userImage \u003d new Image(Objects.requireNonNull","lastModifiedDate":"2023-09-05"},{"lineNumber":29,"author":{"gitId":"lshaoqin"},"content":"            (this.getClass().getResourceAsStream(\"/images/Music.jfif\")));","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"lshaoqin"},"content":"    private Image jukeImage \u003d new Image(Objects.requireNonNull","lastModifiedDate":"2023-09-05"},{"lineNumber":31,"author":{"gitId":"lshaoqin"},"content":"            (this.getClass().getResourceAsStream(\"/images/Jukebox.jpg\")));","lastModifiedDate":"2023-09-05"},{"lineNumber":32,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":33,"author":{"gitId":"lshaoqin"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"lshaoqin"},"content":"    public void initialize() {","lastModifiedDate":"2023-09-05"},{"lineNumber":35,"author":{"gitId":"lshaoqin"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-09-05"},{"lineNumber":36,"author":{"gitId":"lshaoqin"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"lshaoqin"},"content":"                DialogBox.getJukeDialog(Ui.printStart(), jukeImage)","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"lshaoqin"},"content":"        );","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":40,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"lshaoqin"},"content":"    public void setJuke(Juke j) {","lastModifiedDate":"2023-09-05"},{"lineNumber":42,"author":{"gitId":"lshaoqin"},"content":"        juke \u003d j;","lastModifiedDate":"2023-09-05"},{"lineNumber":43,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-05"},{"lineNumber":46,"author":{"gitId":"lshaoqin"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-09-05"},{"lineNumber":47,"author":{"gitId":"lshaoqin"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-09-05"},{"lineNumber":48,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-05"},{"lineNumber":49,"author":{"gitId":"lshaoqin"},"content":"    @FXML","lastModifiedDate":"2023-09-05"},{"lineNumber":50,"author":{"gitId":"lshaoqin"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"lshaoqin"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"lshaoqin"},"content":"        String response \u003d juke.getResponse(input);","lastModifiedDate":"2023-09-05"},{"lineNumber":53,"author":{"gitId":"lshaoqin"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-09-05"},{"lineNumber":54,"author":{"gitId":"lshaoqin"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-09-05"},{"lineNumber":55,"author":{"gitId":"lshaoqin"},"content":"                DialogBox.getJukeDialog(response, jukeImage)","lastModifiedDate":"2023-09-05"},{"lineNumber":56,"author":{"gitId":"lshaoqin"},"content":"        );","lastModifiedDate":"2023-09-05"},{"lineNumber":57,"author":{"gitId":"lshaoqin"},"content":"        userInput.clear();","lastModifiedDate":"2023-09-05"},{"lineNumber":58,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"lshaoqin"},"content":"}","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"lshaoqin":59}},{"path":"src/main/java/juke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lshaoqin"},"content":"package juke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"lshaoqin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"lshaoqin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"lshaoqin"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"lshaoqin"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"lshaoqin"},"content":"public class Parser {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"lshaoqin"},"content":"    protected Juke juke;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"lshaoqin"},"content":"    public Parser(Juke juke) {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"lshaoqin"},"content":"        this.juke \u003d juke;","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"lshaoqin"},"content":"     * Parses input and calls the appropriate Juke function.","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"lshaoqin"},"content":"     *","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"lshaoqin"},"content":"     * @param input Input from the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"lshaoqin"},"content":"     * @throws JukeError If there was a problem parsing the input.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lshaoqin"},"content":"    String parse(String input) throws Exception {","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"lshaoqin"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"lshaoqin"},"content":"            return juke.closeBot();","lastModifiedDate":"2023-09-05"},{"lineNumber":23,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"lshaoqin"},"content":"        else if (input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"lshaoqin"},"content":"            return juke.printList();","lastModifiedDate":"2023-09-05"},{"lineNumber":26,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"lshaoqin"},"content":"        else if (input.contains(\"unmark \")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"lshaoqin"},"content":"            int index \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"lshaoqin"},"content":"            return juke.unmark(index);","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"lshaoqin"},"content":"        else if (input.contains(\"mark \")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"lshaoqin"},"content":"            int index \u003d Integer.parseInt(input.substring(5));","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"lshaoqin"},"content":"            return juke.mark(index);","lastModifiedDate":"2023-09-05"},{"lineNumber":34,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"lshaoqin"},"content":"        else if (input.startsWith(\"delete \")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"lshaoqin"},"content":"            int index \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"lshaoqin"},"content":"            return juke.delete(index);","lastModifiedDate":"2023-09-05"},{"lineNumber":38,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"lshaoqin"},"content":"        else if (input.startsWith(\"find \")) {","lastModifiedDate":"2023-09-01"},{"lineNumber":40,"author":{"gitId":"lshaoqin"},"content":"            if (input.length() \u003c 6) {","lastModifiedDate":"2023-09-01"},{"lineNumber":41,"author":{"gitId":"lshaoqin"},"content":"                throw new JukeError(\"Please specify a search term.\");","lastModifiedDate":"2023-09-01"},{"lineNumber":42,"author":{"gitId":"lshaoqin"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":43,"author":{"gitId":"lshaoqin"},"content":"            String searchTerm \u003d input.substring(5);","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"lshaoqin"},"content":"            return juke.find(searchTerm);","lastModifiedDate":"2023-09-05"},{"lineNumber":45,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"lshaoqin"},"content":"        else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"lshaoqin"},"content":"            if (input.length() \u003c 5 || input.substring(5).length() \u003d\u003d 0) {","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"lshaoqin"},"content":"                throw new JukeError(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"lshaoqin"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"lshaoqin"},"content":"            return juke.createTodo(input.substring(5));","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":52,"author":{"gitId":"lshaoqin"},"content":"        else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"lshaoqin"},"content":"            // Match string with pattern deadline (taskname) /by (date)","lastModifiedDate":"2023-09-07"},{"lineNumber":54,"author":{"gitId":"lshaoqin"},"content":"            final Pattern deadlinePattern \u003d Pattern.compile(","lastModifiedDate":"2023-08-31"},{"lineNumber":55,"author":{"gitId":"lshaoqin"},"content":"                    \"^deadline\\\\s+(.*)\\\\s+/by\\\\s+(.*)$\");","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"lshaoqin"},"content":"            Matcher matcher \u003d deadlinePattern.matcher(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"lshaoqin"},"content":"            if (matcher.matches()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"lshaoqin"},"content":"                try {","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"lshaoqin"},"content":"                    return juke.createDeadline(matcher.group(1), LocalDate.parse(matcher.group(2)));","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"lshaoqin"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"lshaoqin"},"content":"                    throw new JukeError(\"Failed to parse date.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"lshaoqin"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"lshaoqin"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"lshaoqin"},"content":"        else if (input.startsWith(\"event\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"lshaoqin"},"content":"            // Match string with pattern event (taskName) /from (date) /to (date)","lastModifiedDate":"2023-09-07"},{"lineNumber":67,"author":{"gitId":"lshaoqin"},"content":"            final Pattern eventPattern \u003d Pattern.compile(","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"lshaoqin"},"content":"                    \"^event\\\\s+(.*)\\\\s+/from\\\\s+(.*)\\\\s+/to\\\\s+(.*)$\");","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"lshaoqin"},"content":"            Matcher matcher \u003d eventPattern.matcher(input);","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"lshaoqin"},"content":"            if (matcher.matches()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"lshaoqin"},"content":"                try {","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"lshaoqin"},"content":"                    return juke.createEvent(matcher.group(1),","lastModifiedDate":"2023-09-05"},{"lineNumber":73,"author":{"gitId":"lshaoqin"},"content":"                            LocalDate.parse(matcher.group(2)),","lastModifiedDate":"2023-08-31"},{"lineNumber":74,"author":{"gitId":"lshaoqin"},"content":"                            LocalDate.parse(matcher.group(3)));","lastModifiedDate":"2023-08-31"},{"lineNumber":75,"author":{"gitId":"lshaoqin"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":76,"author":{"gitId":"lshaoqin"},"content":"                    throw new JukeError(\"Failed to parse date.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"lshaoqin"},"content":"                }","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"lshaoqin"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"lshaoqin"},"content":"        else {","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"lshaoqin"},"content":"            throw new JukeError(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"lshaoqin"},"content":"        return \"Juke may have encountered a problem - please try that again!\";","lastModifiedDate":"2023-09-05"},{"lineNumber":84,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"lshaoqin"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"lshaoqin":85}},{"path":"src/main/java/juke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lshaoqin"},"content":"package juke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"lshaoqin"},"content":"import java.io.*;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"lshaoqin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"lshaoqin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"lshaoqin"},"content":"import java.util.Objects;","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"lshaoqin"},"content":"public class Storage {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"lshaoqin"},"content":"    File savefile;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"lshaoqin"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"lshaoqin"},"content":"       this.savefile \u003d new File(filepath);","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"lshaoqin"},"content":"        if (!savefile.exists()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"lshaoqin"},"content":"            try {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"lshaoqin"},"content":"                savefile.createNewFile();","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"lshaoqin"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"lshaoqin"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"lshaoqin"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"lshaoqin"},"content":"     * Checks if task in data has been completed.","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"lshaoqin"},"content":"     * @param isDone isDone portion of the task in data.","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"lshaoqin"},"content":"     * @return Whether the task has been completed.","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"lshaoqin"},"content":"    private boolean parseIsDone(String isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"lshaoqin"},"content":"        return isDone.equals(\"true\");","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"lshaoqin"},"content":"     * Parses one task which was stored in the savefile.","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"lshaoqin"},"content":"     * @param data The data string representation of the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"lshaoqin"},"content":"     * @return The parsed Task object.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"lshaoqin"},"content":"    private Task parseOne(String data) {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"lshaoqin"},"content":"        String[] parts \u003d data.split(\"\\\\|\");","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"lshaoqin"},"content":"        if (Objects.equals(parts[0], \"T\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"lshaoqin"},"content":"            return new Todo(parts[2], parseIsDone(parts[1]));","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"lshaoqin"},"content":"        if (Objects.equals(parts[0], \"D\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"lshaoqin"},"content":"            return new Deadline(parts[2], parseIsDone(parts[1]), LocalDate.parse(parts[3]));","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"lshaoqin"},"content":"        if (Objects.equals(parts[0], \"E\")) {","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"lshaoqin"},"content":"            return new Event(parts[2], parseIsDone(parts[1]),","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"lshaoqin"},"content":"                    LocalDate.parse(parts[3]), LocalDate.parse(parts[4]));","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"lshaoqin"},"content":"        return null;","lastModifiedDate":"2023-08-31"},{"lineNumber":48,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"lshaoqin"},"content":"     * Loads all tasks from the savefile.","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"lshaoqin"},"content":"     * @return An ArrayList of Tasks which was loaded from the savefile.","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"lshaoqin"},"content":"     * @throws JukeError If there was an error parsing any of the data.","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"lshaoqin"},"content":"    public ArrayList\u003cTask\u003e load() throws JukeError {","lastModifiedDate":"2023-08-31"},{"lineNumber":56,"author":{"gitId":"lshaoqin"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-08-31"},{"lineNumber":57,"author":{"gitId":"lshaoqin"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":58,"author":{"gitId":"lshaoqin"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(savefile));","lastModifiedDate":"2023-08-31"},{"lineNumber":59,"author":{"gitId":"lshaoqin"},"content":"            // Read the lines from the file one by one.","lastModifiedDate":"2023-08-31"},{"lineNumber":60,"author":{"gitId":"lshaoqin"},"content":"            String line;","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"lshaoqin"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"lshaoqin"},"content":"                tasks.add(parseOne(line));","lastModifiedDate":"2023-08-31"},{"lineNumber":63,"author":{"gitId":"lshaoqin"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":64,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":65,"author":{"gitId":"lshaoqin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":66,"author":{"gitId":"lshaoqin"},"content":"            throw new JukeError(\"Failed to load data.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":67,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":68,"author":{"gitId":"lshaoqin"},"content":"        return tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":69,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":70,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":71,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"lshaoqin"},"content":"     * Writes a task to the savefile.","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"lshaoqin"},"content":"     * @param task The task to be written.","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"lshaoqin"},"content":"     * @throws JukeError If the writing operation failed.","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"lshaoqin"},"content":"    public void write(Task task) throws JukeError {","lastModifiedDate":"2023-08-31"},{"lineNumber":77,"author":{"gitId":"lshaoqin"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":78,"author":{"gitId":"lshaoqin"},"content":"            FileWriter writer \u003d new FileWriter(savefile, true);","lastModifiedDate":"2023-08-31"},{"lineNumber":79,"author":{"gitId":"lshaoqin"},"content":"            writer.write(task.toData() + \"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":80,"author":{"gitId":"lshaoqin"},"content":"            writer.flush();","lastModifiedDate":"2023-08-31"},{"lineNumber":81,"author":{"gitId":"lshaoqin"},"content":"            writer.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":82,"author":{"gitId":"lshaoqin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":83,"author":{"gitId":"lshaoqin"},"content":"            throw new JukeError(\"Failed to write to storage.\");","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":85,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":86,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":87,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"lshaoqin"},"content":"     * Updates all tasks in the savefile, useful when a task is deleted or modified.","lastModifiedDate":"2023-09-01"},{"lineNumber":89,"author":{"gitId":"lshaoqin"},"content":"     * @param tasks An ArrayList of all tasks to be written.","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":91,"author":{"gitId":"lshaoqin"},"content":"    public void updateAll(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":92,"author":{"gitId":"lshaoqin"},"content":"        try {","lastModifiedDate":"2023-08-31"},{"lineNumber":93,"author":{"gitId":"lshaoqin"},"content":"            FileWriter deleter \u003d new FileWriter(savefile, false);","lastModifiedDate":"2023-08-31"},{"lineNumber":94,"author":{"gitId":"lshaoqin"},"content":"            deleter.write(\"\");","lastModifiedDate":"2023-08-31"},{"lineNumber":95,"author":{"gitId":"lshaoqin"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":96,"author":{"gitId":"lshaoqin"},"content":"                FileWriter writer \u003d new FileWriter(savefile, true);","lastModifiedDate":"2023-08-31"},{"lineNumber":97,"author":{"gitId":"lshaoqin"},"content":"                writer.write(task.toData() + \"\\n\");","lastModifiedDate":"2023-08-31"},{"lineNumber":98,"author":{"gitId":"lshaoqin"},"content":"                writer.flush();","lastModifiedDate":"2023-08-31"},{"lineNumber":99,"author":{"gitId":"lshaoqin"},"content":"                writer.close();","lastModifiedDate":"2023-08-31"},{"lineNumber":100,"author":{"gitId":"lshaoqin"},"content":"            }","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"lshaoqin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"lshaoqin"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-08-31"},{"lineNumber":103,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":104,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":105,"author":{"gitId":"lshaoqin"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"lshaoqin":105}},{"path":"src/main/java/juke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lshaoqin"},"content":"package juke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"lshaoqin"},"content":"public class Task {","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"lshaoqin"},"content":"    protected final String desc;","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"lshaoqin"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"lshaoqin"},"content":"    public Task(String desc) {","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"lshaoqin"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"lshaoqin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"lshaoqin"},"content":"    public Task(String desc, boolean isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"lshaoqin"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"lshaoqin"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"lshaoqin"},"content":"     * Gets the appropriate icon based on whether the task is done.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lshaoqin"},"content":"     * @return [X] if task is done, [ ] if task is not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"lshaoqin"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"lshaoqin"},"content":"        return (isDone ? \"[X] \" : \"[ ] \"); // mark done task with X","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"lshaoqin"},"content":"     * Marks task as done.","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"lshaoqin"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"lshaoqin"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"lshaoqin"},"content":"     * Marks task as not done.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"lshaoqin"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"lshaoqin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"lshaoqin"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"lshaoqin"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"lshaoqin"},"content":"        return this.getStatusIcon() + desc;","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"lshaoqin"},"content":"     * Generates string to be stored as data in Storage.","lastModifiedDate":"2023-09-01"},{"lineNumber":46,"author":{"gitId":"lshaoqin"},"content":"     * @return String which stores all necessary attributes in the task.","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"lshaoqin"},"content":"    public String toData() {","lastModifiedDate":"2023-08-31"},{"lineNumber":49,"author":{"gitId":"lshaoqin"},"content":"        return \"|\" + isDone + \"|\" + desc;","lastModifiedDate":"2023-08-31"},{"lineNumber":50,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":51,"author":{"gitId":"lshaoqin"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"lshaoqin":51}},{"path":"src/main/java/juke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lshaoqin"},"content":"package juke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"lshaoqin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"lshaoqin"},"content":"public class TaskList {","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"lshaoqin"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"lshaoqin"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"lshaoqin"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"lshaoqin"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"lshaoqin"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"lshaoqin"},"content":"    public int getSize() {","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"lshaoqin"},"content":"        return tasks.size();","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":20,"author":{"gitId":"lshaoqin"},"content":"    public Task markAsUndone(int index) throws JukeError {","lastModifiedDate":"2023-08-31"},{"lineNumber":21,"author":{"gitId":"lshaoqin"},"content":"        if (index \u003e tasks.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":22,"author":{"gitId":"lshaoqin"},"content":"            throw new JukeError(\"That task does not exist!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"lshaoqin"},"content":"        Task currTask \u003d tasks.get(index - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":25,"author":{"gitId":"lshaoqin"},"content":"        currTask.markAsUndone();","lastModifiedDate":"2023-08-31"},{"lineNumber":26,"author":{"gitId":"lshaoqin"},"content":"        return currTask;","lastModifiedDate":"2023-08-31"},{"lineNumber":27,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":28,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"lshaoqin"},"content":"    public Task markAsDone(int index) throws JukeError {","lastModifiedDate":"2023-08-31"},{"lineNumber":30,"author":{"gitId":"lshaoqin"},"content":"        if (index \u003e tasks.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"lshaoqin"},"content":"            throw new JukeError(\"That task does not exist!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":33,"author":{"gitId":"lshaoqin"},"content":"        Task currTask \u003d tasks.get(index - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":34,"author":{"gitId":"lshaoqin"},"content":"        currTask.markAsDone();","lastModifiedDate":"2023-08-31"},{"lineNumber":35,"author":{"gitId":"lshaoqin"},"content":"        return currTask;","lastModifiedDate":"2023-08-31"},{"lineNumber":36,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":37,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"lshaoqin"},"content":"    public Task delete(int index) throws JukeError {","lastModifiedDate":"2023-08-31"},{"lineNumber":39,"author":{"gitId":"lshaoqin"},"content":"        if (index \u003e tasks.size()) {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"lshaoqin"},"content":"            throw new JukeError(\"That task does not exist!\");","lastModifiedDate":"2023-08-31"},{"lineNumber":41,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"lshaoqin"},"content":"        Task currTask \u003d tasks.get(index - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"lshaoqin"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2023-08-31"},{"lineNumber":44,"author":{"gitId":"lshaoqin"},"content":"        return currTask;","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":47,"author":{"gitId":"lshaoqin"},"content":"    public ArrayList\u003cTask\u003e find(String searchTerm) {","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"lshaoqin"},"content":"        ArrayList\u003cTask\u003e results \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"lshaoqin"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"lshaoqin"},"content":"            if (task.desc.contains(searchTerm)) {","lastModifiedDate":"2023-09-01"},{"lineNumber":51,"author":{"gitId":"lshaoqin"},"content":"                results.add(task);","lastModifiedDate":"2023-09-01"},{"lineNumber":52,"author":{"gitId":"lshaoqin"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":53,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":54,"author":{"gitId":"lshaoqin"},"content":"        return results;","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"lshaoqin"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-09-07"},{"lineNumber":58,"author":{"gitId":"lshaoqin"},"content":"        return this.tasks;","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":60,"author":{"gitId":"lshaoqin"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"lshaoqin":60}},{"path":"src/main/java/juke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lshaoqin"},"content":"package juke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"lshaoqin"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"lshaoqin"},"content":"    public Todo(String desc) {","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"lshaoqin"},"content":"        super(desc);","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":7,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":8,"author":{"gitId":"lshaoqin"},"content":"    public Todo(String desc, boolean isDone) {","lastModifiedDate":"2023-08-31"},{"lineNumber":9,"author":{"gitId":"lshaoqin"},"content":"        super(desc, isDone);","lastModifiedDate":"2023-08-31"},{"lineNumber":10,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"lshaoqin"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":13,"author":{"gitId":"lshaoqin"},"content":"    public String toString() {","lastModifiedDate":"2023-08-31"},{"lineNumber":14,"author":{"gitId":"lshaoqin"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":17,"author":{"gitId":"lshaoqin"},"content":"    @Override","lastModifiedDate":"2023-08-31"},{"lineNumber":18,"author":{"gitId":"lshaoqin"},"content":"    public String toData() {","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lshaoqin"},"content":"        return \"T\" + super.toData();","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"lshaoqin"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"lshaoqin":21}},{"path":"src/main/java/juke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lshaoqin"},"content":"package juke;","lastModifiedDate":"2023-08-31"},{"lineNumber":2,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":3,"author":{"gitId":"lshaoqin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-08-31"},{"lineNumber":4,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":5,"author":{"gitId":"lshaoqin"},"content":"public class Ui {","lastModifiedDate":"2023-08-31"},{"lineNumber":6,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lshaoqin"},"content":"     * Prints the message to welcome the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lshaoqin"},"content":"    public static String printStart() {","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"lshaoqin"},"content":"        //Introduce itself to the user","lastModifiedDate":"2023-08-31"},{"lineNumber":12,"author":{"gitId":"lshaoqin"},"content":"        return \"Hello! I\u0027m Juke!\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"lshaoqin"},"content":"        + \"What can I do for you?\\n\";","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":15,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":16,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"lshaoqin"},"content":"     * Prints the error message.","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"lshaoqin"},"content":"     * @param error The JukeError which was encountered.","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lshaoqin"},"content":"    public String printError(JukeError error) {","lastModifiedDate":"2023-09-05"},{"lineNumber":21,"author":{"gitId":"lshaoqin"},"content":"        return error.getMessage();","lastModifiedDate":"2023-09-05"},{"lineNumber":22,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":23,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":24,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"lshaoqin"},"content":"     * Prints bye to the user.","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"lshaoqin"},"content":"    public String printBye() {","lastModifiedDate":"2023-09-05"},{"lineNumber":28,"author":{"gitId":"lshaoqin"},"content":"        //Say goodbye","lastModifiedDate":"2023-08-31"},{"lineNumber":29,"author":{"gitId":"lshaoqin"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-09-05"},{"lineNumber":30,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":31,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":32,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"lshaoqin"},"content":"     * Prints the lists of tasks that the user has saved.","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"lshaoqin"},"content":"     * @param tasks The list of tasks to be printed.","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":36,"author":{"gitId":"lshaoqin"},"content":"    public String printList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-05"},{"lineNumber":37,"author":{"gitId":"lshaoqin"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-08-31"},{"lineNumber":38,"author":{"gitId":"lshaoqin"},"content":"        StringBuilder list \u003d new StringBuilder();","lastModifiedDate":"2023-09-05"},{"lineNumber":39,"author":{"gitId":"lshaoqin"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-08-31"},{"lineNumber":40,"author":{"gitId":"lshaoqin"},"content":"            list.append(count).append(\": \").append(task.toString()).append(\"\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":41,"author":{"gitId":"lshaoqin"},"content":"            count++;","lastModifiedDate":"2023-08-31"},{"lineNumber":42,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-08-31"},{"lineNumber":43,"author":{"gitId":"lshaoqin"},"content":"        return list.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":44,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":45,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":46,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":47,"author":{"gitId":"lshaoqin"},"content":"     * Prints message after a task is marked as uncompleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":48,"author":{"gitId":"lshaoqin"},"content":"     * @param task The task which was unmarked.","lastModifiedDate":"2023-09-01"},{"lineNumber":49,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":50,"author":{"gitId":"lshaoqin"},"content":"    public String unmark(Task task) {","lastModifiedDate":"2023-09-05"},{"lineNumber":51,"author":{"gitId":"lshaoqin"},"content":"        return \"OK, I\u0027ve marked this task as not done yet: \\n\" + task.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":52,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":53,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":54,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":55,"author":{"gitId":"lshaoqin"},"content":"     * Prints message after a task is marked as completed.","lastModifiedDate":"2023-09-01"},{"lineNumber":56,"author":{"gitId":"lshaoqin"},"content":"     * @param task The task which was marked.","lastModifiedDate":"2023-09-01"},{"lineNumber":57,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":58,"author":{"gitId":"lshaoqin"},"content":"    public String mark(Task task) {","lastModifiedDate":"2023-09-05"},{"lineNumber":59,"author":{"gitId":"lshaoqin"},"content":"        return \"Nice! I\u0027ve marked this task as done: \\n\" + task.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":60,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":61,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":62,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":63,"author":{"gitId":"lshaoqin"},"content":"     * Prints message after a task is deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"lshaoqin"},"content":"     * @param task The task which was deleted.","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"lshaoqin"},"content":"     * @param size The number of tasks in the TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":66,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"lshaoqin"},"content":"    public String delete(Task task, int size) {","lastModifiedDate":"2023-09-05"},{"lineNumber":68,"author":{"gitId":"lshaoqin"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":69,"author":{"gitId":"lshaoqin"},"content":"        + \"\\t\" + task.toString() + \"\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":70,"author":{"gitId":"lshaoqin"},"content":"        + \"Now you have \" + size + \" tasks in the list.\";","lastModifiedDate":"2023-09-05"},{"lineNumber":71,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":72,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":73,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":74,"author":{"gitId":"lshaoqin"},"content":"     * Prints message after a task is created.","lastModifiedDate":"2023-09-01"},{"lineNumber":75,"author":{"gitId":"lshaoqin"},"content":"     * @param task The task which was created.","lastModifiedDate":"2023-09-01"},{"lineNumber":76,"author":{"gitId":"lshaoqin"},"content":"     * @param size The number of tasks in the TaskList.","lastModifiedDate":"2023-09-01"},{"lineNumber":77,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":78,"author":{"gitId":"lshaoqin"},"content":"    public String createTask(Task task, int size) {","lastModifiedDate":"2023-09-05"},{"lineNumber":79,"author":{"gitId":"lshaoqin"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":80,"author":{"gitId":"lshaoqin"},"content":"        + \"\\t\" + task.toString() + \"\\n\"","lastModifiedDate":"2023-09-05"},{"lineNumber":81,"author":{"gitId":"lshaoqin"},"content":"        + \"Now you have \" + size + \" tasks in the list.\";","lastModifiedDate":"2023-09-05"},{"lineNumber":82,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":83,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":84,"author":{"gitId":"lshaoqin"},"content":"    /**","lastModifiedDate":"2023-09-01"},{"lineNumber":85,"author":{"gitId":"lshaoqin"},"content":"     * Prints out corresponding tasks based on search term.","lastModifiedDate":"2023-09-01"},{"lineNumber":86,"author":{"gitId":"lshaoqin"},"content":"     * @param results The results of the search.","lastModifiedDate":"2023-09-01"},{"lineNumber":87,"author":{"gitId":"lshaoqin"},"content":"     */","lastModifiedDate":"2023-09-01"},{"lineNumber":88,"author":{"gitId":"lshaoqin"},"content":"    public String find(ArrayList\u003cTask\u003e results) {","lastModifiedDate":"2023-09-05"},{"lineNumber":89,"author":{"gitId":"lshaoqin"},"content":"        if (results.size() \u003d\u003d 0) {","lastModifiedDate":"2023-09-01"},{"lineNumber":90,"author":{"gitId":"lshaoqin"},"content":"            return \"No results found.\";","lastModifiedDate":"2023-09-05"},{"lineNumber":91,"author":{"gitId":"lshaoqin"},"content":"        } else {","lastModifiedDate":"2023-09-01"},{"lineNumber":92,"author":{"gitId":"lshaoqin"},"content":"            int count \u003d 1;","lastModifiedDate":"2023-09-01"},{"lineNumber":93,"author":{"gitId":"lshaoqin"},"content":"            StringBuilder tasks \u003d new StringBuilder();","lastModifiedDate":"2023-09-05"},{"lineNumber":94,"author":{"gitId":"lshaoqin"},"content":"            for (Task task : results) {","lastModifiedDate":"2023-09-01"},{"lineNumber":95,"author":{"gitId":"lshaoqin"},"content":"                tasks.append(count).append(\". \").append(task.toString()).append(\"\\n\");","lastModifiedDate":"2023-09-05"},{"lineNumber":96,"author":{"gitId":"lshaoqin"},"content":"                count++;","lastModifiedDate":"2023-09-01"},{"lineNumber":97,"author":{"gitId":"lshaoqin"},"content":"            }","lastModifiedDate":"2023-09-01"},{"lineNumber":98,"author":{"gitId":"lshaoqin"},"content":"            return tasks.toString();","lastModifiedDate":"2023-09-05"},{"lineNumber":99,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-08-31"},{"lineNumber":101,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-08-31"},{"lineNumber":102,"author":{"gitId":"lshaoqin"},"content":"}","lastModifiedDate":"2023-08-31"}],"authorContributionMap":{"lshaoqin":102}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lshaoqin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"lshaoqin"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"lshaoqin"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lshaoqin"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"lshaoqin"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"lshaoqin"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"lshaoqin"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"lshaoqin"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"lshaoqin"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"lshaoqin"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"lshaoqin"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"lshaoqin"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"lshaoqin"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"lshaoqin"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"lshaoqin":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lshaoqin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":2,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":3,"author":{"gitId":"lshaoqin"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":4,"author":{"gitId":"lshaoqin"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":5,"author":{"gitId":"lshaoqin"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":6,"author":{"gitId":"lshaoqin"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":7,"author":{"gitId":"lshaoqin"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":8,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-05"},{"lineNumber":9,"author":{"gitId":"lshaoqin"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"juke.MainWindow\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":10,"author":{"gitId":"lshaoqin"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":11,"author":{"gitId":"lshaoqin"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":12,"author":{"gitId":"lshaoqin"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":13,"author":{"gitId":"lshaoqin"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":14,"author":{"gitId":"lshaoqin"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":15,"author":{"gitId":"lshaoqin"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":16,"author":{"gitId":"lshaoqin"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":17,"author":{"gitId":"lshaoqin"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":18,"author":{"gitId":"lshaoqin"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-09-05"},{"lineNumber":19,"author":{"gitId":"lshaoqin"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-09-05"}],"authorContributionMap":{"lshaoqin":19}},{"path":"src/test/java/juke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lshaoqin"},"content":"package juke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"lshaoqin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"lshaoqin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"lshaoqin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lshaoqin"},"content":"public class TaskListTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lshaoqin"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"lshaoqin"},"content":"    public void deleteTask_indexOutOfBounds_errorThrown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"lshaoqin"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"lshaoqin"},"content":"            TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"lshaoqin"},"content":"            tasks.delete(1);","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"lshaoqin"},"content":"        } catch (JukeError e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"lshaoqin"},"content":"            assertEquals(\"That task does not exist!\", e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lshaoqin"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lshaoqin"},"content":"    public void markTask_indexOutOfBounds_errorThrown() {","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"lshaoqin"},"content":"        try {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"lshaoqin"},"content":"            TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"lshaoqin"},"content":"            tasks.markAsDone(1);","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"lshaoqin"},"content":"        } catch (JukeError e) {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"lshaoqin"},"content":"            assertEquals(\"That task does not exist!\", e.getMessage());","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"lshaoqin"},"content":"        }","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"lshaoqin"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"lshaoqin"},"content":"    public void add_getSize_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"lshaoqin"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"lshaoqin"},"content":"        tasks.add(new Task(\"testing\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"lshaoqin"},"content":"        tasks.add(new Task(\"testing\"));","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"lshaoqin"},"content":"        assertEquals(tasks.getSize(), 2);","lastModifiedDate":"2023-09-01"},{"lineNumber":34,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":35,"author":{"gitId":"lshaoqin"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"lshaoqin":35}},{"path":"src/test/java/juke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lshaoqin"},"content":"package juke;","lastModifiedDate":"2023-09-01"},{"lineNumber":2,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":3,"author":{"gitId":"lshaoqin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-09-01"},{"lineNumber":4,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":5,"author":{"gitId":"lshaoqin"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-09-01"},{"lineNumber":6,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":7,"author":{"gitId":"lshaoqin"},"content":"public class TodoTest {","lastModifiedDate":"2023-09-01"},{"lineNumber":8,"author":{"gitId":"lshaoqin"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"lshaoqin"},"content":"    public void toString_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":10,"author":{"gitId":"lshaoqin"},"content":"        Todo todo \u003d new Todo(\"testing\");","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"lshaoqin"},"content":"        assertEquals(todo.toString(), \"[T][ ] testing\");","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":13,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":14,"author":{"gitId":"lshaoqin"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"lshaoqin"},"content":"    public void toData_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"lshaoqin"},"content":"        Todo todo \u003d new Todo(\"testing\");","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"lshaoqin"},"content":"        assertEquals(todo.toData(), \"T|false|testing\");","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":20,"author":{"gitId":"lshaoqin"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"lshaoqin"},"content":"    public void mark_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"lshaoqin"},"content":"        Todo todo \u003d new Todo(\"testing\");","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"lshaoqin"},"content":"        todo.markAsDone();","lastModifiedDate":"2023-09-01"},{"lineNumber":24,"author":{"gitId":"lshaoqin"},"content":"        assertTrue(todo.isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"lshaoqin"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":27,"author":{"gitId":"lshaoqin"},"content":"    @Test","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"lshaoqin"},"content":"    public void unmark_success() {","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"lshaoqin"},"content":"        Todo todo \u003d new Todo(\"testing\");","lastModifiedDate":"2023-09-01"},{"lineNumber":30,"author":{"gitId":"lshaoqin"},"content":"        todo.markAsUndone();","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"lshaoqin"},"content":"        assertFalse(todo.isDone);","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"lshaoqin"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":33,"author":{"gitId":"lshaoqin"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"lshaoqin":33}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lshaoqin"},"content":"todo borrow book","lastModifiedDate":"2023-08-21"},{"lineNumber":2,"author":{"gitId":"lshaoqin"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-08-21"},{"lineNumber":3,"author":{"gitId":"lshaoqin"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":4,"author":{"gitId":"lshaoqin"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-08-21"},{"lineNumber":5,"author":{"gitId":"lshaoqin"},"content":"mark 1","lastModifiedDate":"2023-08-21"},{"lineNumber":6,"author":{"gitId":"lshaoqin"},"content":"mark 2","lastModifiedDate":"2023-08-21"},{"lineNumber":7,"author":{"gitId":"lshaoqin"},"content":"unmark 1","lastModifiedDate":"2023-08-21"},{"lineNumber":8,"author":{"gitId":"lshaoqin"},"content":"list","lastModifiedDate":"2023-08-21"},{"lineNumber":9,"author":{"gitId":"lshaoqin"},"content":"bye","lastModifiedDate":"2023-08-21"}],"authorContributionMap":{"lshaoqin":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"lshaoqin"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\juke.Juke.java","lastModifiedDate":"2023-08-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"lshaoqin"},"content":"java -classpath ..\\bin juke.Juke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lshaoqin":2,"-":19}}]
